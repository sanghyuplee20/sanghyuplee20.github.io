/*! For license information please see main.90451a33.js.LICENSE.txt */
(()=>{var e={850:(e,t)=>{"use strict";function n(e,t){var n=e.length;e.push(t);e:for(;0<n;){var i=n-1>>>1,r=e[i];if(!(0<a(r,t)))break e;e[i]=t,e[n]=r,n=i}}function i(e){return 0===e.length?null:e[0]}function r(e){if(0===e.length)return null;var t=e[0],n=e.pop();if(n!==t){e[0]=n;e:for(var i=0,r=e.length,l=r>>>1;i<l;){var o=2*(i+1)-1,s=e[o],b=o+1,c=e[b];if(0>a(s,n))b<r&&0>a(c,s)?(e[i]=c,e[b]=n,i=b):(e[i]=s,e[o]=n,i=o);else{if(!(b<r&&0>a(c,n)))break e;e[i]=c,e[b]=n,i=b}}}return t}function a(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}if("object"===typeof performance&&"function"===typeof performance.now){var l=performance;t.unstable_now=function(){return l.now()}}else{var o=Date,s=o.now();t.unstable_now=function(){return o.now()-s}}var b=[],c=[],u=1,h=null,d=3,m=!1,f=!1,p=!1,g="function"===typeof setTimeout?setTimeout:null,x="function"===typeof clearTimeout?clearTimeout:null,v="undefined"!==typeof setImmediate?setImmediate:null;function _(e){for(var t=i(c);null!==t;){if(null===t.callback)r(c);else{if(!(t.startTime<=e))break;r(c),t.sortIndex=t.expirationTime,n(b,t)}t=i(c)}}function y(e){if(p=!1,_(e),!f)if(null!==i(b))f=!0,I(S);else{var t=i(c);null!==t&&N(y,t.startTime-e)}}function S(e,n){f=!1,p&&(p=!1,x(E),E=-1),m=!0;var a=d;try{for(_(n),h=i(b);null!==h&&(!(h.expirationTime>n)||e&&!C());){var l=h.callback;if("function"===typeof l){h.callback=null,d=h.priorityLevel;var o=l(h.expirationTime<=n);n=t.unstable_now(),"function"===typeof o?h.callback=o:h===i(b)&&r(b),_(n)}else r(b);h=i(b)}if(null!==h)var s=!0;else{var u=i(c);null!==u&&N(y,u.startTime-n),s=!1}return s}finally{h=null,d=a,m=!1}}"undefined"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var M,w=!1,z=null,E=-1,T=5,A=-1;function C(){return!(t.unstable_now()-A<T)}function R(){if(null!==z){var e=t.unstable_now();A=e;var n=!0;try{n=z(!0,e)}finally{n?M():(w=!1,z=null)}}else w=!1}if("function"===typeof v)M=function(){v(R)};else if("undefined"!==typeof MessageChannel){var P=new MessageChannel,L=P.port2;P.port1.onmessage=R,M=function(){L.postMessage(null)}}else M=function(){g(R,0)};function I(e){z=e,w||(w=!0,M())}function N(e,n){E=g((function(){e(t.unstable_now())}),n)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){f||m||(f=!0,I(S))},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):T=0<e?Math.floor(1e3/e):5},t.unstable_getCurrentPriorityLevel=function(){return d},t.unstable_getFirstCallbackNode=function(){return i(b)},t.unstable_next=function(e){switch(d){case 1:case 2:case 3:var t=3;break;default:t=d}var n=d;d=t;try{return e()}finally{d=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=d;d=e;try{return t()}finally{d=n}},t.unstable_scheduleCallback=function(e,r,a){var l=t.unstable_now();switch("object"===typeof a&&null!==a?a="number"===typeof(a=a.delay)&&0<a?l+a:l:a=l,e){case 1:var o=-1;break;case 2:o=250;break;case 5:o=1073741823;break;case 4:o=1e4;break;default:o=5e3}return e={id:u++,callback:r,priorityLevel:e,startTime:a,expirationTime:o=a+o,sortIndex:-1},a>l?(e.sortIndex=a,n(c,e),null===i(b)&&e===i(c)&&(p?(x(E),E=-1):p=!0,N(y,a-l))):(e.sortIndex=o,n(b,e),f||m||(f=!0,I(S))),e},t.unstable_shouldYield=C,t.unstable_wrapCallback=function(e){var t=d;return function(){var n=d;d=t;try{return e.apply(this,arguments)}finally{d=n}}}},773:(e,t,n)=>{"use strict";e.exports=n(850)},356:e=>{function t(e,t,n){var i,r,a,l,o;function s(){var b=Date.now()-l;b<t&&b>=0?i=setTimeout(s,t-b):(i=null,n||(o=e.apply(a,r),a=r=null))}null==t&&(t=100);var b=function(){a=this,r=arguments,l=Date.now();var b=n&&!i;return i||(i=setTimeout(s,t)),b&&(o=e.apply(a,r),a=r=null),o};return b.clear=function(){i&&(clearTimeout(i),i=null)},b.flush=function(){i&&(o=e.apply(a,r),a=r=null,clearTimeout(i),i=null)},b}t.debounce=t,e.exports=t},488:(e,t,n)=>{"use strict";var i=n(959);function r(){}function a(){}a.resetWarningCache=r,e.exports=function(){function e(e,t,n,r,a,l){if(l!==i){var o=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw o.name="Invariant Violation",o}}function t(){return e}e.isRequired=e;var n={array:e,bigint:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:a,resetWarningCache:r};return n.PropTypes=n,n}},942:(e,t,n)=>{e.exports=n(488)()},959:e=>{"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},345:(e,t,n)=>{"use strict";var i=n(950),r=n(340);function a(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var l=new Set,o={};function s(e,t){b(e,t),b(e+"Capture",t)}function b(e,t){for(o[e]=t,e=0;e<t.length;e++)l.add(t[e])}var c=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),u=Object.prototype.hasOwnProperty,h=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,d={},m={};function f(e,t,n,i,r,a,l){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=i,this.attributeNamespace=r,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=a,this.removeEmptyString=l}var p={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){p[e]=new f(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];p[t]=new f(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){p[e]=new f(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){p[e]=new f(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){p[e]=new f(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){p[e]=new f(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){p[e]=new f(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){p[e]=new f(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){p[e]=new f(e,5,!1,e.toLowerCase(),null,!1,!1)}));var g=/[\-:]([a-z])/g;function x(e){return e[1].toUpperCase()}function v(e,t,n,i){var r=p.hasOwnProperty(t)?p[t]:null;(null!==r?0!==r.type:i||!(2<t.length)||"o"!==t[0]&&"O"!==t[0]||"n"!==t[1]&&"N"!==t[1])&&(function(e,t,n,i){if(null===t||"undefined"===typeof t||function(e,t,n,i){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!i&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,i))return!0;if(i)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,r,i)&&(n=null),i||null===r?function(e){return!!u.call(m,e)||!u.call(d,e)&&(h.test(e)?m[e]=!0:(d[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):r.mustUseProperty?e[r.propertyName]=null===n?3!==r.type&&"":n:(t=r.attributeName,i=r.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(r=r.type)||4===r&&!0===n?"":""+n,i?e.setAttributeNS(i,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(g,x);p[t]=new f(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(g,x);p[t]=new f(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(g,x);p[t]=new f(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){p[e]=new f(e,1,!1,e.toLowerCase(),null,!1,!1)})),p.xlinkHref=new f("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){p[e]=new f(e,1,!1,e.toLowerCase(),null,!0,!0)}));var _=i.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,y=Symbol.for("react.element"),S=Symbol.for("react.portal"),M=Symbol.for("react.fragment"),w=Symbol.for("react.strict_mode"),z=Symbol.for("react.profiler"),E=Symbol.for("react.provider"),T=Symbol.for("react.context"),A=Symbol.for("react.forward_ref"),C=Symbol.for("react.suspense"),R=Symbol.for("react.suspense_list"),P=Symbol.for("react.memo"),L=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var I=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var N=Symbol.iterator;function k(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=N&&e[N]||e["@@iterator"])?e:null}var D,U=Object.assign;function O(e){if(void 0===D)try{throw Error()}catch(n){var t=n.stack.trim().match(/\n( *(at )?)/);D=t&&t[1]||""}return"\n"+D+e}var F=!1;function B(e,t){if(!e||F)return"";F=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(b){var i=b}Reflect.construct(e,[],t)}else{try{t.call()}catch(b){i=b}e.call(t.prototype)}else{try{throw Error()}catch(b){i=b}e()}}catch(b){if(b&&i&&"string"===typeof b.stack){for(var r=b.stack.split("\n"),a=i.stack.split("\n"),l=r.length-1,o=a.length-1;1<=l&&0<=o&&r[l]!==a[o];)o--;for(;1<=l&&0<=o;l--,o--)if(r[l]!==a[o]){if(1!==l||1!==o)do{if(l--,0>--o||r[l]!==a[o]){var s="\n"+r[l].replace(" at new "," at ");return e.displayName&&s.includes("<anonymous>")&&(s=s.replace("<anonymous>",e.displayName)),s}}while(1<=l&&0<=o);break}}}finally{F=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?O(e):""}function H(e){switch(e.tag){case 5:return O(e.type);case 16:return O("Lazy");case 13:return O("Suspense");case 19:return O("SuspenseList");case 0:case 2:case 15:return e=B(e.type,!1);case 11:return e=B(e.type.render,!1);case 1:return e=B(e.type,!0);default:return""}}function V(e){if(null==e)return null;if("function"===typeof e)return e.displayName||e.name||null;if("string"===typeof e)return e;switch(e){case M:return"Fragment";case S:return"Portal";case z:return"Profiler";case w:return"StrictMode";case C:return"Suspense";case R:return"SuspenseList"}if("object"===typeof e)switch(e.$$typeof){case T:return(e.displayName||"Context")+".Consumer";case E:return(e._context.displayName||"Context")+".Provider";case A:var t=e.render;return(e=e.displayName)||(e=""!==(e=t.displayName||t.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case P:return null!==(t=e.displayName||null)?t:V(e.type)||"Memo";case L:t=e._payload,e=e._init;try{return V(e(t))}catch(n){}}return null}function G(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=t.render).displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return V(t);case 8:return t===w?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"===typeof t)return t.displayName||t.name||null;if("string"===typeof t)return t}return null}function W(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function j(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function X(e){e._valueTracker||(e._valueTracker=function(e){var t=j(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),i=""+e[t];if(!e.hasOwnProperty(t)&&"undefined"!==typeof n&&"function"===typeof n.get&&"function"===typeof n.set){var r=n.get,a=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return r.call(this)},set:function(e){i=""+e,a.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return i},setValue:function(e){i=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function q(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),i="";return e&&(i=j(e)?e.checked?"true":"false":e.value),(e=i)!==n&&(t.setValue(e),!0)}function Y(e){if("undefined"===typeof(e=e||("undefined"!==typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Z(e,t){var n=t.checked;return U({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function K(e,t){var n=null==t.defaultValue?"":t.defaultValue,i=null!=t.checked?t.checked:t.defaultChecked;n=W(null!=t.value?t.value:n),e._wrapperState={initialChecked:i,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function $(e,t){null!=(t=t.checked)&&v(e,"checked",t,!1)}function J(e,t){$(e,t);var n=W(t.value),i=t.type;if(null!=n)"number"===i?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===i||"reset"===i)return void e.removeAttribute("value");t.hasOwnProperty("value")?ee(e,t.type,n):t.hasOwnProperty("defaultValue")&&ee(e,t.type,W(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Q(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var i=t.type;if(!("submit"!==i&&"reset"!==i||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ee(e,t,n){"number"===t&&Y(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}var te=Array.isArray;function ne(e,t,n,i){if(e=e.options,t){t={};for(var r=0;r<n.length;r++)t["$"+n[r]]=!0;for(n=0;n<e.length;n++)r=t.hasOwnProperty("$"+e[n].value),e[n].selected!==r&&(e[n].selected=r),r&&i&&(e[n].defaultSelected=!0)}else{for(n=""+W(n),t=null,r=0;r<e.length;r++){if(e[r].value===n)return e[r].selected=!0,void(i&&(e[r].defaultSelected=!0));null!==t||e[r].disabled||(t=e[r])}null!==t&&(t.selected=!0)}}function ie(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(a(91));return U({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function re(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(a(92));if(te(n)){if(1<n.length)throw Error(a(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:W(n)}}function ae(e,t){var n=W(t.value),i=W(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=i&&(e.defaultValue=""+i)}function le(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function oe(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function se(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?oe(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var be,ce,ue=(ce=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((be=be||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=be.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,i){MSApp.execUnsafeLocalFunction((function(){return ce(e,t)}))}:ce);function he(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var de={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},me=["Webkit","ms","Moz","O"];function fe(e,t,n){return null==t||"boolean"===typeof t||""===t?"":n||"number"!==typeof t||0===t||de.hasOwnProperty(e)&&de[e]?(""+t).trim():t+"px"}function pe(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var i=0===n.indexOf("--"),r=fe(n,t[n],i);"float"===n&&(n="cssFloat"),i?e.setProperty(n,r):e[n]=r}}Object.keys(de).forEach((function(e){me.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),de[t]=de[e]}))}));var ge=U({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function xe(e,t){if(t){if(ge[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(a(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(a(60));if("object"!==typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(a(61))}if(null!=t.style&&"object"!==typeof t.style)throw Error(a(62))}}function ve(e,t){if(-1===e.indexOf("-"))return"string"===typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var _e=null;function ye(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Se=null,Me=null,we=null;function ze(e){if(e=vr(e)){if("function"!==typeof Se)throw Error(a(280));var t=e.stateNode;t&&(t=yr(t),Se(e.stateNode,e.type,t))}}function Ee(e){Me?we?we.push(e):we=[e]:Me=e}function Te(){if(Me){var e=Me,t=we;if(we=Me=null,ze(e),t)for(e=0;e<t.length;e++)ze(t[e])}}function Ae(e,t){return e(t)}function Ce(){}var Re=!1;function Pe(e,t,n){if(Re)return e(t,n);Re=!0;try{return Ae(e,t,n)}finally{Re=!1,(null!==Me||null!==we)&&(Ce(),Te())}}function Le(e,t){var n=e.stateNode;if(null===n)return null;var i=yr(n);if(null===i)return null;n=i[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(i=!i.disabled)||(i=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!i;break e;default:e=!1}if(e)return null;if(n&&"function"!==typeof n)throw Error(a(231,t,typeof n));return n}var Ie=!1;if(c)try{var Ne={};Object.defineProperty(Ne,"passive",{get:function(){Ie=!0}}),window.addEventListener("test",Ne,Ne),window.removeEventListener("test",Ne,Ne)}catch(ce){Ie=!1}function ke(e,t,n,i,r,a,l,o,s){var b=Array.prototype.slice.call(arguments,3);try{t.apply(n,b)}catch(c){this.onError(c)}}var De=!1,Ue=null,Oe=!1,Fe=null,Be={onError:function(e){De=!0,Ue=e}};function He(e,t,n,i,r,a,l,o,s){De=!1,Ue=null,ke.apply(Be,arguments)}function Ve(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!==(4098&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Ge(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function We(e){if(Ve(e)!==e)throw Error(a(188))}function je(e){return null!==(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ve(e)))throw Error(a(188));return t!==e?null:e}for(var n=e,i=t;;){var r=n.return;if(null===r)break;var l=r.alternate;if(null===l){if(null!==(i=r.return)){n=i;continue}break}if(r.child===l.child){for(l=r.child;l;){if(l===n)return We(r),e;if(l===i)return We(r),t;l=l.sibling}throw Error(a(188))}if(n.return!==i.return)n=r,i=l;else{for(var o=!1,s=r.child;s;){if(s===n){o=!0,n=r,i=l;break}if(s===i){o=!0,i=r,n=l;break}s=s.sibling}if(!o){for(s=l.child;s;){if(s===n){o=!0,n=l,i=r;break}if(s===i){o=!0,i=l,n=r;break}s=s.sibling}if(!o)throw Error(a(189))}}if(n.alternate!==i)throw Error(a(190))}if(3!==n.tag)throw Error(a(188));return n.stateNode.current===n?e:t}(e))?Xe(e):null}function Xe(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var t=Xe(e);if(null!==t)return t;e=e.sibling}return null}var qe=r.unstable_scheduleCallback,Ye=r.unstable_cancelCallback,Ze=r.unstable_shouldYield,Ke=r.unstable_requestPaint,$e=r.unstable_now,Je=r.unstable_getCurrentPriorityLevel,Qe=r.unstable_ImmediatePriority,et=r.unstable_UserBlockingPriority,tt=r.unstable_NormalPriority,nt=r.unstable_LowPriority,it=r.unstable_IdlePriority,rt=null,at=null;var lt=Math.clz32?Math.clz32:function(e){return e>>>=0,0===e?32:31-(ot(e)/st|0)|0},ot=Math.log,st=Math.LN2;var bt=64,ct=4194304;function ut(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function ht(e,t){var n=e.pendingLanes;if(0===n)return 0;var i=0,r=e.suspendedLanes,a=e.pingedLanes,l=268435455&n;if(0!==l){var o=l&~r;0!==o?i=ut(o):0!==(a&=l)&&(i=ut(a))}else 0!==(l=n&~r)?i=ut(l):0!==a&&(i=ut(a));if(0===i)return 0;if(0!==t&&t!==i&&0===(t&r)&&((r=i&-i)>=(a=t&-t)||16===r&&0!==(4194240&a)))return t;if(0!==(4&i)&&(i|=16&n),0!==(t=e.entangledLanes))for(e=e.entanglements,t&=i;0<t;)r=1<<(n=31-lt(t)),i|=e[n],t&=~r;return i}function dt(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return-1}}function mt(e){return 0!==(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function ft(){var e=bt;return 0===(4194240&(bt<<=1))&&(bt=64),e}function pt(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function gt(e,t,n){e.pendingLanes|=t,536870912!==t&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[t=31-lt(t)]=n}function xt(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var i=31-lt(n),r=1<<i;r&t|e[i]&t&&(e[i]|=t),n&=~r}}var vt=0;function _t(e){return 1<(e&=-e)?4<e?0!==(268435455&e)?16:536870912:4:1}var yt,St,Mt,wt,zt,Et=!1,Tt=[],At=null,Ct=null,Rt=null,Pt=new Map,Lt=new Map,It=[],Nt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function kt(e,t){switch(e){case"focusin":case"focusout":At=null;break;case"dragenter":case"dragleave":Ct=null;break;case"mouseover":case"mouseout":Rt=null;break;case"pointerover":case"pointerout":Pt.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Lt.delete(t.pointerId)}}function Dt(e,t,n,i,r,a){return null===e||e.nativeEvent!==a?(e={blockedOn:t,domEventName:n,eventSystemFlags:i,nativeEvent:a,targetContainers:[r]},null!==t&&(null!==(t=vr(t))&&St(t)),e):(e.eventSystemFlags|=i,t=e.targetContainers,null!==r&&-1===t.indexOf(r)&&t.push(r),e)}function Ut(e){var t=xr(e.target);if(null!==t){var n=Ve(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Ge(n)))return e.blockedOn=t,void zt(e.priority,(function(){Mt(n)}))}else if(3===t&&n.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function Ot(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Zt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=vr(n))&&St(t),e.blockedOn=n,!1;var i=new(n=e.nativeEvent).constructor(n.type,n);_e=i,n.target.dispatchEvent(i),_e=null,t.shift()}return!0}function Ft(e,t,n){Ot(e)&&n.delete(t)}function Bt(){Et=!1,null!==At&&Ot(At)&&(At=null),null!==Ct&&Ot(Ct)&&(Ct=null),null!==Rt&&Ot(Rt)&&(Rt=null),Pt.forEach(Ft),Lt.forEach(Ft)}function Ht(e,t){e.blockedOn===t&&(e.blockedOn=null,Et||(Et=!0,r.unstable_scheduleCallback(r.unstable_NormalPriority,Bt)))}function Vt(e){function t(t){return Ht(t,e)}if(0<Tt.length){Ht(Tt[0],e);for(var n=1;n<Tt.length;n++){var i=Tt[n];i.blockedOn===e&&(i.blockedOn=null)}}for(null!==At&&Ht(At,e),null!==Ct&&Ht(Ct,e),null!==Rt&&Ht(Rt,e),Pt.forEach(t),Lt.forEach(t),n=0;n<It.length;n++)(i=It[n]).blockedOn===e&&(i.blockedOn=null);for(;0<It.length&&null===(n=It[0]).blockedOn;)Ut(n),null===n.blockedOn&&It.shift()}var Gt=_.ReactCurrentBatchConfig,Wt=!0;function jt(e,t,n,i){var r=vt,a=Gt.transition;Gt.transition=null;try{vt=1,qt(e,t,n,i)}finally{vt=r,Gt.transition=a}}function Xt(e,t,n,i){var r=vt,a=Gt.transition;Gt.transition=null;try{vt=4,qt(e,t,n,i)}finally{vt=r,Gt.transition=a}}function qt(e,t,n,i){if(Wt){var r=Zt(e,t,n,i);if(null===r)Wi(e,t,i,Yt,n),kt(e,i);else if(function(e,t,n,i,r){switch(t){case"focusin":return At=Dt(At,e,t,n,i,r),!0;case"dragenter":return Ct=Dt(Ct,e,t,n,i,r),!0;case"mouseover":return Rt=Dt(Rt,e,t,n,i,r),!0;case"pointerover":var a=r.pointerId;return Pt.set(a,Dt(Pt.get(a)||null,e,t,n,i,r)),!0;case"gotpointercapture":return a=r.pointerId,Lt.set(a,Dt(Lt.get(a)||null,e,t,n,i,r)),!0}return!1}(r,e,t,n,i))i.stopPropagation();else if(kt(e,i),4&t&&-1<Nt.indexOf(e)){for(;null!==r;){var a=vr(r);if(null!==a&&yt(a),null===(a=Zt(e,t,n,i))&&Wi(e,t,i,Yt,n),a===r)break;r=a}null!==r&&i.stopPropagation()}else Wi(e,t,i,null,n)}}var Yt=null;function Zt(e,t,n,i){if(Yt=null,null!==(e=xr(e=ye(i))))if(null===(t=Ve(e)))e=null;else if(13===(n=t.tag)){if(null!==(e=Ge(t)))return e;e=null}else if(3===n){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return Yt=e,null}function Kt(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Je()){case Qe:return 1;case et:return 4;case tt:case nt:return 16;case it:return 536870912;default:return 16}default:return 16}}var $t=null,Jt=null,Qt=null;function en(){if(Qt)return Qt;var e,t,n=Jt,i=n.length,r="value"in $t?$t.value:$t.textContent,a=r.length;for(e=0;e<i&&n[e]===r[e];e++);var l=i-e;for(t=1;t<=l&&n[i-t]===r[a-t];t++);return Qt=r.slice(e,1<t?1-t:void 0)}function tn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function nn(){return!0}function rn(){return!1}function an(e){function t(t,n,i,r,a){for(var l in this._reactName=t,this._targetInst=i,this.type=n,this.nativeEvent=r,this.target=a,this.currentTarget=null,e)e.hasOwnProperty(l)&&(t=e[l],this[l]=t?t(r):r[l]);return this.isDefaultPrevented=(null!=r.defaultPrevented?r.defaultPrevented:!1===r.returnValue)?nn:rn,this.isPropagationStopped=rn,this}return U(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!==typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=nn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!==typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=nn)},persist:function(){},isPersistent:nn}),t}var ln,on,sn,bn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},cn=an(bn),un=U({},bn,{view:0,detail:0}),hn=an(un),dn=U({},un,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==sn&&(sn&&"mousemove"===e.type?(ln=e.screenX-sn.screenX,on=e.screenY-sn.screenY):on=ln=0,sn=e),ln)},movementY:function(e){return"movementY"in e?e.movementY:on}}),mn=an(dn),fn=an(U({},dn,{dataTransfer:0})),pn=an(U({},un,{relatedTarget:0})),gn=an(U({},bn,{animationName:0,elapsedTime:0,pseudoElement:0})),xn=U({},bn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),vn=an(xn),_n=an(U({},bn,{data:0})),yn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Sn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Mn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function wn(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Mn[e])&&!!t[e]}function zn(){return wn}var En=U({},un,{key:function(e){if(e.key){var t=yn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=tn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Sn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zn,charCode:function(e){return"keypress"===e.type?tn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Tn=an(En),An=an(U({},dn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Cn=an(U({},un,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zn})),Rn=an(U({},bn,{propertyName:0,elapsedTime:0,pseudoElement:0})),Pn=U({},dn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Ln=an(Pn),In=[9,13,27,32],Nn=c&&"CompositionEvent"in window,kn=null;c&&"documentMode"in document&&(kn=document.documentMode);var Dn=c&&"TextEvent"in window&&!kn,Un=c&&(!Nn||kn&&8<kn&&11>=kn),On=String.fromCharCode(32),Fn=!1;function Bn(e,t){switch(e){case"keyup":return-1!==In.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Hn(e){return"object"===typeof(e=e.detail)&&"data"in e?e.data:null}var Vn=!1;var Gn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Wn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Gn[e.type]:"textarea"===t}function jn(e,t,n,i){Ee(i),0<(t=Xi(t,"onChange")).length&&(n=new cn("onChange","change",null,n,i),e.push({event:n,listeners:t}))}var Xn=null,qn=null;function Yn(e){Oi(e,0)}function Zn(e){if(q(_r(e)))return e}function Kn(e,t){if("change"===e)return t}var $n=!1;if(c){var Jn;if(c){var Qn="oninput"in document;if(!Qn){var ei=document.createElement("div");ei.setAttribute("oninput","return;"),Qn="function"===typeof ei.oninput}Jn=Qn}else Jn=!1;$n=Jn&&(!document.documentMode||9<document.documentMode)}function ti(){Xn&&(Xn.detachEvent("onpropertychange",ni),qn=Xn=null)}function ni(e){if("value"===e.propertyName&&Zn(qn)){var t=[];jn(t,qn,e,ye(e)),Pe(Yn,t)}}function ii(e,t,n){"focusin"===e?(ti(),qn=n,(Xn=t).attachEvent("onpropertychange",ni)):"focusout"===e&&ti()}function ri(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Zn(qn)}function ai(e,t){if("click"===e)return Zn(t)}function li(e,t){if("input"===e||"change"===e)return Zn(t)}var oi="function"===typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e===1/t)||e!==e&&t!==t};function si(e,t){if(oi(e,t))return!0;if("object"!==typeof e||null===e||"object"!==typeof t||null===t)return!1;var n=Object.keys(e),i=Object.keys(t);if(n.length!==i.length)return!1;for(i=0;i<n.length;i++){var r=n[i];if(!u.call(t,r)||!oi(e[r],t[r]))return!1}return!0}function bi(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function ci(e,t){var n,i=bi(e);for(e=0;i;){if(3===i.nodeType){if(n=e+i.textContent.length,e<=t&&n>=t)return{node:i,offset:t-e};e=n}e:{for(;i;){if(i.nextSibling){i=i.nextSibling;break e}i=i.parentNode}i=void 0}i=bi(i)}}function ui(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?ui(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function hi(){for(var e=window,t=Y();t instanceof e.HTMLIFrameElement;){try{var n="string"===typeof t.contentWindow.location.href}catch(i){n=!1}if(!n)break;t=Y((e=t.contentWindow).document)}return t}function di(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function mi(e){var t=hi(),n=e.focusedElem,i=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&ui(n.ownerDocument.documentElement,n)){if(null!==i&&di(n))if(t=i.start,void 0===(e=i.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var r=n.textContent.length,a=Math.min(i.start,r);i=void 0===i.end?a:Math.min(i.end,r),!e.extend&&a>i&&(r=i,i=a,a=r),r=ci(n,a);var l=ci(n,i);r&&l&&(1!==e.rangeCount||e.anchorNode!==r.node||e.anchorOffset!==r.offset||e.focusNode!==l.node||e.focusOffset!==l.offset)&&((t=t.createRange()).setStart(r.node,r.offset),e.removeAllRanges(),a>i?(e.addRange(t),e.extend(l.node,l.offset)):(t.setEnd(l.node,l.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"===typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var fi=c&&"documentMode"in document&&11>=document.documentMode,pi=null,gi=null,xi=null,vi=!1;function _i(e,t,n){var i=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;vi||null==pi||pi!==Y(i)||("selectionStart"in(i=pi)&&di(i)?i={start:i.selectionStart,end:i.selectionEnd}:i={anchorNode:(i=(i.ownerDocument&&i.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:i.anchorOffset,focusNode:i.focusNode,focusOffset:i.focusOffset},xi&&si(xi,i)||(xi=i,0<(i=Xi(gi,"onSelect")).length&&(t=new cn("onSelect","select",null,t,n),e.push({event:t,listeners:i}),t.target=pi)))}function yi(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var Si={animationend:yi("Animation","AnimationEnd"),animationiteration:yi("Animation","AnimationIteration"),animationstart:yi("Animation","AnimationStart"),transitionend:yi("Transition","TransitionEnd")},Mi={},wi={};function zi(e){if(Mi[e])return Mi[e];if(!Si[e])return e;var t,n=Si[e];for(t in n)if(n.hasOwnProperty(t)&&t in wi)return Mi[e]=n[t];return e}c&&(wi=document.createElement("div").style,"AnimationEvent"in window||(delete Si.animationend.animation,delete Si.animationiteration.animation,delete Si.animationstart.animation),"TransitionEvent"in window||delete Si.transitionend.transition);var Ei=zi("animationend"),Ti=zi("animationiteration"),Ai=zi("animationstart"),Ci=zi("transitionend"),Ri=new Map,Pi="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Li(e,t){Ri.set(e,t),s(t,[e])}for(var Ii=0;Ii<Pi.length;Ii++){var Ni=Pi[Ii];Li(Ni.toLowerCase(),"on"+(Ni[0].toUpperCase()+Ni.slice(1)))}Li(Ei,"onAnimationEnd"),Li(Ti,"onAnimationIteration"),Li(Ai,"onAnimationStart"),Li("dblclick","onDoubleClick"),Li("focusin","onFocus"),Li("focusout","onBlur"),Li(Ci,"onTransitionEnd"),b("onMouseEnter",["mouseout","mouseover"]),b("onMouseLeave",["mouseout","mouseover"]),b("onPointerEnter",["pointerout","pointerover"]),b("onPointerLeave",["pointerout","pointerover"]),s("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),s("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),s("onBeforeInput",["compositionend","keypress","textInput","paste"]),s("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var ki="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Di=new Set("cancel close invalid load scroll toggle".split(" ").concat(ki));function Ui(e,t,n){var i=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,i,r,l,o,s,b){if(He.apply(this,arguments),De){if(!De)throw Error(a(198));var c=Ue;De=!1,Ue=null,Oe||(Oe=!0,Fe=c)}}(i,t,void 0,e),e.currentTarget=null}function Oi(e,t){t=0!==(4&t);for(var n=0;n<e.length;n++){var i=e[n],r=i.event;i=i.listeners;e:{var a=void 0;if(t)for(var l=i.length-1;0<=l;l--){var o=i[l],s=o.instance,b=o.currentTarget;if(o=o.listener,s!==a&&r.isPropagationStopped())break e;Ui(r,o,b),a=s}else for(l=0;l<i.length;l++){if(s=(o=i[l]).instance,b=o.currentTarget,o=o.listener,s!==a&&r.isPropagationStopped())break e;Ui(r,o,b),a=s}}}if(Oe)throw e=Fe,Oe=!1,Fe=null,e}function Fi(e,t){var n=t[fr];void 0===n&&(n=t[fr]=new Set);var i=e+"__bubble";n.has(i)||(Gi(t,e,2,!1),n.add(i))}function Bi(e,t,n){var i=0;t&&(i|=4),Gi(n,e,i,t)}var Hi="_reactListening"+Math.random().toString(36).slice(2);function Vi(e){if(!e[Hi]){e[Hi]=!0,l.forEach((function(t){"selectionchange"!==t&&(Di.has(t)||Bi(t,!1,e),Bi(t,!0,e))}));var t=9===e.nodeType?e:e.ownerDocument;null===t||t[Hi]||(t[Hi]=!0,Bi("selectionchange",!1,t))}}function Gi(e,t,n,i){switch(Kt(t)){case 1:var r=jt;break;case 4:r=Xt;break;default:r=qt}n=r.bind(null,t,n,e),r=void 0,!Ie||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(r=!0),i?void 0!==r?e.addEventListener(t,n,{capture:!0,passive:r}):e.addEventListener(t,n,!0):void 0!==r?e.addEventListener(t,n,{passive:r}):e.addEventListener(t,n,!1)}function Wi(e,t,n,i,r){var a=i;if(0===(1&t)&&0===(2&t)&&null!==i)e:for(;;){if(null===i)return;var l=i.tag;if(3===l||4===l){var o=i.stateNode.containerInfo;if(o===r||8===o.nodeType&&o.parentNode===r)break;if(4===l)for(l=i.return;null!==l;){var s=l.tag;if((3===s||4===s)&&((s=l.stateNode.containerInfo)===r||8===s.nodeType&&s.parentNode===r))return;l=l.return}for(;null!==o;){if(null===(l=xr(o)))return;if(5===(s=l.tag)||6===s){i=a=l;continue e}o=o.parentNode}}i=i.return}Pe((function(){var i=a,r=ye(n),l=[];e:{var o=Ri.get(e);if(void 0!==o){var s=cn,b=e;switch(e){case"keypress":if(0===tn(n))break e;case"keydown":case"keyup":s=Tn;break;case"focusin":b="focus",s=pn;break;case"focusout":b="blur",s=pn;break;case"beforeblur":case"afterblur":s=pn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":s=mn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":s=fn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":s=Cn;break;case Ei:case Ti:case Ai:s=gn;break;case Ci:s=Rn;break;case"scroll":s=hn;break;case"wheel":s=Ln;break;case"copy":case"cut":case"paste":s=vn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":s=An}var c=0!==(4&t),u=!c&&"scroll"===e,h=c?null!==o?o+"Capture":null:o;c=[];for(var d,m=i;null!==m;){var f=(d=m).stateNode;if(5===d.tag&&null!==f&&(d=f,null!==h&&(null!=(f=Le(m,h))&&c.push(ji(m,f,d)))),u)break;m=m.return}0<c.length&&(o=new s(o,b,null,n,r),l.push({event:o,listeners:c}))}}if(0===(7&t)){if(s="mouseout"===e||"pointerout"===e,(!(o="mouseover"===e||"pointerover"===e)||n===_e||!(b=n.relatedTarget||n.fromElement)||!xr(b)&&!b[mr])&&(s||o)&&(o=r.window===r?r:(o=r.ownerDocument)?o.defaultView||o.parentWindow:window,s?(s=i,null!==(b=(b=n.relatedTarget||n.toElement)?xr(b):null)&&(b!==(u=Ve(b))||5!==b.tag&&6!==b.tag)&&(b=null)):(s=null,b=i),s!==b)){if(c=mn,f="onMouseLeave",h="onMouseEnter",m="mouse","pointerout"!==e&&"pointerover"!==e||(c=An,f="onPointerLeave",h="onPointerEnter",m="pointer"),u=null==s?o:_r(s),d=null==b?o:_r(b),(o=new c(f,m+"leave",s,n,r)).target=u,o.relatedTarget=d,f=null,xr(r)===i&&((c=new c(h,m+"enter",b,n,r)).target=d,c.relatedTarget=u,f=c),u=f,s&&b)e:{for(h=b,m=0,d=c=s;d;d=qi(d))m++;for(d=0,f=h;f;f=qi(f))d++;for(;0<m-d;)c=qi(c),m--;for(;0<d-m;)h=qi(h),d--;for(;m--;){if(c===h||null!==h&&c===h.alternate)break e;c=qi(c),h=qi(h)}c=null}else c=null;null!==s&&Yi(l,o,s,c,!1),null!==b&&null!==u&&Yi(l,u,b,c,!0)}if("select"===(s=(o=i?_r(i):window).nodeName&&o.nodeName.toLowerCase())||"input"===s&&"file"===o.type)var p=Kn;else if(Wn(o))if($n)p=li;else{p=ri;var g=ii}else(s=o.nodeName)&&"input"===s.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(p=ai);switch(p&&(p=p(e,i))?jn(l,p,n,r):(g&&g(e,o,i),"focusout"===e&&(g=o._wrapperState)&&g.controlled&&"number"===o.type&&ee(o,"number",o.value)),g=i?_r(i):window,e){case"focusin":(Wn(g)||"true"===g.contentEditable)&&(pi=g,gi=i,xi=null);break;case"focusout":xi=gi=pi=null;break;case"mousedown":vi=!0;break;case"contextmenu":case"mouseup":case"dragend":vi=!1,_i(l,n,r);break;case"selectionchange":if(fi)break;case"keydown":case"keyup":_i(l,n,r)}var x;if(Nn)e:{switch(e){case"compositionstart":var v="onCompositionStart";break e;case"compositionend":v="onCompositionEnd";break e;case"compositionupdate":v="onCompositionUpdate";break e}v=void 0}else Vn?Bn(e,n)&&(v="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(v="onCompositionStart");v&&(Un&&"ko"!==n.locale&&(Vn||"onCompositionStart"!==v?"onCompositionEnd"===v&&Vn&&(x=en()):(Jt="value"in($t=r)?$t.value:$t.textContent,Vn=!0)),0<(g=Xi(i,v)).length&&(v=new _n(v,e,null,n,r),l.push({event:v,listeners:g}),x?v.data=x:null!==(x=Hn(n))&&(v.data=x))),(x=Dn?function(e,t){switch(e){case"compositionend":return Hn(t);case"keypress":return 32!==t.which?null:(Fn=!0,On);case"textInput":return(e=t.data)===On&&Fn?null:e;default:return null}}(e,n):function(e,t){if(Vn)return"compositionend"===e||!Nn&&Bn(e,t)?(e=en(),Qt=Jt=$t=null,Vn=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Un&&"ko"!==t.locale?null:t.data}}(e,n))&&(0<(i=Xi(i,"onBeforeInput")).length&&(r=new _n("onBeforeInput","beforeinput",null,n,r),l.push({event:r,listeners:i}),r.data=x))}Oi(l,t)}))}function ji(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Xi(e,t){for(var n=t+"Capture",i=[];null!==e;){var r=e,a=r.stateNode;5===r.tag&&null!==a&&(r=a,null!=(a=Le(e,n))&&i.unshift(ji(e,a,r)),null!=(a=Le(e,t))&&i.push(ji(e,a,r))),e=e.return}return i}function qi(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Yi(e,t,n,i,r){for(var a=t._reactName,l=[];null!==n&&n!==i;){var o=n,s=o.alternate,b=o.stateNode;if(null!==s&&s===i)break;5===o.tag&&null!==b&&(o=b,r?null!=(s=Le(n,a))&&l.unshift(ji(n,s,o)):r||null!=(s=Le(n,a))&&l.push(ji(n,s,o))),n=n.return}0!==l.length&&e.push({event:t,listeners:l})}var Zi=/\r\n?/g,Ki=/\u0000|\uFFFD/g;function $i(e){return("string"===typeof e?e:""+e).replace(Zi,"\n").replace(Ki,"")}function Ji(e,t,n){if(t=$i(t),$i(e)!==t&&n)throw Error(a(425))}function Qi(){}var er=null,tr=null;function nr(e,t){return"textarea"===e||"noscript"===e||"string"===typeof t.children||"number"===typeof t.children||"object"===typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var ir="function"===typeof setTimeout?setTimeout:void 0,rr="function"===typeof clearTimeout?clearTimeout:void 0,ar="function"===typeof Promise?Promise:void 0,lr="function"===typeof queueMicrotask?queueMicrotask:"undefined"!==typeof ar?function(e){return ar.resolve(null).then(e).catch(or)}:ir;function or(e){setTimeout((function(){throw e}))}function sr(e,t){var n=t,i=0;do{var r=n.nextSibling;if(e.removeChild(n),r&&8===r.nodeType)if("/$"===(n=r.data)){if(0===i)return e.removeChild(r),void Vt(t);i--}else"$"!==n&&"$?"!==n&&"$!"!==n||i++;n=r}while(n);Vt(t)}function br(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t)break;if("/$"===t)return null}}return e}function cr(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var ur=Math.random().toString(36).slice(2),hr="__reactFiber$"+ur,dr="__reactProps$"+ur,mr="__reactContainer$"+ur,fr="__reactEvents$"+ur,pr="__reactListeners$"+ur,gr="__reactHandles$"+ur;function xr(e){var t=e[hr];if(t)return t;for(var n=e.parentNode;n;){if(t=n[mr]||n[hr]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=cr(e);null!==e;){if(n=e[hr])return n;e=cr(e)}return t}n=(e=n).parentNode}return null}function vr(e){return!(e=e[hr]||e[mr])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function _r(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(a(33))}function yr(e){return e[dr]||null}var Sr=[],Mr=-1;function wr(e){return{current:e}}function zr(e){0>Mr||(e.current=Sr[Mr],Sr[Mr]=null,Mr--)}function Er(e,t){Mr++,Sr[Mr]=e.current,e.current=t}var Tr={},Ar=wr(Tr),Cr=wr(!1),Rr=Tr;function Pr(e,t){var n=e.type.contextTypes;if(!n)return Tr;var i=e.stateNode;if(i&&i.__reactInternalMemoizedUnmaskedChildContext===t)return i.__reactInternalMemoizedMaskedChildContext;var r,a={};for(r in n)a[r]=t[r];return i&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=a),a}function Lr(e){return null!==(e=e.childContextTypes)&&void 0!==e}function Ir(){zr(Cr),zr(Ar)}function Nr(e,t,n){if(Ar.current!==Tr)throw Error(a(168));Er(Ar,t),Er(Cr,n)}function kr(e,t,n){var i=e.stateNode;if(t=t.childContextTypes,"function"!==typeof i.getChildContext)return n;for(var r in i=i.getChildContext())if(!(r in t))throw Error(a(108,G(e)||"Unknown",r));return U({},n,i)}function Dr(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||Tr,Rr=Ar.current,Er(Ar,e),Er(Cr,Cr.current),!0}function Ur(e,t,n){var i=e.stateNode;if(!i)throw Error(a(169));n?(e=kr(e,t,Rr),i.__reactInternalMemoizedMergedChildContext=e,zr(Cr),zr(Ar),Er(Ar,e)):zr(Cr),Er(Cr,n)}var Or=null,Fr=!1,Br=!1;function Hr(e){null===Or?Or=[e]:Or.push(e)}function Vr(){if(!Br&&null!==Or){Br=!0;var e=0,t=vt;try{var n=Or;for(vt=1;e<n.length;e++){var i=n[e];do{i=i(!0)}while(null!==i)}Or=null,Fr=!1}catch(r){throw null!==Or&&(Or=Or.slice(e+1)),qe(Qe,Vr),r}finally{vt=t,Br=!1}}return null}var Gr=[],Wr=0,jr=null,Xr=0,qr=[],Yr=0,Zr=null,Kr=1,$r="";function Jr(e,t){Gr[Wr++]=Xr,Gr[Wr++]=jr,jr=e,Xr=t}function Qr(e,t,n){qr[Yr++]=Kr,qr[Yr++]=$r,qr[Yr++]=Zr,Zr=e;var i=Kr;e=$r;var r=32-lt(i)-1;i&=~(1<<r),n+=1;var a=32-lt(t)+r;if(30<a){var l=r-r%5;a=(i&(1<<l)-1).toString(32),i>>=l,r-=l,Kr=1<<32-lt(t)+r|n<<r|i,$r=a+e}else Kr=1<<a|n<<r|i,$r=e}function ea(e){null!==e.return&&(Jr(e,1),Qr(e,1,0))}function ta(e){for(;e===jr;)jr=Gr[--Wr],Gr[Wr]=null,Xr=Gr[--Wr],Gr[Wr]=null;for(;e===Zr;)Zr=qr[--Yr],qr[Yr]=null,$r=qr[--Yr],qr[Yr]=null,Kr=qr[--Yr],qr[Yr]=null}var na=null,ia=null,ra=!1,aa=null;function la(e,t){var n=Pb(5,null,null,0);n.elementType="DELETED",n.stateNode=t,n.return=e,null===(t=e.deletions)?(e.deletions=[n],e.flags|=16):t.push(n)}function oa(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,na=e,ia=br(t.firstChild),!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,na=e,ia=null,!0);case 13:return null!==(t=8!==t.nodeType?null:t)&&(n=null!==Zr?{id:Kr,overflow:$r}:null,e.memoizedState={dehydrated:t,treeContext:n,retryLane:1073741824},(n=Pb(18,null,null,0)).stateNode=t,n.return=e,e.child=n,na=e,ia=null,!0);default:return!1}}function sa(e){return 0!==(1&e.mode)&&0===(128&e.flags)}function ba(e){if(ra){var t=ia;if(t){var n=t;if(!oa(e,t)){if(sa(e))throw Error(a(418));t=br(n.nextSibling);var i=na;t&&oa(e,t)?la(i,n):(e.flags=-4097&e.flags|2,ra=!1,na=e)}}else{if(sa(e))throw Error(a(418));e.flags=-4097&e.flags|2,ra=!1,na=e}}}function ca(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;na=e}function ua(e){if(e!==na)return!1;if(!ra)return ca(e),ra=!0,!1;var t;if((t=3!==e.tag)&&!(t=5!==e.tag)&&(t="head"!==(t=e.type)&&"body"!==t&&!nr(e.type,e.memoizedProps)),t&&(t=ia)){if(sa(e))throw ha(),Error(a(418));for(;t;)la(e,t),t=br(t.nextSibling)}if(ca(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(a(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){ia=br(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}ia=null}}else ia=na?br(e.stateNode.nextSibling):null;return!0}function ha(){for(var e=ia;e;)e=br(e.nextSibling)}function da(){ia=na=null,ra=!1}function ma(e){null===aa?aa=[e]:aa.push(e)}var fa=_.ReactCurrentBatchConfig;function pa(e,t,n){if(null!==(e=n.ref)&&"function"!==typeof e&&"object"!==typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(a(309));var i=n.stateNode}if(!i)throw Error(a(147,e));var r=i,l=""+e;return null!==t&&null!==t.ref&&"function"===typeof t.ref&&t.ref._stringRef===l?t.ref:(t=function(e){var t=r.refs;null===e?delete t[l]:t[l]=e},t._stringRef=l,t)}if("string"!==typeof e)throw Error(a(284));if(!n._owner)throw Error(a(290,e))}return e}function ga(e,t){throw e=Object.prototype.toString.call(t),Error(a(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function xa(e){return(0,e._init)(e._payload)}function va(e){function t(t,n){if(e){var i=t.deletions;null===i?(t.deletions=[n],t.flags|=16):i.push(n)}}function n(n,i){if(!e)return null;for(;null!==i;)t(n,i),i=i.sibling;return null}function i(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function r(e,t){return(e=Ib(e,t)).index=0,e.sibling=null,e}function l(t,n,i){return t.index=i,e?null!==(i=t.alternate)?(i=i.index)<n?(t.flags|=2,n):i:(t.flags|=2,n):(t.flags|=1048576,n)}function o(t){return e&&null===t.alternate&&(t.flags|=2),t}function s(e,t,n,i){return null===t||6!==t.tag?((t=Ub(n,e.mode,i)).return=e,t):((t=r(t,n)).return=e,t)}function b(e,t,n,i){var a=n.type;return a===M?u(e,t,n.props.children,i,n.key):null!==t&&(t.elementType===a||"object"===typeof a&&null!==a&&a.$$typeof===L&&xa(a)===t.type)?((i=r(t,n.props)).ref=pa(e,t,n),i.return=e,i):((i=Nb(n.type,n.key,n.props,null,e.mode,i)).ref=pa(e,t,n),i.return=e,i)}function c(e,t,n,i){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Ob(n,e.mode,i)).return=e,t):((t=r(t,n.children||[])).return=e,t)}function u(e,t,n,i,a){return null===t||7!==t.tag?((t=kb(n,e.mode,i,a)).return=e,t):((t=r(t,n)).return=e,t)}function h(e,t,n){if("string"===typeof t&&""!==t||"number"===typeof t)return(t=Ub(""+t,e.mode,n)).return=e,t;if("object"===typeof t&&null!==t){switch(t.$$typeof){case y:return(n=Nb(t.type,t.key,t.props,null,e.mode,n)).ref=pa(e,null,t),n.return=e,n;case S:return(t=Ob(t,e.mode,n)).return=e,t;case L:return h(e,(0,t._init)(t._payload),n)}if(te(t)||k(t))return(t=kb(t,e.mode,n,null)).return=e,t;ga(e,t)}return null}function d(e,t,n,i){var r=null!==t?t.key:null;if("string"===typeof n&&""!==n||"number"===typeof n)return null!==r?null:s(e,t,""+n,i);if("object"===typeof n&&null!==n){switch(n.$$typeof){case y:return n.key===r?b(e,t,n,i):null;case S:return n.key===r?c(e,t,n,i):null;case L:return d(e,t,(r=n._init)(n._payload),i)}if(te(n)||k(n))return null!==r?null:u(e,t,n,i,null);ga(e,n)}return null}function m(e,t,n,i,r){if("string"===typeof i&&""!==i||"number"===typeof i)return s(t,e=e.get(n)||null,""+i,r);if("object"===typeof i&&null!==i){switch(i.$$typeof){case y:return b(t,e=e.get(null===i.key?n:i.key)||null,i,r);case S:return c(t,e=e.get(null===i.key?n:i.key)||null,i,r);case L:return m(e,t,n,(0,i._init)(i._payload),r)}if(te(i)||k(i))return u(t,e=e.get(n)||null,i,r,null);ga(t,i)}return null}function f(r,a,o,s){for(var b=null,c=null,u=a,f=a=0,p=null;null!==u&&f<o.length;f++){u.index>f?(p=u,u=null):p=u.sibling;var g=d(r,u,o[f],s);if(null===g){null===u&&(u=p);break}e&&u&&null===g.alternate&&t(r,u),a=l(g,a,f),null===c?b=g:c.sibling=g,c=g,u=p}if(f===o.length)return n(r,u),ra&&Jr(r,f),b;if(null===u){for(;f<o.length;f++)null!==(u=h(r,o[f],s))&&(a=l(u,a,f),null===c?b=u:c.sibling=u,c=u);return ra&&Jr(r,f),b}for(u=i(r,u);f<o.length;f++)null!==(p=m(u,r,f,o[f],s))&&(e&&null!==p.alternate&&u.delete(null===p.key?f:p.key),a=l(p,a,f),null===c?b=p:c.sibling=p,c=p);return e&&u.forEach((function(e){return t(r,e)})),ra&&Jr(r,f),b}function p(r,o,s,b){var c=k(s);if("function"!==typeof c)throw Error(a(150));if(null==(s=c.call(s)))throw Error(a(151));for(var u=c=null,f=o,p=o=0,g=null,x=s.next();null!==f&&!x.done;p++,x=s.next()){f.index>p?(g=f,f=null):g=f.sibling;var v=d(r,f,x.value,b);if(null===v){null===f&&(f=g);break}e&&f&&null===v.alternate&&t(r,f),o=l(v,o,p),null===u?c=v:u.sibling=v,u=v,f=g}if(x.done)return n(r,f),ra&&Jr(r,p),c;if(null===f){for(;!x.done;p++,x=s.next())null!==(x=h(r,x.value,b))&&(o=l(x,o,p),null===u?c=x:u.sibling=x,u=x);return ra&&Jr(r,p),c}for(f=i(r,f);!x.done;p++,x=s.next())null!==(x=m(f,r,p,x.value,b))&&(e&&null!==x.alternate&&f.delete(null===x.key?p:x.key),o=l(x,o,p),null===u?c=x:u.sibling=x,u=x);return e&&f.forEach((function(e){return t(r,e)})),ra&&Jr(r,p),c}return function e(i,a,l,s){if("object"===typeof l&&null!==l&&l.type===M&&null===l.key&&(l=l.props.children),"object"===typeof l&&null!==l){switch(l.$$typeof){case y:e:{for(var b=l.key,c=a;null!==c;){if(c.key===b){if((b=l.type)===M){if(7===c.tag){n(i,c.sibling),(a=r(c,l.props.children)).return=i,i=a;break e}}else if(c.elementType===b||"object"===typeof b&&null!==b&&b.$$typeof===L&&xa(b)===c.type){n(i,c.sibling),(a=r(c,l.props)).ref=pa(i,c,l),a.return=i,i=a;break e}n(i,c);break}t(i,c),c=c.sibling}l.type===M?((a=kb(l.props.children,i.mode,s,l.key)).return=i,i=a):((s=Nb(l.type,l.key,l.props,null,i.mode,s)).ref=pa(i,a,l),s.return=i,i=s)}return o(i);case S:e:{for(c=l.key;null!==a;){if(a.key===c){if(4===a.tag&&a.stateNode.containerInfo===l.containerInfo&&a.stateNode.implementation===l.implementation){n(i,a.sibling),(a=r(a,l.children||[])).return=i,i=a;break e}n(i,a);break}t(i,a),a=a.sibling}(a=Ob(l,i.mode,s)).return=i,i=a}return o(i);case L:return e(i,a,(c=l._init)(l._payload),s)}if(te(l))return f(i,a,l,s);if(k(l))return p(i,a,l,s);ga(i,l)}return"string"===typeof l&&""!==l||"number"===typeof l?(l=""+l,null!==a&&6===a.tag?(n(i,a.sibling),(a=r(a,l)).return=i,i=a):(n(i,a),(a=Ub(l,i.mode,s)).return=i,i=a),o(i)):n(i,a)}}var _a=va(!0),ya=va(!1),Sa=wr(null),Ma=null,wa=null,za=null;function Ea(){za=wa=Ma=null}function Ta(e){var t=Sa.current;zr(Sa),e._currentValue=t}function Aa(e,t,n){for(;null!==e;){var i=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==i&&(i.childLanes|=t)):null!==i&&(i.childLanes&t)!==t&&(i.childLanes|=t),e===n)break;e=e.return}}function Ca(e,t){Ma=e,za=wa=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!==(e.lanes&t)&&(vo=!0),e.firstContext=null)}function Ra(e){var t=e._currentValue;if(za!==e)if(e={context:e,memoizedValue:t,next:null},null===wa){if(null===Ma)throw Error(a(308));wa=e,Ma.dependencies={lanes:0,firstContext:e}}else wa=wa.next=e;return t}var Pa=null;function La(e){null===Pa?Pa=[e]:Pa.push(e)}function Ia(e,t,n,i){var r=t.interleaved;return null===r?(n.next=n,La(t)):(n.next=r.next,r.next=n),t.interleaved=n,Na(e,i)}function Na(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}var ka=!1;function Da(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Ua(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function Oa(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function Fa(e,t,n){var i=e.updateQueue;if(null===i)return null;if(i=i.shared,0!==(2&As)){var r=i.pending;return null===r?t.next=t:(t.next=r.next,r.next=t),i.pending=t,Na(e,n)}return null===(r=i.interleaved)?(t.next=t,La(i)):(t.next=r.next,r.next=t),i.interleaved=t,Na(e,n)}function Ba(e,t,n){if(null!==(t=t.updateQueue)&&(t=t.shared,0!==(4194240&n))){var i=t.lanes;n|=i&=e.pendingLanes,t.lanes=n,xt(e,n)}}function Ha(e,t){var n=e.updateQueue,i=e.alternate;if(null!==i&&n===(i=i.updateQueue)){var r=null,a=null;if(null!==(n=n.firstBaseUpdate)){do{var l={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===a?r=a=l:a=a.next=l,n=n.next}while(null!==n);null===a?r=a=t:a=a.next=t}else r=a=t;return n={baseState:i.baseState,firstBaseUpdate:r,lastBaseUpdate:a,shared:i.shared,effects:i.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function Va(e,t,n,i){var r=e.updateQueue;ka=!1;var a=r.firstBaseUpdate,l=r.lastBaseUpdate,o=r.shared.pending;if(null!==o){r.shared.pending=null;var s=o,b=s.next;s.next=null,null===l?a=b:l.next=b,l=s;var c=e.alternate;null!==c&&((o=(c=c.updateQueue).lastBaseUpdate)!==l&&(null===o?c.firstBaseUpdate=b:o.next=b,c.lastBaseUpdate=s))}if(null!==a){var u=r.baseState;for(l=0,c=b=s=null,o=a;;){var h=o.lane,d=o.eventTime;if((i&h)===h){null!==c&&(c=c.next={eventTime:d,lane:0,tag:o.tag,payload:o.payload,callback:o.callback,next:null});e:{var m=e,f=o;switch(h=t,d=n,f.tag){case 1:if("function"===typeof(m=f.payload)){u=m.call(d,u,h);break e}u=m;break e;case 3:m.flags=-65537&m.flags|128;case 0:if(null===(h="function"===typeof(m=f.payload)?m.call(d,u,h):m)||void 0===h)break e;u=U({},u,h);break e;case 2:ka=!0}}null!==o.callback&&0!==o.lane&&(e.flags|=64,null===(h=r.effects)?r.effects=[o]:h.push(o))}else d={eventTime:d,lane:h,tag:o.tag,payload:o.payload,callback:o.callback,next:null},null===c?(b=c=d,s=u):c=c.next=d,l|=h;if(null===(o=o.next)){if(null===(o=r.shared.pending))break;o=(h=o).next,h.next=null,r.lastBaseUpdate=h,r.shared.pending=null}}if(null===c&&(s=u),r.baseState=s,r.firstBaseUpdate=b,r.lastBaseUpdate=c,null!==(t=r.shared.interleaved)){r=t;do{l|=r.lane,r=r.next}while(r!==t)}else null===a&&(r.shared.lanes=0);Ds|=l,e.lanes=l,e.memoizedState=u}}function Ga(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var i=e[t],r=i.callback;if(null!==r){if(i.callback=null,i=n,"function"!==typeof r)throw Error(a(191,r));r.call(i)}}}var Wa={},ja=wr(Wa),Xa=wr(Wa),qa=wr(Wa);function Ya(e){if(e===Wa)throw Error(a(174));return e}function Za(e,t){switch(Er(qa,t),Er(Xa,e),Er(ja,Wa),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:se(null,"");break;default:t=se(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}zr(ja),Er(ja,t)}function Ka(){zr(ja),zr(Xa),zr(qa)}function $a(e){Ya(qa.current);var t=Ya(ja.current),n=se(t,e.type);t!==n&&(Er(Xa,e),Er(ja,n))}function Ja(e){Xa.current===e&&(zr(ja),zr(Xa))}var Qa=wr(0);function el(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!==(128&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var tl=[];function nl(){for(var e=0;e<tl.length;e++)tl[e]._workInProgressVersionPrimary=null;tl.length=0}var il=_.ReactCurrentDispatcher,rl=_.ReactCurrentBatchConfig,al=0,ll=null,ol=null,sl=null,bl=!1,cl=!1,ul=0,hl=0;function dl(){throw Error(a(321))}function ml(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!oi(e[n],t[n]))return!1;return!0}function fl(e,t,n,i,r,l){if(al=l,ll=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,il.current=null===e||null===e.memoizedState?Jl:Ql,e=n(i,r),cl){l=0;do{if(cl=!1,ul=0,25<=l)throw Error(a(301));l+=1,sl=ol=null,t.updateQueue=null,il.current=eo,e=n(i,r)}while(cl)}if(il.current=$l,t=null!==ol&&null!==ol.next,al=0,sl=ol=ll=null,bl=!1,t)throw Error(a(300));return e}function pl(){var e=0!==ul;return ul=0,e}function gl(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===sl?ll.memoizedState=sl=e:sl=sl.next=e,sl}function xl(){if(null===ol){var e=ll.alternate;e=null!==e?e.memoizedState:null}else e=ol.next;var t=null===sl?ll.memoizedState:sl.next;if(null!==t)sl=t,ol=e;else{if(null===e)throw Error(a(310));e={memoizedState:(ol=e).memoizedState,baseState:ol.baseState,baseQueue:ol.baseQueue,queue:ol.queue,next:null},null===sl?ll.memoizedState=sl=e:sl=sl.next=e}return sl}function vl(e,t){return"function"===typeof t?t(e):t}function _l(e){var t=xl(),n=t.queue;if(null===n)throw Error(a(311));n.lastRenderedReducer=e;var i=ol,r=i.baseQueue,l=n.pending;if(null!==l){if(null!==r){var o=r.next;r.next=l.next,l.next=o}i.baseQueue=r=l,n.pending=null}if(null!==r){l=r.next,i=i.baseState;var s=o=null,b=null,c=l;do{var u=c.lane;if((al&u)===u)null!==b&&(b=b.next={lane:0,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null}),i=c.hasEagerState?c.eagerState:e(i,c.action);else{var h={lane:u,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null};null===b?(s=b=h,o=i):b=b.next=h,ll.lanes|=u,Ds|=u}c=c.next}while(null!==c&&c!==l);null===b?o=i:b.next=s,oi(i,t.memoizedState)||(vo=!0),t.memoizedState=i,t.baseState=o,t.baseQueue=b,n.lastRenderedState=i}if(null!==(e=n.interleaved)){r=e;do{l=r.lane,ll.lanes|=l,Ds|=l,r=r.next}while(r!==e)}else null===r&&(n.lanes=0);return[t.memoizedState,n.dispatch]}function yl(e){var t=xl(),n=t.queue;if(null===n)throw Error(a(311));n.lastRenderedReducer=e;var i=n.dispatch,r=n.pending,l=t.memoizedState;if(null!==r){n.pending=null;var o=r=r.next;do{l=e(l,o.action),o=o.next}while(o!==r);oi(l,t.memoizedState)||(vo=!0),t.memoizedState=l,null===t.baseQueue&&(t.baseState=l),n.lastRenderedState=l}return[l,i]}function Sl(){}function Ml(e,t){var n=ll,i=xl(),r=t(),l=!oi(i.memoizedState,r);if(l&&(i.memoizedState=r,vo=!0),i=i.queue,kl(El.bind(null,n,i,e),[e]),i.getSnapshot!==t||l||null!==sl&&1&sl.memoizedState.tag){if(n.flags|=2048,Rl(9,zl.bind(null,n,i,r,t),void 0,null),null===Cs)throw Error(a(349));0!==(30&al)||wl(n,t,r)}return r}function wl(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},null===(t=ll.updateQueue)?(t={lastEffect:null,stores:null},ll.updateQueue=t,t.stores=[e]):null===(n=t.stores)?t.stores=[e]:n.push(e)}function zl(e,t,n,i){t.value=n,t.getSnapshot=i,Tl(t)&&Al(e)}function El(e,t,n){return n((function(){Tl(t)&&Al(e)}))}function Tl(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!oi(e,n)}catch(i){return!0}}function Al(e){var t=Na(e,1);null!==t&&nb(t,e,1,-1)}function Cl(e){var t=gl();return"function"===typeof e&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:vl,lastRenderedState:e},t.queue=e,e=e.dispatch=ql.bind(null,ll,e),[t.memoizedState,e]}function Rl(e,t,n,i){return e={tag:e,create:t,destroy:n,deps:i,next:null},null===(t=ll.updateQueue)?(t={lastEffect:null,stores:null},ll.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(i=n.next,n.next=e,e.next=i,t.lastEffect=e),e}function Pl(){return xl().memoizedState}function Ll(e,t,n,i){var r=gl();ll.flags|=e,r.memoizedState=Rl(1|t,n,void 0,void 0===i?null:i)}function Il(e,t,n,i){var r=xl();i=void 0===i?null:i;var a=void 0;if(null!==ol){var l=ol.memoizedState;if(a=l.destroy,null!==i&&ml(i,l.deps))return void(r.memoizedState=Rl(t,n,a,i))}ll.flags|=e,r.memoizedState=Rl(1|t,n,a,i)}function Nl(e,t){return Ll(8390656,8,e,t)}function kl(e,t){return Il(2048,8,e,t)}function Dl(e,t){return Il(4,2,e,t)}function Ul(e,t){return Il(4,4,e,t)}function Ol(e,t){return"function"===typeof t?(e=e(),t(e),function(){t(null)}):null!==t&&void 0!==t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Fl(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,Il(4,4,Ol.bind(null,t,e),n)}function Bl(){}function Hl(e,t){var n=xl();t=void 0===t?null:t;var i=n.memoizedState;return null!==i&&null!==t&&ml(t,i[1])?i[0]:(n.memoizedState=[e,t],e)}function Vl(e,t){var n=xl();t=void 0===t?null:t;var i=n.memoizedState;return null!==i&&null!==t&&ml(t,i[1])?i[0]:(e=e(),n.memoizedState=[e,t],e)}function Gl(e,t,n){return 0===(21&al)?(e.baseState&&(e.baseState=!1,vo=!0),e.memoizedState=n):(oi(n,t)||(n=ft(),ll.lanes|=n,Ds|=n,e.baseState=!0),t)}function Wl(e,t){var n=vt;vt=0!==n&&4>n?n:4,e(!0);var i=rl.transition;rl.transition={};try{e(!1),t()}finally{vt=n,rl.transition=i}}function jl(){return xl().memoizedState}function Xl(e,t,n){var i=tb(e);if(n={lane:i,action:n,hasEagerState:!1,eagerState:null,next:null},Yl(e))Zl(t,n);else if(null!==(n=Ia(e,t,n,i))){nb(n,e,i,eb()),Kl(n,t,i)}}function ql(e,t,n){var i=tb(e),r={lane:i,action:n,hasEagerState:!1,eagerState:null,next:null};if(Yl(e))Zl(t,r);else{var a=e.alternate;if(0===e.lanes&&(null===a||0===a.lanes)&&null!==(a=t.lastRenderedReducer))try{var l=t.lastRenderedState,o=a(l,n);if(r.hasEagerState=!0,r.eagerState=o,oi(o,l)){var s=t.interleaved;return null===s?(r.next=r,La(t)):(r.next=s.next,s.next=r),void(t.interleaved=r)}}catch(b){}null!==(n=Ia(e,t,r,i))&&(nb(n,e,i,r=eb()),Kl(n,t,i))}}function Yl(e){var t=e.alternate;return e===ll||null!==t&&t===ll}function Zl(e,t){cl=bl=!0;var n=e.pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function Kl(e,t,n){if(0!==(4194240&n)){var i=t.lanes;n|=i&=e.pendingLanes,t.lanes=n,xt(e,n)}}var $l={readContext:Ra,useCallback:dl,useContext:dl,useEffect:dl,useImperativeHandle:dl,useInsertionEffect:dl,useLayoutEffect:dl,useMemo:dl,useReducer:dl,useRef:dl,useState:dl,useDebugValue:dl,useDeferredValue:dl,useTransition:dl,useMutableSource:dl,useSyncExternalStore:dl,useId:dl,unstable_isNewReconciler:!1},Jl={readContext:Ra,useCallback:function(e,t){return gl().memoizedState=[e,void 0===t?null:t],e},useContext:Ra,useEffect:Nl,useImperativeHandle:function(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,Ll(4194308,4,Ol.bind(null,t,e),n)},useLayoutEffect:function(e,t){return Ll(4194308,4,e,t)},useInsertionEffect:function(e,t){return Ll(4,2,e,t)},useMemo:function(e,t){var n=gl();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var i=gl();return t=void 0!==n?n(t):t,i.memoizedState=i.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},i.queue=e,e=e.dispatch=Xl.bind(null,ll,e),[i.memoizedState,e]},useRef:function(e){return e={current:e},gl().memoizedState=e},useState:Cl,useDebugValue:Bl,useDeferredValue:function(e){return gl().memoizedState=e},useTransition:function(){var e=Cl(!1),t=e[0];return e=Wl.bind(null,e[1]),gl().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,n){var i=ll,r=gl();if(ra){if(void 0===n)throw Error(a(407));n=n()}else{if(n=t(),null===Cs)throw Error(a(349));0!==(30&al)||wl(i,t,n)}r.memoizedState=n;var l={value:n,getSnapshot:t};return r.queue=l,Nl(El.bind(null,i,l,e),[e]),i.flags|=2048,Rl(9,zl.bind(null,i,l,n,t),void 0,null),n},useId:function(){var e=gl(),t=Cs.identifierPrefix;if(ra){var n=$r;t=":"+t+"R"+(n=(Kr&~(1<<32-lt(Kr)-1)).toString(32)+n),0<(n=ul++)&&(t+="H"+n.toString(32)),t+=":"}else t=":"+t+"r"+(n=hl++).toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},Ql={readContext:Ra,useCallback:Hl,useContext:Ra,useEffect:kl,useImperativeHandle:Fl,useInsertionEffect:Dl,useLayoutEffect:Ul,useMemo:Vl,useReducer:_l,useRef:Pl,useState:function(){return _l(vl)},useDebugValue:Bl,useDeferredValue:function(e){return Gl(xl(),ol.memoizedState,e)},useTransition:function(){return[_l(vl)[0],xl().memoizedState]},useMutableSource:Sl,useSyncExternalStore:Ml,useId:jl,unstable_isNewReconciler:!1},eo={readContext:Ra,useCallback:Hl,useContext:Ra,useEffect:kl,useImperativeHandle:Fl,useInsertionEffect:Dl,useLayoutEffect:Ul,useMemo:Vl,useReducer:yl,useRef:Pl,useState:function(){return yl(vl)},useDebugValue:Bl,useDeferredValue:function(e){var t=xl();return null===ol?t.memoizedState=e:Gl(t,ol.memoizedState,e)},useTransition:function(){return[yl(vl)[0],xl().memoizedState]},useMutableSource:Sl,useSyncExternalStore:Ml,useId:jl,unstable_isNewReconciler:!1};function to(e,t){if(e&&e.defaultProps){for(var n in t=U({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}function no(e,t,n,i){n=null===(n=n(i,t=e.memoizedState))||void 0===n?t:U({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var io={isMounted:function(e){return!!(e=e._reactInternals)&&Ve(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var i=eb(),r=tb(e),a=Oa(i,r);a.payload=t,void 0!==n&&null!==n&&(a.callback=n),null!==(t=Fa(e,a,r))&&(nb(t,e,r,i),Ba(t,e,r))},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var i=eb(),r=tb(e),a=Oa(i,r);a.tag=1,a.payload=t,void 0!==n&&null!==n&&(a.callback=n),null!==(t=Fa(e,a,r))&&(nb(t,e,r,i),Ba(t,e,r))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=eb(),i=tb(e),r=Oa(n,i);r.tag=2,void 0!==t&&null!==t&&(r.callback=t),null!==(t=Fa(e,r,i))&&(nb(t,e,i,n),Ba(t,e,i))}};function ro(e,t,n,i,r,a,l){return"function"===typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(i,a,l):!t.prototype||!t.prototype.isPureReactComponent||(!si(n,i)||!si(r,a))}function ao(e,t,n){var i=!1,r=Tr,a=t.contextType;return"object"===typeof a&&null!==a?a=Ra(a):(r=Lr(t)?Rr:Ar.current,a=(i=null!==(i=t.contextTypes)&&void 0!==i)?Pr(e,r):Tr),t=new t(n,a),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=io,e.stateNode=t,t._reactInternals=e,i&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=r,e.__reactInternalMemoizedMaskedChildContext=a),t}function lo(e,t,n,i){e=t.state,"function"===typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,i),"function"===typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,i),t.state!==e&&io.enqueueReplaceState(t,t.state,null)}function oo(e,t,n,i){var r=e.stateNode;r.props=n,r.state=e.memoizedState,r.refs={},Da(e);var a=t.contextType;"object"===typeof a&&null!==a?r.context=Ra(a):(a=Lr(t)?Rr:Ar.current,r.context=Pr(e,a)),r.state=e.memoizedState,"function"===typeof(a=t.getDerivedStateFromProps)&&(no(e,t,a,n),r.state=e.memoizedState),"function"===typeof t.getDerivedStateFromProps||"function"===typeof r.getSnapshotBeforeUpdate||"function"!==typeof r.UNSAFE_componentWillMount&&"function"!==typeof r.componentWillMount||(t=r.state,"function"===typeof r.componentWillMount&&r.componentWillMount(),"function"===typeof r.UNSAFE_componentWillMount&&r.UNSAFE_componentWillMount(),t!==r.state&&io.enqueueReplaceState(r,r.state,null),Va(e,n,r,i),r.state=e.memoizedState),"function"===typeof r.componentDidMount&&(e.flags|=4194308)}function so(e,t){try{var n="",i=t;do{n+=H(i),i=i.return}while(i);var r=n}catch(a){r="\nError generating stack: "+a.message+"\n"+a.stack}return{value:e,source:t,stack:r,digest:null}}function bo(e,t,n){return{value:e,source:null,stack:null!=n?n:null,digest:null!=t?t:null}}function co(e,t){try{console.error(t.value)}catch(n){setTimeout((function(){throw n}))}}var uo="function"===typeof WeakMap?WeakMap:Map;function ho(e,t,n){(n=Oa(-1,n)).tag=3,n.payload={element:null};var i=t.value;return n.callback=function(){Ws||(Ws=!0,js=i),co(0,t)},n}function mo(e,t,n){(n=Oa(-1,n)).tag=3;var i=e.type.getDerivedStateFromError;if("function"===typeof i){var r=t.value;n.payload=function(){return i(r)},n.callback=function(){co(0,t)}}var a=e.stateNode;return null!==a&&"function"===typeof a.componentDidCatch&&(n.callback=function(){co(0,t),"function"!==typeof i&&(null===Xs?Xs=new Set([this]):Xs.add(this));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}function fo(e,t,n){var i=e.pingCache;if(null===i){i=e.pingCache=new uo;var r=new Set;i.set(t,r)}else void 0===(r=i.get(t))&&(r=new Set,i.set(t,r));r.has(n)||(r.add(n),e=zb.bind(null,e,t,n),t.then(e,e))}function po(e){do{var t;if((t=13===e.tag)&&(t=null===(t=e.memoizedState)||null!==t.dehydrated),t)return e;e=e.return}while(null!==e);return null}function go(e,t,n,i,r){return 0===(1&e.mode)?(e===t?e.flags|=65536:(e.flags|=128,n.flags|=131072,n.flags&=-52805,1===n.tag&&(null===n.alternate?n.tag=17:((t=Oa(-1,1)).tag=2,Fa(n,t,1))),n.lanes|=1),e):(e.flags|=65536,e.lanes=r,e)}var xo=_.ReactCurrentOwner,vo=!1;function _o(e,t,n,i){t.child=null===e?ya(t,null,n,i):_a(t,e.child,n,i)}function yo(e,t,n,i,r){n=n.render;var a=t.ref;return Ca(t,r),i=fl(e,t,n,i,a,r),n=pl(),null===e||vo?(ra&&n&&ea(t),t.flags|=1,_o(e,t,i,r),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~r,Wo(e,t,r))}function So(e,t,n,i,r){if(null===e){var a=n.type;return"function"!==typeof a||Lb(a)||void 0!==a.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Nb(n.type,null,i,t,t.mode,r)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=a,Mo(e,t,a,i,r))}if(a=e.child,0===(e.lanes&r)){var l=a.memoizedProps;if((n=null!==(n=n.compare)?n:si)(l,i)&&e.ref===t.ref)return Wo(e,t,r)}return t.flags|=1,(e=Ib(a,i)).ref=t.ref,e.return=t,t.child=e}function Mo(e,t,n,i,r){if(null!==e){var a=e.memoizedProps;if(si(a,i)&&e.ref===t.ref){if(vo=!1,t.pendingProps=i=a,0===(e.lanes&r))return t.lanes=e.lanes,Wo(e,t,r);0!==(131072&e.flags)&&(vo=!0)}}return Eo(e,t,n,i,r)}function wo(e,t,n){var i=t.pendingProps,r=i.children,a=null!==e?e.memoizedState:null;if("hidden"===i.mode)if(0===(1&t.mode))t.memoizedState={baseLanes:0,cachePool:null,transitions:null},Er(Is,Ls),Ls|=n;else{if(0===(1073741824&n))return e=null!==a?a.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,Er(Is,Ls),Ls|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},i=null!==a?a.baseLanes:n,Er(Is,Ls),Ls|=i}else null!==a?(i=a.baseLanes|n,t.memoizedState=null):i=n,Er(Is,Ls),Ls|=i;return _o(e,t,r,n),t.child}function zo(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=512,t.flags|=2097152)}function Eo(e,t,n,i,r){var a=Lr(n)?Rr:Ar.current;return a=Pr(t,a),Ca(t,r),n=fl(e,t,n,i,a,r),i=pl(),null===e||vo?(ra&&i&&ea(t),t.flags|=1,_o(e,t,n,r),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~r,Wo(e,t,r))}function To(e,t,n,i,r){if(Lr(n)){var a=!0;Dr(t)}else a=!1;if(Ca(t,r),null===t.stateNode)Go(e,t),ao(t,n,i),oo(t,n,i,r),i=!0;else if(null===e){var l=t.stateNode,o=t.memoizedProps;l.props=o;var s=l.context,b=n.contextType;"object"===typeof b&&null!==b?b=Ra(b):b=Pr(t,b=Lr(n)?Rr:Ar.current);var c=n.getDerivedStateFromProps,u="function"===typeof c||"function"===typeof l.getSnapshotBeforeUpdate;u||"function"!==typeof l.UNSAFE_componentWillReceiveProps&&"function"!==typeof l.componentWillReceiveProps||(o!==i||s!==b)&&lo(t,l,i,b),ka=!1;var h=t.memoizedState;l.state=h,Va(t,i,l,r),s=t.memoizedState,o!==i||h!==s||Cr.current||ka?("function"===typeof c&&(no(t,n,c,i),s=t.memoizedState),(o=ka||ro(t,n,o,i,h,s,b))?(u||"function"!==typeof l.UNSAFE_componentWillMount&&"function"!==typeof l.componentWillMount||("function"===typeof l.componentWillMount&&l.componentWillMount(),"function"===typeof l.UNSAFE_componentWillMount&&l.UNSAFE_componentWillMount()),"function"===typeof l.componentDidMount&&(t.flags|=4194308)):("function"===typeof l.componentDidMount&&(t.flags|=4194308),t.memoizedProps=i,t.memoizedState=s),l.props=i,l.state=s,l.context=b,i=o):("function"===typeof l.componentDidMount&&(t.flags|=4194308),i=!1)}else{l=t.stateNode,Ua(e,t),o=t.memoizedProps,b=t.type===t.elementType?o:to(t.type,o),l.props=b,u=t.pendingProps,h=l.context,"object"===typeof(s=n.contextType)&&null!==s?s=Ra(s):s=Pr(t,s=Lr(n)?Rr:Ar.current);var d=n.getDerivedStateFromProps;(c="function"===typeof d||"function"===typeof l.getSnapshotBeforeUpdate)||"function"!==typeof l.UNSAFE_componentWillReceiveProps&&"function"!==typeof l.componentWillReceiveProps||(o!==u||h!==s)&&lo(t,l,i,s),ka=!1,h=t.memoizedState,l.state=h,Va(t,i,l,r);var m=t.memoizedState;o!==u||h!==m||Cr.current||ka?("function"===typeof d&&(no(t,n,d,i),m=t.memoizedState),(b=ka||ro(t,n,b,i,h,m,s)||!1)?(c||"function"!==typeof l.UNSAFE_componentWillUpdate&&"function"!==typeof l.componentWillUpdate||("function"===typeof l.componentWillUpdate&&l.componentWillUpdate(i,m,s),"function"===typeof l.UNSAFE_componentWillUpdate&&l.UNSAFE_componentWillUpdate(i,m,s)),"function"===typeof l.componentDidUpdate&&(t.flags|=4),"function"===typeof l.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!==typeof l.componentDidUpdate||o===e.memoizedProps&&h===e.memoizedState||(t.flags|=4),"function"!==typeof l.getSnapshotBeforeUpdate||o===e.memoizedProps&&h===e.memoizedState||(t.flags|=1024),t.memoizedProps=i,t.memoizedState=m),l.props=i,l.state=m,l.context=s,i=b):("function"!==typeof l.componentDidUpdate||o===e.memoizedProps&&h===e.memoizedState||(t.flags|=4),"function"!==typeof l.getSnapshotBeforeUpdate||o===e.memoizedProps&&h===e.memoizedState||(t.flags|=1024),i=!1)}return Ao(e,t,n,i,a,r)}function Ao(e,t,n,i,r,a){zo(e,t);var l=0!==(128&t.flags);if(!i&&!l)return r&&Ur(t,n,!1),Wo(e,t,a);i=t.stateNode,xo.current=t;var o=l&&"function"!==typeof n.getDerivedStateFromError?null:i.render();return t.flags|=1,null!==e&&l?(t.child=_a(t,e.child,null,a),t.child=_a(t,null,o,a)):_o(e,t,o,a),t.memoizedState=i.state,r&&Ur(t,n,!0),t.child}function Co(e){var t=e.stateNode;t.pendingContext?Nr(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Nr(0,t.context,!1),Za(e,t.containerInfo)}function Ro(e,t,n,i,r){return da(),ma(r),t.flags|=256,_o(e,t,n,i),t.child}var Po,Lo,Io,No,ko={dehydrated:null,treeContext:null,retryLane:0};function Do(e){return{baseLanes:e,cachePool:null,transitions:null}}function Uo(e,t,n){var i,r=t.pendingProps,l=Qa.current,o=!1,s=0!==(128&t.flags);if((i=s)||(i=(null===e||null!==e.memoizedState)&&0!==(2&l)),i?(o=!0,t.flags&=-129):null!==e&&null===e.memoizedState||(l|=1),Er(Qa,1&l),null===e)return ba(t),null!==(e=t.memoizedState)&&null!==(e=e.dehydrated)?(0===(1&t.mode)?t.lanes=1:"$!"===e.data?t.lanes=8:t.lanes=1073741824,null):(s=r.children,e=r.fallback,o?(r=t.mode,o=t.child,s={mode:"hidden",children:s},0===(1&r)&&null!==o?(o.childLanes=0,o.pendingProps=s):o=Db(s,r,0,null),e=kb(e,r,n,null),o.return=t,e.return=t,o.sibling=e,t.child=o,t.child.memoizedState=Do(n),t.memoizedState=ko,e):Oo(t,s));if(null!==(l=e.memoizedState)&&null!==(i=l.dehydrated))return function(e,t,n,i,r,l,o){if(n)return 256&t.flags?(t.flags&=-257,Fo(e,t,o,i=bo(Error(a(422))))):null!==t.memoizedState?(t.child=e.child,t.flags|=128,null):(l=i.fallback,r=t.mode,i=Db({mode:"visible",children:i.children},r,0,null),(l=kb(l,r,o,null)).flags|=2,i.return=t,l.return=t,i.sibling=l,t.child=i,0!==(1&t.mode)&&_a(t,e.child,null,o),t.child.memoizedState=Do(o),t.memoizedState=ko,l);if(0===(1&t.mode))return Fo(e,t,o,null);if("$!"===r.data){if(i=r.nextSibling&&r.nextSibling.dataset)var s=i.dgst;return i=s,Fo(e,t,o,i=bo(l=Error(a(419)),i,void 0))}if(s=0!==(o&e.childLanes),vo||s){if(null!==(i=Cs)){switch(o&-o){case 4:r=2;break;case 16:r=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:r=32;break;case 536870912:r=268435456;break;default:r=0}0!==(r=0!==(r&(i.suspendedLanes|o))?0:r)&&r!==l.retryLane&&(l.retryLane=r,Na(e,r),nb(i,e,r,-1))}return fb(),Fo(e,t,o,i=bo(Error(a(421))))}return"$?"===r.data?(t.flags|=128,t.child=e.child,t=Tb.bind(null,e),r._reactRetry=t,null):(e=l.treeContext,ia=br(r.nextSibling),na=t,ra=!0,aa=null,null!==e&&(qr[Yr++]=Kr,qr[Yr++]=$r,qr[Yr++]=Zr,Kr=e.id,$r=e.overflow,Zr=t),t=Oo(t,i.children),t.flags|=4096,t)}(e,t,s,r,i,l,n);if(o){o=r.fallback,s=t.mode,i=(l=e.child).sibling;var b={mode:"hidden",children:r.children};return 0===(1&s)&&t.child!==l?((r=t.child).childLanes=0,r.pendingProps=b,t.deletions=null):(r=Ib(l,b)).subtreeFlags=14680064&l.subtreeFlags,null!==i?o=Ib(i,o):(o=kb(o,s,n,null)).flags|=2,o.return=t,r.return=t,r.sibling=o,t.child=r,r=o,o=t.child,s=null===(s=e.child.memoizedState)?Do(n):{baseLanes:s.baseLanes|n,cachePool:null,transitions:s.transitions},o.memoizedState=s,o.childLanes=e.childLanes&~n,t.memoizedState=ko,r}return e=(o=e.child).sibling,r=Ib(o,{mode:"visible",children:r.children}),0===(1&t.mode)&&(r.lanes=n),r.return=t,r.sibling=null,null!==e&&(null===(n=t.deletions)?(t.deletions=[e],t.flags|=16):n.push(e)),t.child=r,t.memoizedState=null,r}function Oo(e,t){return(t=Db({mode:"visible",children:t},e.mode,0,null)).return=e,e.child=t}function Fo(e,t,n,i){return null!==i&&ma(i),_a(t,e.child,null,n),(e=Oo(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function Bo(e,t,n){e.lanes|=t;var i=e.alternate;null!==i&&(i.lanes|=t),Aa(e.return,t,n)}function Ho(e,t,n,i,r){var a=e.memoizedState;null===a?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:i,tail:n,tailMode:r}:(a.isBackwards=t,a.rendering=null,a.renderingStartTime=0,a.last=i,a.tail=n,a.tailMode=r)}function Vo(e,t,n){var i=t.pendingProps,r=i.revealOrder,a=i.tail;if(_o(e,t,i.children,n),0!==(2&(i=Qa.current)))i=1&i|2,t.flags|=128;else{if(null!==e&&0!==(128&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Bo(e,n,t);else if(19===e.tag)Bo(e,n,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}i&=1}if(Er(Qa,i),0===(1&t.mode))t.memoizedState=null;else switch(r){case"forwards":for(n=t.child,r=null;null!==n;)null!==(e=n.alternate)&&null===el(e)&&(r=n),n=n.sibling;null===(n=r)?(r=t.child,t.child=null):(r=n.sibling,n.sibling=null),Ho(t,!1,r,n,a);break;case"backwards":for(n=null,r=t.child,t.child=null;null!==r;){if(null!==(e=r.alternate)&&null===el(e)){t.child=r;break}e=r.sibling,r.sibling=n,n=r,r=e}Ho(t,!0,n,null,a);break;case"together":Ho(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function Go(e,t){0===(1&t.mode)&&null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2)}function Wo(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Ds|=t.lanes,0===(n&t.childLanes))return null;if(null!==e&&t.child!==e.child)throw Error(a(153));if(null!==t.child){for(n=Ib(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Ib(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function jo(e,t){if(!ra)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var i=null;null!==n;)null!==n.alternate&&(i=n),n=n.sibling;null===i?t||null===e.tail?e.tail=null:e.tail.sibling=null:i.sibling=null}}function Xo(e){var t=null!==e.alternate&&e.alternate.child===e.child,n=0,i=0;if(t)for(var r=e.child;null!==r;)n|=r.lanes|r.childLanes,i|=14680064&r.subtreeFlags,i|=14680064&r.flags,r.return=e,r=r.sibling;else for(r=e.child;null!==r;)n|=r.lanes|r.childLanes,i|=r.subtreeFlags,i|=r.flags,r.return=e,r=r.sibling;return e.subtreeFlags|=i,e.childLanes=n,t}function qo(e,t,n){var i=t.pendingProps;switch(ta(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Xo(t),null;case 1:case 17:return Lr(t.type)&&Ir(),Xo(t),null;case 3:return i=t.stateNode,Ka(),zr(Cr),zr(Ar),nl(),i.pendingContext&&(i.context=i.pendingContext,i.pendingContext=null),null!==e&&null!==e.child||(ua(t)?t.flags|=4:null===e||e.memoizedState.isDehydrated&&0===(256&t.flags)||(t.flags|=1024,null!==aa&&(lb(aa),aa=null))),Lo(e,t),Xo(t),null;case 5:Ja(t);var r=Ya(qa.current);if(n=t.type,null!==e&&null!=t.stateNode)Io(e,t,n,i,r),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!i){if(null===t.stateNode)throw Error(a(166));return Xo(t),null}if(e=Ya(ja.current),ua(t)){i=t.stateNode,n=t.type;var l=t.memoizedProps;switch(i[hr]=t,i[dr]=l,e=0!==(1&t.mode),n){case"dialog":Fi("cancel",i),Fi("close",i);break;case"iframe":case"object":case"embed":Fi("load",i);break;case"video":case"audio":for(r=0;r<ki.length;r++)Fi(ki[r],i);break;case"source":Fi("error",i);break;case"img":case"image":case"link":Fi("error",i),Fi("load",i);break;case"details":Fi("toggle",i);break;case"input":K(i,l),Fi("invalid",i);break;case"select":i._wrapperState={wasMultiple:!!l.multiple},Fi("invalid",i);break;case"textarea":re(i,l),Fi("invalid",i)}for(var s in xe(n,l),r=null,l)if(l.hasOwnProperty(s)){var b=l[s];"children"===s?"string"===typeof b?i.textContent!==b&&(!0!==l.suppressHydrationWarning&&Ji(i.textContent,b,e),r=["children",b]):"number"===typeof b&&i.textContent!==""+b&&(!0!==l.suppressHydrationWarning&&Ji(i.textContent,b,e),r=["children",""+b]):o.hasOwnProperty(s)&&null!=b&&"onScroll"===s&&Fi("scroll",i)}switch(n){case"input":X(i),Q(i,l,!0);break;case"textarea":X(i),le(i);break;case"select":case"option":break;default:"function"===typeof l.onClick&&(i.onclick=Qi)}i=r,t.updateQueue=i,null!==i&&(t.flags|=4)}else{s=9===r.nodeType?r:r.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=oe(n)),"http://www.w3.org/1999/xhtml"===e?"script"===n?((e=s.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"===typeof i.is?e=s.createElement(n,{is:i.is}):(e=s.createElement(n),"select"===n&&(s=e,i.multiple?s.multiple=!0:i.size&&(s.size=i.size))):e=s.createElementNS(e,n),e[hr]=t,e[dr]=i,Po(e,t,!1,!1),t.stateNode=e;e:{switch(s=ve(n,i),n){case"dialog":Fi("cancel",e),Fi("close",e),r=i;break;case"iframe":case"object":case"embed":Fi("load",e),r=i;break;case"video":case"audio":for(r=0;r<ki.length;r++)Fi(ki[r],e);r=i;break;case"source":Fi("error",e),r=i;break;case"img":case"image":case"link":Fi("error",e),Fi("load",e),r=i;break;case"details":Fi("toggle",e),r=i;break;case"input":K(e,i),r=Z(e,i),Fi("invalid",e);break;case"option":default:r=i;break;case"select":e._wrapperState={wasMultiple:!!i.multiple},r=U({},i,{value:void 0}),Fi("invalid",e);break;case"textarea":re(e,i),r=ie(e,i),Fi("invalid",e)}for(l in xe(n,r),b=r)if(b.hasOwnProperty(l)){var c=b[l];"style"===l?pe(e,c):"dangerouslySetInnerHTML"===l?null!=(c=c?c.__html:void 0)&&ue(e,c):"children"===l?"string"===typeof c?("textarea"!==n||""!==c)&&he(e,c):"number"===typeof c&&he(e,""+c):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(o.hasOwnProperty(l)?null!=c&&"onScroll"===l&&Fi("scroll",e):null!=c&&v(e,l,c,s))}switch(n){case"input":X(e),Q(e,i,!1);break;case"textarea":X(e),le(e);break;case"option":null!=i.value&&e.setAttribute("value",""+W(i.value));break;case"select":e.multiple=!!i.multiple,null!=(l=i.value)?ne(e,!!i.multiple,l,!1):null!=i.defaultValue&&ne(e,!!i.multiple,i.defaultValue,!0);break;default:"function"===typeof r.onClick&&(e.onclick=Qi)}switch(n){case"button":case"input":case"select":case"textarea":i=!!i.autoFocus;break e;case"img":i=!0;break e;default:i=!1}}i&&(t.flags|=4)}null!==t.ref&&(t.flags|=512,t.flags|=2097152)}return Xo(t),null;case 6:if(e&&null!=t.stateNode)No(e,t,e.memoizedProps,i);else{if("string"!==typeof i&&null===t.stateNode)throw Error(a(166));if(n=Ya(qa.current),Ya(ja.current),ua(t)){if(i=t.stateNode,n=t.memoizedProps,i[hr]=t,(l=i.nodeValue!==n)&&null!==(e=na))switch(e.tag){case 3:Ji(i.nodeValue,n,0!==(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&Ji(i.nodeValue,n,0!==(1&e.mode))}l&&(t.flags|=4)}else(i=(9===n.nodeType?n:n.ownerDocument).createTextNode(i))[hr]=t,t.stateNode=i}return Xo(t),null;case 13:if(zr(Qa),i=t.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(ra&&null!==ia&&0!==(1&t.mode)&&0===(128&t.flags))ha(),da(),t.flags|=98560,l=!1;else if(l=ua(t),null!==i&&null!==i.dehydrated){if(null===e){if(!l)throw Error(a(318));if(!(l=null!==(l=t.memoizedState)?l.dehydrated:null))throw Error(a(317));l[hr]=t}else da(),0===(128&t.flags)&&(t.memoizedState=null),t.flags|=4;Xo(t),l=!1}else null!==aa&&(lb(aa),aa=null),l=!0;if(!l)return 65536&t.flags?t:null}return 0!==(128&t.flags)?(t.lanes=n,t):((i=null!==i)!==(null!==e&&null!==e.memoizedState)&&i&&(t.child.flags|=8192,0!==(1&t.mode)&&(null===e||0!==(1&Qa.current)?0===Ns&&(Ns=3):fb())),null!==t.updateQueue&&(t.flags|=4),Xo(t),null);case 4:return Ka(),Lo(e,t),null===e&&Vi(t.stateNode.containerInfo),Xo(t),null;case 10:return Ta(t.type._context),Xo(t),null;case 19:if(zr(Qa),null===(l=t.memoizedState))return Xo(t),null;if(i=0!==(128&t.flags),null===(s=l.rendering))if(i)jo(l,!1);else{if(0!==Ns||null!==e&&0!==(128&e.flags))for(e=t.child;null!==e;){if(null!==(s=el(e))){for(t.flags|=128,jo(l,!1),null!==(i=s.updateQueue)&&(t.updateQueue=i,t.flags|=4),t.subtreeFlags=0,i=n,n=t.child;null!==n;)e=i,(l=n).flags&=14680066,null===(s=l.alternate)?(l.childLanes=0,l.lanes=e,l.child=null,l.subtreeFlags=0,l.memoizedProps=null,l.memoizedState=null,l.updateQueue=null,l.dependencies=null,l.stateNode=null):(l.childLanes=s.childLanes,l.lanes=s.lanes,l.child=s.child,l.subtreeFlags=0,l.deletions=null,l.memoizedProps=s.memoizedProps,l.memoizedState=s.memoizedState,l.updateQueue=s.updateQueue,l.type=s.type,e=s.dependencies,l.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return Er(Qa,1&Qa.current|2),t.child}e=e.sibling}null!==l.tail&&$e()>Vs&&(t.flags|=128,i=!0,jo(l,!1),t.lanes=4194304)}else{if(!i)if(null!==(e=el(s))){if(t.flags|=128,i=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),jo(l,!0),null===l.tail&&"hidden"===l.tailMode&&!s.alternate&&!ra)return Xo(t),null}else 2*$e()-l.renderingStartTime>Vs&&1073741824!==n&&(t.flags|=128,i=!0,jo(l,!1),t.lanes=4194304);l.isBackwards?(s.sibling=t.child,t.child=s):(null!==(n=l.last)?n.sibling=s:t.child=s,l.last=s)}return null!==l.tail?(t=l.tail,l.rendering=t,l.tail=t.sibling,l.renderingStartTime=$e(),t.sibling=null,n=Qa.current,Er(Qa,i?1&n|2:1&n),t):(Xo(t),null);case 22:case 23:return ub(),i=null!==t.memoizedState,null!==e&&null!==e.memoizedState!==i&&(t.flags|=8192),i&&0!==(1&t.mode)?0!==(1073741824&Ls)&&(Xo(t),6&t.subtreeFlags&&(t.flags|=8192)):Xo(t),null;case 24:case 25:return null}throw Error(a(156,t.tag))}function Yo(e,t){switch(ta(t),t.tag){case 1:return Lr(t.type)&&Ir(),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return Ka(),zr(Cr),zr(Ar),nl(),0!==(65536&(e=t.flags))&&0===(128&e)?(t.flags=-65537&e|128,t):null;case 5:return Ja(t),null;case 13:if(zr(Qa),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(a(340));da()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return zr(Qa),null;case 4:return Ka(),null;case 10:return Ta(t.type._context),null;case 22:case 23:return ub(),null;default:return null}}Po=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Lo=function(){},Io=function(e,t,n,i){var r=e.memoizedProps;if(r!==i){e=t.stateNode,Ya(ja.current);var a,l=null;switch(n){case"input":r=Z(e,r),i=Z(e,i),l=[];break;case"select":r=U({},r,{value:void 0}),i=U({},i,{value:void 0}),l=[];break;case"textarea":r=ie(e,r),i=ie(e,i),l=[];break;default:"function"!==typeof r.onClick&&"function"===typeof i.onClick&&(e.onclick=Qi)}for(c in xe(n,i),n=null,r)if(!i.hasOwnProperty(c)&&r.hasOwnProperty(c)&&null!=r[c])if("style"===c){var s=r[c];for(a in s)s.hasOwnProperty(a)&&(n||(n={}),n[a]="")}else"dangerouslySetInnerHTML"!==c&&"children"!==c&&"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&"autoFocus"!==c&&(o.hasOwnProperty(c)?l||(l=[]):(l=l||[]).push(c,null));for(c in i){var b=i[c];if(s=null!=r?r[c]:void 0,i.hasOwnProperty(c)&&b!==s&&(null!=b||null!=s))if("style"===c)if(s){for(a in s)!s.hasOwnProperty(a)||b&&b.hasOwnProperty(a)||(n||(n={}),n[a]="");for(a in b)b.hasOwnProperty(a)&&s[a]!==b[a]&&(n||(n={}),n[a]=b[a])}else n||(l||(l=[]),l.push(c,n)),n=b;else"dangerouslySetInnerHTML"===c?(b=b?b.__html:void 0,s=s?s.__html:void 0,null!=b&&s!==b&&(l=l||[]).push(c,b)):"children"===c?"string"!==typeof b&&"number"!==typeof b||(l=l||[]).push(c,""+b):"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&(o.hasOwnProperty(c)?(null!=b&&"onScroll"===c&&Fi("scroll",e),l||s===b||(l=[])):(l=l||[]).push(c,b))}n&&(l=l||[]).push("style",n);var c=l;(t.updateQueue=c)&&(t.flags|=4)}},No=function(e,t,n,i){n!==i&&(t.flags|=4)};var Zo=!1,Ko=!1,$o="function"===typeof WeakSet?WeakSet:Set,Jo=null;function Qo(e,t){var n=e.ref;if(null!==n)if("function"===typeof n)try{n(null)}catch(i){wb(e,t,i)}else n.current=null}function es(e,t,n){try{n()}catch(i){wb(e,t,i)}}var ts=!1;function ns(e,t,n){var i=t.updateQueue;if(null!==(i=null!==i?i.lastEffect:null)){var r=i=i.next;do{if((r.tag&e)===e){var a=r.destroy;r.destroy=void 0,void 0!==a&&es(t,n,a)}r=r.next}while(r!==i)}}function is(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var i=n.create;n.destroy=i()}n=n.next}while(n!==t)}}function rs(e){var t=e.ref;if(null!==t){var n=e.stateNode;e.tag,e=n,"function"===typeof t?t(e):t.current=e}}function as(e){var t=e.alternate;null!==t&&(e.alternate=null,as(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&(null!==(t=e.stateNode)&&(delete t[hr],delete t[dr],delete t[fr],delete t[pr],delete t[gr])),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function ls(e){return 5===e.tag||3===e.tag||4===e.tag}function os(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||ls(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function ss(e,t,n){var i=e.tag;if(5===i||6===i)e=e.stateNode,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!==(n=n._reactRootContainer)&&void 0!==n||null!==t.onclick||(t.onclick=Qi));else if(4!==i&&null!==(e=e.child))for(ss(e,t,n),e=e.sibling;null!==e;)ss(e,t,n),e=e.sibling}function bs(e,t,n){var i=e.tag;if(5===i||6===i)e=e.stateNode,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==i&&null!==(e=e.child))for(bs(e,t,n),e=e.sibling;null!==e;)bs(e,t,n),e=e.sibling}var cs=null,us=!1;function hs(e,t,n){for(n=n.child;null!==n;)ds(e,t,n),n=n.sibling}function ds(e,t,n){if(at&&"function"===typeof at.onCommitFiberUnmount)try{at.onCommitFiberUnmount(rt,n)}catch(o){}switch(n.tag){case 5:Ko||Qo(n,t);case 6:var i=cs,r=us;cs=null,hs(e,t,n),us=r,null!==(cs=i)&&(us?(e=cs,n=n.stateNode,8===e.nodeType?e.parentNode.removeChild(n):e.removeChild(n)):cs.removeChild(n.stateNode));break;case 18:null!==cs&&(us?(e=cs,n=n.stateNode,8===e.nodeType?sr(e.parentNode,n):1===e.nodeType&&sr(e,n),Vt(e)):sr(cs,n.stateNode));break;case 4:i=cs,r=us,cs=n.stateNode.containerInfo,us=!0,hs(e,t,n),cs=i,us=r;break;case 0:case 11:case 14:case 15:if(!Ko&&(null!==(i=n.updateQueue)&&null!==(i=i.lastEffect))){r=i=i.next;do{var a=r,l=a.destroy;a=a.tag,void 0!==l&&(0!==(2&a)||0!==(4&a))&&es(n,t,l),r=r.next}while(r!==i)}hs(e,t,n);break;case 1:if(!Ko&&(Qo(n,t),"function"===typeof(i=n.stateNode).componentWillUnmount))try{i.props=n.memoizedProps,i.state=n.memoizedState,i.componentWillUnmount()}catch(o){wb(n,t,o)}hs(e,t,n);break;case 21:hs(e,t,n);break;case 22:1&n.mode?(Ko=(i=Ko)||null!==n.memoizedState,hs(e,t,n),Ko=i):hs(e,t,n);break;default:hs(e,t,n)}}function ms(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new $o),t.forEach((function(t){var i=Ab.bind(null,e,t);n.has(t)||(n.add(t),t.then(i,i))}))}}function fs(e,t){var n=t.deletions;if(null!==n)for(var i=0;i<n.length;i++){var r=n[i];try{var l=e,o=t,s=o;e:for(;null!==s;){switch(s.tag){case 5:cs=s.stateNode,us=!1;break e;case 3:case 4:cs=s.stateNode.containerInfo,us=!0;break e}s=s.return}if(null===cs)throw Error(a(160));ds(l,o,r),cs=null,us=!1;var b=r.alternate;null!==b&&(b.return=null),r.return=null}catch(c){wb(r,t,c)}}if(12854&t.subtreeFlags)for(t=t.child;null!==t;)ps(t,e),t=t.sibling}function ps(e,t){var n=e.alternate,i=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(fs(t,e),gs(e),4&i){try{ns(3,e,e.return),is(3,e)}catch(p){wb(e,e.return,p)}try{ns(5,e,e.return)}catch(p){wb(e,e.return,p)}}break;case 1:fs(t,e),gs(e),512&i&&null!==n&&Qo(n,n.return);break;case 5:if(fs(t,e),gs(e),512&i&&null!==n&&Qo(n,n.return),32&e.flags){var r=e.stateNode;try{he(r,"")}catch(p){wb(e,e.return,p)}}if(4&i&&null!=(r=e.stateNode)){var l=e.memoizedProps,o=null!==n?n.memoizedProps:l,s=e.type,b=e.updateQueue;if(e.updateQueue=null,null!==b)try{"input"===s&&"radio"===l.type&&null!=l.name&&$(r,l),ve(s,o);var c=ve(s,l);for(o=0;o<b.length;o+=2){var u=b[o],h=b[o+1];"style"===u?pe(r,h):"dangerouslySetInnerHTML"===u?ue(r,h):"children"===u?he(r,h):v(r,u,h,c)}switch(s){case"input":J(r,l);break;case"textarea":ae(r,l);break;case"select":var d=r._wrapperState.wasMultiple;r._wrapperState.wasMultiple=!!l.multiple;var m=l.value;null!=m?ne(r,!!l.multiple,m,!1):d!==!!l.multiple&&(null!=l.defaultValue?ne(r,!!l.multiple,l.defaultValue,!0):ne(r,!!l.multiple,l.multiple?[]:"",!1))}r[dr]=l}catch(p){wb(e,e.return,p)}}break;case 6:if(fs(t,e),gs(e),4&i){if(null===e.stateNode)throw Error(a(162));r=e.stateNode,l=e.memoizedProps;try{r.nodeValue=l}catch(p){wb(e,e.return,p)}}break;case 3:if(fs(t,e),gs(e),4&i&&null!==n&&n.memoizedState.isDehydrated)try{Vt(t.containerInfo)}catch(p){wb(e,e.return,p)}break;case 4:default:fs(t,e),gs(e);break;case 13:fs(t,e),gs(e),8192&(r=e.child).flags&&(l=null!==r.memoizedState,r.stateNode.isHidden=l,!l||null!==r.alternate&&null!==r.alternate.memoizedState||(Hs=$e())),4&i&&ms(e);break;case 22:if(u=null!==n&&null!==n.memoizedState,1&e.mode?(Ko=(c=Ko)||u,fs(t,e),Ko=c):fs(t,e),gs(e),8192&i){if(c=null!==e.memoizedState,(e.stateNode.isHidden=c)&&!u&&0!==(1&e.mode))for(Jo=e,u=e.child;null!==u;){for(h=Jo=u;null!==Jo;){switch(m=(d=Jo).child,d.tag){case 0:case 11:case 14:case 15:ns(4,d,d.return);break;case 1:Qo(d,d.return);var f=d.stateNode;if("function"===typeof f.componentWillUnmount){i=d,n=d.return;try{t=i,f.props=t.memoizedProps,f.state=t.memoizedState,f.componentWillUnmount()}catch(p){wb(i,n,p)}}break;case 5:Qo(d,d.return);break;case 22:if(null!==d.memoizedState){ys(h);continue}}null!==m?(m.return=d,Jo=m):ys(h)}u=u.sibling}e:for(u=null,h=e;;){if(5===h.tag){if(null===u){u=h;try{r=h.stateNode,c?"function"===typeof(l=r.style).setProperty?l.setProperty("display","none","important"):l.display="none":(s=h.stateNode,o=void 0!==(b=h.memoizedProps.style)&&null!==b&&b.hasOwnProperty("display")?b.display:null,s.style.display=fe("display",o))}catch(p){wb(e,e.return,p)}}}else if(6===h.tag){if(null===u)try{h.stateNode.nodeValue=c?"":h.memoizedProps}catch(p){wb(e,e.return,p)}}else if((22!==h.tag&&23!==h.tag||null===h.memoizedState||h===e)&&null!==h.child){h.child.return=h,h=h.child;continue}if(h===e)break e;for(;null===h.sibling;){if(null===h.return||h.return===e)break e;u===h&&(u=null),h=h.return}u===h&&(u=null),h.sibling.return=h.return,h=h.sibling}}break;case 19:fs(t,e),gs(e),4&i&&ms(e);case 21:}}function gs(e){var t=e.flags;if(2&t){try{e:{for(var n=e.return;null!==n;){if(ls(n)){var i=n;break e}n=n.return}throw Error(a(160))}switch(i.tag){case 5:var r=i.stateNode;32&i.flags&&(he(r,""),i.flags&=-33),bs(e,os(e),r);break;case 3:case 4:var l=i.stateNode.containerInfo;ss(e,os(e),l);break;default:throw Error(a(161))}}catch(o){wb(e,e.return,o)}e.flags&=-3}4096&t&&(e.flags&=-4097)}function xs(e,t,n){Jo=e,vs(e,t,n)}function vs(e,t,n){for(var i=0!==(1&e.mode);null!==Jo;){var r=Jo,a=r.child;if(22===r.tag&&i){var l=null!==r.memoizedState||Zo;if(!l){var o=r.alternate,s=null!==o&&null!==o.memoizedState||Ko;o=Zo;var b=Ko;if(Zo=l,(Ko=s)&&!b)for(Jo=r;null!==Jo;)s=(l=Jo).child,22===l.tag&&null!==l.memoizedState?Ss(r):null!==s?(s.return=l,Jo=s):Ss(r);for(;null!==a;)Jo=a,vs(a,t,n),a=a.sibling;Jo=r,Zo=o,Ko=b}_s(e)}else 0!==(8772&r.subtreeFlags)&&null!==a?(a.return=r,Jo=a):_s(e)}}function _s(e){for(;null!==Jo;){var t=Jo;if(0!==(8772&t.flags)){var n=t.alternate;try{if(0!==(8772&t.flags))switch(t.tag){case 0:case 11:case 15:Ko||is(5,t);break;case 1:var i=t.stateNode;if(4&t.flags&&!Ko)if(null===n)i.componentDidMount();else{var r=t.elementType===t.type?n.memoizedProps:to(t.type,n.memoizedProps);i.componentDidUpdate(r,n.memoizedState,i.__reactInternalSnapshotBeforeUpdate)}var l=t.updateQueue;null!==l&&Ga(t,l,i);break;case 3:var o=t.updateQueue;if(null!==o){if(n=null,null!==t.child)switch(t.child.tag){case 5:case 1:n=t.child.stateNode}Ga(t,o,n)}break;case 5:var s=t.stateNode;if(null===n&&4&t.flags){n=s;var b=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":b.autoFocus&&n.focus();break;case"img":b.src&&(n.src=b.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===t.memoizedState){var c=t.alternate;if(null!==c){var u=c.memoizedState;if(null!==u){var h=u.dehydrated;null!==h&&Vt(h)}}}break;default:throw Error(a(163))}Ko||512&t.flags&&rs(t)}catch(d){wb(t,t.return,d)}}if(t===e){Jo=null;break}if(null!==(n=t.sibling)){n.return=t.return,Jo=n;break}Jo=t.return}}function ys(e){for(;null!==Jo;){var t=Jo;if(t===e){Jo=null;break}var n=t.sibling;if(null!==n){n.return=t.return,Jo=n;break}Jo=t.return}}function Ss(e){for(;null!==Jo;){var t=Jo;try{switch(t.tag){case 0:case 11:case 15:var n=t.return;try{is(4,t)}catch(s){wb(t,n,s)}break;case 1:var i=t.stateNode;if("function"===typeof i.componentDidMount){var r=t.return;try{i.componentDidMount()}catch(s){wb(t,r,s)}}var a=t.return;try{rs(t)}catch(s){wb(t,a,s)}break;case 5:var l=t.return;try{rs(t)}catch(s){wb(t,l,s)}}}catch(s){wb(t,t.return,s)}if(t===e){Jo=null;break}var o=t.sibling;if(null!==o){o.return=t.return,Jo=o;break}Jo=t.return}}var Ms,ws=Math.ceil,zs=_.ReactCurrentDispatcher,Es=_.ReactCurrentOwner,Ts=_.ReactCurrentBatchConfig,As=0,Cs=null,Rs=null,Ps=0,Ls=0,Is=wr(0),Ns=0,ks=null,Ds=0,Us=0,Os=0,Fs=null,Bs=null,Hs=0,Vs=1/0,Gs=null,Ws=!1,js=null,Xs=null,qs=!1,Ys=null,Zs=0,Ks=0,$s=null,Js=-1,Qs=0;function eb(){return 0!==(6&As)?$e():-1!==Js?Js:Js=$e()}function tb(e){return 0===(1&e.mode)?1:0!==(2&As)&&0!==Ps?Ps&-Ps:null!==fa.transition?(0===Qs&&(Qs=ft()),Qs):0!==(e=vt)?e:e=void 0===(e=window.event)?16:Kt(e.type)}function nb(e,t,n,i){if(50<Ks)throw Ks=0,$s=null,Error(a(185));gt(e,n,i),0!==(2&As)&&e===Cs||(e===Cs&&(0===(2&As)&&(Us|=n),4===Ns&&ob(e,Ps)),ib(e,i),1===n&&0===As&&0===(1&t.mode)&&(Vs=$e()+500,Fr&&Vr()))}function ib(e,t){var n=e.callbackNode;!function(e,t){for(var n=e.suspendedLanes,i=e.pingedLanes,r=e.expirationTimes,a=e.pendingLanes;0<a;){var l=31-lt(a),o=1<<l,s=r[l];-1===s?0!==(o&n)&&0===(o&i)||(r[l]=dt(o,t)):s<=t&&(e.expiredLanes|=o),a&=~o}}(e,t);var i=ht(e,e===Cs?Ps:0);if(0===i)null!==n&&Ye(n),e.callbackNode=null,e.callbackPriority=0;else if(t=i&-i,e.callbackPriority!==t){if(null!=n&&Ye(n),1===t)0===e.tag?function(e){Fr=!0,Hr(e)}(sb.bind(null,e)):Hr(sb.bind(null,e)),lr((function(){0===(6&As)&&Vr()})),n=null;else{switch(_t(i)){case 1:n=Qe;break;case 4:n=et;break;case 16:default:n=tt;break;case 536870912:n=it}n=Cb(n,rb.bind(null,e))}e.callbackPriority=t,e.callbackNode=n}}function rb(e,t){if(Js=-1,Qs=0,0!==(6&As))throw Error(a(327));var n=e.callbackNode;if(Sb()&&e.callbackNode!==n)return null;var i=ht(e,e===Cs?Ps:0);if(0===i)return null;if(0!==(30&i)||0!==(i&e.expiredLanes)||t)t=pb(e,i);else{t=i;var r=As;As|=2;var l=mb();for(Cs===e&&Ps===t||(Gs=null,Vs=$e()+500,hb(e,t));;)try{xb();break}catch(s){db(e,s)}Ea(),zs.current=l,As=r,null!==Rs?t=0:(Cs=null,Ps=0,t=Ns)}if(0!==t){if(2===t&&(0!==(r=mt(e))&&(i=r,t=ab(e,r))),1===t)throw n=ks,hb(e,0),ob(e,i),ib(e,$e()),n;if(6===t)ob(e,i);else{if(r=e.current.alternate,0===(30&i)&&!function(e){for(var t=e;;){if(16384&t.flags){var n=t.updateQueue;if(null!==n&&null!==(n=n.stores))for(var i=0;i<n.length;i++){var r=n[i],a=r.getSnapshot;r=r.value;try{if(!oi(a(),r))return!1}catch(o){return!1}}}if(n=t.child,16384&t.subtreeFlags&&null!==n)n.return=t,t=n;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}(r)&&(2===(t=pb(e,i))&&(0!==(l=mt(e))&&(i=l,t=ab(e,l))),1===t))throw n=ks,hb(e,0),ob(e,i),ib(e,$e()),n;switch(e.finishedWork=r,e.finishedLanes=i,t){case 0:case 1:throw Error(a(345));case 2:case 5:yb(e,Bs,Gs);break;case 3:if(ob(e,i),(130023424&i)===i&&10<(t=Hs+500-$e())){if(0!==ht(e,0))break;if(((r=e.suspendedLanes)&i)!==i){eb(),e.pingedLanes|=e.suspendedLanes&r;break}e.timeoutHandle=ir(yb.bind(null,e,Bs,Gs),t);break}yb(e,Bs,Gs);break;case 4:if(ob(e,i),(4194240&i)===i)break;for(t=e.eventTimes,r=-1;0<i;){var o=31-lt(i);l=1<<o,(o=t[o])>r&&(r=o),i&=~l}if(i=r,10<(i=(120>(i=$e()-i)?120:480>i?480:1080>i?1080:1920>i?1920:3e3>i?3e3:4320>i?4320:1960*ws(i/1960))-i)){e.timeoutHandle=ir(yb.bind(null,e,Bs,Gs),i);break}yb(e,Bs,Gs);break;default:throw Error(a(329))}}}return ib(e,$e()),e.callbackNode===n?rb.bind(null,e):null}function ab(e,t){var n=Fs;return e.current.memoizedState.isDehydrated&&(hb(e,t).flags|=256),2!==(e=pb(e,t))&&(t=Bs,Bs=n,null!==t&&lb(t)),e}function lb(e){null===Bs?Bs=e:Bs.push.apply(Bs,e)}function ob(e,t){for(t&=~Os,t&=~Us,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-lt(t),i=1<<n;e[n]=-1,t&=~i}}function sb(e){if(0!==(6&As))throw Error(a(327));Sb();var t=ht(e,0);if(0===(1&t))return ib(e,$e()),null;var n=pb(e,t);if(0!==e.tag&&2===n){var i=mt(e);0!==i&&(t=i,n=ab(e,i))}if(1===n)throw n=ks,hb(e,0),ob(e,t),ib(e,$e()),n;if(6===n)throw Error(a(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,yb(e,Bs,Gs),ib(e,$e()),null}function bb(e,t){var n=As;As|=1;try{return e(t)}finally{0===(As=n)&&(Vs=$e()+500,Fr&&Vr())}}function cb(e){null!==Ys&&0===Ys.tag&&0===(6&As)&&Sb();var t=As;As|=1;var n=Ts.transition,i=vt;try{if(Ts.transition=null,vt=1,e)return e()}finally{vt=i,Ts.transition=n,0===(6&(As=t))&&Vr()}}function ub(){Ls=Is.current,zr(Is)}function hb(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,rr(n)),null!==Rs)for(n=Rs.return;null!==n;){var i=n;switch(ta(i),i.tag){case 1:null!==(i=i.type.childContextTypes)&&void 0!==i&&Ir();break;case 3:Ka(),zr(Cr),zr(Ar),nl();break;case 5:Ja(i);break;case 4:Ka();break;case 13:case 19:zr(Qa);break;case 10:Ta(i.type._context);break;case 22:case 23:ub()}n=n.return}if(Cs=e,Rs=e=Ib(e.current,null),Ps=Ls=t,Ns=0,ks=null,Os=Us=Ds=0,Bs=Fs=null,null!==Pa){for(t=0;t<Pa.length;t++)if(null!==(i=(n=Pa[t]).interleaved)){n.interleaved=null;var r=i.next,a=n.pending;if(null!==a){var l=a.next;a.next=r,i.next=l}n.pending=i}Pa=null}return e}function db(e,t){for(;;){var n=Rs;try{if(Ea(),il.current=$l,bl){for(var i=ll.memoizedState;null!==i;){var r=i.queue;null!==r&&(r.pending=null),i=i.next}bl=!1}if(al=0,sl=ol=ll=null,cl=!1,ul=0,Es.current=null,null===n||null===n.return){Ns=1,ks=t,Rs=null;break}e:{var l=e,o=n.return,s=n,b=t;if(t=Ps,s.flags|=32768,null!==b&&"object"===typeof b&&"function"===typeof b.then){var c=b,u=s,h=u.tag;if(0===(1&u.mode)&&(0===h||11===h||15===h)){var d=u.alternate;d?(u.updateQueue=d.updateQueue,u.memoizedState=d.memoizedState,u.lanes=d.lanes):(u.updateQueue=null,u.memoizedState=null)}var m=po(o);if(null!==m){m.flags&=-257,go(m,o,s,0,t),1&m.mode&&fo(l,c,t),b=c;var f=(t=m).updateQueue;if(null===f){var p=new Set;p.add(b),t.updateQueue=p}else f.add(b);break e}if(0===(1&t)){fo(l,c,t),fb();break e}b=Error(a(426))}else if(ra&&1&s.mode){var g=po(o);if(null!==g){0===(65536&g.flags)&&(g.flags|=256),go(g,o,s,0,t),ma(so(b,s));break e}}l=b=so(b,s),4!==Ns&&(Ns=2),null===Fs?Fs=[l]:Fs.push(l),l=o;do{switch(l.tag){case 3:l.flags|=65536,t&=-t,l.lanes|=t,Ha(l,ho(0,b,t));break e;case 1:s=b;var x=l.type,v=l.stateNode;if(0===(128&l.flags)&&("function"===typeof x.getDerivedStateFromError||null!==v&&"function"===typeof v.componentDidCatch&&(null===Xs||!Xs.has(v)))){l.flags|=65536,t&=-t,l.lanes|=t,Ha(l,mo(l,s,t));break e}}l=l.return}while(null!==l)}_b(n)}catch(_){t=_,Rs===n&&null!==n&&(Rs=n=n.return);continue}break}}function mb(){var e=zs.current;return zs.current=$l,null===e?$l:e}function fb(){0!==Ns&&3!==Ns&&2!==Ns||(Ns=4),null===Cs||0===(268435455&Ds)&&0===(268435455&Us)||ob(Cs,Ps)}function pb(e,t){var n=As;As|=2;var i=mb();for(Cs===e&&Ps===t||(Gs=null,hb(e,t));;)try{gb();break}catch(r){db(e,r)}if(Ea(),As=n,zs.current=i,null!==Rs)throw Error(a(261));return Cs=null,Ps=0,Ns}function gb(){for(;null!==Rs;)vb(Rs)}function xb(){for(;null!==Rs&&!Ze();)vb(Rs)}function vb(e){var t=Ms(e.alternate,e,Ls);e.memoizedProps=e.pendingProps,null===t?_b(e):Rs=t,Es.current=null}function _b(e){var t=e;do{var n=t.alternate;if(e=t.return,0===(32768&t.flags)){if(null!==(n=qo(n,t,Ls)))return void(Rs=n)}else{if(null!==(n=Yo(n,t)))return n.flags&=32767,void(Rs=n);if(null===e)return Ns=6,void(Rs=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(t=t.sibling))return void(Rs=t);Rs=t=e}while(null!==t);0===Ns&&(Ns=5)}function yb(e,t,n){var i=vt,r=Ts.transition;try{Ts.transition=null,vt=1,function(e,t,n,i){do{Sb()}while(null!==Ys);if(0!==(6&As))throw Error(a(327));n=e.finishedWork;var r=e.finishedLanes;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(a(177));e.callbackNode=null,e.callbackPriority=0;var l=n.lanes|n.childLanes;if(function(e,t){var n=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var i=e.eventTimes;for(e=e.expirationTimes;0<n;){var r=31-lt(n),a=1<<r;t[r]=0,i[r]=-1,e[r]=-1,n&=~a}}(e,l),e===Cs&&(Rs=Cs=null,Ps=0),0===(2064&n.subtreeFlags)&&0===(2064&n.flags)||qs||(qs=!0,Cb(tt,(function(){return Sb(),null}))),l=0!==(15990&n.flags),0!==(15990&n.subtreeFlags)||l){l=Ts.transition,Ts.transition=null;var o=vt;vt=1;var s=As;As|=4,Es.current=null,function(e,t){if(er=Wt,di(e=hi())){if("selectionStart"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{var i=(n=(n=e.ownerDocument)&&n.defaultView||window).getSelection&&n.getSelection();if(i&&0!==i.rangeCount){n=i.anchorNode;var r=i.anchorOffset,l=i.focusNode;i=i.focusOffset;try{n.nodeType,l.nodeType}catch(y){n=null;break e}var o=0,s=-1,b=-1,c=0,u=0,h=e,d=null;t:for(;;){for(var m;h!==n||0!==r&&3!==h.nodeType||(s=o+r),h!==l||0!==i&&3!==h.nodeType||(b=o+i),3===h.nodeType&&(o+=h.nodeValue.length),null!==(m=h.firstChild);)d=h,h=m;for(;;){if(h===e)break t;if(d===n&&++c===r&&(s=o),d===l&&++u===i&&(b=o),null!==(m=h.nextSibling))break;d=(h=d).parentNode}h=m}n=-1===s||-1===b?null:{start:s,end:b}}else n=null}n=n||{start:0,end:0}}else n=null;for(tr={focusedElem:e,selectionRange:n},Wt=!1,Jo=t;null!==Jo;)if(e=(t=Jo).child,0!==(1028&t.subtreeFlags)&&null!==e)e.return=t,Jo=e;else for(;null!==Jo;){t=Jo;try{var f=t.alternate;if(0!==(1024&t.flags))switch(t.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==f){var p=f.memoizedProps,g=f.memoizedState,x=t.stateNode,v=x.getSnapshotBeforeUpdate(t.elementType===t.type?p:to(t.type,p),g);x.__reactInternalSnapshotBeforeUpdate=v}break;case 3:var _=t.stateNode.containerInfo;1===_.nodeType?_.textContent="":9===_.nodeType&&_.documentElement&&_.removeChild(_.documentElement);break;default:throw Error(a(163))}}catch(y){wb(t,t.return,y)}if(null!==(e=t.sibling)){e.return=t.return,Jo=e;break}Jo=t.return}f=ts,ts=!1}(e,n),ps(n,e),mi(tr),Wt=!!er,tr=er=null,e.current=n,xs(n,e,r),Ke(),As=s,vt=o,Ts.transition=l}else e.current=n;if(qs&&(qs=!1,Ys=e,Zs=r),l=e.pendingLanes,0===l&&(Xs=null),function(e){if(at&&"function"===typeof at.onCommitFiberRoot)try{at.onCommitFiberRoot(rt,e,void 0,128===(128&e.current.flags))}catch(t){}}(n.stateNode),ib(e,$e()),null!==t)for(i=e.onRecoverableError,n=0;n<t.length;n++)r=t[n],i(r.value,{componentStack:r.stack,digest:r.digest});if(Ws)throw Ws=!1,e=js,js=null,e;0!==(1&Zs)&&0!==e.tag&&Sb(),l=e.pendingLanes,0!==(1&l)?e===$s?Ks++:(Ks=0,$s=e):Ks=0,Vr()}(e,t,n,i)}finally{Ts.transition=r,vt=i}return null}function Sb(){if(null!==Ys){var e=_t(Zs),t=Ts.transition,n=vt;try{if(Ts.transition=null,vt=16>e?16:e,null===Ys)var i=!1;else{if(e=Ys,Ys=null,Zs=0,0!==(6&As))throw Error(a(331));var r=As;for(As|=4,Jo=e.current;null!==Jo;){var l=Jo,o=l.child;if(0!==(16&Jo.flags)){var s=l.deletions;if(null!==s){for(var b=0;b<s.length;b++){var c=s[b];for(Jo=c;null!==Jo;){var u=Jo;switch(u.tag){case 0:case 11:case 15:ns(8,u,l)}var h=u.child;if(null!==h)h.return=u,Jo=h;else for(;null!==Jo;){var d=(u=Jo).sibling,m=u.return;if(as(u),u===c){Jo=null;break}if(null!==d){d.return=m,Jo=d;break}Jo=m}}}var f=l.alternate;if(null!==f){var p=f.child;if(null!==p){f.child=null;do{var g=p.sibling;p.sibling=null,p=g}while(null!==p)}}Jo=l}}if(0!==(2064&l.subtreeFlags)&&null!==o)o.return=l,Jo=o;else e:for(;null!==Jo;){if(0!==(2048&(l=Jo).flags))switch(l.tag){case 0:case 11:case 15:ns(9,l,l.return)}var x=l.sibling;if(null!==x){x.return=l.return,Jo=x;break e}Jo=l.return}}var v=e.current;for(Jo=v;null!==Jo;){var _=(o=Jo).child;if(0!==(2064&o.subtreeFlags)&&null!==_)_.return=o,Jo=_;else e:for(o=v;null!==Jo;){if(0!==(2048&(s=Jo).flags))try{switch(s.tag){case 0:case 11:case 15:is(9,s)}}catch(S){wb(s,s.return,S)}if(s===o){Jo=null;break e}var y=s.sibling;if(null!==y){y.return=s.return,Jo=y;break e}Jo=s.return}}if(As=r,Vr(),at&&"function"===typeof at.onPostCommitFiberRoot)try{at.onPostCommitFiberRoot(rt,e)}catch(S){}i=!0}return i}finally{vt=n,Ts.transition=t}}return!1}function Mb(e,t,n){e=Fa(e,t=ho(0,t=so(n,t),1),1),t=eb(),null!==e&&(gt(e,1,t),ib(e,t))}function wb(e,t,n){if(3===e.tag)Mb(e,e,n);else for(;null!==t;){if(3===t.tag){Mb(t,e,n);break}if(1===t.tag){var i=t.stateNode;if("function"===typeof t.type.getDerivedStateFromError||"function"===typeof i.componentDidCatch&&(null===Xs||!Xs.has(i))){t=Fa(t,e=mo(t,e=so(n,e),1),1),e=eb(),null!==t&&(gt(t,1,e),ib(t,e));break}}t=t.return}}function zb(e,t,n){var i=e.pingCache;null!==i&&i.delete(t),t=eb(),e.pingedLanes|=e.suspendedLanes&n,Cs===e&&(Ps&n)===n&&(4===Ns||3===Ns&&(130023424&Ps)===Ps&&500>$e()-Hs?hb(e,0):Os|=n),ib(e,t)}function Eb(e,t){0===t&&(0===(1&e.mode)?t=1:(t=ct,0===(130023424&(ct<<=1))&&(ct=4194304)));var n=eb();null!==(e=Na(e,t))&&(gt(e,t,n),ib(e,n))}function Tb(e){var t=e.memoizedState,n=0;null!==t&&(n=t.retryLane),Eb(e,n)}function Ab(e,t){var n=0;switch(e.tag){case 13:var i=e.stateNode,r=e.memoizedState;null!==r&&(n=r.retryLane);break;case 19:i=e.stateNode;break;default:throw Error(a(314))}null!==i&&i.delete(t),Eb(e,n)}function Cb(e,t){return qe(e,t)}function Rb(e,t,n,i){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=i,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Pb(e,t,n,i){return new Rb(e,t,n,i)}function Lb(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Ib(e,t){var n=e.alternate;return null===n?((n=Pb(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=14680064&e.flags,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Nb(e,t,n,i,r,l){var o=2;if(i=e,"function"===typeof e)Lb(e)&&(o=1);else if("string"===typeof e)o=5;else e:switch(e){case M:return kb(n.children,r,l,t);case w:o=8,r|=8;break;case z:return(e=Pb(12,n,t,2|r)).elementType=z,e.lanes=l,e;case C:return(e=Pb(13,n,t,r)).elementType=C,e.lanes=l,e;case R:return(e=Pb(19,n,t,r)).elementType=R,e.lanes=l,e;case I:return Db(n,r,l,t);default:if("object"===typeof e&&null!==e)switch(e.$$typeof){case E:o=10;break e;case T:o=9;break e;case A:o=11;break e;case P:o=14;break e;case L:o=16,i=null;break e}throw Error(a(130,null==e?e:typeof e,""))}return(t=Pb(o,n,t,r)).elementType=e,t.type=i,t.lanes=l,t}function kb(e,t,n,i){return(e=Pb(7,e,i,t)).lanes=n,e}function Db(e,t,n,i){return(e=Pb(22,e,i,t)).elementType=I,e.lanes=n,e.stateNode={isHidden:!1},e}function Ub(e,t,n){return(e=Pb(6,e,null,t)).lanes=n,e}function Ob(e,t,n){return(t=Pb(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Fb(e,t,n,i,r){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=pt(0),this.expirationTimes=pt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=pt(0),this.identifierPrefix=i,this.onRecoverableError=r,this.mutableSourceEagerHydrationData=null}function Bb(e,t,n,i,r,a,l,o,s){return e=new Fb(e,t,n,o,s),1===t?(t=1,!0===a&&(t|=8)):t=0,a=Pb(3,null,null,t),e.current=a,a.stateNode=e,a.memoizedState={element:i,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},Da(a),e}function Hb(e){if(!e)return Tr;e:{if(Ve(e=e._reactInternals)!==e||1!==e.tag)throw Error(a(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(Lr(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(null!==t);throw Error(a(171))}if(1===e.tag){var n=e.type;if(Lr(n))return kr(e,n,t)}return t}function Vb(e,t,n,i,r,a,l,o,s){return(e=Bb(n,i,!0,e,0,a,0,o,s)).context=Hb(null),n=e.current,(a=Oa(i=eb(),r=tb(n))).callback=void 0!==t&&null!==t?t:null,Fa(n,a,r),e.current.lanes=r,gt(e,r,i),ib(e,i),e}function Gb(e,t,n,i){var r=t.current,a=eb(),l=tb(r);return n=Hb(n),null===t.context?t.context=n:t.pendingContext=n,(t=Oa(a,l)).payload={element:e},null!==(i=void 0===i?null:i)&&(t.callback=i),null!==(e=Fa(r,t,l))&&(nb(e,r,l,a),Ba(e,r,l)),l}function Wb(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function jb(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function Xb(e,t){jb(e,t),(e=e.alternate)&&jb(e,t)}Ms=function(e,t,n){if(null!==e)if(e.memoizedProps!==t.pendingProps||Cr.current)vo=!0;else{if(0===(e.lanes&n)&&0===(128&t.flags))return vo=!1,function(e,t,n){switch(t.tag){case 3:Co(t),da();break;case 5:$a(t);break;case 1:Lr(t.type)&&Dr(t);break;case 4:Za(t,t.stateNode.containerInfo);break;case 10:var i=t.type._context,r=t.memoizedProps.value;Er(Sa,i._currentValue),i._currentValue=r;break;case 13:if(null!==(i=t.memoizedState))return null!==i.dehydrated?(Er(Qa,1&Qa.current),t.flags|=128,null):0!==(n&t.child.childLanes)?Uo(e,t,n):(Er(Qa,1&Qa.current),null!==(e=Wo(e,t,n))?e.sibling:null);Er(Qa,1&Qa.current);break;case 19:if(i=0!==(n&t.childLanes),0!==(128&e.flags)){if(i)return Vo(e,t,n);t.flags|=128}if(null!==(r=t.memoizedState)&&(r.rendering=null,r.tail=null,r.lastEffect=null),Er(Qa,Qa.current),i)break;return null;case 22:case 23:return t.lanes=0,wo(e,t,n)}return Wo(e,t,n)}(e,t,n);vo=0!==(131072&e.flags)}else vo=!1,ra&&0!==(1048576&t.flags)&&Qr(t,Xr,t.index);switch(t.lanes=0,t.tag){case 2:var i=t.type;Go(e,t),e=t.pendingProps;var r=Pr(t,Ar.current);Ca(t,n),r=fl(null,t,i,e,r,n);var l=pl();return t.flags|=1,"object"===typeof r&&null!==r&&"function"===typeof r.render&&void 0===r.$$typeof?(t.tag=1,t.memoizedState=null,t.updateQueue=null,Lr(i)?(l=!0,Dr(t)):l=!1,t.memoizedState=null!==r.state&&void 0!==r.state?r.state:null,Da(t),r.updater=io,t.stateNode=r,r._reactInternals=t,oo(t,i,e,n),t=Ao(null,t,i,!0,l,n)):(t.tag=0,ra&&l&&ea(t),_o(null,t,r,n),t=t.child),t;case 16:i=t.elementType;e:{switch(Go(e,t),e=t.pendingProps,i=(r=i._init)(i._payload),t.type=i,r=t.tag=function(e){if("function"===typeof e)return Lb(e)?1:0;if(void 0!==e&&null!==e){if((e=e.$$typeof)===A)return 11;if(e===P)return 14}return 2}(i),e=to(i,e),r){case 0:t=Eo(null,t,i,e,n);break e;case 1:t=To(null,t,i,e,n);break e;case 11:t=yo(null,t,i,e,n);break e;case 14:t=So(null,t,i,to(i.type,e),n);break e}throw Error(a(306,i,""))}return t;case 0:return i=t.type,r=t.pendingProps,Eo(e,t,i,r=t.elementType===i?r:to(i,r),n);case 1:return i=t.type,r=t.pendingProps,To(e,t,i,r=t.elementType===i?r:to(i,r),n);case 3:e:{if(Co(t),null===e)throw Error(a(387));i=t.pendingProps,r=(l=t.memoizedState).element,Ua(e,t),Va(t,i,null,n);var o=t.memoizedState;if(i=o.element,l.isDehydrated){if(l={element:i,isDehydrated:!1,cache:o.cache,pendingSuspenseBoundaries:o.pendingSuspenseBoundaries,transitions:o.transitions},t.updateQueue.baseState=l,t.memoizedState=l,256&t.flags){t=Ro(e,t,i,n,r=so(Error(a(423)),t));break e}if(i!==r){t=Ro(e,t,i,n,r=so(Error(a(424)),t));break e}for(ia=br(t.stateNode.containerInfo.firstChild),na=t,ra=!0,aa=null,n=ya(t,null,i,n),t.child=n;n;)n.flags=-3&n.flags|4096,n=n.sibling}else{if(da(),i===r){t=Wo(e,t,n);break e}_o(e,t,i,n)}t=t.child}return t;case 5:return $a(t),null===e&&ba(t),i=t.type,r=t.pendingProps,l=null!==e?e.memoizedProps:null,o=r.children,nr(i,r)?o=null:null!==l&&nr(i,l)&&(t.flags|=32),zo(e,t),_o(e,t,o,n),t.child;case 6:return null===e&&ba(t),null;case 13:return Uo(e,t,n);case 4:return Za(t,t.stateNode.containerInfo),i=t.pendingProps,null===e?t.child=_a(t,null,i,n):_o(e,t,i,n),t.child;case 11:return i=t.type,r=t.pendingProps,yo(e,t,i,r=t.elementType===i?r:to(i,r),n);case 7:return _o(e,t,t.pendingProps,n),t.child;case 8:case 12:return _o(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(i=t.type._context,r=t.pendingProps,l=t.memoizedProps,o=r.value,Er(Sa,i._currentValue),i._currentValue=o,null!==l)if(oi(l.value,o)){if(l.children===r.children&&!Cr.current){t=Wo(e,t,n);break e}}else for(null!==(l=t.child)&&(l.return=t);null!==l;){var s=l.dependencies;if(null!==s){o=l.child;for(var b=s.firstContext;null!==b;){if(b.context===i){if(1===l.tag){(b=Oa(-1,n&-n)).tag=2;var c=l.updateQueue;if(null!==c){var u=(c=c.shared).pending;null===u?b.next=b:(b.next=u.next,u.next=b),c.pending=b}}l.lanes|=n,null!==(b=l.alternate)&&(b.lanes|=n),Aa(l.return,n,t),s.lanes|=n;break}b=b.next}}else if(10===l.tag)o=l.type===t.type?null:l.child;else if(18===l.tag){if(null===(o=l.return))throw Error(a(341));o.lanes|=n,null!==(s=o.alternate)&&(s.lanes|=n),Aa(o,n,t),o=l.sibling}else o=l.child;if(null!==o)o.return=l;else for(o=l;null!==o;){if(o===t){o=null;break}if(null!==(l=o.sibling)){l.return=o.return,o=l;break}o=o.return}l=o}_o(e,t,r.children,n),t=t.child}return t;case 9:return r=t.type,i=t.pendingProps.children,Ca(t,n),i=i(r=Ra(r)),t.flags|=1,_o(e,t,i,n),t.child;case 14:return r=to(i=t.type,t.pendingProps),So(e,t,i,r=to(i.type,r),n);case 15:return Mo(e,t,t.type,t.pendingProps,n);case 17:return i=t.type,r=t.pendingProps,r=t.elementType===i?r:to(i,r),Go(e,t),t.tag=1,Lr(i)?(e=!0,Dr(t)):e=!1,Ca(t,n),ao(t,i,r),oo(t,i,r,n),Ao(null,t,i,!0,e,n);case 19:return Vo(e,t,n);case 22:return wo(e,t,n)}throw Error(a(156,t.tag))};var qb="function"===typeof reportError?reportError:function(e){console.error(e)};function Yb(e){this._internalRoot=e}function Zb(e){this._internalRoot=e}function Kb(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function $b(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Jb(){}function Qb(e,t,n,i,r){var a=n._reactRootContainer;if(a){var l=a;if("function"===typeof r){var o=r;r=function(){var e=Wb(l);o.call(e)}}Gb(t,l,e,r)}else l=function(e,t,n,i,r){if(r){if("function"===typeof i){var a=i;i=function(){var e=Wb(l);a.call(e)}}var l=Vb(t,i,e,0,null,!1,0,"",Jb);return e._reactRootContainer=l,e[mr]=l.current,Vi(8===e.nodeType?e.parentNode:e),cb(),l}for(;r=e.lastChild;)e.removeChild(r);if("function"===typeof i){var o=i;i=function(){var e=Wb(s);o.call(e)}}var s=Bb(e,0,!1,null,0,!1,0,"",Jb);return e._reactRootContainer=s,e[mr]=s.current,Vi(8===e.nodeType?e.parentNode:e),cb((function(){Gb(t,s,n,i)})),s}(n,t,e,r,i);return Wb(l)}Zb.prototype.render=Yb.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(a(409));Gb(e,t,null,null)},Zb.prototype.unmount=Yb.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;cb((function(){Gb(null,e,null,null)})),t[mr]=null}},Zb.prototype.unstable_scheduleHydration=function(e){if(e){var t=wt();e={blockedOn:null,target:e,priority:t};for(var n=0;n<It.length&&0!==t&&t<It[n].priority;n++);It.splice(n,0,e),0===n&&Ut(e)}},yt=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var n=ut(t.pendingLanes);0!==n&&(xt(t,1|n),ib(t,$e()),0===(6&As)&&(Vs=$e()+500,Vr()))}break;case 13:cb((function(){var t=Na(e,1);if(null!==t){var n=eb();nb(t,e,1,n)}})),Xb(e,1)}},St=function(e){if(13===e.tag){var t=Na(e,134217728);if(null!==t)nb(t,e,134217728,eb());Xb(e,134217728)}},Mt=function(e){if(13===e.tag){var t=tb(e),n=Na(e,t);if(null!==n)nb(n,e,t,eb());Xb(e,t)}},wt=function(){return vt},zt=function(e,t){var n=vt;try{return vt=e,t()}finally{vt=n}},Se=function(e,t,n){switch(t){case"input":if(J(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var i=n[t];if(i!==e&&i.form===e.form){var r=yr(i);if(!r)throw Error(a(90));q(i),J(i,r)}}}break;case"textarea":ae(e,n);break;case"select":null!=(t=n.value)&&ne(e,!!n.multiple,t,!1)}},Ae=bb,Ce=cb;var ec={usingClientEntryPoint:!1,Events:[vr,_r,yr,Ee,Te,bb]},tc={findFiberByHostInstance:xr,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"},nc={bundleType:tc.bundleType,version:tc.version,rendererPackageName:tc.rendererPackageName,rendererConfig:tc.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:_.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=je(e))?null:e.stateNode},findFiberByHostInstance:tc.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var ic=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!ic.isDisabled&&ic.supportsFiber)try{rt=ic.inject(nc),at=ic}catch(ce){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ec,t.createPortal=function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Kb(t))throw Error(a(200));return function(e,t,n){var i=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:S,key:null==i?null:""+i,children:e,containerInfo:t,implementation:n}}(e,t,null,n)},t.createRoot=function(e,t){if(!Kb(e))throw Error(a(299));var n=!1,i="",r=qb;return null!==t&&void 0!==t&&(!0===t.unstable_strictMode&&(n=!0),void 0!==t.identifierPrefix&&(i=t.identifierPrefix),void 0!==t.onRecoverableError&&(r=t.onRecoverableError)),t=Bb(e,1,!1,null,0,n,0,i,r),e[mr]=t.current,Vi(8===e.nodeType?e.parentNode:e),new Yb(t)},t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"===typeof e.render)throw Error(a(188));throw e=Object.keys(e).join(","),Error(a(268,e))}return e=null===(e=je(t))?null:e.stateNode},t.flushSync=function(e){return cb(e)},t.hydrate=function(e,t,n){if(!$b(t))throw Error(a(200));return Qb(null,e,t,!0,n)},t.hydrateRoot=function(e,t,n){if(!Kb(e))throw Error(a(405));var i=null!=n&&n.hydratedSources||null,r=!1,l="",o=qb;if(null!==n&&void 0!==n&&(!0===n.unstable_strictMode&&(r=!0),void 0!==n.identifierPrefix&&(l=n.identifierPrefix),void 0!==n.onRecoverableError&&(o=n.onRecoverableError)),t=Vb(t,null,e,1,null!=n?n:null,r,0,l,o),e[mr]=t.current,Vi(e),i)for(e=0;e<i.length;e++)r=(r=(n=i[e])._getVersion)(n._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[n,r]:t.mutableSourceEagerHydrationData.push(n,r);return new Zb(t)},t.render=function(e,t,n){if(!$b(t))throw Error(a(200));return Qb(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!$b(e))throw Error(a(40));return!!e._reactRootContainer&&(cb((function(){Qb(null,null,e,!1,(function(){e._reactRootContainer=null,e[mr]=null}))})),!0)},t.unstable_batchedUpdates=bb,t.unstable_renderSubtreeIntoContainer=function(e,t,n,i){if(!$b(n))throw Error(a(200));if(null==e||void 0===e._reactInternals)throw Error(a(38));return Qb(e,t,n,!1,i)},t.version="18.3.1-next-f1338f8080-20240426"},352:(e,t,n)=>{"use strict";var i=n(119);t.createRoot=i.createRoot,t.hydrateRoot=i.hydrateRoot},119:(e,t,n)=>{"use strict";!function e(){if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(t){console.error(t)}}(),e.exports=n(345)},153:(e,t)=>{"use strict";t.ConcurrentRoot=1,t.ContinuousEventPriority=4,t.DefaultEventPriority=16,t.DiscreteEventPriority=1},473:(e,t,n)=>{e.exports=function(e){var t={},i=n(950),r=n(224),a=Object.assign;function l(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var o=i.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,s=Symbol.for("react.element"),b=Symbol.for("react.portal"),c=Symbol.for("react.fragment"),u=Symbol.for("react.strict_mode"),h=Symbol.for("react.profiler"),d=Symbol.for("react.provider"),m=Symbol.for("react.context"),f=Symbol.for("react.forward_ref"),p=Symbol.for("react.suspense"),g=Symbol.for("react.suspense_list"),x=Symbol.for("react.memo"),v=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var _=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var y=Symbol.iterator;function S(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=y&&e[y]||e["@@iterator"])?e:null}function M(e){if(null==e)return null;if("function"===typeof e)return e.displayName||e.name||null;if("string"===typeof e)return e;switch(e){case c:return"Fragment";case b:return"Portal";case h:return"Profiler";case u:return"StrictMode";case p:return"Suspense";case g:return"SuspenseList"}if("object"===typeof e)switch(e.$$typeof){case m:return(e.displayName||"Context")+".Consumer";case d:return(e._context.displayName||"Context")+".Provider";case f:var t=e.render;return(e=e.displayName)||(e=""!==(e=t.displayName||t.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case x:return null!==(t=e.displayName||null)?t:M(e.type)||"Memo";case v:t=e._payload,e=e._init;try{return M(e(t))}catch(n){}}return null}function w(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=t.render).displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return M(t);case 8:return t===u?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"===typeof t)return t.displayName||t.name||null;if("string"===typeof t)return t}return null}function z(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!==(4098&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function E(e){if(z(e)!==e)throw Error(l(188))}function T(e){var t=e.alternate;if(!t){if(null===(t=z(e)))throw Error(l(188));return t!==e?null:e}for(var n=e,i=t;;){var r=n.return;if(null===r)break;var a=r.alternate;if(null===a){if(null!==(i=r.return)){n=i;continue}break}if(r.child===a.child){for(a=r.child;a;){if(a===n)return E(r),e;if(a===i)return E(r),t;a=a.sibling}throw Error(l(188))}if(n.return!==i.return)n=r,i=a;else{for(var o=!1,s=r.child;s;){if(s===n){o=!0,n=r,i=a;break}if(s===i){o=!0,i=r,n=a;break}s=s.sibling}if(!o){for(s=a.child;s;){if(s===n){o=!0,n=a,i=r;break}if(s===i){o=!0,i=a,n=r;break}s=s.sibling}if(!o)throw Error(l(189))}}if(n.alternate!==i)throw Error(l(190))}if(3!==n.tag)throw Error(l(188));return n.stateNode.current===n?e:t}function A(e){return null!==(e=T(e))?C(e):null}function C(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var t=C(e);if(null!==t)return t;e=e.sibling}return null}function R(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){if(4!==e.tag){var t=R(e);if(null!==t)return t}e=e.sibling}return null}var P,L=Array.isArray,I=e.getPublicInstance,N=e.getRootHostContext,k=e.getChildHostContext,D=e.prepareForCommit,U=e.resetAfterCommit,O=e.createInstance,F=e.appendInitialChild,B=e.finalizeInitialChildren,H=e.prepareUpdate,V=e.shouldSetTextContent,G=e.createTextInstance,W=e.scheduleTimeout,j=e.cancelTimeout,X=e.noTimeout,q=e.isPrimaryRenderer,Y=e.supportsMutation,Z=e.supportsPersistence,K=e.supportsHydration,$=e.getInstanceFromNode,J=e.preparePortalMount,Q=e.getCurrentEventPriority,ee=e.detachDeletedInstance,te=e.supportsMicrotasks,ne=e.scheduleMicrotask,ie=e.supportsTestSelectors,re=e.findFiberRoot,ae=e.getBoundingRect,le=e.getTextContent,oe=e.isHiddenSubtree,se=e.matchAccessibilityRole,be=e.setFocusIfFocusable,ce=e.setupIntersectionObserver,ue=e.appendChild,he=e.appendChildToContainer,de=e.commitTextUpdate,me=e.commitMount,fe=e.commitUpdate,pe=e.insertBefore,ge=e.insertInContainerBefore,xe=e.removeChild,ve=e.removeChildFromContainer,_e=e.resetTextContent,ye=e.hideInstance,Se=e.hideTextInstance,Me=e.unhideInstance,we=e.unhideTextInstance,ze=e.clearContainer,Ee=e.cloneInstance,Te=e.createContainerChildSet,Ae=e.appendChildToContainerChildSet,Ce=e.finalizeContainerChildren,Re=e.replaceContainerChildren,Pe=e.cloneHiddenInstance,Le=e.cloneHiddenTextInstance,Ie=e.canHydrateInstance,Ne=e.canHydrateTextInstance,ke=e.canHydrateSuspenseInstance,De=e.isSuspenseInstancePending,Ue=e.isSuspenseInstanceFallback,Oe=e.registerSuspenseInstanceRetry,Fe=e.getNextHydratableSibling,Be=e.getFirstHydratableChild,He=e.getFirstHydratableChildWithinContainer,Ve=e.getFirstHydratableChildWithinSuspenseInstance,Ge=e.hydrateInstance,We=e.hydrateTextInstance,je=e.hydrateSuspenseInstance,Xe=e.getNextHydratableInstanceAfterSuspenseInstance,qe=e.commitHydratedContainer,Ye=e.commitHydratedSuspenseInstance,Ze=e.clearSuspenseBoundary,Ke=e.clearSuspenseBoundaryFromContainer,$e=e.shouldDeleteUnhydratedTailInstances,Je=e.didNotMatchHydratedContainerTextInstance,Qe=e.didNotMatchHydratedTextInstance;function et(e){if(void 0===P)try{throw Error()}catch(n){var t=n.stack.trim().match(/\n( *(at )?)/);P=t&&t[1]||""}return"\n"+P+e}var tt=!1;function nt(e,t){if(!e||tt)return"";tt=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(b){var i=b}Reflect.construct(e,[],t)}else{try{t.call()}catch(b){i=b}e.call(t.prototype)}else{try{throw Error()}catch(b){i=b}e()}}catch(b){if(b&&i&&"string"===typeof b.stack){for(var r=b.stack.split("\n"),a=i.stack.split("\n"),l=r.length-1,o=a.length-1;1<=l&&0<=o&&r[l]!==a[o];)o--;for(;1<=l&&0<=o;l--,o--)if(r[l]!==a[o]){if(1!==l||1!==o)do{if(l--,0>--o||r[l]!==a[o]){var s="\n"+r[l].replace(" at new "," at ");return e.displayName&&s.includes("<anonymous>")&&(s=s.replace("<anonymous>",e.displayName)),s}}while(1<=l&&0<=o);break}}}finally{tt=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?et(e):""}var it=Object.prototype.hasOwnProperty,rt=[],at=-1;function lt(e){return{current:e}}function ot(e){0>at||(e.current=rt[at],rt[at]=null,at--)}function st(e,t){at++,rt[at]=e.current,e.current=t}var bt={},ct=lt(bt),ut=lt(!1),ht=bt;function dt(e,t){var n=e.type.contextTypes;if(!n)return bt;var i=e.stateNode;if(i&&i.__reactInternalMemoizedUnmaskedChildContext===t)return i.__reactInternalMemoizedMaskedChildContext;var r,a={};for(r in n)a[r]=t[r];return i&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=a),a}function mt(e){return null!==(e=e.childContextTypes)&&void 0!==e}function ft(){ot(ut),ot(ct)}function pt(e,t,n){if(ct.current!==bt)throw Error(l(168));st(ct,t),st(ut,n)}function gt(e,t,n){var i=e.stateNode;if(t=t.childContextTypes,"function"!==typeof i.getChildContext)return n;for(var r in i=i.getChildContext())if(!(r in t))throw Error(l(108,w(e)||"Unknown",r));return a({},n,i)}function xt(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||bt,ht=ct.current,st(ct,e),st(ut,ut.current),!0}function vt(e,t,n){var i=e.stateNode;if(!i)throw Error(l(169));n?(e=gt(e,t,ht),i.__reactInternalMemoizedMergedChildContext=e,ot(ut),ot(ct),st(ct,e)):ot(ut),st(ut,n)}var _t=Math.clz32?Math.clz32:function(e){return 0===(e>>>=0)?32:31-(yt(e)/St|0)|0},yt=Math.log,St=Math.LN2;var Mt=64,wt=4194304;function zt(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function Et(e,t){var n=e.pendingLanes;if(0===n)return 0;var i=0,r=e.suspendedLanes,a=e.pingedLanes,l=268435455&n;if(0!==l){var o=l&~r;0!==o?i=zt(o):0!==(a&=l)&&(i=zt(a))}else 0!==(l=n&~r)?i=zt(l):0!==a&&(i=zt(a));if(0===i)return 0;if(0!==t&&t!==i&&0===(t&r)&&((r=i&-i)>=(a=t&-t)||16===r&&0!==(4194240&a)))return t;if(0!==(4&i)&&(i|=16&n),0!==(t=e.entangledLanes))for(e=e.entanglements,t&=i;0<t;)r=1<<(n=31-_t(t)),i|=e[n],t&=~r;return i}function Tt(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return-1}}function At(e){return 0!==(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function Ct(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function Rt(e,t,n){e.pendingLanes|=t,536870912!==t&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[t=31-_t(t)]=n}function Pt(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var i=31-_t(n),r=1<<i;r&t|e[i]&t&&(e[i]|=t),n&=~r}}var Lt=0;function It(e){return 1<(e&=-e)?4<e?0!==(268435455&e)?16:536870912:4:1}var Nt=r.unstable_scheduleCallback,kt=r.unstable_cancelCallback,Dt=r.unstable_shouldYield,Ut=r.unstable_requestPaint,Ot=r.unstable_now,Ft=r.unstable_ImmediatePriority,Bt=r.unstable_UserBlockingPriority,Ht=r.unstable_NormalPriority,Vt=r.unstable_IdlePriority,Gt=null,Wt=null;var jt="function"===typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e===1/t)||e!==e&&t!==t},Xt=null,qt=!1,Yt=!1;function Zt(e){null===Xt?Xt=[e]:Xt.push(e)}function Kt(){if(!Yt&&null!==Xt){Yt=!0;var e=0,t=Lt;try{var n=Xt;for(Lt=1;e<n.length;e++){var i=n[e];do{i=i(!0)}while(null!==i)}Xt=null,qt=!1}catch(r){throw null!==Xt&&(Xt=Xt.slice(e+1)),Nt(Ft,Kt),r}finally{Lt=t,Yt=!1}}return null}var $t=o.ReactCurrentBatchConfig;function Jt(e,t){if(jt(e,t))return!0;if("object"!==typeof e||null===e||"object"!==typeof t||null===t)return!1;var n=Object.keys(e),i=Object.keys(t);if(n.length!==i.length)return!1;for(i=0;i<n.length;i++){var r=n[i];if(!it.call(t,r)||!jt(e[r],t[r]))return!1}return!0}function Qt(e){switch(e.tag){case 5:return et(e.type);case 16:return et("Lazy");case 13:return et("Suspense");case 19:return et("SuspenseList");case 0:case 2:case 15:return e=nt(e.type,!1);case 11:return e=nt(e.type.render,!1);case 1:return e=nt(e.type,!0);default:return""}}function en(e,t){if(e&&e.defaultProps){for(var n in t=a({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var tn=lt(null),nn=null,rn=null,an=null;function ln(){an=rn=nn=null}function on(e,t,n){q?(st(tn,t._currentValue),t._currentValue=n):(st(tn,t._currentValue2),t._currentValue2=n)}function sn(e){var t=tn.current;ot(tn),q?e._currentValue=t:e._currentValue2=t}function bn(e,t,n){for(;null!==e;){var i=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==i&&(i.childLanes|=t)):null!==i&&(i.childLanes&t)!==t&&(i.childLanes|=t),e===n)break;e=e.return}}function cn(e,t){nn=e,an=rn=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!==(e.lanes&t)&&(Dr=!0),e.firstContext=null)}function un(e){var t=q?e._currentValue:e._currentValue2;if(an!==e)if(e={context:e,memoizedValue:t,next:null},null===rn){if(null===nn)throw Error(l(308));rn=e,nn.dependencies={lanes:0,firstContext:e}}else rn=rn.next=e;return t}var hn=null,dn=!1;function mn(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function fn(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function pn(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function gn(e,t){var n=e.updateQueue;null!==n&&(n=n.shared,null!==Ya&&0!==(1&e.mode)&&0===(2&qa)?(null===(e=n.interleaved)?(t.next=t,null===hn?hn=[n]:hn.push(n)):(t.next=e.next,e.next=t),n.interleaved=t):(null===(e=n.pending)?t.next=t:(t.next=e.next,e.next=t),n.pending=t))}function xn(e,t,n){if(null!==(t=t.updateQueue)&&(t=t.shared,0!==(4194240&n))){var i=t.lanes;n|=i&=e.pendingLanes,t.lanes=n,Pt(e,n)}}function vn(e,t){var n=e.updateQueue,i=e.alternate;if(null!==i&&n===(i=i.updateQueue)){var r=null,a=null;if(null!==(n=n.firstBaseUpdate)){do{var l={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===a?r=a=l:a=a.next=l,n=n.next}while(null!==n);null===a?r=a=t:a=a.next=t}else r=a=t;return n={baseState:i.baseState,firstBaseUpdate:r,lastBaseUpdate:a,shared:i.shared,effects:i.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function _n(e,t,n,i){var r=e.updateQueue;dn=!1;var l=r.firstBaseUpdate,o=r.lastBaseUpdate,s=r.shared.pending;if(null!==s){r.shared.pending=null;var b=s,c=b.next;b.next=null,null===o?l=c:o.next=c,o=b;var u=e.alternate;null!==u&&((s=(u=u.updateQueue).lastBaseUpdate)!==o&&(null===s?u.firstBaseUpdate=c:s.next=c,u.lastBaseUpdate=b))}if(null!==l){var h=r.baseState;for(o=0,u=c=b=null,s=l;;){var d=s.lane,m=s.eventTime;if((i&d)===d){null!==u&&(u=u.next={eventTime:m,lane:0,tag:s.tag,payload:s.payload,callback:s.callback,next:null});e:{var f=e,p=s;switch(d=t,m=n,p.tag){case 1:if("function"===typeof(f=p.payload)){h=f.call(m,h,d);break e}h=f;break e;case 3:f.flags=-65537&f.flags|128;case 0:if(null===(d="function"===typeof(f=p.payload)?f.call(m,h,d):f)||void 0===d)break e;h=a({},h,d);break e;case 2:dn=!0}}null!==s.callback&&0!==s.lane&&(e.flags|=64,null===(d=r.effects)?r.effects=[s]:d.push(s))}else m={eventTime:m,lane:d,tag:s.tag,payload:s.payload,callback:s.callback,next:null},null===u?(c=u=m,b=h):u=u.next=m,o|=d;if(null===(s=s.next)){if(null===(s=r.shared.pending))break;s=(d=s).next,d.next=null,r.lastBaseUpdate=d,r.shared.pending=null}}if(null===u&&(b=h),r.baseState=b,r.firstBaseUpdate=c,r.lastBaseUpdate=u,null!==(t=r.shared.interleaved)){r=t;do{o|=r.lane,r=r.next}while(r!==t)}else null===l&&(r.shared.lanes=0);tl|=o,e.lanes=o,e.memoizedState=h}}function yn(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var i=e[t],r=i.callback;if(null!==r){if(i.callback=null,i=n,"function"!==typeof r)throw Error(l(191,r));r.call(i)}}}var Sn=(new i.Component).refs;function Mn(e,t,n,i){n=null===(n=n(i,t=e.memoizedState))||void 0===n?t:a({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var wn={isMounted:function(e){return!!(e=e._reactInternals)&&z(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var i=_l(),r=yl(e),a=pn(i,r);a.payload=t,void 0!==n&&null!==n&&(a.callback=n),gn(e,a),null!==(t=Sl(e,r,i))&&xn(t,e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var i=_l(),r=yl(e),a=pn(i,r);a.tag=1,a.payload=t,void 0!==n&&null!==n&&(a.callback=n),gn(e,a),null!==(t=Sl(e,r,i))&&xn(t,e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=_l(),i=yl(e),r=pn(n,i);r.tag=2,void 0!==t&&null!==t&&(r.callback=t),gn(e,r),null!==(t=Sl(e,i,n))&&xn(t,e,i)}};function zn(e,t,n,i,r,a,l){return"function"===typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(i,a,l):!t.prototype||!t.prototype.isPureReactComponent||(!Jt(n,i)||!Jt(r,a))}function En(e,t,n){var i=!1,r=bt,a=t.contextType;return"object"===typeof a&&null!==a?a=un(a):(r=mt(t)?ht:ct.current,a=(i=null!==(i=t.contextTypes)&&void 0!==i)?dt(e,r):bt),t=new t(n,a),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=wn,e.stateNode=t,t._reactInternals=e,i&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=r,e.__reactInternalMemoizedMaskedChildContext=a),t}function Tn(e,t,n,i){e=t.state,"function"===typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,i),"function"===typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,i),t.state!==e&&wn.enqueueReplaceState(t,t.state,null)}function An(e,t,n,i){var r=e.stateNode;r.props=n,r.state=e.memoizedState,r.refs=Sn,mn(e);var a=t.contextType;"object"===typeof a&&null!==a?r.context=un(a):(a=mt(t)?ht:ct.current,r.context=dt(e,a)),r.state=e.memoizedState,"function"===typeof(a=t.getDerivedStateFromProps)&&(Mn(e,t,a,n),r.state=e.memoizedState),"function"===typeof t.getDerivedStateFromProps||"function"===typeof r.getSnapshotBeforeUpdate||"function"!==typeof r.UNSAFE_componentWillMount&&"function"!==typeof r.componentWillMount||(t=r.state,"function"===typeof r.componentWillMount&&r.componentWillMount(),"function"===typeof r.UNSAFE_componentWillMount&&r.UNSAFE_componentWillMount(),t!==r.state&&wn.enqueueReplaceState(r,r.state,null),_n(e,n,r,i),r.state=e.memoizedState),"function"===typeof r.componentDidMount&&(e.flags|=4194308)}var Cn=[],Rn=0,Pn=null,Ln=0,In=[],Nn=0,kn=null,Dn=1,Un="";function On(e,t){Cn[Rn++]=Ln,Cn[Rn++]=Pn,Pn=e,Ln=t}function Fn(e,t,n){In[Nn++]=Dn,In[Nn++]=Un,In[Nn++]=kn,kn=e;var i=Dn;e=Un;var r=32-_t(i)-1;i&=~(1<<r),n+=1;var a=32-_t(t)+r;if(30<a){var l=r-r%5;a=(i&(1<<l)-1).toString(32),i>>=l,r-=l,Dn=1<<32-_t(t)+r|n<<r|i,Un=a+e}else Dn=1<<a|n<<r|i,Un=e}function Bn(e){null!==e.return&&(On(e,1),Fn(e,1,0))}function Hn(e){for(;e===Pn;)Pn=Cn[--Rn],Cn[Rn]=null,Ln=Cn[--Rn],Cn[Rn]=null;for(;e===kn;)kn=In[--Nn],In[Nn]=null,Un=In[--Nn],In[Nn]=null,Dn=In[--Nn],In[Nn]=null}var Vn=null,Gn=null,Wn=!1,jn=!1,Xn=null;function qn(e,t){var n=$l(5,null,null,0);n.elementType="DELETED",n.stateNode=t,n.return=e,null===(t=e.deletions)?(e.deletions=[n],e.flags|=16):t.push(n)}function Yn(e,t){switch(e.tag){case 5:return null!==(t=Ie(t,e.type,e.pendingProps))&&(e.stateNode=t,Vn=e,Gn=Be(t),!0);case 6:return null!==(t=Ne(t,e.pendingProps))&&(e.stateNode=t,Vn=e,Gn=null,!0);case 13:if(null!==(t=ke(t))){var n=null!==kn?{id:Dn,overflow:Un}:null;return e.memoizedState={dehydrated:t,treeContext:n,retryLane:1073741824},(n=$l(18,null,null,0)).stateNode=t,n.return=e,e.child=n,Vn=e,Gn=null,!0}return!1;default:return!1}}function Zn(e){return 0!==(1&e.mode)&&0===(128&e.flags)}function Kn(e){if(Wn){var t=Gn;if(t){var n=t;if(!Yn(e,t)){if(Zn(e))throw Error(l(418));t=Fe(n);var i=Vn;t&&Yn(e,t)?qn(i,n):(e.flags=-4097&e.flags|2,Wn=!1,Vn=e)}}else{if(Zn(e))throw Error(l(418));e.flags=-4097&e.flags|2,Wn=!1,Vn=e}}}function $n(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;Vn=e}function Jn(e){if(!K||e!==Vn)return!1;if(!Wn)return $n(e),Wn=!0,!1;if(3!==e.tag&&(5!==e.tag||$e(e.type)&&!V(e.type,e.memoizedProps))){var t=Gn;if(t){if(Zn(e)){for(e=Gn;e;)e=Fe(e);throw Error(l(418))}for(;t;)qn(e,t),t=Fe(t)}}if($n(e),13===e.tag){if(!K)throw Error(l(316));if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(l(317));Gn=Xe(e)}else Gn=Vn?Fe(e.stateNode):null;return!0}function Qn(){K&&(Gn=Vn=null,jn=Wn=!1)}function ei(e){null===Xn?Xn=[e]:Xn.push(e)}function ti(e,t,n){if(null!==(e=n.ref)&&"function"!==typeof e&&"object"!==typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(l(309));var i=n.stateNode}if(!i)throw Error(l(147,e));var r=i,a=""+e;return null!==t&&null!==t.ref&&"function"===typeof t.ref&&t.ref._stringRef===a?t.ref:(t=function(e){var t=r.refs;t===Sn&&(t=r.refs={}),null===e?delete t[a]:t[a]=e},t._stringRef=a,t)}if("string"!==typeof e)throw Error(l(284));if(!n._owner)throw Error(l(290,e))}return e}function ni(e,t){throw e=Object.prototype.toString.call(t),Error(l(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function ii(e){return(0,e._init)(e._payload)}function ri(e){function t(t,n){if(e){var i=t.deletions;null===i?(t.deletions=[n],t.flags|=16):i.push(n)}}function n(n,i){if(!e)return null;for(;null!==i;)t(n,i),i=i.sibling;return null}function i(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function r(e,t){return(e=Ql(e,t)).index=0,e.sibling=null,e}function a(t,n,i){return t.index=i,e?null!==(i=t.alternate)?(i=i.index)<n?(t.flags|=2,n):i:(t.flags|=2,n):(t.flags|=1048576,n)}function o(t){return e&&null===t.alternate&&(t.flags|=2),t}function u(e,t,n,i){return null===t||6!==t.tag?((t=io(n,e.mode,i)).return=e,t):((t=r(t,n)).return=e,t)}function h(e,t,n,i){var a=n.type;return a===c?m(e,t,n.props.children,i,n.key):null!==t&&(t.elementType===a||"object"===typeof a&&null!==a&&a.$$typeof===v&&ii(a)===t.type)?((i=r(t,n.props)).ref=ti(e,t,n),i.return=e,i):((i=eo(n.type,n.key,n.props,null,e.mode,i)).ref=ti(e,t,n),i.return=e,i)}function d(e,t,n,i){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=ro(n,e.mode,i)).return=e,t):((t=r(t,n.children||[])).return=e,t)}function m(e,t,n,i,a){return null===t||7!==t.tag?((t=to(n,e.mode,i,a)).return=e,t):((t=r(t,n)).return=e,t)}function f(e,t,n){if("string"===typeof t&&""!==t||"number"===typeof t)return(t=io(""+t,e.mode,n)).return=e,t;if("object"===typeof t&&null!==t){switch(t.$$typeof){case s:return(n=eo(t.type,t.key,t.props,null,e.mode,n)).ref=ti(e,null,t),n.return=e,n;case b:return(t=ro(t,e.mode,n)).return=e,t;case v:return f(e,(0,t._init)(t._payload),n)}if(L(t)||S(t))return(t=to(t,e.mode,n,null)).return=e,t;ni(e,t)}return null}function p(e,t,n,i){var r=null!==t?t.key:null;if("string"===typeof n&&""!==n||"number"===typeof n)return null!==r?null:u(e,t,""+n,i);if("object"===typeof n&&null!==n){switch(n.$$typeof){case s:return n.key===r?h(e,t,n,i):null;case b:return n.key===r?d(e,t,n,i):null;case v:return p(e,t,(r=n._init)(n._payload),i)}if(L(n)||S(n))return null!==r?null:m(e,t,n,i,null);ni(e,n)}return null}function g(e,t,n,i,r){if("string"===typeof i&&""!==i||"number"===typeof i)return u(t,e=e.get(n)||null,""+i,r);if("object"===typeof i&&null!==i){switch(i.$$typeof){case s:return h(t,e=e.get(null===i.key?n:i.key)||null,i,r);case b:return d(t,e=e.get(null===i.key?n:i.key)||null,i,r);case v:return g(e,t,n,(0,i._init)(i._payload),r)}if(L(i)||S(i))return m(t,e=e.get(n)||null,i,r,null);ni(t,i)}return null}function x(r,l,o,s){for(var b=null,c=null,u=l,h=l=0,d=null;null!==u&&h<o.length;h++){u.index>h?(d=u,u=null):d=u.sibling;var m=p(r,u,o[h],s);if(null===m){null===u&&(u=d);break}e&&u&&null===m.alternate&&t(r,u),l=a(m,l,h),null===c?b=m:c.sibling=m,c=m,u=d}if(h===o.length)return n(r,u),Wn&&On(r,h),b;if(null===u){for(;h<o.length;h++)null!==(u=f(r,o[h],s))&&(l=a(u,l,h),null===c?b=u:c.sibling=u,c=u);return Wn&&On(r,h),b}for(u=i(r,u);h<o.length;h++)null!==(d=g(u,r,h,o[h],s))&&(e&&null!==d.alternate&&u.delete(null===d.key?h:d.key),l=a(d,l,h),null===c?b=d:c.sibling=d,c=d);return e&&u.forEach((function(e){return t(r,e)})),Wn&&On(r,h),b}function _(r,o,s,b){var c=S(s);if("function"!==typeof c)throw Error(l(150));if(null==(s=c.call(s)))throw Error(l(151));for(var u=c=null,h=o,d=o=0,m=null,x=s.next();null!==h&&!x.done;d++,x=s.next()){h.index>d?(m=h,h=null):m=h.sibling;var v=p(r,h,x.value,b);if(null===v){null===h&&(h=m);break}e&&h&&null===v.alternate&&t(r,h),o=a(v,o,d),null===u?c=v:u.sibling=v,u=v,h=m}if(x.done)return n(r,h),Wn&&On(r,d),c;if(null===h){for(;!x.done;d++,x=s.next())null!==(x=f(r,x.value,b))&&(o=a(x,o,d),null===u?c=x:u.sibling=x,u=x);return Wn&&On(r,d),c}for(h=i(r,h);!x.done;d++,x=s.next())null!==(x=g(h,r,d,x.value,b))&&(e&&null!==x.alternate&&h.delete(null===x.key?d:x.key),o=a(x,o,d),null===u?c=x:u.sibling=x,u=x);return e&&h.forEach((function(e){return t(r,e)})),Wn&&On(r,d),c}return function e(i,a,l,u){if("object"===typeof l&&null!==l&&l.type===c&&null===l.key&&(l=l.props.children),"object"===typeof l&&null!==l){switch(l.$$typeof){case s:e:{for(var h=l.key,d=a;null!==d;){if(d.key===h){if((h=l.type)===c){if(7===d.tag){n(i,d.sibling),(a=r(d,l.props.children)).return=i,i=a;break e}}else if(d.elementType===h||"object"===typeof h&&null!==h&&h.$$typeof===v&&ii(h)===d.type){n(i,d.sibling),(a=r(d,l.props)).ref=ti(i,d,l),a.return=i,i=a;break e}n(i,d);break}t(i,d),d=d.sibling}l.type===c?((a=to(l.props.children,i.mode,u,l.key)).return=i,i=a):((u=eo(l.type,l.key,l.props,null,i.mode,u)).ref=ti(i,a,l),u.return=i,i=u)}return o(i);case b:e:{for(d=l.key;null!==a;){if(a.key===d){if(4===a.tag&&a.stateNode.containerInfo===l.containerInfo&&a.stateNode.implementation===l.implementation){n(i,a.sibling),(a=r(a,l.children||[])).return=i,i=a;break e}n(i,a);break}t(i,a),a=a.sibling}(a=ro(l,i.mode,u)).return=i,i=a}return o(i);case v:return e(i,a,(d=l._init)(l._payload),u)}if(L(l))return x(i,a,l,u);if(S(l))return _(i,a,l,u);ni(i,l)}return"string"===typeof l&&""!==l||"number"===typeof l?(l=""+l,null!==a&&6===a.tag?(n(i,a.sibling),(a=r(a,l)).return=i,i=a):(n(i,a),(a=io(l,i.mode,u)).return=i,i=a),o(i)):n(i,a)}}var ai=ri(!0),li=ri(!1),oi={},si=lt(oi),bi=lt(oi),ci=lt(oi);function ui(e){if(e===oi)throw Error(l(174));return e}function hi(e,t){st(ci,t),st(bi,e),st(si,oi),e=N(t),ot(si),st(si,e)}function di(){ot(si),ot(bi),ot(ci)}function mi(e){var t=ui(ci.current),n=ui(si.current);n!==(t=k(n,e.type,t))&&(st(bi,e),st(si,t))}function fi(e){bi.current===e&&(ot(si),ot(bi))}var pi=lt(0);function gi(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||De(n)||Ue(n)))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!==(128&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var xi=[];function vi(){for(var e=0;e<xi.length;e++){var t=xi[e];q?t._workInProgressVersionPrimary=null:t._workInProgressVersionSecondary=null}xi.length=0}var _i=o.ReactCurrentDispatcher,yi=o.ReactCurrentBatchConfig,Si=0,Mi=null,wi=null,zi=null,Ei=!1,Ti=!1,Ai=0,Ci=0;function Ri(){throw Error(l(321))}function Pi(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!jt(e[n],t[n]))return!1;return!0}function Li(e,t,n,i,r,a){if(Si=a,Mi=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,_i.current=null===e||null===e.memoizedState?mr:fr,e=n(i,r),Ti){a=0;do{if(Ti=!1,Ai=0,25<=a)throw Error(l(301));a+=1,zi=wi=null,t.updateQueue=null,_i.current=pr,e=n(i,r)}while(Ti)}if(_i.current=dr,t=null!==wi&&null!==wi.next,Si=0,zi=wi=Mi=null,Ei=!1,t)throw Error(l(300));return e}function Ii(){var e=0!==Ai;return Ai=0,e}function Ni(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===zi?Mi.memoizedState=zi=e:zi=zi.next=e,zi}function ki(){if(null===wi){var e=Mi.alternate;e=null!==e?e.memoizedState:null}else e=wi.next;var t=null===zi?Mi.memoizedState:zi.next;if(null!==t)zi=t,wi=e;else{if(null===e)throw Error(l(310));e={memoizedState:(wi=e).memoizedState,baseState:wi.baseState,baseQueue:wi.baseQueue,queue:wi.queue,next:null},null===zi?Mi.memoizedState=zi=e:zi=zi.next=e}return zi}function Di(e,t){return"function"===typeof t?t(e):t}function Ui(e){var t=ki(),n=t.queue;if(null===n)throw Error(l(311));n.lastRenderedReducer=e;var i=wi,r=i.baseQueue,a=n.pending;if(null!==a){if(null!==r){var o=r.next;r.next=a.next,a.next=o}i.baseQueue=r=a,n.pending=null}if(null!==r){a=r.next,i=i.baseState;var s=o=null,b=null,c=a;do{var u=c.lane;if((Si&u)===u)null!==b&&(b=b.next={lane:0,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null}),i=c.hasEagerState?c.eagerState:e(i,c.action);else{var h={lane:u,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null};null===b?(s=b=h,o=i):b=b.next=h,Mi.lanes|=u,tl|=u}c=c.next}while(null!==c&&c!==a);null===b?o=i:b.next=s,jt(i,t.memoizedState)||(Dr=!0),t.memoizedState=i,t.baseState=o,t.baseQueue=b,n.lastRenderedState=i}if(null!==(e=n.interleaved)){r=e;do{a=r.lane,Mi.lanes|=a,tl|=a,r=r.next}while(r!==e)}else null===r&&(n.lanes=0);return[t.memoizedState,n.dispatch]}function Oi(e){var t=ki(),n=t.queue;if(null===n)throw Error(l(311));n.lastRenderedReducer=e;var i=n.dispatch,r=n.pending,a=t.memoizedState;if(null!==r){n.pending=null;var o=r=r.next;do{a=e(a,o.action),o=o.next}while(o!==r);jt(a,t.memoizedState)||(Dr=!0),t.memoizedState=a,null===t.baseQueue&&(t.baseState=a),n.lastRenderedState=a}return[a,i]}function Fi(){}function Bi(e,t){var n=Mi,i=ki(),r=t(),a=!jt(i.memoizedState,r);if(a&&(i.memoizedState=r,Dr=!0),i=i.queue,$i(Gi.bind(null,n,i,e),[e]),i.getSnapshot!==t||a||null!==zi&&1&zi.memoizedState.tag){if(n.flags|=2048,Xi(9,Vi.bind(null,n,i,r,t),void 0,null),null===Ya)throw Error(l(349));0!==(30&Si)||Hi(n,t,r)}return r}function Hi(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},null===(t=Mi.updateQueue)?(t={lastEffect:null,stores:null},Mi.updateQueue=t,t.stores=[e]):null===(n=t.stores)?t.stores=[e]:n.push(e)}function Vi(e,t,n,i){t.value=n,t.getSnapshot=i,Wi(t)&&Sl(e,1,-1)}function Gi(e,t,n){return n((function(){Wi(t)&&Sl(e,1,-1)}))}function Wi(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!jt(e,n)}catch(i){return!0}}function ji(e){var t=Ni();return"function"===typeof e&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Di,lastRenderedState:e},t.queue=e,e=e.dispatch=sr.bind(null,Mi,e),[t.memoizedState,e]}function Xi(e,t,n,i){return e={tag:e,create:t,destroy:n,deps:i,next:null},null===(t=Mi.updateQueue)?(t={lastEffect:null,stores:null},Mi.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(i=n.next,n.next=e,e.next=i,t.lastEffect=e),e}function qi(){return ki().memoizedState}function Yi(e,t,n,i){var r=Ni();Mi.flags|=e,r.memoizedState=Xi(1|t,n,void 0,void 0===i?null:i)}function Zi(e,t,n,i){var r=ki();i=void 0===i?null:i;var a=void 0;if(null!==wi){var l=wi.memoizedState;if(a=l.destroy,null!==i&&Pi(i,l.deps))return void(r.memoizedState=Xi(t,n,a,i))}Mi.flags|=e,r.memoizedState=Xi(1|t,n,a,i)}function Ki(e,t){return Yi(8390656,8,e,t)}function $i(e,t){return Zi(2048,8,e,t)}function Ji(e,t){return Zi(4,2,e,t)}function Qi(e,t){return Zi(4,4,e,t)}function er(e,t){return"function"===typeof t?(e=e(),t(e),function(){t(null)}):null!==t&&void 0!==t?(e=e(),t.current=e,function(){t.current=null}):void 0}function tr(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,Zi(4,4,er.bind(null,t,e),n)}function nr(){}function ir(e,t){var n=ki();t=void 0===t?null:t;var i=n.memoizedState;return null!==i&&null!==t&&Pi(t,i[1])?i[0]:(n.memoizedState=[e,t],e)}function rr(e,t){var n=ki();t=void 0===t?null:t;var i=n.memoizedState;return null!==i&&null!==t&&Pi(t,i[1])?i[0]:(e=e(),n.memoizedState=[e,t],e)}function ar(e,t){var n=Lt;Lt=0!==n&&4>n?n:4,e(!0);var i=yi.transition;yi.transition={};try{e(!1),t()}finally{Lt=n,yi.transition=i}}function lr(){return ki().memoizedState}function or(e,t,n){var i=yl(e);n={lane:i,action:n,hasEagerState:!1,eagerState:null,next:null},br(e)?cr(t,n):(ur(e,t,n),null!==(e=Sl(e,i,n=_l()))&&hr(e,t,i))}function sr(e,t,n){var i=yl(e),r={lane:i,action:n,hasEagerState:!1,eagerState:null,next:null};if(br(e))cr(t,r);else{ur(e,t,r);var a=e.alternate;if(0===e.lanes&&(null===a||0===a.lanes)&&null!==(a=t.lastRenderedReducer))try{var l=t.lastRenderedState,o=a(l,n);if(r.hasEagerState=!0,r.eagerState=o,jt(o,l))return}catch(s){}null!==(e=Sl(e,i,n=_l()))&&hr(e,t,i)}}function br(e){var t=e.alternate;return e===Mi||null!==t&&t===Mi}function cr(e,t){Ti=Ei=!0;var n=e.pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function ur(e,t,n){null!==Ya&&0!==(1&e.mode)&&0===(2&qa)?(null===(e=t.interleaved)?(n.next=n,null===hn?hn=[t]:hn.push(t)):(n.next=e.next,e.next=n),t.interleaved=n):(null===(e=t.pending)?n.next=n:(n.next=e.next,e.next=n),t.pending=n)}function hr(e,t,n){if(0!==(4194240&n)){var i=t.lanes;n|=i&=e.pendingLanes,t.lanes=n,Pt(e,n)}}var dr={readContext:un,useCallback:Ri,useContext:Ri,useEffect:Ri,useImperativeHandle:Ri,useInsertionEffect:Ri,useLayoutEffect:Ri,useMemo:Ri,useReducer:Ri,useRef:Ri,useState:Ri,useDebugValue:Ri,useDeferredValue:Ri,useTransition:Ri,useMutableSource:Ri,useSyncExternalStore:Ri,useId:Ri,unstable_isNewReconciler:!1},mr={readContext:un,useCallback:function(e,t){return Ni().memoizedState=[e,void 0===t?null:t],e},useContext:un,useEffect:Ki,useImperativeHandle:function(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,Yi(4194308,4,er.bind(null,t,e),n)},useLayoutEffect:function(e,t){return Yi(4194308,4,e,t)},useInsertionEffect:function(e,t){return Yi(4,2,e,t)},useMemo:function(e,t){var n=Ni();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var i=Ni();return t=void 0!==n?n(t):t,i.memoizedState=i.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},i.queue=e,e=e.dispatch=or.bind(null,Mi,e),[i.memoizedState,e]},useRef:function(e){return e={current:e},Ni().memoizedState=e},useState:ji,useDebugValue:nr,useDeferredValue:function(e){var t=ji(e),n=t[0],i=t[1];return Ki((function(){var t=yi.transition;yi.transition={};try{i(e)}finally{yi.transition=t}}),[e]),n},useTransition:function(){var e=ji(!1),t=e[0];return e=ar.bind(null,e[1]),Ni().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,n){var i=Mi,r=Ni();if(Wn){if(void 0===n)throw Error(l(407));n=n()}else{if(n=t(),null===Ya)throw Error(l(349));0!==(30&Si)||Hi(i,t,n)}r.memoizedState=n;var a={value:n,getSnapshot:t};return r.queue=a,Ki(Gi.bind(null,i,a,e),[e]),i.flags|=2048,Xi(9,Vi.bind(null,i,a,n,t),void 0,null),n},useId:function(){var e=Ni(),t=Ya.identifierPrefix;if(Wn){var n=Un;t=":"+t+"R"+(n=(Dn&~(1<<32-_t(Dn)-1)).toString(32)+n),0<(n=Ai++)&&(t+="H"+n.toString(32)),t+=":"}else t=":"+t+"r"+(n=Ci++).toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},fr={readContext:un,useCallback:ir,useContext:un,useEffect:$i,useImperativeHandle:tr,useInsertionEffect:Ji,useLayoutEffect:Qi,useMemo:rr,useReducer:Ui,useRef:qi,useState:function(){return Ui(Di)},useDebugValue:nr,useDeferredValue:function(e){var t=Ui(Di),n=t[0],i=t[1];return $i((function(){var t=yi.transition;yi.transition={};try{i(e)}finally{yi.transition=t}}),[e]),n},useTransition:function(){return[Ui(Di)[0],ki().memoizedState]},useMutableSource:Fi,useSyncExternalStore:Bi,useId:lr,unstable_isNewReconciler:!1},pr={readContext:un,useCallback:ir,useContext:un,useEffect:$i,useImperativeHandle:tr,useInsertionEffect:Ji,useLayoutEffect:Qi,useMemo:rr,useReducer:Oi,useRef:qi,useState:function(){return Oi(Di)},useDebugValue:nr,useDeferredValue:function(e){var t=Oi(Di),n=t[0],i=t[1];return $i((function(){var t=yi.transition;yi.transition={};try{i(e)}finally{yi.transition=t}}),[e]),n},useTransition:function(){return[Oi(Di)[0],ki().memoizedState]},useMutableSource:Fi,useSyncExternalStore:Bi,useId:lr,unstable_isNewReconciler:!1};function gr(e,t){try{var n="",i=t;do{n+=Qt(i),i=i.return}while(i);var r=n}catch(a){r="\nError generating stack: "+a.message+"\n"+a.stack}return{value:e,source:t,stack:r}}function xr(e,t){try{console.error(t.value)}catch(n){setTimeout((function(){throw n}))}}var vr,_r,yr,Sr,Mr="function"===typeof WeakMap?WeakMap:Map;function wr(e,t,n){(n=pn(-1,n)).tag=3,n.payload={element:null};var i=t.value;return n.callback=function(){cl||(cl=!0,ul=i),xr(0,t)},n}function zr(e,t,n){(n=pn(-1,n)).tag=3;var i=e.type.getDerivedStateFromError;if("function"===typeof i){var r=t.value;n.payload=function(){return i(r)},n.callback=function(){xr(0,t)}}var a=e.stateNode;return null!==a&&"function"===typeof a.componentDidCatch&&(n.callback=function(){xr(0,t),"function"!==typeof i&&(null===hl?hl=new Set([this]):hl.add(this));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}function Er(e,t,n){var i=e.pingCache;if(null===i){i=e.pingCache=new Mr;var r=new Set;i.set(t,r)}else void 0===(r=i.get(t))&&(r=new Set,i.set(t,r));r.has(n)||(r.add(n),e=jl.bind(null,e,t,n),t.then(e,e))}function Tr(e){do{var t;if((t=13===e.tag)&&(t=null===(t=e.memoizedState)||null!==t.dehydrated),t)return e;e=e.return}while(null!==e);return null}function Ar(e,t,n,i,r){return 0===(1&e.mode)?(e===t?e.flags|=65536:(e.flags|=128,n.flags|=131072,n.flags&=-52805,1===n.tag&&(null===n.alternate?n.tag=17:((t=pn(-1,1)).tag=2,gn(n,t))),n.lanes|=1),e):(e.flags|=65536,e.lanes=r,e)}function Cr(e){e.flags|=4}function Rr(e,t){if(null!==e&&e.child===t.child)return!0;if(0!==(16&t.flags))return!1;for(e=t.child;null!==e;){if(0!==(12854&e.flags)||0!==(12854&e.subtreeFlags))return!1;e=e.sibling}return!0}if(Y)vr=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)F(e,n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},_r=function(){},yr=function(e,t,n,i,r){if((e=e.memoizedProps)!==i){var a=t.stateNode,l=ui(si.current);n=H(a,n,e,i,r,l),(t.updateQueue=n)&&Cr(t)}},Sr=function(e,t,n,i){n!==i&&Cr(t)};else if(Z){vr=function(e,t,n,i){for(var r=t.child;null!==r;){if(5===r.tag){var a=r.stateNode;n&&i&&(a=Pe(a,r.type,r.memoizedProps,r)),F(e,a)}else if(6===r.tag)a=r.stateNode,n&&i&&(a=Le(a,r.memoizedProps,r)),F(e,a);else if(4!==r.tag)if(22===r.tag&&null!==r.memoizedState)null!==(a=r.child)&&(a.return=r),vr(e,r,!0,!0);else if(null!==r.child){r.child.return=r,r=r.child;continue}if(r===t)break;for(;null===r.sibling;){if(null===r.return||r.return===t)return;r=r.return}r.sibling.return=r.return,r=r.sibling}};var Pr=function(e,t,n,i){for(var r=t.child;null!==r;){if(5===r.tag){var a=r.stateNode;n&&i&&(a=Pe(a,r.type,r.memoizedProps,r)),Ae(e,a)}else if(6===r.tag)a=r.stateNode,n&&i&&(a=Le(a,r.memoizedProps,r)),Ae(e,a);else if(4!==r.tag)if(22===r.tag&&null!==r.memoizedState)null!==(a=r.child)&&(a.return=r),Pr(e,r,!0,!0);else if(null!==r.child){r.child.return=r,r=r.child;continue}if(r===t)break;for(;null===r.sibling;){if(null===r.return||r.return===t)return;r=r.return}r.sibling.return=r.return,r=r.sibling}};_r=function(e,t){var n=t.stateNode;if(!Rr(e,t)){e=n.containerInfo;var i=Te(e);Pr(i,t,!1,!1),n.pendingChildren=i,Cr(t),Ce(e,i)}},yr=function(e,t,n,i,r){var a=e.stateNode,l=e.memoizedProps;if((e=Rr(e,t))&&l===i)t.stateNode=a;else{var o=t.stateNode,s=ui(si.current),b=null;l!==i&&(b=H(o,n,l,i,r,s)),e&&null===b?t.stateNode=a:(a=Ee(a,b,n,l,i,t,e,o),B(a,n,i,r,s)&&Cr(t),t.stateNode=a,e?Cr(t):vr(a,t,!1,!1))}},Sr=function(e,t,n,i){n!==i?(e=ui(ci.current),n=ui(si.current),t.stateNode=G(i,e,n,t),Cr(t)):t.stateNode=e.stateNode}}else _r=function(){},yr=function(){},Sr=function(){};function Lr(e,t){if(!Wn)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var i=null;null!==n;)null!==n.alternate&&(i=n),n=n.sibling;null===i?t||null===e.tail?e.tail=null:e.tail.sibling=null:i.sibling=null}}function Ir(e){var t=null!==e.alternate&&e.alternate.child===e.child,n=0,i=0;if(t)for(var r=e.child;null!==r;)n|=r.lanes|r.childLanes,i|=14680064&r.subtreeFlags,i|=14680064&r.flags,r.return=e,r=r.sibling;else for(r=e.child;null!==r;)n|=r.lanes|r.childLanes,i|=r.subtreeFlags,i|=r.flags,r.return=e,r=r.sibling;return e.subtreeFlags|=i,e.childLanes=n,t}function Nr(e,t,n){var i=t.pendingProps;switch(Hn(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Ir(t),null;case 1:case 17:return mt(t.type)&&ft(),Ir(t),null;case 3:return i=t.stateNode,di(),ot(ut),ot(ct),vi(),i.pendingContext&&(i.context=i.pendingContext,i.pendingContext=null),null!==e&&null!==e.child||(Jn(t)?Cr(t):null===e||e.memoizedState.isDehydrated&&0===(256&t.flags)||(t.flags|=1024,null!==Xn&&(Tl(Xn),Xn=null))),_r(e,t),Ir(t),null;case 5:fi(t),n=ui(ci.current);var r=t.type;if(null!==e&&null!=t.stateNode)yr(e,t,r,i,n),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!i){if(null===t.stateNode)throw Error(l(166));return Ir(t),null}if(e=ui(si.current),Jn(t)){if(!K)throw Error(l(175));e=Ge(t.stateNode,t.type,t.memoizedProps,n,e,t,!jn),t.updateQueue=e,null!==e&&Cr(t)}else{var a=O(r,i,n,e,t);vr(a,t,!1,!1),t.stateNode=a,B(a,r,i,n,e)&&Cr(t)}null!==t.ref&&(t.flags|=512,t.flags|=2097152)}return Ir(t),null;case 6:if(e&&null!=t.stateNode)Sr(e,t,e.memoizedProps,i);else{if("string"!==typeof i&&null===t.stateNode)throw Error(l(166));if(e=ui(ci.current),n=ui(si.current),Jn(t)){if(!K)throw Error(l(176));if(e=t.stateNode,i=t.memoizedProps,(n=We(e,i,t,!jn))&&null!==(r=Vn))switch(a=0!==(1&r.mode),r.tag){case 3:Je(r.stateNode.containerInfo,e,i,a);break;case 5:Qe(r.type,r.memoizedProps,r.stateNode,e,i,a)}n&&Cr(t)}else t.stateNode=G(i,e,n,t)}return Ir(t),null;case 13:if(ot(pi),i=t.memoizedState,Wn&&null!==Gn&&0!==(1&t.mode)&&0===(128&t.flags)){for(e=Gn;e;)e=Fe(e);return Qn(),t.flags|=98560,t}if(null!==i&&null!==i.dehydrated){if(i=Jn(t),null===e){if(!i)throw Error(l(318));if(!K)throw Error(l(344));if(!(e=null!==(e=t.memoizedState)?e.dehydrated:null))throw Error(l(317));je(e,t)}else Qn(),0===(128&t.flags)&&(t.memoizedState=null),t.flags|=4;return Ir(t),null}return null!==Xn&&(Tl(Xn),Xn=null),0!==(128&t.flags)?(t.lanes=n,t):(i=null!==i,n=!1,null===e?Jn(t):n=null!==e.memoizedState,i&&!n&&(t.child.flags|=8192,0!==(1&t.mode)&&(null===e||0!==(1&pi.current)?0===Qa&&(Qa=3):kl())),null!==t.updateQueue&&(t.flags|=4),Ir(t),null);case 4:return di(),_r(e,t),null===e&&J(t.stateNode.containerInfo),Ir(t),null;case 10:return sn(t.type._context),Ir(t),null;case 19:if(ot(pi),null===(r=t.memoizedState))return Ir(t),null;if(i=0!==(128&t.flags),null===(a=r.rendering))if(i)Lr(r,!1);else{if(0!==Qa||null!==e&&0!==(128&e.flags))for(e=t.child;null!==e;){if(null!==(a=gi(e))){for(t.flags|=128,Lr(r,!1),null!==(e=a.updateQueue)&&(t.updateQueue=e,t.flags|=4),t.subtreeFlags=0,e=n,i=t.child;null!==i;)r=e,(n=i).flags&=14680066,null===(a=n.alternate)?(n.childLanes=0,n.lanes=r,n.child=null,n.subtreeFlags=0,n.memoizedProps=null,n.memoizedState=null,n.updateQueue=null,n.dependencies=null,n.stateNode=null):(n.childLanes=a.childLanes,n.lanes=a.lanes,n.child=a.child,n.subtreeFlags=0,n.deletions=null,n.memoizedProps=a.memoizedProps,n.memoizedState=a.memoizedState,n.updateQueue=a.updateQueue,n.type=a.type,r=a.dependencies,n.dependencies=null===r?null:{lanes:r.lanes,firstContext:r.firstContext}),i=i.sibling;return st(pi,1&pi.current|2),t.child}e=e.sibling}null!==r.tail&&Ot()>ol&&(t.flags|=128,i=!0,Lr(r,!1),t.lanes=4194304)}else{if(!i)if(null!==(e=gi(a))){if(t.flags|=128,i=!0,null!==(e=e.updateQueue)&&(t.updateQueue=e,t.flags|=4),Lr(r,!0),null===r.tail&&"hidden"===r.tailMode&&!a.alternate&&!Wn)return Ir(t),null}else 2*Ot()-r.renderingStartTime>ol&&1073741824!==n&&(t.flags|=128,i=!0,Lr(r,!1),t.lanes=4194304);r.isBackwards?(a.sibling=t.child,t.child=a):(null!==(e=r.last)?e.sibling=a:t.child=a,r.last=a)}return null!==r.tail?(t=r.tail,r.rendering=t,r.tail=t.sibling,r.renderingStartTime=Ot(),t.sibling=null,e=pi.current,st(pi,i?1&e|2:1&e),t):(Ir(t),null);case 22:case 23:return Pl(),i=null!==t.memoizedState,null!==e&&null!==e.memoizedState!==i&&(t.flags|=8192),i&&0!==(1&t.mode)?0!==(1073741824&$a)&&(Ir(t),Y&&6&t.subtreeFlags&&(t.flags|=8192)):Ir(t),null;case 24:case 25:return null}throw Error(l(156,t.tag))}var kr=o.ReactCurrentOwner,Dr=!1;function Ur(e,t,n,i){t.child=null===e?li(t,null,n,i):ai(t,e.child,n,i)}function Or(e,t,n,i,r){n=n.render;var a=t.ref;return cn(t,r),i=Li(e,t,n,i,a,r),n=Ii(),null===e||Dr?(Wn&&n&&Bn(t),t.flags|=1,Ur(e,t,i,r),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~r,ra(e,t,r))}function Fr(e,t,n,i,r){if(null===e){var a=n.type;return"function"!==typeof a||Jl(a)||void 0!==a.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=eo(n.type,null,i,t,t.mode,r)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=a,Br(e,t,a,i,r))}if(a=e.child,0===(e.lanes&r)){var l=a.memoizedProps;if((n=null!==(n=n.compare)?n:Jt)(l,i)&&e.ref===t.ref)return ra(e,t,r)}return t.flags|=1,(e=Ql(a,i)).ref=t.ref,e.return=t,t.child=e}function Br(e,t,n,i,r){if(null!==e&&Jt(e.memoizedProps,i)&&e.ref===t.ref){if(Dr=!1,0===(e.lanes&r))return t.lanes=e.lanes,ra(e,t,r);0!==(131072&e.flags)&&(Dr=!0)}return Gr(e,t,n,i,r)}function Hr(e,t,n){var i=t.pendingProps,r=i.children,a=null!==e?e.memoizedState:null;if("hidden"===i.mode)if(0===(1&t.mode))t.memoizedState={baseLanes:0,cachePool:null},st(Ja,$a),$a|=n;else{if(0===(1073741824&n))return e=null!==a?a.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null},t.updateQueue=null,st(Ja,$a),$a|=e,null;t.memoizedState={baseLanes:0,cachePool:null},i=null!==a?a.baseLanes:n,st(Ja,$a),$a|=i}else null!==a?(i=a.baseLanes|n,t.memoizedState=null):i=n,st(Ja,$a),$a|=i;return Ur(e,t,r,n),t.child}function Vr(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=512,t.flags|=2097152)}function Gr(e,t,n,i,r){var a=mt(n)?ht:ct.current;return a=dt(t,a),cn(t,r),n=Li(e,t,n,i,a,r),i=Ii(),null===e||Dr?(Wn&&i&&Bn(t),t.flags|=1,Ur(e,t,n,r),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~r,ra(e,t,r))}function Wr(e,t,n,i,r){if(mt(n)){var a=!0;xt(t)}else a=!1;if(cn(t,r),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),En(t,n,i),An(t,n,i,r),i=!0;else if(null===e){var l=t.stateNode,o=t.memoizedProps;l.props=o;var s=l.context,b=n.contextType;"object"===typeof b&&null!==b?b=un(b):b=dt(t,b=mt(n)?ht:ct.current);var c=n.getDerivedStateFromProps,u="function"===typeof c||"function"===typeof l.getSnapshotBeforeUpdate;u||"function"!==typeof l.UNSAFE_componentWillReceiveProps&&"function"!==typeof l.componentWillReceiveProps||(o!==i||s!==b)&&Tn(t,l,i,b),dn=!1;var h=t.memoizedState;l.state=h,_n(t,i,l,r),s=t.memoizedState,o!==i||h!==s||ut.current||dn?("function"===typeof c&&(Mn(t,n,c,i),s=t.memoizedState),(o=dn||zn(t,n,o,i,h,s,b))?(u||"function"!==typeof l.UNSAFE_componentWillMount&&"function"!==typeof l.componentWillMount||("function"===typeof l.componentWillMount&&l.componentWillMount(),"function"===typeof l.UNSAFE_componentWillMount&&l.UNSAFE_componentWillMount()),"function"===typeof l.componentDidMount&&(t.flags|=4194308)):("function"===typeof l.componentDidMount&&(t.flags|=4194308),t.memoizedProps=i,t.memoizedState=s),l.props=i,l.state=s,l.context=b,i=o):("function"===typeof l.componentDidMount&&(t.flags|=4194308),i=!1)}else{l=t.stateNode,fn(e,t),o=t.memoizedProps,b=t.type===t.elementType?o:en(t.type,o),l.props=b,u=t.pendingProps,h=l.context,"object"===typeof(s=n.contextType)&&null!==s?s=un(s):s=dt(t,s=mt(n)?ht:ct.current);var d=n.getDerivedStateFromProps;(c="function"===typeof d||"function"===typeof l.getSnapshotBeforeUpdate)||"function"!==typeof l.UNSAFE_componentWillReceiveProps&&"function"!==typeof l.componentWillReceiveProps||(o!==u||h!==s)&&Tn(t,l,i,s),dn=!1,h=t.memoizedState,l.state=h,_n(t,i,l,r);var m=t.memoizedState;o!==u||h!==m||ut.current||dn?("function"===typeof d&&(Mn(t,n,d,i),m=t.memoizedState),(b=dn||zn(t,n,b,i,h,m,s)||!1)?(c||"function"!==typeof l.UNSAFE_componentWillUpdate&&"function"!==typeof l.componentWillUpdate||("function"===typeof l.componentWillUpdate&&l.componentWillUpdate(i,m,s),"function"===typeof l.UNSAFE_componentWillUpdate&&l.UNSAFE_componentWillUpdate(i,m,s)),"function"===typeof l.componentDidUpdate&&(t.flags|=4),"function"===typeof l.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!==typeof l.componentDidUpdate||o===e.memoizedProps&&h===e.memoizedState||(t.flags|=4),"function"!==typeof l.getSnapshotBeforeUpdate||o===e.memoizedProps&&h===e.memoizedState||(t.flags|=1024),t.memoizedProps=i,t.memoizedState=m),l.props=i,l.state=m,l.context=s,i=b):("function"!==typeof l.componentDidUpdate||o===e.memoizedProps&&h===e.memoizedState||(t.flags|=4),"function"!==typeof l.getSnapshotBeforeUpdate||o===e.memoizedProps&&h===e.memoizedState||(t.flags|=1024),i=!1)}return jr(e,t,n,i,a,r)}function jr(e,t,n,i,r,a){Vr(e,t);var l=0!==(128&t.flags);if(!i&&!l)return r&&vt(t,n,!1),ra(e,t,a);i=t.stateNode,kr.current=t;var o=l&&"function"!==typeof n.getDerivedStateFromError?null:i.render();return t.flags|=1,null!==e&&l?(t.child=ai(t,e.child,null,a),t.child=ai(t,null,o,a)):Ur(e,t,o,a),t.memoizedState=i.state,r&&vt(t,n,!0),t.child}function Xr(e){var t=e.stateNode;t.pendingContext?pt(0,t.pendingContext,t.pendingContext!==t.context):t.context&&pt(0,t.context,!1),hi(e,t.containerInfo)}function qr(e,t,n,i,r){return Qn(),ei(r),t.flags|=256,Ur(e,t,n,i),t.child}var Yr={dehydrated:null,treeContext:null,retryLane:0};function Zr(e){return{baseLanes:e,cachePool:null}}function Kr(e,t,n){var i,r=t.pendingProps,a=pi.current,o=!1,s=0!==(128&t.flags);if((i=s)||(i=(null===e||null!==e.memoizedState)&&0!==(2&a)),i?(o=!0,t.flags&=-129):null!==e&&null===e.memoizedState||(a|=1),st(pi,1&a),null===e)return Kn(t),null!==(e=t.memoizedState)&&null!==(e=e.dehydrated)?(0===(1&t.mode)?t.lanes=1:Ue(e)?t.lanes=8:t.lanes=1073741824,null):(a=r.children,e=r.fallback,o?(r=t.mode,o=t.child,a={mode:"hidden",children:a},0===(1&r)&&null!==o?(o.childLanes=0,o.pendingProps=a):o=no(a,r,0,null),e=to(e,r,n,null),o.return=t,e.return=t,o.sibling=e,t.child=o,t.child.memoizedState=Zr(n),t.memoizedState=Yr,e):$r(t,a));if(null!==(a=e.memoizedState)){if(null!==(i=a.dehydrated)){if(s)return 256&t.flags?(t.flags&=-257,ea(e,t,n,Error(l(422)))):null!==t.memoizedState?(t.child=e.child,t.flags|=128,null):(o=r.fallback,a=t.mode,r=no({mode:"visible",children:r.children},a,0,null),(o=to(o,a,n,null)).flags|=2,r.return=t,o.return=t,r.sibling=o,t.child=r,0!==(1&t.mode)&&ai(t,e.child,null,n),t.child.memoizedState=Zr(n),t.memoizedState=Yr,o);if(0===(1&t.mode))t=ea(e,t,n,null);else if(Ue(i))t=ea(e,t,n,Error(l(419)));else if(r=0!==(n&e.childLanes),Dr||r){if(null!==(r=Ya)){switch(n&-n){case 4:o=2;break;case 16:o=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:o=32;break;case 536870912:o=268435456;break;default:o=0}0!==(r=0!==(o&(r.suspendedLanes|n))?0:o)&&r!==a.retryLane&&(a.retryLane=r,Sl(e,r,-1))}kl(),t=ea(e,t,n,Error(l(421)))}else De(i)?(t.flags|=128,t.child=e.child,t=ql.bind(null,e),Oe(i,t),t=null):(n=a.treeContext,K&&(Gn=Ve(i),Vn=t,Wn=!0,Xn=null,jn=!1,null!==n&&(In[Nn++]=Dn,In[Nn++]=Un,In[Nn++]=kn,Dn=n.id,Un=n.overflow,kn=t)),(t=$r(t,t.pendingProps.children)).flags|=4096);return t}return o?(r=Qr(e,t,r.children,r.fallback,n),o=t.child,a=e.child.memoizedState,o.memoizedState=null===a?Zr(n):{baseLanes:a.baseLanes|n,cachePool:null},o.childLanes=e.childLanes&~n,t.memoizedState=Yr,r):(n=Jr(e,t,r.children,n),t.memoizedState=null,n)}return o?(r=Qr(e,t,r.children,r.fallback,n),o=t.child,a=e.child.memoizedState,o.memoizedState=null===a?Zr(n):{baseLanes:a.baseLanes|n,cachePool:null},o.childLanes=e.childLanes&~n,t.memoizedState=Yr,r):(n=Jr(e,t,r.children,n),t.memoizedState=null,n)}function $r(e,t){return(t=no({mode:"visible",children:t},e.mode,0,null)).return=e,e.child=t}function Jr(e,t,n,i){var r=e.child;return e=r.sibling,n=Ql(r,{mode:"visible",children:n}),0===(1&t.mode)&&(n.lanes=i),n.return=t,n.sibling=null,null!==e&&(null===(i=t.deletions)?(t.deletions=[e],t.flags|=16):i.push(e)),t.child=n}function Qr(e,t,n,i,r){var a=t.mode,l=(e=e.child).sibling,o={mode:"hidden",children:n};return 0===(1&a)&&t.child!==e?((n=t.child).childLanes=0,n.pendingProps=o,t.deletions=null):(n=Ql(e,o)).subtreeFlags=14680064&e.subtreeFlags,null!==l?i=Ql(l,i):(i=to(i,a,r,null)).flags|=2,i.return=t,n.return=t,n.sibling=i,t.child=n,i}function ea(e,t,n,i){return null!==i&&ei(i),ai(t,e.child,null,n),(e=$r(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function ta(e,t,n){e.lanes|=t;var i=e.alternate;null!==i&&(i.lanes|=t),bn(e.return,t,n)}function na(e,t,n,i,r){var a=e.memoizedState;null===a?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:i,tail:n,tailMode:r}:(a.isBackwards=t,a.rendering=null,a.renderingStartTime=0,a.last=i,a.tail=n,a.tailMode=r)}function ia(e,t,n){var i=t.pendingProps,r=i.revealOrder,a=i.tail;if(Ur(e,t,i.children,n),0!==(2&(i=pi.current)))i=1&i|2,t.flags|=128;else{if(null!==e&&0!==(128&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&ta(e,n,t);else if(19===e.tag)ta(e,n,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}i&=1}if(st(pi,i),0===(1&t.mode))t.memoizedState=null;else switch(r){case"forwards":for(n=t.child,r=null;null!==n;)null!==(e=n.alternate)&&null===gi(e)&&(r=n),n=n.sibling;null===(n=r)?(r=t.child,t.child=null):(r=n.sibling,n.sibling=null),na(t,!1,r,n,a);break;case"backwards":for(n=null,r=t.child,t.child=null;null!==r;){if(null!==(e=r.alternate)&&null===gi(e)){t.child=r;break}e=r.sibling,r.sibling=n,n=r,r=e}na(t,!0,n,null,a);break;case"together":na(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function ra(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),tl|=t.lanes,0===(n&t.childLanes))return null;if(null!==e&&t.child!==e.child)throw Error(l(153));if(null!==t.child){for(n=Ql(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Ql(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function aa(e,t){switch(Hn(t),t.tag){case 1:return mt(t.type)&&ft(),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return di(),ot(ut),ot(ct),vi(),0!==(65536&(e=t.flags))&&0===(128&e)?(t.flags=-65537&e|128,t):null;case 5:return fi(t),null;case 13:if(ot(pi),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(l(340));Qn()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return ot(pi),null;case 4:return di(),null;case 10:return sn(t.type._context),null;case 22:case 23:return Pl(),null;default:return null}}var la=!1,oa=!1,sa="function"===typeof WeakSet?WeakSet:Set,ba=null;function ca(e,t){var n=e.ref;if(null!==n)if("function"===typeof n)try{n(null)}catch(i){Wl(e,t,i)}else n.current=null}function ua(e,t,n){try{n()}catch(i){Wl(e,t,i)}}var ha=!1;function da(e,t,n){var i=t.updateQueue;if(null!==(i=null!==i?i.lastEffect:null)){var r=i=i.next;do{if((r.tag&e)===e){var a=r.destroy;r.destroy=void 0,void 0!==a&&ua(t,n,a)}r=r.next}while(r!==i)}}function ma(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var i=n.create;n.destroy=i()}n=n.next}while(n!==t)}}function fa(e){var t=e.ref;if(null!==t){var n=e.stateNode;if(5===e.tag)e=I(n);else e=n;"function"===typeof t?t(e):t.current=e}}function pa(e,t,n){if(Wt&&"function"===typeof Wt.onCommitFiberUnmount)try{Wt.onCommitFiberUnmount(Gt,t)}catch(l){}switch(t.tag){case 0:case 11:case 14:case 15:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var i=e=e.next;do{var r=i,a=r.destroy;r=r.tag,void 0!==a&&(0!==(2&r)||0!==(4&r))&&ua(t,n,a),i=i.next}while(i!==e)}break;case 1:if(ca(t,n),"function"===typeof(e=t.stateNode).componentWillUnmount)try{e.props=t.memoizedProps,e.state=t.memoizedState,e.componentWillUnmount()}catch(l){Wl(t,n,l)}break;case 5:ca(t,n);break;case 4:Y?wa(e,t,n):Z&&Z&&(t=t.stateNode.containerInfo,n=Te(t),Re(t,n))}}function ga(e,t,n){for(var i=t;;)if(pa(e,i,n),null===i.child||Y&&4===i.tag){if(i===t)break;for(;null===i.sibling;){if(null===i.return||i.return===t)return;i=i.return}i.sibling.return=i.return,i=i.sibling}else i.child.return=i,i=i.child}function xa(e){var t=e.alternate;null!==t&&(e.alternate=null,xa(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&(null!==(t=e.stateNode)&&ee(t)),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function va(e){return 5===e.tag||3===e.tag||4===e.tag}function _a(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||va(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function ya(e){if(Y){e:{for(var t=e.return;null!==t;){if(va(t))break e;t=t.return}throw Error(l(160))}var n=t;switch(n.tag){case 5:t=n.stateNode,32&n.flags&&(_e(t),n.flags&=-33),Ma(e,n=_a(e),t);break;case 3:case 4:t=n.stateNode.containerInfo,Sa(e,n=_a(e),t);break;default:throw Error(l(161))}}}function Sa(e,t,n){var i=e.tag;if(5===i||6===i)e=e.stateNode,t?ge(n,e,t):he(n,e);else if(4!==i&&null!==(e=e.child))for(Sa(e,t,n),e=e.sibling;null!==e;)Sa(e,t,n),e=e.sibling}function Ma(e,t,n){var i=e.tag;if(5===i||6===i)e=e.stateNode,t?pe(n,e,t):ue(n,e);else if(4!==i&&null!==(e=e.child))for(Ma(e,t,n),e=e.sibling;null!==e;)Ma(e,t,n),e=e.sibling}function wa(e,t,n){for(var i,r,a=t,o=!1;;){if(!o){o=a.return;e:for(;;){if(null===o)throw Error(l(160));switch(i=o.stateNode,o.tag){case 5:r=!1;break e;case 3:case 4:i=i.containerInfo,r=!0;break e}o=o.return}o=!0}if(5===a.tag||6===a.tag)ga(e,a,n),r?ve(i,a.stateNode):xe(i,a.stateNode);else if(18===a.tag)r?Ke(i,a.stateNode):Ze(i,a.stateNode);else if(4===a.tag){if(null!==a.child){i=a.stateNode.containerInfo,r=!0,a.child.return=a,a=a.child;continue}}else if(pa(e,a,n),null!==a.child){a.child.return=a,a=a.child;continue}if(a===t)break;for(;null===a.sibling;){if(null===a.return||a.return===t)return;4===(a=a.return).tag&&(o=!1)}a.sibling.return=a.return,a=a.sibling}}function za(e,t){if(Y){switch(t.tag){case 0:case 11:case 14:case 15:return da(3,t,t.return),ma(3,t),void da(5,t,t.return);case 1:case 12:case 17:return;case 5:var n=t.stateNode;if(null!=n){var i=t.memoizedProps;e=null!==e?e.memoizedProps:i;var r=t.type,a=t.updateQueue;t.updateQueue=null,null!==a&&fe(n,a,r,e,i,t)}return;case 6:if(null===t.stateNode)throw Error(l(162));return n=t.memoizedProps,void de(t.stateNode,null!==e?e.memoizedProps:n,n);case 3:return void(K&&null!==e&&e.memoizedState.isDehydrated&&qe(t.stateNode.containerInfo));case 13:case 19:return void Ea(t)}throw Error(l(163))}switch(t.tag){case 0:case 11:case 14:case 15:return da(3,t,t.return),ma(3,t),void da(5,t,t.return);case 12:case 22:case 23:return;case 13:case 19:return void Ea(t);case 3:K&&null!==e&&e.memoizedState.isDehydrated&&qe(t.stateNode.containerInfo)}e:if(Z){switch(t.tag){case 1:case 5:case 6:break e;case 3:case 4:t=t.stateNode,Re(t.containerInfo,t.pendingChildren);break e}throw Error(l(163))}}function Ea(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new sa),t.forEach((function(t){var i=Yl.bind(null,e,t);n.has(t)||(n.add(t),t.then(i,i))}))}}function Ta(e,t,n){ba=e,Aa(e,t,n)}function Aa(e,t,n){for(var i=0!==(1&e.mode);null!==ba;){var r=ba,a=r.child;if(22===r.tag&&i){var l=null!==r.memoizedState||la;if(!l){var o=r.alternate,s=null!==o&&null!==o.memoizedState||oa;o=la;var b=oa;if(la=l,(oa=s)&&!b)for(ba=r;null!==ba;)s=(l=ba).child,22===l.tag&&null!==l.memoizedState?Pa(r):null!==s?(s.return=l,ba=s):Pa(r);for(;null!==a;)ba=a,Aa(a,t,n),a=a.sibling;ba=r,la=o,oa=b}Ca(e)}else 0!==(8772&r.subtreeFlags)&&null!==a?(a.return=r,ba=a):Ca(e)}}function Ca(e){for(;null!==ba;){var t=ba;if(0!==(8772&t.flags)){var n=t.alternate;try{if(0!==(8772&t.flags))switch(t.tag){case 0:case 11:case 15:oa||ma(5,t);break;case 1:var i=t.stateNode;if(4&t.flags&&!oa)if(null===n)i.componentDidMount();else{var r=t.elementType===t.type?n.memoizedProps:en(t.type,n.memoizedProps);i.componentDidUpdate(r,n.memoizedState,i.__reactInternalSnapshotBeforeUpdate)}var a=t.updateQueue;null!==a&&yn(t,a,i);break;case 3:var o=t.updateQueue;if(null!==o){if(n=null,null!==t.child)switch(t.child.tag){case 5:n=I(t.child.stateNode);break;case 1:n=t.child.stateNode}yn(t,o,n)}break;case 5:var s=t.stateNode;null===n&&4&t.flags&&me(s,t.type,t.memoizedProps,t);break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:break;case 13:if(K&&null===t.memoizedState){var b=t.alternate;if(null!==b){var c=b.memoizedState;if(null!==c){var u=c.dehydrated;null!==u&&Ye(u)}}}break;default:throw Error(l(163))}oa||512&t.flags&&fa(t)}catch(h){Wl(t,t.return,h)}}if(t===e){ba=null;break}if(null!==(n=t.sibling)){n.return=t.return,ba=n;break}ba=t.return}}function Ra(e){for(;null!==ba;){var t=ba;if(t===e){ba=null;break}var n=t.sibling;if(null!==n){n.return=t.return,ba=n;break}ba=t.return}}function Pa(e){for(;null!==ba;){var t=ba;try{switch(t.tag){case 0:case 11:case 15:var n=t.return;try{ma(4,t)}catch(s){Wl(t,n,s)}break;case 1:var i=t.stateNode;if("function"===typeof i.componentDidMount){var r=t.return;try{i.componentDidMount()}catch(s){Wl(t,r,s)}}var a=t.return;try{fa(t)}catch(s){Wl(t,a,s)}break;case 5:var l=t.return;try{fa(t)}catch(s){Wl(t,l,s)}}}catch(s){Wl(t,t.return,s)}if(t===e){ba=null;break}var o=t.sibling;if(null!==o){o.return=t.return,ba=o;break}ba=t.return}}var La=0,Ia=1,Na=2,ka=3,Da=4;if("function"===typeof Symbol&&Symbol.for){var Ua=Symbol.for;La=Ua("selector.component"),Ia=Ua("selector.has_pseudo_class"),Na=Ua("selector.role"),ka=Ua("selector.test_id"),Da=Ua("selector.text")}function Oa(e){var t=$(e);if(null!=t){if("string"!==typeof t.memoizedProps["data-testname"])throw Error(l(364));return t}if(null===(e=re(e)))throw Error(l(362));return e.stateNode.current}function Fa(e,t){switch(t.$$typeof){case La:if(e.type===t.value)return!0;break;case Ia:e:{t=t.value,e=[e,0];for(var n=0;n<e.length;){var i=e[n++],r=e[n++],a=t[r];if(5!==i.tag||!oe(i)){for(;null!=a&&Fa(i,a);)a=t[++r];if(r===t.length){t=!0;break e}for(i=i.child;null!==i;)e.push(i,r),i=i.sibling}}t=!1}return t;case Na:if(5===e.tag&&se(e.stateNode,t.value))return!0;break;case Da:if((5===e.tag||6===e.tag)&&(null!==(e=le(e))&&0<=e.indexOf(t.value)))return!0;break;case ka:if(5===e.tag&&("string"===typeof(e=e.memoizedProps["data-testname"])&&e.toLowerCase()===t.value.toLowerCase()))return!0;break;default:throw Error(l(365))}return!1}function Ba(e){switch(e.$$typeof){case La:return"<"+(M(e.value)||"Unknown")+">";case Ia:return":has("+(Ba(e)||"")+")";case Na:return'[role="'+e.value+'"]';case Da:return'"'+e.value+'"';case ka:return'[data-testname="'+e.value+'"]';default:throw Error(l(365))}}function Ha(e,t){var n=[];e=[e,0];for(var i=0;i<e.length;){var r=e[i++],a=e[i++],l=t[a];if(5!==r.tag||!oe(r)){for(;null!=l&&Fa(r,l);)l=t[++a];if(a===t.length)n.push(r);else for(r=r.child;null!==r;)e.push(r,a),r=r.sibling}}return n}function Va(e,t){if(!ie)throw Error(l(363));e=Ha(e=Oa(e),t),t=[],e=Array.from(e);for(var n=0;n<e.length;){var i=e[n++];if(5===i.tag)oe(i)||t.push(i.stateNode);else for(i=i.child;null!==i;)e.push(i),i=i.sibling}return t}var Ga=Math.ceil,Wa=o.ReactCurrentDispatcher,ja=o.ReactCurrentOwner,Xa=o.ReactCurrentBatchConfig,qa=0,Ya=null,Za=null,Ka=0,$a=0,Ja=lt(0),Qa=0,el=null,tl=0,nl=0,il=0,rl=null,al=null,ll=0,ol=1/0;function sl(){ol=Ot()+500}var bl,cl=!1,ul=null,hl=null,dl=!1,ml=null,fl=0,pl=0,gl=null,xl=-1,vl=0;function _l(){return 0!==(6&qa)?Ot():-1!==xl?xl:xl=Ot()}function yl(e){return 0===(1&e.mode)?1:0!==(2&qa)&&0!==Ka?Ka&-Ka:null!==$t.transition?(0===vl&&(e=Mt,0===(4194240&(Mt<<=1))&&(Mt=64),vl=e),vl):0!==(e=Lt)?e:Q()}function Sl(e,t,n){if(50<pl)throw pl=0,gl=null,Error(l(185));var i=Ml(e,t);return null===i?null:(Rt(i,t,n),0!==(2&qa)&&i===Ya||(i===Ya&&(0===(2&qa)&&(nl|=t),4===Qa&&Al(i,Ka)),wl(i,n),1===t&&0===qa&&0===(1&e.mode)&&(sl(),qt&&Kt())),i)}function Ml(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}function wl(e,t){var n=e.callbackNode;!function(e,t){for(var n=e.suspendedLanes,i=e.pingedLanes,r=e.expirationTimes,a=e.pendingLanes;0<a;){var l=31-_t(a),o=1<<l,s=r[l];-1===s?0!==(o&n)&&0===(o&i)||(r[l]=Tt(o,t)):s<=t&&(e.expiredLanes|=o),a&=~o}}(e,t);var i=Et(e,e===Ya?Ka:0);if(0===i)null!==n&&kt(n),e.callbackNode=null,e.callbackPriority=0;else if(t=i&-i,e.callbackPriority!==t){if(null!=n&&kt(n),1===t)0===e.tag?function(e){qt=!0,Zt(e)}(Cl.bind(null,e)):Zt(Cl.bind(null,e)),te?ne((function(){0===qa&&Kt()})):Nt(Ft,Kt),n=null;else{switch(It(i)){case 1:n=Ft;break;case 4:n=Bt;break;case 16:default:n=Ht;break;case 536870912:n=Vt}n=Zl(n,zl.bind(null,e))}e.callbackPriority=t,e.callbackNode=n}}function zl(e,t){if(xl=-1,vl=0,0!==(6&qa))throw Error(l(327));var n=e.callbackNode;if(Vl()&&e.callbackNode!==n)return null;var i=Et(e,e===Ya?Ka:0);if(0===i)return null;if(0!==(30&i)||0!==(i&e.expiredLanes)||t)t=Dl(e,i);else{t=i;var r=qa;qa|=2;var a=Nl();for(Ya===e&&Ka===t||(sl(),Ll(e,t));;)try{Ol();break}catch(s){Il(e,s)}ln(),Wa.current=a,qa=r,null!==Za?t=0:(Ya=null,Ka=0,t=Qa)}if(0!==t){if(2===t&&(0!==(r=At(e))&&(i=r,t=El(e,r))),1===t)throw n=el,Ll(e,0),Al(e,i),wl(e,Ot()),n;if(6===t)Al(e,i);else{if(r=e.current.alternate,0===(30&i)&&!function(e){for(var t=e;;){if(16384&t.flags){var n=t.updateQueue;if(null!==n&&null!==(n=n.stores))for(var i=0;i<n.length;i++){var r=n[i],a=r.getSnapshot;r=r.value;try{if(!jt(a(),r))return!1}catch(o){return!1}}}if(n=t.child,16384&t.subtreeFlags&&null!==n)n.return=t,t=n;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}(r)&&(2===(t=Dl(e,i))&&(0!==(a=At(e))&&(i=a,t=El(e,a))),1===t))throw n=el,Ll(e,0),Al(e,i),wl(e,Ot()),n;switch(e.finishedWork=r,e.finishedLanes=i,t){case 0:case 1:throw Error(l(345));case 2:case 5:Hl(e,al);break;case 3:if(Al(e,i),(130023424&i)===i&&10<(t=ll+500-Ot())){if(0!==Et(e,0))break;if(((r=e.suspendedLanes)&i)!==i){_l(),e.pingedLanes|=e.suspendedLanes&r;break}e.timeoutHandle=W(Hl.bind(null,e,al),t);break}Hl(e,al);break;case 4:if(Al(e,i),(4194240&i)===i)break;for(t=e.eventTimes,r=-1;0<i;){var o=31-_t(i);a=1<<o,(o=t[o])>r&&(r=o),i&=~a}if(i=r,10<(i=(120>(i=Ot()-i)?120:480>i?480:1080>i?1080:1920>i?1920:3e3>i?3e3:4320>i?4320:1960*Ga(i/1960))-i)){e.timeoutHandle=W(Hl.bind(null,e,al),i);break}Hl(e,al);break;default:throw Error(l(329))}}}return wl(e,Ot()),e.callbackNode===n?zl.bind(null,e):null}function El(e,t){var n=rl;return e.current.memoizedState.isDehydrated&&(Ll(e,t).flags|=256),2!==(e=Dl(e,t))&&(t=al,al=n,null!==t&&Tl(t)),e}function Tl(e){null===al?al=e:al.push.apply(al,e)}function Al(e,t){for(t&=~il,t&=~nl,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-_t(t),i=1<<n;e[n]=-1,t&=~i}}function Cl(e){if(0!==(6&qa))throw Error(l(327));Vl();var t=Et(e,0);if(0===(1&t))return wl(e,Ot()),null;var n=Dl(e,t);if(0!==e.tag&&2===n){var i=At(e);0!==i&&(t=i,n=El(e,i))}if(1===n)throw n=el,Ll(e,0),Al(e,t),wl(e,Ot()),n;if(6===n)throw Error(l(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,Hl(e,al),wl(e,Ot()),null}function Rl(e){null!==ml&&0===ml.tag&&0===(6&qa)&&Vl();var t=qa;qa|=1;var n=Xa.transition,i=Lt;try{if(Xa.transition=null,Lt=1,e)return e()}finally{Lt=i,Xa.transition=n,0===(6&(qa=t))&&Kt()}}function Pl(){$a=Ja.current,ot(Ja)}function Ll(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(n!==X&&(e.timeoutHandle=X,j(n)),null!==Za)for(n=Za.return;null!==n;){var i=n;switch(Hn(i),i.tag){case 1:null!==(i=i.type.childContextTypes)&&void 0!==i&&ft();break;case 3:di(),ot(ut),ot(ct),vi();break;case 5:fi(i);break;case 4:di();break;case 13:case 19:ot(pi);break;case 10:sn(i.type._context);break;case 22:case 23:Pl()}n=n.return}if(Ya=e,Za=e=Ql(e.current,null),Ka=$a=t,Qa=0,el=null,il=nl=tl=0,al=rl=null,null!==hn){for(t=0;t<hn.length;t++)if(null!==(i=(n=hn[t]).interleaved)){n.interleaved=null;var r=i.next,a=n.pending;if(null!==a){var l=a.next;a.next=r,i.next=l}n.pending=i}hn=null}return e}function Il(e,t){for(;;){var n=Za;try{if(ln(),_i.current=dr,Ei){for(var i=Mi.memoizedState;null!==i;){var r=i.queue;null!==r&&(r.pending=null),i=i.next}Ei=!1}if(Si=0,zi=wi=Mi=null,Ti=!1,Ai=0,ja.current=null,null===n||null===n.return){Qa=1,el=t,Za=null;break}e:{var a=e,o=n.return,s=n,b=t;if(t=Ka,s.flags|=32768,null!==b&&"object"===typeof b&&"function"===typeof b.then){var c=b,u=s,h=u.tag;if(0===(1&u.mode)&&(0===h||11===h||15===h)){var d=u.alternate;d?(u.updateQueue=d.updateQueue,u.memoizedState=d.memoizedState,u.lanes=d.lanes):(u.updateQueue=null,u.memoizedState=null)}var m=Tr(o);if(null!==m){m.flags&=-257,Ar(m,o,s,0,t),1&m.mode&&Er(a,c,t),b=c;var f=(t=m).updateQueue;if(null===f){var p=new Set;p.add(b),t.updateQueue=p}else f.add(b);break e}if(0===(1&t)){Er(a,c,t),kl();break e}b=Error(l(426))}else if(Wn&&1&s.mode){var g=Tr(o);if(null!==g){0===(65536&g.flags)&&(g.flags|=256),Ar(g,o,s,0,t),ei(b);break e}}a=b,4!==Qa&&(Qa=2),null===rl?rl=[a]:rl.push(a),b=gr(b,s),s=o;do{switch(s.tag){case 3:s.flags|=65536,t&=-t,s.lanes|=t,vn(s,wr(0,b,t));break e;case 1:a=b;var x=s.type,v=s.stateNode;if(0===(128&s.flags)&&("function"===typeof x.getDerivedStateFromError||null!==v&&"function"===typeof v.componentDidCatch&&(null===hl||!hl.has(v)))){s.flags|=65536,t&=-t,s.lanes|=t,vn(s,zr(s,a,t));break e}}s=s.return}while(null!==s)}Bl(n)}catch(_){t=_,Za===n&&null!==n&&(Za=n=n.return);continue}break}}function Nl(){var e=Wa.current;return Wa.current=dr,null===e?dr:e}function kl(){0!==Qa&&3!==Qa&&2!==Qa||(Qa=4),null===Ya||0===(268435455&tl)&&0===(268435455&nl)||Al(Ya,Ka)}function Dl(e,t){var n=qa;qa|=2;var i=Nl();for(Ya===e&&Ka===t||Ll(e,t);;)try{Ul();break}catch(r){Il(e,r)}if(ln(),qa=n,Wa.current=i,null!==Za)throw Error(l(261));return Ya=null,Ka=0,Qa}function Ul(){for(;null!==Za;)Fl(Za)}function Ol(){for(;null!==Za&&!Dt();)Fl(Za)}function Fl(e){var t=bl(e.alternate,e,$a);e.memoizedProps=e.pendingProps,null===t?Bl(e):Za=t,ja.current=null}function Bl(e){var t=e;do{var n=t.alternate;if(e=t.return,0===(32768&t.flags)){if(null!==(n=Nr(n,t,$a)))return void(Za=n)}else{if(null!==(n=aa(n,t)))return n.flags&=32767,void(Za=n);if(null===e)return Qa=6,void(Za=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(t=t.sibling))return void(Za=t);Za=t=e}while(null!==t);0===Qa&&(Qa=5)}function Hl(e,t){var n=Lt,i=Xa.transition;try{Xa.transition=null,Lt=1,function(e,t,n){do{Vl()}while(null!==ml);if(0!==(6&qa))throw Error(l(327));var i=e.finishedWork,r=e.finishedLanes;if(null===i)return null;if(e.finishedWork=null,e.finishedLanes=0,i===e.current)throw Error(l(177));e.callbackNode=null,e.callbackPriority=0;var a=i.lanes|i.childLanes;if(function(e,t){var n=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var i=e.eventTimes;for(e=e.expirationTimes;0<n;){var r=31-_t(n),a=1<<r;t[r]=0,i[r]=-1,e[r]=-1,n&=~a}}(e,a),e===Ya&&(Za=Ya=null,Ka=0),0===(2064&i.subtreeFlags)&&0===(2064&i.flags)||dl||(dl=!0,Zl(Ht,(function(){return Vl(),null}))),a=0!==(15990&i.flags),0!==(15990&i.subtreeFlags)||a){a=Xa.transition,Xa.transition=null;var o=Lt;Lt=1;var s=qa;qa|=4,ja.current=null,function(e,t){for(D(e.containerInfo),ba=t;null!==ba;)if(t=(e=ba).child,0!==(1028&e.subtreeFlags)&&null!==t)t.return=e,ba=t;else for(;null!==ba;){e=ba;try{var n=e.alternate;if(0!==(1024&e.flags))switch(e.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==n){var i=n.memoizedProps,r=n.memoizedState,a=e.stateNode,o=a.getSnapshotBeforeUpdate(e.elementType===e.type?i:en(e.type,i),r);a.__reactInternalSnapshotBeforeUpdate=o}break;case 3:Y&&ze(e.stateNode.containerInfo);break;default:throw Error(l(163))}}catch(s){Wl(e,e.return,s)}if(null!==(t=e.sibling)){t.return=e.return,ba=t;break}ba=e.return}n=ha,ha=!1}(e,i),function(e,t){for(ba=t;null!==ba;){var n=(t=ba).deletions;if(null!==n)for(var i=0;i<n.length;i++){var r=n[i];try{var a=e;Y?wa(a,r,t):ga(a,r,t);var l=r.alternate;null!==l&&(l.return=null),r.return=null}catch(y){Wl(r,t,y)}}if(n=t.child,0!==(12854&t.subtreeFlags)&&null!==n)n.return=t,ba=n;else for(;null!==ba;){t=ba;try{var o=t.flags;if(32&o&&Y&&_e(t.stateNode),512&o){var s=t.alternate;if(null!==s){var b=s.ref;null!==b&&("function"===typeof b?b(null):b.current=null)}}if(8192&o)switch(t.tag){case 13:if(null!==t.memoizedState){var c=t.alternate;null!==c&&null!==c.memoizedState||(ll=Ot())}break;case 22:var u=null!==t.memoizedState,h=t.alternate,d=null!==h&&null!==h.memoizedState;if(n=t,Y)e:if(i=n,r=u,a=null,Y)for(var m=i;;){if(5===m.tag){if(null===a){a=m;var f=m.stateNode;r?ye(f):Me(m.stateNode,m.memoizedProps)}}else if(6===m.tag){if(null===a){var p=m.stateNode;r?Se(p):we(p,m.memoizedProps)}}else if((22!==m.tag&&23!==m.tag||null===m.memoizedState||m===i)&&null!==m.child){m.child.return=m,m=m.child;continue}if(m===i)break;for(;null===m.sibling;){if(null===m.return||m.return===i)break e;a===m&&(a=null),m=m.return}a===m&&(a=null),m.sibling.return=m.return,m=m.sibling}if(u&&!d&&0!==(1&n.mode)){ba=n;for(var g=n.child;null!==g;){for(n=ba=g;null!==ba;){var x=(i=ba).child;switch(i.tag){case 0:case 11:case 14:case 15:da(4,i,i.return);break;case 1:ca(i,i.return);var v=i.stateNode;if("function"===typeof v.componentWillUnmount){var _=i.return;try{v.props=i.memoizedProps,v.state=i.memoizedState,v.componentWillUnmount()}catch(y){Wl(i,_,y)}}break;case 5:ca(i,i.return);break;case 22:if(null!==i.memoizedState){Ra(n);continue}}null!==x?(x.return=i,ba=x):Ra(n)}g=g.sibling}}}switch(4102&o){case 2:ya(t),t.flags&=-3;break;case 6:ya(t),t.flags&=-3,za(t.alternate,t);break;case 4096:t.flags&=-4097;break;case 4100:t.flags&=-4097,za(t.alternate,t);break;case 4:za(t.alternate,t)}}catch(y){Wl(t,t.return,y)}if(null!==(n=t.sibling)){n.return=t.return,ba=n;break}ba=t.return}}}(e,i),U(e.containerInfo),e.current=i,Ta(i,e,r),Ut(),qa=s,Lt=o,Xa.transition=a}else e.current=i;if(dl&&(dl=!1,ml=e,fl=r),a=e.pendingLanes,0===a&&(hl=null),function(e){if(Wt&&"function"===typeof Wt.onCommitFiberRoot)try{Wt.onCommitFiberRoot(Gt,e,void 0,128===(128&e.current.flags))}catch(t){}}(i.stateNode),wl(e,Ot()),null!==t)for(n=e.onRecoverableError,i=0;i<t.length;i++)n(t[i]);if(cl)throw cl=!1,e=ul,ul=null,e;0!==(1&fl)&&0!==e.tag&&Vl(),a=e.pendingLanes,0!==(1&a)?e===gl?pl++:(pl=0,gl=e):pl=0,Kt()}(e,t,n)}finally{Xa.transition=i,Lt=n}return null}function Vl(){if(null!==ml){var e=It(fl),t=Xa.transition,n=Lt;try{if(Xa.transition=null,Lt=16>e?16:e,null===ml)var i=!1;else{if(e=ml,ml=null,fl=0,0!==(6&qa))throw Error(l(331));var r=qa;for(qa|=4,ba=e.current;null!==ba;){var a=ba,o=a.child;if(0!==(16&ba.flags)){var s=a.deletions;if(null!==s){for(var b=0;b<s.length;b++){var c=s[b];for(ba=c;null!==ba;){var u=ba;switch(u.tag){case 0:case 11:case 15:da(8,u,a)}var h=u.child;if(null!==h)h.return=u,ba=h;else for(;null!==ba;){var d=(u=ba).sibling,m=u.return;if(xa(u),u===c){ba=null;break}if(null!==d){d.return=m,ba=d;break}ba=m}}}var f=a.alternate;if(null!==f){var p=f.child;if(null!==p){f.child=null;do{var g=p.sibling;p.sibling=null,p=g}while(null!==p)}}ba=a}}if(0!==(2064&a.subtreeFlags)&&null!==o)o.return=a,ba=o;else e:for(;null!==ba;){if(0!==(2048&(a=ba).flags))switch(a.tag){case 0:case 11:case 15:da(9,a,a.return)}var x=a.sibling;if(null!==x){x.return=a.return,ba=x;break e}ba=a.return}}var v=e.current;for(ba=v;null!==ba;){var _=(o=ba).child;if(0!==(2064&o.subtreeFlags)&&null!==_)_.return=o,ba=_;else e:for(o=v;null!==ba;){if(0!==(2048&(s=ba).flags))try{switch(s.tag){case 0:case 11:case 15:ma(9,s)}}catch(S){Wl(s,s.return,S)}if(s===o){ba=null;break e}var y=s.sibling;if(null!==y){y.return=s.return,ba=y;break e}ba=s.return}}if(qa=r,Kt(),Wt&&"function"===typeof Wt.onPostCommitFiberRoot)try{Wt.onPostCommitFiberRoot(Gt,e)}catch(S){}i=!0}return i}finally{Lt=n,Xa.transition=t}}return!1}function Gl(e,t,n){gn(e,t=wr(0,t=gr(n,t),1)),t=_l(),null!==(e=Ml(e,1))&&(Rt(e,1,t),wl(e,t))}function Wl(e,t,n){if(3===e.tag)Gl(e,e,n);else for(;null!==t;){if(3===t.tag){Gl(t,e,n);break}if(1===t.tag){var i=t.stateNode;if("function"===typeof t.type.getDerivedStateFromError||"function"===typeof i.componentDidCatch&&(null===hl||!hl.has(i))){gn(t,e=zr(t,e=gr(n,e),1)),e=_l(),null!==(t=Ml(t,1))&&(Rt(t,1,e),wl(t,e));break}}t=t.return}}function jl(e,t,n){var i=e.pingCache;null!==i&&i.delete(t),t=_l(),e.pingedLanes|=e.suspendedLanes&n,Ya===e&&(Ka&n)===n&&(4===Qa||3===Qa&&(130023424&Ka)===Ka&&500>Ot()-ll?Ll(e,0):il|=n),wl(e,t)}function Xl(e,t){0===t&&(0===(1&e.mode)?t=1:(t=wt,0===(130023424&(wt<<=1))&&(wt=4194304)));var n=_l();null!==(e=Ml(e,t))&&(Rt(e,t,n),wl(e,n))}function ql(e){var t=e.memoizedState,n=0;null!==t&&(n=t.retryLane),Xl(e,n)}function Yl(e,t){var n=0;switch(e.tag){case 13:var i=e.stateNode,r=e.memoizedState;null!==r&&(n=r.retryLane);break;case 19:i=e.stateNode;break;default:throw Error(l(314))}null!==i&&i.delete(t),Xl(e,n)}function Zl(e,t){return Nt(e,t)}function Kl(e,t,n,i){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=i,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function $l(e,t,n,i){return new Kl(e,t,n,i)}function Jl(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Ql(e,t){var n=e.alternate;return null===n?((n=$l(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=14680064&e.flags,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function eo(e,t,n,i,r,a){var o=2;if(i=e,"function"===typeof e)Jl(e)&&(o=1);else if("string"===typeof e)o=5;else e:switch(e){case c:return to(n.children,r,a,t);case u:o=8,r|=8;break;case h:return(e=$l(12,n,t,2|r)).elementType=h,e.lanes=a,e;case p:return(e=$l(13,n,t,r)).elementType=p,e.lanes=a,e;case g:return(e=$l(19,n,t,r)).elementType=g,e.lanes=a,e;case _:return no(n,r,a,t);default:if("object"===typeof e&&null!==e)switch(e.$$typeof){case d:o=10;break e;case m:o=9;break e;case f:o=11;break e;case x:o=14;break e;case v:o=16,i=null;break e}throw Error(l(130,null==e?e:typeof e,""))}return(t=$l(o,n,t,r)).elementType=e,t.type=i,t.lanes=a,t}function to(e,t,n,i){return(e=$l(7,e,i,t)).lanes=n,e}function no(e,t,n,i){return(e=$l(22,e,i,t)).elementType=_,e.lanes=n,e.stateNode={},e}function io(e,t,n){return(e=$l(6,e,null,t)).lanes=n,e}function ro(e,t,n){return(t=$l(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function ao(e,t,n,i,r){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=X,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=Ct(0),this.expirationTimes=Ct(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Ct(0),this.identifierPrefix=i,this.onRecoverableError=r,K&&(this.mutableSourceEagerHydrationData=null)}function lo(e,t,n,i,r,a,l,o,s){return e=new ao(e,t,n,o,s),1===t?(t=1,!0===a&&(t|=8)):t=0,a=$l(3,null,null,t),e.current=a,a.stateNode=e,a.memoizedState={element:i,isDehydrated:n,cache:null,transitions:null},mn(a),e}function oo(e){if(!e)return bt;e:{if(z(e=e._reactInternals)!==e||1!==e.tag)throw Error(l(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(mt(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(null!==t);throw Error(l(171))}if(1===e.tag){var n=e.type;if(mt(n))return gt(e,n,t)}return t}function so(e){var t=e._reactInternals;if(void 0===t){if("function"===typeof e.render)throw Error(l(188));throw e=Object.keys(e).join(","),Error(l(268,e))}return null===(e=A(t))?null:e.stateNode}function bo(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function co(e,t){bo(e,t),(e=e.alternate)&&bo(e,t)}function uo(e){return null===(e=A(e))?null:e.stateNode}function ho(){return null}return bl=function(e,t,n){if(null!==e)if(e.memoizedProps!==t.pendingProps||ut.current)Dr=!0;else{if(0===(e.lanes&n)&&0===(128&t.flags))return Dr=!1,function(e,t,n){switch(t.tag){case 3:Xr(t),Qn();break;case 5:mi(t);break;case 1:mt(t.type)&&xt(t);break;case 4:hi(t,t.stateNode.containerInfo);break;case 10:on(0,t.type._context,t.memoizedProps.value);break;case 13:var i=t.memoizedState;if(null!==i)return null!==i.dehydrated?(st(pi,1&pi.current),t.flags|=128,null):0!==(n&t.child.childLanes)?Kr(e,t,n):(st(pi,1&pi.current),null!==(e=ra(e,t,n))?e.sibling:null);st(pi,1&pi.current);break;case 19:if(i=0!==(n&t.childLanes),0!==(128&e.flags)){if(i)return ia(e,t,n);t.flags|=128}var r=t.memoizedState;if(null!==r&&(r.rendering=null,r.tail=null,r.lastEffect=null),st(pi,pi.current),i)break;return null;case 22:case 23:return t.lanes=0,Hr(e,t,n)}return ra(e,t,n)}(e,t,n);Dr=0!==(131072&e.flags)}else Dr=!1,Wn&&0!==(1048576&t.flags)&&Fn(t,Ln,t.index);switch(t.lanes=0,t.tag){case 2:var i=t.type;null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps;var r=dt(t,ct.current);cn(t,n),r=Li(null,t,i,e,r,n);var a=Ii();return t.flags|=1,"object"===typeof r&&null!==r&&"function"===typeof r.render&&void 0===r.$$typeof?(t.tag=1,t.memoizedState=null,t.updateQueue=null,mt(i)?(a=!0,xt(t)):a=!1,t.memoizedState=null!==r.state&&void 0!==r.state?r.state:null,mn(t),r.updater=wn,t.stateNode=r,r._reactInternals=t,An(t,i,e,n),t=jr(null,t,i,!0,a,n)):(t.tag=0,Wn&&a&&Bn(t),Ur(null,t,r,n),t=t.child),t;case 16:i=t.elementType;e:{switch(null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,i=(r=i._init)(i._payload),t.type=i,r=t.tag=function(e){if("function"===typeof e)return Jl(e)?1:0;if(void 0!==e&&null!==e){if((e=e.$$typeof)===f)return 11;if(e===x)return 14}return 2}(i),e=en(i,e),r){case 0:t=Gr(null,t,i,e,n);break e;case 1:t=Wr(null,t,i,e,n);break e;case 11:t=Or(null,t,i,e,n);break e;case 14:t=Fr(null,t,i,en(i.type,e),n);break e}throw Error(l(306,i,""))}return t;case 0:return i=t.type,r=t.pendingProps,Gr(e,t,i,r=t.elementType===i?r:en(i,r),n);case 1:return i=t.type,r=t.pendingProps,Wr(e,t,i,r=t.elementType===i?r:en(i,r),n);case 3:e:{if(Xr(t),null===e)throw Error(l(387));i=t.pendingProps,r=(a=t.memoizedState).element,fn(e,t),_n(t,i,null,n);var o=t.memoizedState;if(i=o.element,K&&a.isDehydrated){if(a={element:i,isDehydrated:!1,cache:o.cache,transitions:o.transitions},t.updateQueue.baseState=a,t.memoizedState=a,256&t.flags){t=qr(e,t,i,n,r=Error(l(423)));break e}if(i!==r){t=qr(e,t,i,n,r=Error(l(424)));break e}for(K&&(Gn=He(t.stateNode.containerInfo),Vn=t,Wn=!0,Xn=null,jn=!1),n=li(t,null,i,n),t.child=n;n;)n.flags=-3&n.flags|4096,n=n.sibling}else{if(Qn(),i===r){t=ra(e,t,n);break e}Ur(e,t,i,n)}t=t.child}return t;case 5:return mi(t),null===e&&Kn(t),i=t.type,r=t.pendingProps,a=null!==e?e.memoizedProps:null,o=r.children,V(i,r)?o=null:null!==a&&V(i,a)&&(t.flags|=32),Vr(e,t),Ur(e,t,o,n),t.child;case 6:return null===e&&Kn(t),null;case 13:return Kr(e,t,n);case 4:return hi(t,t.stateNode.containerInfo),i=t.pendingProps,null===e?t.child=ai(t,null,i,n):Ur(e,t,i,n),t.child;case 11:return i=t.type,r=t.pendingProps,Or(e,t,i,r=t.elementType===i?r:en(i,r),n);case 7:return Ur(e,t,t.pendingProps,n),t.child;case 8:case 12:return Ur(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(i=t.type._context,r=t.pendingProps,a=t.memoizedProps,on(0,i,o=r.value),null!==a)if(jt(a.value,o)){if(a.children===r.children&&!ut.current){t=ra(e,t,n);break e}}else for(null!==(a=t.child)&&(a.return=t);null!==a;){var s=a.dependencies;if(null!==s){o=a.child;for(var b=s.firstContext;null!==b;){if(b.context===i){if(1===a.tag){(b=pn(-1,n&-n)).tag=2;var c=a.updateQueue;if(null!==c){var u=(c=c.shared).pending;null===u?b.next=b:(b.next=u.next,u.next=b),c.pending=b}}a.lanes|=n,null!==(b=a.alternate)&&(b.lanes|=n),bn(a.return,n,t),s.lanes|=n;break}b=b.next}}else if(10===a.tag)o=a.type===t.type?null:a.child;else if(18===a.tag){if(null===(o=a.return))throw Error(l(341));o.lanes|=n,null!==(s=o.alternate)&&(s.lanes|=n),bn(o,n,t),o=a.sibling}else o=a.child;if(null!==o)o.return=a;else for(o=a;null!==o;){if(o===t){o=null;break}if(null!==(a=o.sibling)){a.return=o.return,o=a;break}o=o.return}a=o}Ur(e,t,r.children,n),t=t.child}return t;case 9:return r=t.type,i=t.pendingProps.children,cn(t,n),i=i(r=un(r)),t.flags|=1,Ur(e,t,i,n),t.child;case 14:return r=en(i=t.type,t.pendingProps),Fr(e,t,i,r=en(i.type,r),n);case 15:return Br(e,t,t.type,t.pendingProps,n);case 17:return i=t.type,r=t.pendingProps,r=t.elementType===i?r:en(i,r),null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),t.tag=1,mt(i)?(e=!0,xt(t)):e=!1,cn(t,n),En(t,i,r),An(t,i,r,n),jr(null,t,i,!0,e,n);case 19:return ia(e,t,n);case 22:return Hr(e,t,n)}throw Error(l(156,t.tag))},t.attemptContinuousHydration=function(e){13===e.tag&&(Sl(e,134217728,_l()),co(e,134217728))},t.attemptHydrationAtCurrentPriority=function(e){if(13===e.tag){var t=_l(),n=yl(e);Sl(e,n,t),co(e,n)}},t.attemptSynchronousHydration=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var n=zt(t.pendingLanes);0!==n&&(Pt(t,1|n),wl(t,Ot()),0===(6&qa)&&(sl(),Kt()))}break;case 13:var i=_l();Rl((function(){return Sl(e,1,i)})),co(e,1)}},t.batchedUpdates=function(e,t){var n=qa;qa|=1;try{return e(t)}finally{0===(qa=n)&&(sl(),qt&&Kt())}},t.createComponentSelector=function(e){return{$$typeof:La,value:e}},t.createContainer=function(e,t,n,i,r,a,l){return lo(e,t,!1,null,0,i,0,a,l)},t.createHasPseudoClassSelector=function(e){return{$$typeof:Ia,value:e}},t.createHydrationContainer=function(e,t,n,i,r,a,l,o,s){return(e=lo(n,i,!0,e,0,a,0,o,s)).context=oo(null),n=e.current,(a=pn(i=_l(),r=yl(n))).callback=void 0!==t&&null!==t?t:null,gn(n,a),e.current.lanes=r,Rt(e,r,i),wl(e,i),e},t.createPortal=function(e,t,n){var i=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:b,key:null==i?null:""+i,children:e,containerInfo:t,implementation:n}},t.createRoleSelector=function(e){return{$$typeof:Na,value:e}},t.createTestNameSelector=function(e){return{$$typeof:ka,value:e}},t.createTextSelector=function(e){return{$$typeof:Da,value:e}},t.deferredUpdates=function(e){var t=Lt,n=Xa.transition;try{return Xa.transition=null,Lt=16,e()}finally{Lt=t,Xa.transition=n}},t.discreteUpdates=function(e,t,n,i,r){var a=Lt,l=Xa.transition;try{return Xa.transition=null,Lt=1,e(t,n,i,r)}finally{Lt=a,Xa.transition=l,0===qa&&sl()}},t.findAllNodes=Va,t.findBoundingRects=function(e,t){if(!ie)throw Error(l(363));t=Va(e,t),e=[];for(var n=0;n<t.length;n++)e.push(ae(t[n]));for(t=e.length-1;0<t;t--)for(var i=(n=e[t]).x,r=i+n.width,a=n.y,o=a+n.height,s=t-1;0<=s;s--)if(t!==s){var b=e[s],c=b.x,u=c+b.width,h=b.y,d=h+b.height;if(i>=c&&a>=h&&r<=u&&o<=d){e.splice(t,1);break}if(!(i!==c||n.width!==b.width||d<a||h>o)){h>a&&(b.height+=h-a,b.y=a),d<o&&(b.height=o-h),e.splice(t,1);break}if(!(a!==h||n.height!==b.height||u<i||c>r)){c>i&&(b.width+=c-i,b.x=i),u<r&&(b.width=r-c),e.splice(t,1);break}}return e},t.findHostInstance=so,t.findHostInstanceWithNoPortals=function(e){return null===(e=null!==(e=T(e))?R(e):null)?null:e.stateNode},t.findHostInstanceWithWarning=function(e){return so(e)},t.flushControlled=function(e){var t=qa;qa|=1;var n=Xa.transition,i=Lt;try{Xa.transition=null,Lt=1,e()}finally{Lt=i,Xa.transition=n,0===(qa=t)&&(sl(),Kt())}},t.flushPassiveEffects=Vl,t.flushSync=Rl,t.focusWithin=function(e,t){if(!ie)throw Error(l(363));for(t=Ha(e=Oa(e),t),t=Array.from(t),e=0;e<t.length;){var n=t[e++];if(!oe(n)){if(5===n.tag&&be(n.stateNode))return!0;for(n=n.child;null!==n;)t.push(n),n=n.sibling}}return!1},t.getCurrentUpdatePriority=function(){return Lt},t.getFindAllNodesFailureDescription=function(e,t){if(!ie)throw Error(l(363));var n=0,i=[];e=[Oa(e),0];for(var r=0;r<e.length;){var a=e[r++],o=e[r++],s=t[o];if((5!==a.tag||!oe(a))&&(Fa(a,s)&&(i.push(Ba(s)),++o>n&&(n=o)),o<t.length))for(a=a.child;null!==a;)e.push(a,o),a=a.sibling}if(n<t.length){for(e=[];n<t.length;n++)e.push(Ba(t[n]));return"findAllNodes was able to match part of the selector:\n  "+i.join(" > ")+"\n\nNo matching component was found for:\n  "+e.join(" > ")}return null},t.getPublicRootInstance=function(e){return(e=e.current).child?5===e.child.tag?I(e.child.stateNode):e.child.stateNode:null},t.injectIntoDevTools=function(e){if(e={bundleType:e.bundleType,version:e.version,rendererPackageName:e.rendererPackageName,rendererConfig:e.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:o.ReactCurrentDispatcher,findHostInstanceByFiber:uo,findFiberByHostInstance:e.findFiberByHostInstance||ho,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.0.0-fc46dba67-20220329"},"undefined"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)e=!1;else{var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)e=!0;else{try{Gt=t.inject(e),Wt=t}catch(n){}e=!!t.checkDCE}}return e},t.isAlreadyRendering=function(){return!1},t.observeVisibleRects=function(e,t,n,i){if(!ie)throw Error(l(363));e=Va(e,t);var r=ce(e,n,i).disconnect;return{disconnect:function(){r()}}},t.registerMutableSourceForHydration=function(e,t){var n=t._getVersion;n=n(t._source),null==e.mutableSourceEagerHydrationData?e.mutableSourceEagerHydrationData=[t,n]:e.mutableSourceEagerHydrationData.push(t,n)},t.runWithPriority=function(e,t){var n=Lt;try{return Lt=e,t()}finally{Lt=n}},t.shouldError=function(){return null},t.shouldSuspend=function(){return!1},t.updateContainer=function(e,t,n,i){var r=t.current,a=_l(),l=yl(r);return n=oo(n),null===t.context?t.context=n:t.pendingContext=n,(t=pn(a,l)).payload={element:e},null!==(i=void 0===i?null:i)&&(t.callback=i),gn(r,t),null!==(e=Sl(r,l,a))&&xn(e,r,l),l},t}},878:(e,t,n)=>{"use strict";e.exports=n(153)},235:(e,t,n)=>{"use strict";e.exports=n(473)},733:(e,t)=>{"use strict";function n(e,t){var n=e.length;e.push(t);e:for(;0<n;){var i=n-1>>>1,r=e[i];if(!(0<a(r,t)))break e;e[i]=t,e[n]=r,n=i}}function i(e){return 0===e.length?null:e[0]}function r(e){if(0===e.length)return null;var t=e[0],n=e.pop();if(n!==t){e[0]=n;e:for(var i=0,r=e.length,l=r>>>1;i<l;){var o=2*(i+1)-1,s=e[o],b=o+1,c=e[b];if(0>a(s,n))b<r&&0>a(c,s)?(e[i]=c,e[b]=n,i=b):(e[i]=s,e[o]=n,i=o);else{if(!(b<r&&0>a(c,n)))break e;e[i]=c,e[b]=n,i=b}}}return t}function a(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}if("object"===typeof performance&&"function"===typeof performance.now){var l=performance;t.unstable_now=function(){return l.now()}}else{var o=Date,s=o.now();t.unstable_now=function(){return o.now()-s}}var b=[],c=[],u=1,h=null,d=3,m=!1,f=!1,p=!1,g="function"===typeof setTimeout?setTimeout:null,x="function"===typeof clearTimeout?clearTimeout:null,v="undefined"!==typeof setImmediate?setImmediate:null;function _(e){for(var t=i(c);null!==t;){if(null===t.callback)r(c);else{if(!(t.startTime<=e))break;r(c),t.sortIndex=t.expirationTime,n(b,t)}t=i(c)}}function y(e){if(p=!1,_(e),!f)if(null!==i(b))f=!0,I(S);else{var t=i(c);null!==t&&N(y,t.startTime-e)}}function S(e,n){f=!1,p&&(p=!1,x(E),E=-1),m=!0;var a=d;try{for(_(n),h=i(b);null!==h&&(!(h.expirationTime>n)||e&&!C());){var l=h.callback;if("function"===typeof l){h.callback=null,d=h.priorityLevel;var o=l(h.expirationTime<=n);n=t.unstable_now(),"function"===typeof o?h.callback=o:h===i(b)&&r(b),_(n)}else r(b);h=i(b)}if(null!==h)var s=!0;else{var u=i(c);null!==u&&N(y,u.startTime-n),s=!1}return s}finally{h=null,d=a,m=!1}}"undefined"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var M,w=!1,z=null,E=-1,T=5,A=-1;function C(){return!(t.unstable_now()-A<T)}function R(){if(null!==z){var e=t.unstable_now();A=e;var n=!0;try{n=z(!0,e)}finally{n?M():(w=!1,z=null)}}else w=!1}if("function"===typeof v)M=function(){v(R)};else if("undefined"!==typeof MessageChannel){var P=new MessageChannel,L=P.port2;P.port1.onmessage=R,M=function(){L.postMessage(null)}}else M=function(){g(R,0)};function I(e){z=e,w||(w=!0,M())}function N(e,n){E=g((function(){e(t.unstable_now())}),n)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){f||m||(f=!0,I(S))},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):T=0<e?Math.floor(1e3/e):5},t.unstable_getCurrentPriorityLevel=function(){return d},t.unstable_getFirstCallbackNode=function(){return i(b)},t.unstable_next=function(e){switch(d){case 1:case 2:case 3:var t=3;break;default:t=d}var n=d;d=t;try{return e()}finally{d=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=d;d=e;try{return t()}finally{d=n}},t.unstable_scheduleCallback=function(e,r,a){var l=t.unstable_now();switch("object"===typeof a&&null!==a?a="number"===typeof(a=a.delay)&&0<a?l+a:l:a=l,e){case 1:var o=-1;break;case 2:o=250;break;case 5:o=1073741823;break;case 4:o=1e4;break;default:o=5e3}return e={id:u++,callback:r,priorityLevel:e,startTime:a,expirationTime:o=a+o,sortIndex:-1},a>l?(e.sortIndex=a,n(c,e),null===i(b)&&e===i(c)&&(p?(x(E),E=-1):p=!0,N(y,a-l))):(e.sortIndex=o,n(b,e),f||m||(f=!0,I(S))),e},t.unstable_shouldYield=C,t.unstable_wrapCallback=function(e){var t=d;return function(){var n=d;d=t;try{return e.apply(this,arguments)}finally{d=n}}}},224:(e,t,n)=>{"use strict";e.exports=n(733)},654:(e,t,n)=>{"use strict";var i=n(950),r=Symbol.for("react.element"),a=Symbol.for("react.fragment"),l=Object.prototype.hasOwnProperty,o=i.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,s={key:!0,ref:!0,__self:!0,__source:!0};function b(e,t,n){var i,a={},b=null,c=null;for(i in void 0!==n&&(b=""+n),void 0!==t.key&&(b=""+t.key),void 0!==t.ref&&(c=t.ref),t)l.call(t,i)&&!s.hasOwnProperty(i)&&(a[i]=t[i]);if(e&&e.defaultProps)for(i in t=e.defaultProps)void 0===a[i]&&(a[i]=t[i]);return{$$typeof:r,type:e,key:b,ref:c,props:a,_owner:o.current}}t.jsx=b,t.jsxs=b},49:(e,t)=>{"use strict";var n=Symbol.for("react.element"),i=Symbol.for("react.portal"),r=Symbol.for("react.fragment"),a=Symbol.for("react.strict_mode"),l=Symbol.for("react.profiler"),o=Symbol.for("react.provider"),s=Symbol.for("react.context"),b=Symbol.for("react.forward_ref"),c=Symbol.for("react.suspense"),u=Symbol.for("react.memo"),h=Symbol.for("react.lazy"),d=Symbol.iterator;var m={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},f=Object.assign,p={};function g(e,t,n){this.props=e,this.context=t,this.refs=p,this.updater=n||m}function x(){}function v(e,t,n){this.props=e,this.context=t,this.refs=p,this.updater=n||m}g.prototype.isReactComponent={},g.prototype.setState=function(e,t){if("object"!==typeof e&&"function"!==typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},g.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},x.prototype=g.prototype;var _=v.prototype=new x;_.constructor=v,f(_,g.prototype),_.isPureReactComponent=!0;var y=Array.isArray,S=Object.prototype.hasOwnProperty,M={current:null},w={key:!0,ref:!0,__self:!0,__source:!0};function z(e,t,i){var r,a={},l=null,o=null;if(null!=t)for(r in void 0!==t.ref&&(o=t.ref),void 0!==t.key&&(l=""+t.key),t)S.call(t,r)&&!w.hasOwnProperty(r)&&(a[r]=t[r]);var s=arguments.length-2;if(1===s)a.children=i;else if(1<s){for(var b=Array(s),c=0;c<s;c++)b[c]=arguments[c+2];a.children=b}if(e&&e.defaultProps)for(r in s=e.defaultProps)void 0===a[r]&&(a[r]=s[r]);return{$$typeof:n,type:e,key:l,ref:o,props:a,_owner:M.current}}function E(e){return"object"===typeof e&&null!==e&&e.$$typeof===n}var T=/\/+/g;function A(e,t){return"object"===typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function C(e,t,r,a,l){var o=typeof e;"undefined"!==o&&"boolean"!==o||(e=null);var s=!1;if(null===e)s=!0;else switch(o){case"string":case"number":s=!0;break;case"object":switch(e.$$typeof){case n:case i:s=!0}}if(s)return l=l(s=e),e=""===a?"."+A(s,0):a,y(l)?(r="",null!=e&&(r=e.replace(T,"$&/")+"/"),C(l,t,r,"",(function(e){return e}))):null!=l&&(E(l)&&(l=function(e,t){return{$$typeof:n,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(l,r+(!l.key||s&&s.key===l.key?"":(""+l.key).replace(T,"$&/")+"/")+e)),t.push(l)),1;if(s=0,a=""===a?".":a+":",y(e))for(var b=0;b<e.length;b++){var c=a+A(o=e[b],b);s+=C(o,t,r,c,l)}else if(c=function(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=d&&e[d]||e["@@iterator"])?e:null}(e),"function"===typeof c)for(e=c.call(e),b=0;!(o=e.next()).done;)s+=C(o=o.value,t,r,c=a+A(o,b++),l);else if("object"===o)throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return s}function R(e,t,n){if(null==e)return e;var i=[],r=0;return C(e,i,"","",(function(e){return t.call(n,e,r++)})),i}function P(e){if(-1===e._status){var t=e._result;(t=t()).then((function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)}),(function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)})),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var L={current:null},I={transition:null},N={ReactCurrentDispatcher:L,ReactCurrentBatchConfig:I,ReactCurrentOwner:M};function k(){throw Error("act(...) is not supported in production builds of React.")}t.Children={map:R,forEach:function(e,t,n){R(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return R(e,(function(){t++})),t},toArray:function(e){return R(e,(function(e){return e}))||[]},only:function(e){if(!E(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},t.Component=g,t.Fragment=r,t.Profiler=l,t.PureComponent=v,t.StrictMode=a,t.Suspense=c,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=N,t.act=k,t.cloneElement=function(e,t,i){if(null===e||void 0===e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var r=f({},e.props),a=e.key,l=e.ref,o=e._owner;if(null!=t){if(void 0!==t.ref&&(l=t.ref,o=M.current),void 0!==t.key&&(a=""+t.key),e.type&&e.type.defaultProps)var s=e.type.defaultProps;for(b in t)S.call(t,b)&&!w.hasOwnProperty(b)&&(r[b]=void 0===t[b]&&void 0!==s?s[b]:t[b])}var b=arguments.length-2;if(1===b)r.children=i;else if(1<b){s=Array(b);for(var c=0;c<b;c++)s[c]=arguments[c+2];r.children=s}return{$$typeof:n,type:e.type,key:a,ref:l,props:r,_owner:o}},t.createContext=function(e){return(e={$$typeof:s,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:o,_context:e},e.Consumer=e},t.createElement=z,t.createFactory=function(e){var t=z.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:b,render:e}},t.isValidElement=E,t.lazy=function(e){return{$$typeof:h,_payload:{_status:-1,_result:e},_init:P}},t.memo=function(e,t){return{$$typeof:u,type:e,compare:void 0===t?null:t}},t.startTransition=function(e){var t=I.transition;I.transition={};try{e()}finally{I.transition=t}},t.unstable_act=k,t.useCallback=function(e,t){return L.current.useCallback(e,t)},t.useContext=function(e){return L.current.useContext(e)},t.useDebugValue=function(){},t.useDeferredValue=function(e){return L.current.useDeferredValue(e)},t.useEffect=function(e,t){return L.current.useEffect(e,t)},t.useId=function(){return L.current.useId()},t.useImperativeHandle=function(e,t,n){return L.current.useImperativeHandle(e,t,n)},t.useInsertionEffect=function(e,t){return L.current.useInsertionEffect(e,t)},t.useLayoutEffect=function(e,t){return L.current.useLayoutEffect(e,t)},t.useMemo=function(e,t){return L.current.useMemo(e,t)},t.useReducer=function(e,t,n){return L.current.useReducer(e,t,n)},t.useRef=function(e){return L.current.useRef(e)},t.useState=function(e){return L.current.useState(e)},t.useSyncExternalStore=function(e,t,n){return L.current.useSyncExternalStore(e,t,n)},t.useTransition=function(){return L.current.useTransition()},t.version="18.3.1"},950:(e,t,n)=>{"use strict";e.exports=n(49)},414:(e,t,n)=>{"use strict";e.exports=n(654)},761:(e,t)=>{"use strict";function n(e,t){var n=e.length;e.push(t);e:for(;0<n;){var i=n-1>>>1,r=e[i];if(!(0<a(r,t)))break e;e[i]=t,e[n]=r,n=i}}function i(e){return 0===e.length?null:e[0]}function r(e){if(0===e.length)return null;var t=e[0],n=e.pop();if(n!==t){e[0]=n;e:for(var i=0,r=e.length,l=r>>>1;i<l;){var o=2*(i+1)-1,s=e[o],b=o+1,c=e[b];if(0>a(s,n))b<r&&0>a(c,s)?(e[i]=c,e[b]=n,i=b):(e[i]=s,e[o]=n,i=o);else{if(!(b<r&&0>a(c,n)))break e;e[i]=c,e[b]=n,i=b}}}return t}function a(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}if("object"===typeof performance&&"function"===typeof performance.now){var l=performance;t.unstable_now=function(){return l.now()}}else{var o=Date,s=o.now();t.unstable_now=function(){return o.now()-s}}var b=[],c=[],u=1,h=null,d=3,m=!1,f=!1,p=!1,g="function"===typeof setTimeout?setTimeout:null,x="function"===typeof clearTimeout?clearTimeout:null,v="undefined"!==typeof setImmediate?setImmediate:null;function _(e){for(var t=i(c);null!==t;){if(null===t.callback)r(c);else{if(!(t.startTime<=e))break;r(c),t.sortIndex=t.expirationTime,n(b,t)}t=i(c)}}function y(e){if(p=!1,_(e),!f)if(null!==i(b))f=!0,I(S);else{var t=i(c);null!==t&&N(y,t.startTime-e)}}function S(e,n){f=!1,p&&(p=!1,x(E),E=-1),m=!0;var a=d;try{for(_(n),h=i(b);null!==h&&(!(h.expirationTime>n)||e&&!C());){var l=h.callback;if("function"===typeof l){h.callback=null,d=h.priorityLevel;var o=l(h.expirationTime<=n);n=t.unstable_now(),"function"===typeof o?h.callback=o:h===i(b)&&r(b),_(n)}else r(b);h=i(b)}if(null!==h)var s=!0;else{var u=i(c);null!==u&&N(y,u.startTime-n),s=!1}return s}finally{h=null,d=a,m=!1}}"undefined"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var M,w=!1,z=null,E=-1,T=5,A=-1;function C(){return!(t.unstable_now()-A<T)}function R(){if(null!==z){var e=t.unstable_now();A=e;var n=!0;try{n=z(!0,e)}finally{n?M():(w=!1,z=null)}}else w=!1}if("function"===typeof v)M=function(){v(R)};else if("undefined"!==typeof MessageChannel){var P=new MessageChannel,L=P.port2;P.port1.onmessage=R,M=function(){L.postMessage(null)}}else M=function(){g(R,0)};function I(e){z=e,w||(w=!0,M())}function N(e,n){E=g((function(){e(t.unstable_now())}),n)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){f||m||(f=!0,I(S))},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):T=0<e?Math.floor(1e3/e):5},t.unstable_getCurrentPriorityLevel=function(){return d},t.unstable_getFirstCallbackNode=function(){return i(b)},t.unstable_next=function(e){switch(d){case 1:case 2:case 3:var t=3;break;default:t=d}var n=d;d=t;try{return e()}finally{d=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=d;d=e;try{return t()}finally{d=n}},t.unstable_scheduleCallback=function(e,r,a){var l=t.unstable_now();switch("object"===typeof a&&null!==a?a="number"===typeof(a=a.delay)&&0<a?l+a:l:a=l,e){case 1:var o=-1;break;case 2:o=250;break;case 5:o=1073741823;break;case 4:o=1e4;break;default:o=5e3}return e={id:u++,callback:r,priorityLevel:e,startTime:a,expirationTime:o=a+o,sortIndex:-1},a>l?(e.sortIndex=a,n(c,e),null===i(b)&&e===i(c)&&(p?(x(E),E=-1):p=!0,N(y,a-l))):(e.sortIndex=o,n(b,e),f||m||(f=!0,I(S))),e},t.unstable_shouldYield=C,t.unstable_wrapCallback=function(e){var t=d;return function(){var n=d;d=t;try{return e.apply(this,arguments)}finally{d=n}}}},340:(e,t,n)=>{"use strict";e.exports=n(761)}},t={};function n(i){var r=t[i];if(void 0!==r)return r.exports;var a=t[i]={exports:{}};return e[i](a,a.exports,n),a.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},(()=>{var e,t=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__;n.t=function(i,r){if(1&r&&(i=this(i)),8&r)return i;if("object"===typeof i&&i){if(4&r&&i.__esModule)return i;if(16&r&&"function"===typeof i.then)return i}var a=Object.create(null);n.r(a);var l={};e=e||[null,t({}),t([]),t(t)];for(var o=2&r&&i;"object"==typeof o&&!~e.indexOf(o);o=t(o))Object.getOwnPropertyNames(o).forEach((e=>l[e]=()=>i[e]));return l.default=()=>i,n.d(a,l),a}})(),n.d=(e,t)=>{for(var i in t)n.o(t,i)&&!n.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.p="/",(()=>{"use strict";var e={};n.r(e),n.d(e,{ACESFilmicToneMapping:()=>Pt,AddEquation:()=>Ke,AddOperation:()=>Et,AdditiveAnimationBlendMode:()=>pi,AdditiveBlending:()=>Xe,AgXToneMapping:()=>It,AlphaFormat:()=>fn,AlwaysCompare:()=>rr,AlwaysDepth:()=>gt,AlwaysStencilFunc:()=>Ki,AmbientLight:()=>$m,AnimationAction:()=>Hf,AnimationClip:()=>ym,AnimationLoader:()=>Rm,AnimationMixer:()=>Gf,AnimationObjectGroup:()=>Bf,AnimationUtils:()=>sm,ArcCurve:()=>Eh,ArrayCamera:()=>Ec,ArrowHelper:()=>Dp,AttachedBindMode:()=>kt,Audio:()=>zf,AudioAnalyser:()=>Pf,AudioContext:()=>hf,AudioListener:()=>wf,AudioLoader:()=>df,AxesHelper:()=>Up,BackSide:()=>Ve,BasicDepthPacking:()=>_i,BasicShadowMap:()=>Ue,BatchedMesh:()=>Ku,Bone:()=>xu,BooleanKeyframeTrack:()=>mm,Box2:()=>ip,Box3:()=>ua,Box3Helper:()=>Pp,BoxGeometry:()=>Mo,BoxHelper:()=>Rp,BufferAttribute:()=>Fl,BufferGeometry:()=>no,BufferGeometryLoader:()=>af,ByteType:()=>rn,Cache:()=>Mm,Camera:()=>Co,CameraHelper:()=>Tp,CanvasTexture:()=>Mh,CapsuleGeometry:()=>qh,CatmullRomCurve3:()=>Lh,CineonToneMapping:()=>Rt,CircleGeometry:()=>Yh,ClampToEdgeWrapping:()=>Wt,Clock:()=>xf,Color:()=>Tl,ColorKeyframeTrack:()=>fm,ColorManagement:()=>Wr,CompressedArrayTexture:()=>yh,CompressedCubeTexture:()=>Sh,CompressedTexture:()=>_h,CompressedTextureLoader:()=>Pm,ConeGeometry:()=>Kh,ConstantAlphaFactor:()=>mt,ConstantColorFactor:()=>ht,Controls:()=>Fp,CubeCamera:()=>ko,CubeReflectionMapping:()=>Ot,CubeRefractionMapping:()=>Ft,CubeTexture:()=>Do,CubeTextureLoader:()=>Im,CubeUVReflectionMapping:()=>Vt,CubicBezierCurve:()=>Dh,CubicBezierCurve3:()=>Uh,CubicInterpolant:()=>cm,CullFaceBack:()=>Ne,CullFaceFront:()=>ke,CullFaceFrontBack:()=>De,CullFaceNone:()=>Ie,Curve:()=>wh,CurvePath:()=>Wh,CustomBlending:()=>Ze,CustomToneMapping:()=>Lt,CylinderGeometry:()=>Zh,Cylindrical:()=>ep,Data3DTexture:()=>aa,DataArrayTexture:()=>ia,DataTexture:()=>vu,DataTextureLoader:()=>Nm,DataUtils:()=>Dl,DecrementStencilOp:()=>Fi,DecrementWrapStencilOp:()=>Hi,DefaultLoadingManager:()=>zm,DepthFormat:()=>_n,DepthStencilFormat:()=>yn,DepthTexture:()=>Ps,DetachedBindMode:()=>Dt,DirectionalLight:()=>Km,DirectionalLightHelper:()=>wp,DiscreteInterpolant:()=>hm,DisplayP3ColorSpace:()=>Ci,DodecahedronGeometry:()=>Jh,DoubleSide:()=>Ge,DstAlphaFactor:()=>ot,DstColorFactor:()=>bt,DynamicCopyUsage:()=>hr,DynamicDrawUsage:()=>lr,DynamicReadUsage:()=>br,EdgesGeometry:()=>id,EllipseCurve:()=>zh,EqualCompare:()=>Qi,EqualDepth:()=>_t,EqualStencilFunc:()=>ji,EquirectangularReflectionMapping:()=>Bt,EquirectangularRefractionMapping:()=>Ht,Euler:()=>Ya,EventDispatcher:()=>xr,ExtrudeGeometry:()=>Id,FileLoader:()=>Cm,Float16BufferAttribute:()=>ql,Float32BufferAttribute:()=>Yl,FloatType:()=>bn,Fog:()=>Oc,FogExp2:()=>Uc,FramebufferTexture:()=>vh,FrontSide:()=>He,Frustum:()=>Wo,GLBufferAttribute:()=>Yf,GLSL1:()=>mr,GLSL3:()=>fr,GreaterCompare:()=>tr,GreaterDepth:()=>St,GreaterEqualCompare:()=>ir,GreaterEqualDepth:()=>yt,GreaterEqualStencilFunc:()=>Zi,GreaterStencilFunc:()=>qi,GridHelper:()=>vp,Group:()=>Tc,HalfFloatType:()=>cn,HemisphereLight:()=>Um,HemisphereLightHelper:()=>xp,IcosahedronGeometry:()=>kd,ImageBitmapLoader:()=>cf,ImageLoader:()=>Lm,ImageUtils:()=>Yr,IncrementStencilOp:()=>Oi,IncrementWrapStencilOp:()=>Bi,InstancedBufferAttribute:()=>Mu,InstancedBufferGeometry:()=>rf,InstancedInterleavedBuffer:()=>qf,InstancedMesh:()=>Pu,Int16BufferAttribute:()=>Gl,Int32BufferAttribute:()=>jl,Int8BufferAttribute:()=>Bl,IntType:()=>on,InterleavedBuffer:()=>Bc,InterleavedBufferAttribute:()=>Vc,Interpolant:()=>bm,InterpolateDiscrete:()=>bi,InterpolateLinear:()=>ci,InterpolateSmooth:()=>ui,InvertStencilOp:()=>Vi,KeepStencilOp:()=>Di,KeyframeTrack:()=>dm,LOD:()=>ou,LatheGeometry:()=>Xh,Layers:()=>Za,LessCompare:()=>Ji,LessDepth:()=>xt,LessEqualCompare:()=>er,LessEqualDepth:()=>vt,LessEqualStencilFunc:()=>Xi,LessStencilFunc:()=>Wi,Light:()=>Dm,LightProbe:()=>ef,Line:()=>ah,Line3:()=>lp,LineBasicMaterial:()=>$u,LineCurve:()=>Oh,LineCurve3:()=>Fh,LineDashedMaterial:()=>nm,LineLoop:()=>ch,LineSegments:()=>bh,LinearDisplayP3ColorSpace:()=>Ri,LinearFilter:()=>$t,LinearInterpolant:()=>um,LinearMipMapLinearFilter:()=>tn,LinearMipMapNearestFilter:()=>Qt,LinearMipmapLinearFilter:()=>en,LinearMipmapNearestFilter:()=>Jt,LinearSRGBColorSpace:()=>Ai,LinearToneMapping:()=>At,LinearTransfer:()=>Pi,Loader:()=>Em,LoaderUtils:()=>nf,LoadingManager:()=>wm,LoopOnce:()=>li,LoopPingPong:()=>si,LoopRepeat:()=>oi,LuminanceAlphaFormat:()=>vn,LuminanceFormat:()=>xn,MOUSE:()=>Pe,Material:()=>Rl,MaterialLoader:()=>tf,MathUtils:()=>Cr,Matrix2:()=>tp,Matrix3:()=>Pr,Matrix4:()=>Oa,MaxEquation:()=>et,Mesh:()=>yo,MeshBasicMaterial:()=>Pl,MeshDepthMaterial:()=>xc,MeshDistanceMaterial:()=>vc,MeshLambertMaterial:()=>em,MeshMatcapMaterial:()=>tm,MeshNormalMaterial:()=>Qd,MeshPhongMaterial:()=>$d,MeshPhysicalMaterial:()=>Kd,MeshStandardMaterial:()=>Zd,MeshToonMaterial:()=>Jd,MinEquation:()=>Qe,MirroredRepeatWrapping:()=>jt,MixOperation:()=>zt,MultiplyBlending:()=>Ye,MultiplyOperation:()=>wt,NearestFilter:()=>Xt,NearestMipMapLinearFilter:()=>Kt,NearestMipMapNearestFilter:()=>Yt,NearestMipmapLinearFilter:()=>Zt,NearestMipmapNearestFilter:()=>qt,NeutralToneMapping:()=>Nt,NeverCompare:()=>$i,NeverDepth:()=>pt,NeverStencilFunc:()=>Gi,NoBlending:()=>We,NoColorSpace:()=>Ei,NoToneMapping:()=>Tt,NormalAnimationBlendMode:()=>fi,NormalBlending:()=>je,NotEqualCompare:()=>nr,NotEqualDepth:()=>Mt,NotEqualStencilFunc:()=>Yi,NumberKeyframeTrack:()=>pm,Object3D:()=>ul,ObjectLoader:()=>lf,ObjectSpaceNormalMap:()=>zi,OctahedronGeometry:()=>Dd,OneFactor:()=>nt,OneMinusConstantAlphaFactor:()=>ft,OneMinusConstantColorFactor:()=>dt,OneMinusDstAlphaFactor:()=>st,OneMinusDstColorFactor:()=>ct,OneMinusSrcAlphaFactor:()=>lt,OneMinusSrcColorFactor:()=>rt,OrthographicCamera:()=>ls,P3Primaries:()=>Ni,PCFShadowMap:()=>Oe,PCFSoftShadowMap:()=>Fe,PMREMGenerator:()=>xs,Path:()=>jh,PerspectiveCamera:()=>Io,Plane:()=>Ho,PlaneGeometry:()=>qo,PlaneHelper:()=>Lp,PointLight:()=>Ym,PointLightHelper:()=>mp,Points:()=>ph,PointsMaterial:()=>uh,PolarGridHelper:()=>_p,PolyhedronGeometry:()=>$h,PositionalAudio:()=>Rf,PropertyBinding:()=>Ff,PropertyMixer:()=>Lf,QuadraticBezierCurve:()=>Bh,QuadraticBezierCurve3:()=>Hh,Quaternion:()=>oa,QuaternionKeyframeTrack:()=>xm,QuaternionLinearInterpolant:()=>gm,RED_GREEN_RGTC2_Format:()=>ri,RED_RGTC1_Format:()=>ni,REVISION:()=>Re,RGBADepthPacking:()=>yi,RGBAFormat:()=>gn,RGBAIntegerFormat:()=>Tn,RGBA_ASTC_10x10_Format:()=>Kn,RGBA_ASTC_10x5_Format:()=>qn,RGBA_ASTC_10x6_Format:()=>Yn,RGBA_ASTC_10x8_Format:()=>Zn,RGBA_ASTC_12x10_Format:()=>$n,RGBA_ASTC_12x12_Format:()=>Jn,RGBA_ASTC_4x4_Format:()=>Fn,RGBA_ASTC_5x4_Format:()=>Bn,RGBA_ASTC_5x5_Format:()=>Hn,RGBA_ASTC_6x5_Format:()=>Vn,RGBA_ASTC_6x6_Format:()=>Gn,RGBA_ASTC_8x5_Format:()=>Wn,RGBA_ASTC_8x6_Format:()=>jn,RGBA_ASTC_8x8_Format:()=>Xn,RGBA_BPTC_Format:()=>Qn,RGBA_ETC2_EAC_Format:()=>On,RGBA_PVRTC_2BPPV1_Format:()=>kn,RGBA_PVRTC_4BPPV1_Format:()=>Nn,RGBA_S3TC_DXT1_Format:()=>Cn,RGBA_S3TC_DXT3_Format:()=>Rn,RGBA_S3TC_DXT5_Format:()=>Pn,RGBDepthPacking:()=>Si,RGBFormat:()=>pn,RGBIntegerFormat:()=>En,RGB_BPTC_SIGNED_Format:()=>ei,RGB_BPTC_UNSIGNED_Format:()=>ti,RGB_ETC1_Format:()=>Dn,RGB_ETC2_Format:()=>Un,RGB_PVRTC_2BPPV1_Format:()=>In,RGB_PVRTC_4BPPV1_Format:()=>Ln,RGB_S3TC_DXT1_Format:()=>An,RGDepthPacking:()=>Mi,RGFormat:()=>wn,RGIntegerFormat:()=>zn,RawShaderMaterial:()=>Yd,Ray:()=>Ua,Raycaster:()=>Kf,Rec709Primaries:()=>Ii,RectAreaLight:()=>Jm,RedFormat:()=>Sn,RedIntegerFormat:()=>Mn,ReinhardToneMapping:()=>Ct,RenderTarget:()=>ta,RepeatWrapping:()=>Gt,ReplaceStencilOp:()=>Ui,ReverseSubtractEquation:()=>Je,RingGeometry:()=>Ud,SIGNED_RED_GREEN_RGTC2_Format:()=>ai,SIGNED_RED_RGTC1_Format:()=>ii,SRGBColorSpace:()=>Ti,SRGBTransfer:()=>Li,Scene:()=>Fc,ShaderChunk:()=>Yo,ShaderLib:()=>Ko,ShaderMaterial:()=>Ao,ShadowMaterial:()=>qd,Shape:()=>rd,ShapeGeometry:()=>Od,ShapePath:()=>Op,ShapeUtils:()=>Rd,ShortType:()=>an,Skeleton:()=>Su,SkeletonHelper:()=>hp,SkinnedMesh:()=>gu,Source:()=>Kr,Sphere:()=>Ca,SphereGeometry:()=>Fd,Spherical:()=>Qf,SphericalHarmonics3:()=>Qm,SplineCurve:()=>Vh,SpotLight:()=>Gm,SpotLightHelper:()=>sp,Sprite:()=>iu,SpriteMaterial:()=>Gc,SrcAlphaFactor:()=>at,SrcAlphaSaturateFactor:()=>ut,SrcColorFactor:()=>it,StaticCopyUsage:()=>ur,StaticDrawUsage:()=>ar,StaticReadUsage:()=>sr,StereoCamera:()=>gf,StreamCopyUsage:()=>dr,StreamDrawUsage:()=>or,StreamReadUsage:()=>cr,StringKeyframeTrack:()=>vm,SubtractEquation:()=>$e,SubtractiveBlending:()=>qe,TOUCH:()=>Le,TangentSpaceNormalMap:()=>wi,TetrahedronGeometry:()=>Bd,Texture:()=>Qr,TextureLoader:()=>km,TextureUtils:()=>Mc,TorusGeometry:()=>Hd,TorusKnotGeometry:()=>Vd,Triangle:()=>Sl,TriangleFanDrawMode:()=>vi,TriangleStripDrawMode:()=>xi,TrianglesDrawMode:()=>gi,TubeGeometry:()=>Gd,UVMapping:()=>Ut,Uint16BufferAttribute:()=>Wl,Uint32BufferAttribute:()=>Xl,Uint8BufferAttribute:()=>Hl,Uint8ClampedBufferAttribute:()=>Vl,Uniform:()=>Wf,UniformsGroup:()=>Xf,UniformsLib:()=>Zo,UniformsUtils:()=>To,UnsignedByteType:()=>nn,UnsignedInt248Type:()=>dn,UnsignedInt5999Type:()=>mn,UnsignedIntType:()=>sn,UnsignedShort4444Type:()=>un,UnsignedShort5551Type:()=>hn,UnsignedShortType:()=>ln,VSMShadowMap:()=>Be,Vector2:()=>Rr,Vector3:()=>sa,Vector4:()=>ea,VectorKeyframeTrack:()=>_m,VideoTexture:()=>xh,WebGL3DRenderTarget:()=>la,WebGLArrayRenderTarget:()=>ra,WebGLCoordinateSystem:()=>pr,WebGLCubeRenderTarget:()=>Uo,WebGLMultipleRenderTargets:()=>Bp,WebGLRenderTarget:()=>na,WebGLRenderer:()=>Dc,WebGLUtils:()=>zc,WebGPUCoordinateSystem:()=>gr,WireframeGeometry:()=>Wd,WrapAroundEnding:()=>mi,ZeroCurvatureEnding:()=>hi,ZeroFactor:()=>tt,ZeroSlopeEnding:()=>di,ZeroStencilOp:()=>ki,createCanvasElement:()=>Ur});var t,i=n(950),r=n.t(i,2),a=n(352),l=n(119),o=n.t(l,2);function s(){return s=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e},s.apply(this,arguments)}!function(e){e.Pop="POP",e.Push="PUSH",e.Replace="REPLACE"}(t||(t={}));const b="popstate";function c(e,t){if(!1===e||null===e||"undefined"===typeof e)throw new Error(t)}function u(e,t){if(!e){"undefined"!==typeof console&&console.warn(t);try{throw new Error(t)}catch(n){}}}function h(e,t){return{usr:e.state,key:e.key,idx:t}}function d(e,t,n,i){return void 0===n&&(n=null),s({pathname:"string"===typeof e?e:e.pathname,search:"",hash:""},"string"===typeof t?f(t):t,{state:n,key:t&&t.key||i||Math.random().toString(36).substr(2,8)})}function m(e){let{pathname:t="/",search:n="",hash:i=""}=e;return n&&"?"!==n&&(t+="?"===n.charAt(0)?n:"?"+n),i&&"#"!==i&&(t+="#"===i.charAt(0)?i:"#"+i),t}function f(e){let t={};if(e){let n=e.indexOf("#");n>=0&&(t.hash=e.substr(n),e=e.substr(0,n));let i=e.indexOf("?");i>=0&&(t.search=e.substr(i),e=e.substr(0,i)),e&&(t.pathname=e)}return t}function p(e,n,i,r){void 0===r&&(r={});let{window:a=document.defaultView,v5Compat:l=!1}=r,o=a.history,u=t.Pop,f=null,p=g();function g(){return(o.state||{idx:null}).idx}function x(){u=t.Pop;let e=g(),n=null==e?null:e-p;p=e,f&&f({action:u,location:_.location,delta:n})}function v(e){let t="null"!==a.location.origin?a.location.origin:a.location.href,n="string"===typeof e?e:m(e);return n=n.replace(/ $/,"%20"),c(t,"No window.location.(origin|href) available to create URL for href: "+n),new URL(n,t)}null==p&&(p=0,o.replaceState(s({},o.state,{idx:p}),""));let _={get action(){return u},get location(){return e(a,o)},listen(e){if(f)throw new Error("A history only accepts one active listener");return a.addEventListener(b,x),f=e,()=>{a.removeEventListener(b,x),f=null}},createHref:e=>n(a,e),createURL:v,encodeLocation(e){let t=v(e);return{pathname:t.pathname,search:t.search,hash:t.hash}},push:function(e,n){u=t.Push;let r=d(_.location,e,n);i&&i(r,e),p=g()+1;let s=h(r,p),b=_.createHref(r);try{o.pushState(s,"",b)}catch(Sx){if(Sx instanceof DOMException&&"DataCloneError"===Sx.name)throw Sx;a.location.assign(b)}l&&f&&f({action:u,location:_.location,delta:1})},replace:function(e,n){u=t.Replace;let r=d(_.location,e,n);i&&i(r,e),p=g();let a=h(r,p),s=_.createHref(r);o.replaceState(a,"",s),l&&f&&f({action:u,location:_.location,delta:0})},go:e=>o.go(e)};return _}var g;!function(e){e.data="data",e.deferred="deferred",e.redirect="redirect",e.error="error"}(g||(g={}));new Set(["lazy","caseSensitive","path","id","index","children"]);function x(e,t,n){return void 0===n&&(n="/"),v(e,t,n,!1)}function v(e,t,n,i){let r=I(("string"===typeof t?f(t):t).pathname||"/",n);if(null==r)return null;let a=_(e);!function(e){e.sort(((e,t)=>e.score!==t.score?t.score-e.score:function(e,t){let n=e.length===t.length&&e.slice(0,-1).every(((e,n)=>e===t[n]));return n?e[e.length-1]-t[t.length-1]:0}(e.routesMeta.map((e=>e.childrenIndex)),t.routesMeta.map((e=>e.childrenIndex)))))}(a);let l=null;for(let o=0;null==l&&o<a.length;++o){let e=L(r);l=R(a[o],e,i)}return l}function _(e,t,n,i){void 0===t&&(t=[]),void 0===n&&(n=[]),void 0===i&&(i="");let r=(e,r,a)=>{let l={relativePath:void 0===a?e.path||"":a,caseSensitive:!0===e.caseSensitive,childrenIndex:r,route:e};l.relativePath.startsWith("/")&&(c(l.relativePath.startsWith(i),'Absolute route path "'+l.relativePath+'" nested under path "'+i+'" is not valid. An absolute child route path must start with the combined path of all its parent routes.'),l.relativePath=l.relativePath.slice(i.length));let o=O([i,l.relativePath]),s=n.concat(l);e.children&&e.children.length>0&&(c(!0!==e.index,'Index routes must not have child routes. Please remove all child routes from route path "'+o+'".'),_(e.children,t,s,o)),(null!=e.path||e.index)&&t.push({path:o,score:C(o,e.index),routesMeta:s})};return e.forEach(((e,t)=>{var n;if(""!==e.path&&null!=(n=e.path)&&n.includes("?"))for(let i of y(e.path))r(e,t,i);else r(e,t)})),t}function y(e){let t=e.split("/");if(0===t.length)return[];let[n,...i]=t,r=n.endsWith("?"),a=n.replace(/\?$/,"");if(0===i.length)return r?[a,""]:[a];let l=y(i.join("/")),o=[];return o.push(...l.map((e=>""===e?a:[a,e].join("/")))),r&&o.push(...l),o.map((t=>e.startsWith("/")&&""===t?"/":t))}const S=/^:[\w-]+$/,M=3,w=2,z=1,E=10,T=-2,A=e=>"*"===e;function C(e,t){let n=e.split("/"),i=n.length;return n.some(A)&&(i+=T),t&&(i+=w),n.filter((e=>!A(e))).reduce(((e,t)=>e+(S.test(t)?M:""===t?z:E)),i)}function R(e,t,n){void 0===n&&(n=!1);let{routesMeta:i}=e,r={},a="/",l=[];for(let o=0;o<i.length;++o){let e=i[o],s=o===i.length-1,b="/"===a?t:t.slice(a.length)||"/",c=P({path:e.relativePath,caseSensitive:e.caseSensitive,end:s},b),u=e.route;if(!c&&s&&n&&!i[i.length-1].route.index&&(c=P({path:e.relativePath,caseSensitive:e.caseSensitive,end:!1},b)),!c)return null;Object.assign(r,c.params),l.push({params:r,pathname:O([a,c.pathname]),pathnameBase:F(O([a,c.pathnameBase])),route:u}),"/"!==c.pathnameBase&&(a=O([a,c.pathnameBase]))}return l}function P(e,t){"string"===typeof e&&(e={path:e,caseSensitive:!1,end:!0});let[n,i]=function(e,t,n){void 0===t&&(t=!1);void 0===n&&(n=!0);u("*"===e||!e.endsWith("*")||e.endsWith("/*"),'Route path "'+e+'" will be treated as if it were "'+e.replace(/\*$/,"/*")+'" because the `*` character must always follow a `/` in the pattern. To get rid of this warning, please change the route path to "'+e.replace(/\*$/,"/*")+'".');let i=[],r="^"+e.replace(/\/*\*?$/,"").replace(/^\/*/,"/").replace(/[\\.*+^${}|()[\]]/g,"\\$&").replace(/\/:([\w-]+)(\?)?/g,((e,t,n)=>(i.push({paramName:t,isOptional:null!=n}),n?"/?([^\\/]+)?":"/([^\\/]+)")));e.endsWith("*")?(i.push({paramName:"*"}),r+="*"===e||"/*"===e?"(.*)$":"(?:\\/(.+)|\\/*)$"):n?r+="\\/*$":""!==e&&"/"!==e&&(r+="(?:(?=\\/|$))");let a=new RegExp(r,t?void 0:"i");return[a,i]}(e.path,e.caseSensitive,e.end),r=t.match(n);if(!r)return null;let a=r[0],l=a.replace(/(.)\/+$/,"$1"),o=r.slice(1);return{params:i.reduce(((e,t,n)=>{let{paramName:i,isOptional:r}=t;if("*"===i){let e=o[n]||"";l=a.slice(0,a.length-e.length).replace(/(.)\/+$/,"$1")}const s=o[n];return e[i]=r&&!s?void 0:(s||"").replace(/%2F/g,"/"),e}),{}),pathname:a,pathnameBase:l,pattern:e}}function L(e){try{return e.split("/").map((e=>decodeURIComponent(e).replace(/\//g,"%2F"))).join("/")}catch(Sx){return u(!1,'The URL path "'+e+'" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent encoding ('+Sx+")."),e}}function I(e,t){if("/"===t)return e;if(!e.toLowerCase().startsWith(t.toLowerCase()))return null;let n=t.endsWith("/")?t.length-1:t.length,i=e.charAt(n);return i&&"/"!==i?null:e.slice(n)||"/"}function N(e,t,n,i){return"Cannot include a '"+e+"' character in a manually specified `to."+t+"` field ["+JSON.stringify(i)+"].  Please separate it out to the `to."+n+'` field. Alternatively you may provide the full path as a string in <Link to="..."> and the router will parse it for you.'}function k(e){return e.filter(((e,t)=>0===t||e.route.path&&e.route.path.length>0))}function D(e,t){let n=k(e);return t?n.map(((e,t)=>t===n.length-1?e.pathname:e.pathnameBase)):n.map((e=>e.pathnameBase))}function U(e,t,n,i){let r;void 0===i&&(i=!1),"string"===typeof e?r=f(e):(r=s({},e),c(!r.pathname||!r.pathname.includes("?"),N("?","pathname","search",r)),c(!r.pathname||!r.pathname.includes("#"),N("#","pathname","hash",r)),c(!r.search||!r.search.includes("#"),N("#","search","hash",r)));let a,l=""===e||""===r.pathname,o=l?"/":r.pathname;if(null==o)a=n;else{let e=t.length-1;if(!i&&o.startsWith("..")){let t=o.split("/");for(;".."===t[0];)t.shift(),e-=1;r.pathname=t.join("/")}a=e>=0?t[e]:"/"}let b=function(e,t){void 0===t&&(t="/");let{pathname:n,search:i="",hash:r=""}="string"===typeof e?f(e):e,a=n?n.startsWith("/")?n:function(e,t){let n=t.replace(/\/+$/,"").split("/");return e.split("/").forEach((e=>{".."===e?n.length>1&&n.pop():"."!==e&&n.push(e)})),n.length>1?n.join("/"):"/"}(n,t):t;return{pathname:a,search:B(i),hash:H(r)}}(r,a),u=o&&"/"!==o&&o.endsWith("/"),h=(l||"."===o)&&n.endsWith("/");return b.pathname.endsWith("/")||!u&&!h||(b.pathname+="/"),b}const O=e=>e.join("/").replace(/\/\/+/g,"/"),F=e=>e.replace(/\/+$/,"").replace(/^\/*/,"/"),B=e=>e&&"?"!==e?e.startsWith("?")?e:"?"+e:"",H=e=>e&&"#"!==e?e.startsWith("#")?e:"#"+e:"";Error;function V(e){return null!=e&&"number"===typeof e.status&&"string"===typeof e.statusText&&"boolean"===typeof e.internal&&"data"in e}const G=["post","put","patch","delete"],W=(new Set(G),["get",...G]);new Set(W),new Set([301,302,303,307,308]),new Set([307,308]);Symbol("deferred");function j(){return j=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e},j.apply(this,arguments)}const X=i.createContext(null);const q=i.createContext(null);const Y=i.createContext(null);const Z=i.createContext(null);const K=i.createContext({outlet:null,matches:[],isDataRoute:!1});const $=i.createContext(null);function J(){return null!=i.useContext(Z)}function Q(){return J()||c(!1),i.useContext(Z).location}function ee(e){i.useContext(Y).static||i.useLayoutEffect(e)}function te(){let{isDataRoute:e}=i.useContext(K);return e?function(){let{router:e}=ue(be.UseNavigateStable),t=de(ce.UseNavigateStable),n=i.useRef(!1);return ee((()=>{n.current=!0})),i.useCallback((function(i,r){void 0===r&&(r={}),n.current&&("number"===typeof i?e.navigate(i):e.navigate(i,j({fromRouteId:t},r)))}),[e,t])}():function(){J()||c(!1);let e=i.useContext(X),{basename:t,future:n,navigator:r}=i.useContext(Y),{matches:a}=i.useContext(K),{pathname:l}=Q(),o=JSON.stringify(D(a,n.v7_relativeSplatPath)),s=i.useRef(!1);return ee((()=>{s.current=!0})),i.useCallback((function(n,i){if(void 0===i&&(i={}),!s.current)return;if("number"===typeof n)return void r.go(n);let a=U(n,JSON.parse(o),l,"path"===i.relative);null==e&&"/"!==t&&(a.pathname="/"===a.pathname?t:O([t,a.pathname])),(i.replace?r.replace:r.push)(a,i.state,i)}),[t,r,o,l,e])}()}function ne(e,t){let{relative:n}=void 0===t?{}:t,{future:r}=i.useContext(Y),{matches:a}=i.useContext(K),{pathname:l}=Q(),o=JSON.stringify(D(a,r.v7_relativeSplatPath));return i.useMemo((()=>U(e,JSON.parse(o),l,"path"===n)),[e,o,l,n])}function ie(e,n,r,a){J()||c(!1);let{navigator:l}=i.useContext(Y),{matches:o}=i.useContext(K),s=o[o.length-1],b=s?s.params:{},u=(s&&s.pathname,s?s.pathnameBase:"/");s&&s.route;let h,d=Q();if(n){var m;let e="string"===typeof n?f(n):n;"/"===u||(null==(m=e.pathname)?void 0:m.startsWith(u))||c(!1),h=e}else h=d;let p=h.pathname||"/",g=p;if("/"!==u){let e=u.replace(/^\//,"").split("/");g="/"+p.replace(/^\//,"").split("/").slice(e.length).join("/")}let v=x(e,{pathname:g});let _=se(v&&v.map((e=>Object.assign({},e,{params:Object.assign({},b,e.params),pathname:O([u,l.encodeLocation?l.encodeLocation(e.pathname).pathname:e.pathname]),pathnameBase:"/"===e.pathnameBase?u:O([u,l.encodeLocation?l.encodeLocation(e.pathnameBase).pathname:e.pathnameBase])}))),o,r,a);return n&&_?i.createElement(Z.Provider,{value:{location:j({pathname:"/",search:"",hash:"",state:null,key:"default"},h),navigationType:t.Pop}},_):_}function re(){let e=function(){var e;let t=i.useContext($),n=he(ce.UseRouteError),r=de(ce.UseRouteError);if(void 0!==t)return t;return null==(e=n.errors)?void 0:e[r]}(),t=V(e)?e.status+" "+e.statusText:e instanceof Error?e.message:JSON.stringify(e),n=e instanceof Error?e.stack:null,r="rgba(200,200,200, 0.5)",a={padding:"0.5rem",backgroundColor:r};return i.createElement(i.Fragment,null,i.createElement("h2",null,"Unexpected Application Error!"),i.createElement("h3",{style:{fontStyle:"italic"}},t),n?i.createElement("pre",{style:a},n):null,null)}const ae=i.createElement(re,null);class le extends i.Component{constructor(e){super(e),this.state={location:e.location,revalidation:e.revalidation,error:e.error}}static getDerivedStateFromError(e){return{error:e}}static getDerivedStateFromProps(e,t){return t.location!==e.location||"idle"!==t.revalidation&&"idle"===e.revalidation?{error:e.error,location:e.location,revalidation:e.revalidation}:{error:void 0!==e.error?e.error:t.error,location:t.location,revalidation:e.revalidation||t.revalidation}}componentDidCatch(e,t){console.error("React Router caught the following error during render",e,t)}render(){return void 0!==this.state.error?i.createElement(K.Provider,{value:this.props.routeContext},i.createElement($.Provider,{value:this.state.error,children:this.props.component})):this.props.children}}function oe(e){let{routeContext:t,match:n,children:r}=e,a=i.useContext(X);return a&&a.static&&a.staticContext&&(n.route.errorElement||n.route.ErrorBoundary)&&(a.staticContext._deepestRenderedBoundaryId=n.route.id),i.createElement(K.Provider,{value:t},r)}function se(e,t,n,r){var a;if(void 0===t&&(t=[]),void 0===n&&(n=null),void 0===r&&(r=null),null==e){var l;if(!n)return null;if(n.errors)e=n.matches;else{if(!(null!=(l=r)&&l.v7_partialHydration&&0===t.length&&!n.initialized&&n.matches.length>0))return null;e=n.matches}}let o=e,s=null==(a=n)?void 0:a.errors;if(null!=s){let e=o.findIndex((e=>e.route.id&&void 0!==(null==s?void 0:s[e.route.id])));e>=0||c(!1),o=o.slice(0,Math.min(o.length,e+1))}let b=!1,u=-1;if(n&&r&&r.v7_partialHydration)for(let i=0;i<o.length;i++){let e=o[i];if((e.route.HydrateFallback||e.route.hydrateFallbackElement)&&(u=i),e.route.id){let{loaderData:t,errors:i}=n,r=e.route.loader&&void 0===t[e.route.id]&&(!i||void 0===i[e.route.id]);if(e.route.lazy||r){b=!0,o=u>=0?o.slice(0,u+1):[o[0]];break}}}return o.reduceRight(((e,r,a)=>{let l,c=!1,h=null,d=null;var m;n&&(l=s&&r.route.id?s[r.route.id]:void 0,h=r.route.errorElement||ae,b&&(u<0&&0===a?(m="route-fallback",!1||me[m]||(me[m]=!0),c=!0,d=null):u===a&&(c=!0,d=r.route.hydrateFallbackElement||null)));let f=t.concat(o.slice(0,a+1)),p=()=>{let t;return t=l?h:c?d:r.route.Component?i.createElement(r.route.Component,null):r.route.element?r.route.element:e,i.createElement(oe,{match:r,routeContext:{outlet:e,matches:f,isDataRoute:null!=n},children:t})};return n&&(r.route.ErrorBoundary||r.route.errorElement||0===a)?i.createElement(le,{location:n.location,revalidation:n.revalidation,component:h,error:l,children:p(),routeContext:{outlet:null,matches:f,isDataRoute:!0}}):p()}),null)}var be=function(e){return e.UseBlocker="useBlocker",e.UseRevalidator="useRevalidator",e.UseNavigateStable="useNavigate",e}(be||{}),ce=function(e){return e.UseBlocker="useBlocker",e.UseLoaderData="useLoaderData",e.UseActionData="useActionData",e.UseRouteError="useRouteError",e.UseNavigation="useNavigation",e.UseRouteLoaderData="useRouteLoaderData",e.UseMatches="useMatches",e.UseRevalidator="useRevalidator",e.UseNavigateStable="useNavigate",e.UseRouteId="useRouteId",e}(ce||{});function ue(e){let t=i.useContext(X);return t||c(!1),t}function he(e){let t=i.useContext(q);return t||c(!1),t}function de(e){let t=function(){let e=i.useContext(K);return e||c(!1),e}(),n=t.matches[t.matches.length-1];return n.route.id||c(!1),n.route.id}const me={};r.startTransition;function fe(e){let{to:t,replace:n,state:r,relative:a}=e;J()||c(!1);let{future:l,static:o}=i.useContext(Y),{matches:s}=i.useContext(K),{pathname:b}=Q(),u=te(),h=U(t,D(s,l.v7_relativeSplatPath),b,"path"===a),d=JSON.stringify(h);return i.useEffect((()=>u(JSON.parse(d),{replace:n,state:r,relative:a})),[u,d,a,n,r]),null}function pe(e){c(!1)}function ge(e){let{basename:n="/",children:r=null,location:a,navigationType:l=t.Pop,navigator:o,static:s=!1,future:b}=e;J()&&c(!1);let u=n.replace(/^\/*/,"/"),h=i.useMemo((()=>({basename:u,navigator:o,static:s,future:j({v7_relativeSplatPath:!1},b)})),[u,b,o,s]);"string"===typeof a&&(a=f(a));let{pathname:d="/",search:m="",hash:p="",state:g=null,key:x="default"}=a,v=i.useMemo((()=>{let e=I(d,u);return null==e?null:{location:{pathname:e,search:m,hash:p,state:g,key:x},navigationType:l}}),[u,d,m,p,g,x,l]);return null==v?null:i.createElement(Y.Provider,{value:h},i.createElement(Z.Provider,{children:r,value:v}))}function xe(e){let{children:t,location:n}=e;return ie(ve(t),n)}new Promise((()=>{}));i.Component;function ve(e,t){void 0===t&&(t=[]);let n=[];return i.Children.forEach(e,((e,r)=>{if(!i.isValidElement(e))return;let a=[...t,r];if(e.type===i.Fragment)return void n.push.apply(n,ve(e.props.children,a));e.type!==pe&&c(!1),e.props.index&&e.props.children&&c(!1);let l={id:e.props.id||a.join("-"),caseSensitive:e.props.caseSensitive,element:e.props.element,Component:e.props.Component,index:e.props.index,path:e.props.path,loader:e.props.loader,action:e.props.action,errorElement:e.props.errorElement,ErrorBoundary:e.props.ErrorBoundary,hasErrorBoundary:null!=e.props.ErrorBoundary||null!=e.props.errorElement,shouldRevalidate:e.props.shouldRevalidate,handle:e.props.handle,lazy:e.props.lazy};e.props.children&&(l.children=ve(e.props.children,a)),n.push(l)})),n}function _e(){return _e=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e},_e.apply(this,arguments)}function ye(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}new Set(["application/x-www-form-urlencoded","multipart/form-data","text/plain"]);const Se=["onClick","relative","reloadDocument","replace","state","target","to","preventScrollReset","unstable_viewTransition"];try{window.__reactRouterVersion="6"}catch(VS){}new Map;const Me=r.startTransition;o.flushSync,r.useId;function we(e){let{basename:t,children:n,future:r,window:a}=e,l=i.useRef();var o;null==l.current&&(l.current=(void 0===(o={window:a,v5Compat:!0})&&(o={}),p((function(e,t){let{pathname:n,search:i,hash:r}=e.location;return d("",{pathname:n,search:i,hash:r},t.state&&t.state.usr||null,t.state&&t.state.key||"default")}),(function(e,t){return"string"===typeof t?t:m(t)}),null,o)));let s=l.current,[b,c]=i.useState({action:s.action,location:s.location}),{v7_startTransition:u}=r||{},h=i.useCallback((e=>{u&&Me?Me((()=>c(e))):c(e)}),[c,u]);return i.useLayoutEffect((()=>s.listen(h)),[s,h]),i.createElement(ge,{basename:t,children:n,location:b.location,navigationType:b.action,navigator:s,future:r})}const ze="undefined"!==typeof window&&"undefined"!==typeof window.document&&"undefined"!==typeof window.document.createElement,Ee=/^(?:[a-z][a-z0-9+.-]*:|\/\/)/i,Te=i.forwardRef((function(e,t){let n,{onClick:r,relative:a,reloadDocument:l,replace:o,state:s,target:b,to:u,preventScrollReset:h,unstable_viewTransition:d}=e,f=ye(e,Se),{basename:p}=i.useContext(Y),g=!1;if("string"===typeof u&&Ee.test(u)&&(n=u,ze))try{let e=new URL(window.location.href),t=u.startsWith("//")?new URL(e.protocol+u):new URL(u),n=I(t.pathname,p);t.origin===e.origin&&null!=n?u=n+t.search+t.hash:g=!0}catch(VS){}let x=function(e,t){let{relative:n}=void 0===t?{}:t;J()||c(!1);let{basename:r,navigator:a}=i.useContext(Y),{hash:l,pathname:o,search:s}=ne(e,{relative:n}),b=o;return"/"!==r&&(b="/"===o?r:O([r,o])),a.createHref({pathname:b,search:s,hash:l})}(u,{relative:a}),v=function(e,t){let{target:n,replace:r,state:a,preventScrollReset:l,relative:o,unstable_viewTransition:s}=void 0===t?{}:t,b=te(),c=Q(),u=ne(e,{relative:o});return i.useCallback((t=>{if(function(e,t){return 0===e.button&&(!t||"_self"===t)&&!function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e)}(t,n)){t.preventDefault();let n=void 0!==r?r:m(c)===m(u);b(e,{replace:n,state:a,preventScrollReset:l,relative:o,unstable_viewTransition:s})}}),[c,b,u,r,a,n,e,l,o,s])}(u,{replace:o,state:s,target:b,preventScrollReset:h,relative:a,unstable_viewTransition:d});return i.createElement("a",_e({},f,{href:n||x,onClick:g||l?r:function(e){r&&r(e),e.defaultPrevented||v(e)},ref:t,target:b}))}));var Ae,Ce;(function(e){e.UseScrollRestoration="useScrollRestoration",e.UseSubmit="useSubmit",e.UseSubmitFetcher="useSubmitFetcher",e.UseFetcher="useFetcher",e.useViewTransitionState="useViewTransitionState"})(Ae||(Ae={})),function(e){e.UseFetcher="useFetcher",e.UseFetchers="useFetchers",e.UseScrollRestoration="useScrollRestoration"}(Ce||(Ce={}));const Re="168",Pe={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},Le={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},Ie=0,Ne=1,ke=2,De=3,Ue=0,Oe=1,Fe=2,Be=3,He=0,Ve=1,Ge=2,We=0,je=1,Xe=2,qe=3,Ye=4,Ze=5,Ke=100,$e=101,Je=102,Qe=103,et=104,tt=200,nt=201,it=202,rt=203,at=204,lt=205,ot=206,st=207,bt=208,ct=209,ut=210,ht=211,dt=212,mt=213,ft=214,pt=0,gt=1,xt=2,vt=3,_t=4,yt=5,St=6,Mt=7,wt=0,zt=1,Et=2,Tt=0,At=1,Ct=2,Rt=3,Pt=4,Lt=5,It=6,Nt=7,kt="attached",Dt="detached",Ut=300,Ot=301,Ft=302,Bt=303,Ht=304,Vt=306,Gt=1e3,Wt=1001,jt=1002,Xt=1003,qt=1004,Yt=1004,Zt=1005,Kt=1005,$t=1006,Jt=1007,Qt=1007,en=1008,tn=1008,nn=1009,rn=1010,an=1011,ln=1012,on=1013,sn=1014,bn=1015,cn=1016,un=1017,hn=1018,dn=1020,mn=35902,fn=1021,pn=1022,gn=1023,xn=1024,vn=1025,_n=1026,yn=1027,Sn=1028,Mn=1029,wn=1030,zn=1031,En=1032,Tn=1033,An=33776,Cn=33777,Rn=33778,Pn=33779,Ln=35840,In=35841,Nn=35842,kn=35843,Dn=36196,Un=37492,On=37496,Fn=37808,Bn=37809,Hn=37810,Vn=37811,Gn=37812,Wn=37813,jn=37814,Xn=37815,qn=37816,Yn=37817,Zn=37818,Kn=37819,$n=37820,Jn=37821,Qn=36492,ei=36494,ti=36495,ni=36283,ii=36284,ri=36285,ai=36286,li=2200,oi=2201,si=2202,bi=2300,ci=2301,ui=2302,hi=2400,di=2401,mi=2402,fi=2500,pi=2501,gi=0,xi=1,vi=2,_i=3200,yi=3201,Si=3202,Mi=3203,wi=0,zi=1,Ei="",Ti="srgb",Ai="srgb-linear",Ci="display-p3",Ri="display-p3-linear",Pi="linear",Li="srgb",Ii="rec709",Ni="p3",ki=0,Di=7680,Ui=7681,Oi=7682,Fi=7683,Bi=34055,Hi=34056,Vi=5386,Gi=512,Wi=513,ji=514,Xi=515,qi=516,Yi=517,Zi=518,Ki=519,$i=512,Ji=513,Qi=514,er=515,tr=516,nr=517,ir=518,rr=519,ar=35044,lr=35048,or=35040,sr=35045,br=35049,cr=35041,ur=35046,hr=35050,dr=35042,mr="100",fr="300 es",pr=2e3,gr=2001;class xr{addEventListener(e,t){void 0===this._listeners&&(this._listeners={});const n=this._listeners;void 0===n[e]&&(n[e]=[]),-1===n[e].indexOf(t)&&n[e].push(t)}hasEventListener(e,t){if(void 0===this._listeners)return!1;const n=this._listeners;return void 0!==n[e]&&-1!==n[e].indexOf(t)}removeEventListener(e,t){if(void 0===this._listeners)return;const n=this._listeners[e];if(void 0!==n){const e=n.indexOf(t);-1!==e&&n.splice(e,1)}}dispatchEvent(e){if(void 0===this._listeners)return;const t=this._listeners[e.type];if(void 0!==t){e.target=this;const n=t.slice(0);for(let t=0,i=n.length;t<i;t++)n[t].call(this,e);e.target=null}}}const vr=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let _r=1234567;const yr=Math.PI/180,Sr=180/Math.PI;function Mr(){const e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,n=4294967295*Math.random()|0,i=4294967295*Math.random()|0;return(vr[255&e]+vr[e>>8&255]+vr[e>>16&255]+vr[e>>24&255]+"-"+vr[255&t]+vr[t>>8&255]+"-"+vr[t>>16&15|64]+vr[t>>24&255]+"-"+vr[63&n|128]+vr[n>>8&255]+"-"+vr[n>>16&255]+vr[n>>24&255]+vr[255&i]+vr[i>>8&255]+vr[i>>16&255]+vr[i>>24&255]).toLowerCase()}function wr(e,t,n){return Math.max(t,Math.min(n,e))}function zr(e,t){return(e%t+t)%t}function Er(e,t,n){return(1-n)*e+n*t}function Tr(e,t){switch(t.constructor){case Float32Array:return e;case Uint32Array:return e/4294967295;case Uint16Array:return e/65535;case Uint8Array:return e/255;case Int32Array:return Math.max(e/2147483647,-1);case Int16Array:return Math.max(e/32767,-1);case Int8Array:return Math.max(e/127,-1);default:throw new Error("Invalid component type.")}}function Ar(e,t){switch(t.constructor){case Float32Array:return e;case Uint32Array:return Math.round(4294967295*e);case Uint16Array:return Math.round(65535*e);case Uint8Array:return Math.round(255*e);case Int32Array:return Math.round(2147483647*e);case Int16Array:return Math.round(32767*e);case Int8Array:return Math.round(127*e);default:throw new Error("Invalid component type.")}}const Cr={DEG2RAD:yr,RAD2DEG:Sr,generateUUID:Mr,clamp:wr,euclideanModulo:zr,mapLinear:function(e,t,n,i,r){return i+(e-t)*(r-i)/(n-t)},inverseLerp:function(e,t,n){return e!==t?(n-e)/(t-e):0},lerp:Er,damp:function(e,t,n,i){return Er(e,t,1-Math.exp(-n*i))},pingpong:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return t-Math.abs(zr(e,2*t)-t)},smoothstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t))*e*(3-2*e)},smootherstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t))*e*e*(e*(6*e-15)+10)},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},seededRandom:function(e){void 0!==e&&(_r=e);let t=_r+=1831565813;return t=Math.imul(t^t>>>15,1|t),t^=t+Math.imul(t^t>>>7,61|t),((t^t>>>14)>>>0)/4294967296},degToRad:function(e){return e*yr},radToDeg:function(e){return e*Sr},isPowerOfTwo:function(e){return 0===(e&e-1)&&0!==e},ceilPowerOfTwo:function(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.LN2))},floorPowerOfTwo:function(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))},setQuaternionFromProperEuler:function(e,t,n,i,r){const a=Math.cos,l=Math.sin,o=a(n/2),s=l(n/2),b=a((t+i)/2),c=l((t+i)/2),u=a((t-i)/2),h=l((t-i)/2),d=a((i-t)/2),m=l((i-t)/2);switch(r){case"XYX":e.set(o*c,s*u,s*h,o*b);break;case"YZY":e.set(s*h,o*c,s*u,o*b);break;case"ZXZ":e.set(s*u,s*h,o*c,o*b);break;case"XZX":e.set(o*c,s*m,s*d,o*b);break;case"YXY":e.set(s*d,o*c,s*m,o*b);break;case"ZYZ":e.set(s*m,s*d,o*c,o*b);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}},normalize:Ar,denormalize:Tr};class Rr{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;Rr.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(wr(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.x=e[t],this.y=e[t+1],this}toArray(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),r=this.x-e.x,a=this.y-e.y;return this.x=r*n-a*i+e.x,this.y=r*i+a*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Pr{constructor(e,t,n,i,r,a,l,o,s){Pr.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],void 0!==e&&this.set(e,t,n,i,r,a,l,o,s)}set(e,t,n,i,r,a,l,o,s){const b=this.elements;return b[0]=e,b[1]=i,b[2]=l,b[3]=t,b[4]=r,b[5]=o,b[6]=n,b[7]=a,b[8]=s,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,a=n[0],l=n[3],o=n[6],s=n[1],b=n[4],c=n[7],u=n[2],h=n[5],d=n[8],m=i[0],f=i[3],p=i[6],g=i[1],x=i[4],v=i[7],_=i[2],y=i[5],S=i[8];return r[0]=a*m+l*g+o*_,r[3]=a*f+l*x+o*y,r[6]=a*p+l*v+o*S,r[1]=s*m+b*g+c*_,r[4]=s*f+b*x+c*y,r[7]=s*p+b*v+c*S,r[2]=u*m+h*g+d*_,r[5]=u*f+h*x+d*y,r[8]=u*p+h*v+d*S,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],l=e[5],o=e[6],s=e[7],b=e[8];return t*a*b-t*l*s-n*r*b+n*l*o+i*r*s-i*a*o}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],l=e[5],o=e[6],s=e[7],b=e[8],c=b*a-l*s,u=l*o-b*r,h=s*r-a*o,d=t*c+n*u+i*h;if(0===d)return this.set(0,0,0,0,0,0,0,0,0);const m=1/d;return e[0]=c*m,e[1]=(i*s-b*n)*m,e[2]=(l*n-i*a)*m,e[3]=u*m,e[4]=(b*t-i*o)*m,e[5]=(i*r-l*t)*m,e[6]=h*m,e[7]=(n*o-s*t)*m,e[8]=(a*t-n*r)*m,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,r,a,l){const o=Math.cos(r),s=Math.sin(r);return this.set(n*o,n*s,-n*(o*a+s*l)+a+e,-i*s,i*o,-i*(-s*a+o*l)+l+t,0,0,1),this}scale(e,t){return this.premultiply(Lr.makeScale(e,t)),this}rotate(e){return this.premultiply(Lr.makeRotation(-e)),this}translate(e,t){return this.premultiply(Lr.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return(new this.constructor).fromArray(this.elements)}}const Lr=new Pr;function Ir(e){for(let t=e.length-1;t>=0;--t)if(e[t]>=65535)return!0;return!1}const Nr={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function kr(e,t){return new Nr[e](t)}function Dr(e){return document.createElementNS("http://www.w3.org/1999/xhtml",e)}function Ur(){const e=Dr("canvas");return e.style.display="block",e}const Or={};function Fr(e){e in Or||(Or[e]=!0,console.warn(e))}const Br=(new Pr).set(.8224621,.177538,0,.0331941,.9668058,0,.0170827,.0723974,.9105199),Hr=(new Pr).set(1.2249401,-.2249404,0,-.0420569,1.0420571,0,-.0196376,-.0786361,1.0982735),Vr={[Ai]:{transfer:Pi,primaries:Ii,luminanceCoefficients:[.2126,.7152,.0722],toReference:e=>e,fromReference:e=>e},[Ti]:{transfer:Li,primaries:Ii,luminanceCoefficients:[.2126,.7152,.0722],toReference:e=>e.convertSRGBToLinear(),fromReference:e=>e.convertLinearToSRGB()},[Ri]:{transfer:Pi,primaries:Ni,luminanceCoefficients:[.2289,.6917,.0793],toReference:e=>e.applyMatrix3(Hr),fromReference:e=>e.applyMatrix3(Br)},[Ci]:{transfer:Li,primaries:Ni,luminanceCoefficients:[.2289,.6917,.0793],toReference:e=>e.convertSRGBToLinear().applyMatrix3(Hr),fromReference:e=>e.applyMatrix3(Br).convertLinearToSRGB()}},Gr=new Set([Ai,Ri]),Wr={enabled:!0,_workingColorSpace:Ai,get workingColorSpace(){return this._workingColorSpace},set workingColorSpace(e){if(!Gr.has(e))throw new Error(`Unsupported working color space, "${e}".`);this._workingColorSpace=e},convert:function(e,t,n){if(!1===this.enabled||t===n||!t||!n)return e;const i=Vr[t].toReference;return(0,Vr[n].fromReference)(i(e))},fromWorkingColorSpace:function(e,t){return this.convert(e,this._workingColorSpace,t)},toWorkingColorSpace:function(e,t){return this.convert(e,t,this._workingColorSpace)},getPrimaries:function(e){return Vr[e].primaries},getTransfer:function(e){return e===Ei?Pi:Vr[e].transfer},getLuminanceCoefficients:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this._workingColorSpace;return e.fromArray(Vr[t].luminanceCoefficients)}};function jr(e){return e<.04045?.0773993808*e:Math.pow(.9478672986*e+.0521327014,2.4)}function Xr(e){return e<.0031308?12.92*e:1.055*Math.pow(e,.41666)-.055}let qr;class Yr{static getDataURL(e){if(/^data:/i.test(e.src))return e.src;if("undefined"===typeof HTMLCanvasElement)return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{void 0===qr&&(qr=Dr("canvas")),qr.width=e.width,qr.height=e.height;const n=qr.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=qr}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if("undefined"!==typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!==typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!==typeof ImageBitmap&&e instanceof ImageBitmap){const t=Dr("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),r=i.data;for(let e=0;e<r.length;e++)r[e]=255*jr(r[e]/255);return n.putImageData(i,0,0),t}if(e.data){const t=e.data.slice(0);for(let e=0;e<t.length;e++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[e]=Math.floor(255*jr(t[e]/255)):t[e]=jr(t[e]);return{data:t,width:e.width,height:e.height}}return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let Zr=0;class Kr{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;this.isSource=!0,Object.defineProperty(this,"id",{value:Zr++}),this.uuid=Mr(),this.data=e,this.dataReady=!0,this.version=0}set needsUpdate(e){!0===e&&this.version++}toJSON(e){const t=void 0===e||"string"===typeof e;if(!t&&void 0!==e.images[this.uuid])return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(null!==i){let e;if(Array.isArray(i)){e=[];for(let t=0,n=i.length;t<n;t++)i[t].isDataTexture?e.push($r(i[t].image)):e.push($r(i[t]))}else e=$r(i);n.url=e}return t||(e.images[this.uuid]=n),n}}function $r(e){return"undefined"!==typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!==typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!==typeof ImageBitmap&&e instanceof ImageBitmap?Yr.getDataURL(e):e.data?{data:Array.from(e.data),width:e.width,height:e.height,type:e.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let Jr=0;class Qr extends xr{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Qr.DEFAULT_IMAGE,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Qr.DEFAULT_MAPPING,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Wt,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Wt,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:$t,a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:en,l=arguments.length>6&&void 0!==arguments[6]?arguments[6]:gn,o=arguments.length>7&&void 0!==arguments[7]?arguments[7]:nn,s=arguments.length>8&&void 0!==arguments[8]?arguments[8]:Qr.DEFAULT_ANISOTROPY,b=arguments.length>9&&void 0!==arguments[9]?arguments[9]:Ei;super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Jr++}),this.uuid=Mr(),this.name="",this.source=new Kr(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=a,this.anisotropy=s,this.format=l,this.internalFormat=null,this.type=o,this.offset=new Rr(0,0),this.repeat=new Rr(1,1),this.center=new Rr(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Pr,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=b,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(e){void 0===e&&(e=null),this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=void 0===e||"string"===typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==Ut)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case Gt:e.x=e.x-Math.floor(e.x);break;case Wt:e.x=e.x<0?0:1;break;case jt:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||e.y>1)switch(this.wrapT){case Gt:e.y=e.y-Math.floor(e.y);break;case Wt:e.y=e.y<0?0:1;break;case jt:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){!0===e&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){!0===e&&this.pmremVersion++}}Qr.DEFAULT_IMAGE=null,Qr.DEFAULT_MAPPING=Ut,Qr.DEFAULT_ANISOTROPY=1;class ea{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;ea.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=this.w,a=e.elements;return this.x=a[0]*t+a[4]*n+a[8]*i+a[12]*r,this.y=a[1]*t+a[5]*n+a[9]*i+a[13]*r,this.z=a[2]*t+a[6]*n+a[10]*i+a[14]*r,this.w=a[3]*t+a[7]*n+a[11]*i+a[15]*r,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,r;const a=.01,l=.1,o=e.elements,s=o[0],b=o[4],c=o[8],u=o[1],h=o[5],d=o[9],m=o[2],f=o[6],p=o[10];if(Math.abs(b-u)<a&&Math.abs(c-m)<a&&Math.abs(d-f)<a){if(Math.abs(b+u)<l&&Math.abs(c+m)<l&&Math.abs(d+f)<l&&Math.abs(s+h+p-3)<l)return this.set(1,0,0,0),this;t=Math.PI;const e=(s+1)/2,o=(h+1)/2,g=(p+1)/2,x=(b+u)/4,v=(c+m)/4,_=(d+f)/4;return e>o&&e>g?e<a?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(e),i=x/n,r=v/n):o>g?o<a?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(o),n=x/i,r=_/i):g<a?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(g),n=v/r,i=_/r),this.set(n,i,r,t),this}let g=Math.sqrt((f-d)*(f-d)+(c-m)*(c-m)+(u-b)*(u-b));return Math.abs(g)<.001&&(g=1),this.x=(f-d)/g,this.y=(c-m)/g,this.z=(u-b)/g,this.w=Math.acos((s+h+p-1)/2),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this.w=t[15],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class ta extends xr{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new ea(0,0,e,t),this.scissorTest=!1,this.viewport=new ea(0,0,e,t);const i={width:e,height:t,depth:1};n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:$t,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1},n);const r=new Qr(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace);r.flipY=!1,r.generateMipmaps=n.generateMipmaps,r.internalFormat=n.internalFormat,this.textures=[];const a=n.count;for(let l=0;l<a;l++)this.textures[l]=r.clone(),this.textures[l].isRenderTargetTexture=!0;this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.resolveDepthBuffer=n.resolveDepthBuffer,this.resolveStencilBuffer=n.resolveStencilBuffer,this.depthTexture=n.depthTexture,this.samples=n.samples}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}setSize(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,r=this.textures.length;i<r;i++)this.textures[i].image.width=e,this.textures[i].image.height=t,this.textures[i].image.depth=n;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return(new this.constructor).copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let n=0,i=e.textures.length;n<i;n++)this.textures[n]=e.textures[n].clone(),this.textures[n].isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new Kr(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,null!==e.depthTexture&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class na extends ta{constructor(){super(arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,arguments.length>2&&void 0!==arguments[2]?arguments[2]:{}),this.isWebGLRenderTarget=!0}}class ia extends Qr{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=Xt,this.minFilter=Xt,this.wrapR=Wt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class ra extends na{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;super(e,t,arguments.length>3&&void 0!==arguments[3]?arguments[3]:{}),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new ia(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class aa extends Qr{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=Xt,this.minFilter=Xt,this.wrapR=Wt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class la extends na{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;super(e,t,arguments.length>3&&void 0!==arguments[3]?arguments[3]:{}),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new aa(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class oa{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,r,a,l){let o=n[i+0],s=n[i+1],b=n[i+2],c=n[i+3];const u=r[a+0],h=r[a+1],d=r[a+2],m=r[a+3];if(0===l)return e[t+0]=o,e[t+1]=s,e[t+2]=b,void(e[t+3]=c);if(1===l)return e[t+0]=u,e[t+1]=h,e[t+2]=d,void(e[t+3]=m);if(c!==m||o!==u||s!==h||b!==d){let e=1-l;const t=o*u+s*h+b*d+c*m,n=t>=0?1:-1,i=1-t*t;if(i>Number.EPSILON){const r=Math.sqrt(i),a=Math.atan2(r,t*n);e=Math.sin(e*a)/r,l=Math.sin(l*a)/r}const r=l*n;if(o=o*e+u*r,s=s*e+h*r,b=b*e+d*r,c=c*e+m*r,e===1-l){const e=1/Math.sqrt(o*o+s*s+b*b+c*c);o*=e,s*=e,b*=e,c*=e}}e[t]=o,e[t+1]=s,e[t+2]=b,e[t+3]=c}static multiplyQuaternionsFlat(e,t,n,i,r,a){const l=n[i],o=n[i+1],s=n[i+2],b=n[i+3],c=r[a],u=r[a+1],h=r[a+2],d=r[a+3];return e[t]=l*d+b*c+o*h-s*u,e[t+1]=o*d+b*u+s*c-l*h,e[t+2]=s*d+b*h+l*u-o*c,e[t+3]=b*d-l*c-o*u-s*h,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=e._x,i=e._y,r=e._z,a=e._order,l=Math.cos,o=Math.sin,s=l(n/2),b=l(i/2),c=l(r/2),u=o(n/2),h=o(i/2),d=o(r/2);switch(a){case"XYZ":this._x=u*b*c+s*h*d,this._y=s*h*c-u*b*d,this._z=s*b*d+u*h*c,this._w=s*b*c-u*h*d;break;case"YXZ":this._x=u*b*c+s*h*d,this._y=s*h*c-u*b*d,this._z=s*b*d-u*h*c,this._w=s*b*c+u*h*d;break;case"ZXY":this._x=u*b*c-s*h*d,this._y=s*h*c+u*b*d,this._z=s*b*d+u*h*c,this._w=s*b*c-u*h*d;break;case"ZYX":this._x=u*b*c-s*h*d,this._y=s*h*c+u*b*d,this._z=s*b*d-u*h*c,this._w=s*b*c+u*h*d;break;case"YZX":this._x=u*b*c+s*h*d,this._y=s*h*c+u*b*d,this._z=s*b*d-u*h*c,this._w=s*b*c-u*h*d;break;case"XZY":this._x=u*b*c-s*h*d,this._y=s*h*c-u*b*d,this._z=s*b*d+u*h*c,this._w=s*b*c+u*h*d;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return!0===t&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],r=t[8],a=t[1],l=t[5],o=t[9],s=t[2],b=t[6],c=t[10],u=n+l+c;if(u>0){const e=.5/Math.sqrt(u+1);this._w=.25/e,this._x=(b-o)*e,this._y=(r-s)*e,this._z=(a-i)*e}else if(n>l&&n>c){const e=2*Math.sqrt(1+n-l-c);this._w=(b-o)/e,this._x=.25*e,this._y=(i+a)/e,this._z=(r+s)/e}else if(l>c){const e=2*Math.sqrt(1+l-n-c);this._w=(r-s)/e,this._x=(i+a)/e,this._y=.25*e,this._z=(o+b)/e}else{const e=2*Math.sqrt(1+c-n-l);this._w=(a-i)/e,this._x=(r+s)/e,this._y=(o+b)/e,this._z=.25*e}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(wr(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(0===n)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,r=e._z,a=e._w,l=t._x,o=t._y,s=t._z,b=t._w;return this._x=n*b+a*l+i*s-r*o,this._y=i*b+a*o+r*l-n*s,this._z=r*b+a*s+n*o-i*l,this._w=a*b-n*l-i*o-r*s,this._onChangeCallback(),this}slerp(e,t){if(0===t)return this;if(1===t)return this.copy(e);const n=this._x,i=this._y,r=this._z,a=this._w;let l=a*e._w+n*e._x+i*e._y+r*e._z;if(l<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,l=-l):this.copy(e),l>=1)return this._w=a,this._x=n,this._y=i,this._z=r,this;const o=1-l*l;if(o<=Number.EPSILON){const e=1-t;return this._w=e*a+t*this._w,this._x=e*n+t*this._x,this._y=e*i+t*this._y,this._z=e*r+t*this._z,this.normalize(),this}const s=Math.sqrt(o),b=Math.atan2(s,l),c=Math.sin((1-t)*b)/s,u=Math.sin(t*b)/s;return this._w=a*c+this._w*u,this._x=n*c+this._x*u,this._y=i*c+this._y*u,this._z=r*c+this._z*u,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),n=Math.random(),i=Math.sqrt(1-n),r=Math.sqrt(n);return this.set(i*Math.sin(e),i*Math.cos(e),r*Math.sin(t),r*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class sa{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;sa.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return void 0===n&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(ca.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(ca.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6]*i,this.y=r[1]*t+r[4]*n+r[7]*i,this.z=r[2]*t+r[5]*n+r[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=e.elements,a=1/(r[3]*t+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*t+r[4]*n+r[8]*i+r[12])*a,this.y=(r[1]*t+r[5]*n+r[9]*i+r[13])*a,this.z=(r[2]*t+r[6]*n+r[10]*i+r[14])*a,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,r=e.x,a=e.y,l=e.z,o=e.w,s=2*(a*i-l*n),b=2*(l*t-r*i),c=2*(r*n-a*t);return this.x=t+o*s+a*c-l*b,this.y=n+o*b+l*s-r*c,this.z=i+o*c+r*b-a*s,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*i,this.y=r[1]*t+r[5]*n+r[9]*i,this.z=r[2]*t+r[6]*n+r[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,r=e.z,a=t.x,l=t.y,o=t.z;return this.x=i*o-r*l,this.y=r*a-n*o,this.z=n*l-i*a,this}projectOnVector(e){const t=e.lengthSq();if(0===t)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return ba.copy(this).projectOnVector(e),this.sub(ba)}reflect(e){return this.sub(ba.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(wr(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,4*t)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,3*t)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=2*Math.random()-1,n=Math.sqrt(1-t*t);return this.x=n*Math.cos(e),this.y=t,this.z=n*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const ba=new sa,ca=new oa;class ua{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new sa(1/0,1/0,1/0),t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new sa(-1/0,-1/0,-1/0);this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(da.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(da.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=da.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this.makeEmpty(),this.expandByObject(e,t)}clone(){return(new this.constructor).copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];e.updateWorldMatrix(!1,!1);const n=e.geometry;if(void 0!==n){const i=n.getAttribute("position");if(!0===t&&void 0!==i&&!0!==e.isInstancedMesh)for(let t=0,n=i.count;t<n;t++)!0===e.isMesh?e.getVertexPosition(t,da):da.fromBufferAttribute(i,t),da.applyMatrix4(e.matrixWorld),this.expandByPoint(da);else void 0!==e.boundingBox?(null===e.boundingBox&&e.computeBoundingBox(),ma.copy(e.boundingBox)):(null===n.boundingBox&&n.computeBoundingBox(),ma.copy(n.boundingBox)),ma.applyMatrix4(e.matrixWorld),this.union(ma)}const i=e.children;for(let r=0,a=i.length;r<a;r++)this.expandByObject(i[r],t);return this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y&&e.z>=this.min.z&&e.z<=this.max.z}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y&&e.max.z>=this.min.z&&e.min.z<=this.max.z}intersectsSphere(e){return this.clampPoint(e.center,da),da.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(ya),Sa.subVectors(this.max,ya),fa.subVectors(e.a,ya),pa.subVectors(e.b,ya),ga.subVectors(e.c,ya),xa.subVectors(pa,fa),va.subVectors(ga,pa),_a.subVectors(fa,ga);let t=[0,-xa.z,xa.y,0,-va.z,va.y,0,-_a.z,_a.y,xa.z,0,-xa.x,va.z,0,-va.x,_a.z,0,-_a.x,-xa.y,xa.x,0,-va.y,va.x,0,-_a.y,_a.x,0];return!!za(t,fa,pa,ga,Sa)&&(t=[1,0,0,0,1,0,0,0,1],!!za(t,fa,pa,ga,Sa)&&(Ma.crossVectors(xa,va),t=[Ma.x,Ma.y,Ma.z],za(t,fa,pa,ga,Sa)))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,da).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=.5*this.getSize(da).length()),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()||(ha[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),ha[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),ha[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),ha[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),ha[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),ha[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),ha[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),ha[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(ha)),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const ha=[new sa,new sa,new sa,new sa,new sa,new sa,new sa,new sa],da=new sa,ma=new ua,fa=new sa,pa=new sa,ga=new sa,xa=new sa,va=new sa,_a=new sa,ya=new sa,Sa=new sa,Ma=new sa,wa=new sa;function za(e,t,n,i,r){for(let a=0,l=e.length-3;a<=l;a+=3){wa.fromArray(e,a);const l=r.x*Math.abs(wa.x)+r.y*Math.abs(wa.y)+r.z*Math.abs(wa.z),o=t.dot(wa),s=n.dot(wa),b=i.dot(wa);if(Math.max(-Math.max(o,s,b),Math.min(o,s,b))>l)return!1}return!0}const Ea=new ua,Ta=new sa,Aa=new sa;class Ca{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new sa,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;void 0!==t?n.copy(t):Ea.setFromPoints(e).getCenter(n);let i=0;for(let r=0,a=e.length;r<a;r++)i=Math.max(i,n.distanceToSquared(e[r]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;Ta.subVectors(e,this.center);const t=Ta.lengthSq();if(t>this.radius*this.radius){const e=Math.sqrt(t),n=.5*(e-this.radius);this.center.addScaledVector(Ta,n/e),this.radius+=n}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(!0===this.center.equals(e.center)?this.radius=Math.max(this.radius,e.radius):(Aa.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(Ta.copy(e.center).add(Aa)),this.expandByPoint(Ta.copy(e.center).sub(Aa))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const Ra=new sa,Pa=new sa,La=new sa,Ia=new sa,Na=new sa,ka=new sa,Da=new sa;class Ua{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new sa,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new sa(0,0,-1);this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Ra)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Ra.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Ra.copy(this.origin).addScaledVector(this.direction,t),Ra.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){Pa.copy(e).add(t).multiplyScalar(.5),La.copy(t).sub(e).normalize(),Ia.copy(this.origin).sub(Pa);const r=.5*e.distanceTo(t),a=-this.direction.dot(La),l=Ia.dot(this.direction),o=-Ia.dot(La),s=Ia.lengthSq(),b=Math.abs(1-a*a);let c,u,h,d;if(b>0)if(c=a*o-l,u=a*l-o,d=r*b,c>=0)if(u>=-d)if(u<=d){const e=1/b;c*=e,u*=e,h=c*(c+a*u+2*l)+u*(a*c+u+2*o)+s}else u=r,c=Math.max(0,-(a*u+l)),h=-c*c+u*(u+2*o)+s;else u=-r,c=Math.max(0,-(a*u+l)),h=-c*c+u*(u+2*o)+s;else u<=-d?(c=Math.max(0,-(-a*r+l)),u=c>0?-r:Math.min(Math.max(-r,-o),r),h=-c*c+u*(u+2*o)+s):u<=d?(c=0,u=Math.min(Math.max(-r,-o),r),h=u*(u+2*o)+s):(c=Math.max(0,-(a*r+l)),u=c>0?r:Math.min(Math.max(-r,-o),r),h=-c*c+u*(u+2*o)+s);else u=a>0?-r:r,c=Math.max(0,-(a*u+l)),h=-c*c+u*(u+2*o)+s;return n&&n.copy(this.origin).addScaledVector(this.direction,c),i&&i.copy(Pa).addScaledVector(La,u),h}intersectSphere(e,t){Ra.subVectors(e.center,this.origin);const n=Ra.dot(this.direction),i=Ra.dot(Ra)-n*n,r=e.radius*e.radius;if(i>r)return null;const a=Math.sqrt(r-i),l=n-a,o=n+a;return o<0?null:l<0?this.at(o,t):this.at(l,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return null===n?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);if(0===t)return!0;return e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,r,a,l,o;const s=1/this.direction.x,b=1/this.direction.y,c=1/this.direction.z,u=this.origin;return s>=0?(n=(e.min.x-u.x)*s,i=(e.max.x-u.x)*s):(n=(e.max.x-u.x)*s,i=(e.min.x-u.x)*s),b>=0?(r=(e.min.y-u.y)*b,a=(e.max.y-u.y)*b):(r=(e.max.y-u.y)*b,a=(e.min.y-u.y)*b),n>a||r>i?null:((r>n||isNaN(n))&&(n=r),(a<i||isNaN(i))&&(i=a),c>=0?(l=(e.min.z-u.z)*c,o=(e.max.z-u.z)*c):(l=(e.max.z-u.z)*c,o=(e.min.z-u.z)*c),n>o||l>i?null:((l>n||n!==n)&&(n=l),(o<i||i!==i)&&(i=o),i<0?null:this.at(n>=0?n:i,t)))}intersectsBox(e){return null!==this.intersectBox(e,Ra)}intersectTriangle(e,t,n,i,r){Na.subVectors(t,e),ka.subVectors(n,e),Da.crossVectors(Na,ka);let a,l=this.direction.dot(Da);if(l>0){if(i)return null;a=1}else{if(!(l<0))return null;a=-1,l=-l}Ia.subVectors(this.origin,e);const o=a*this.direction.dot(ka.crossVectors(Ia,ka));if(o<0)return null;const s=a*this.direction.dot(Na.cross(Ia));if(s<0)return null;if(o+s>l)return null;const b=-a*Ia.dot(Da);return b<0?null:this.at(b/l,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class Oa{constructor(e,t,n,i,r,a,l,o,s,b,c,u,h,d,m,f){Oa.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],void 0!==e&&this.set(e,t,n,i,r,a,l,o,s,b,c,u,h,d,m,f)}set(e,t,n,i,r,a,l,o,s,b,c,u,h,d,m,f){const p=this.elements;return p[0]=e,p[4]=t,p[8]=n,p[12]=i,p[1]=r,p[5]=a,p[9]=l,p[13]=o,p[2]=s,p[6]=b,p[10]=c,p[14]=u,p[3]=h,p[7]=d,p[11]=m,p[15]=f,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new Oa).fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/Fa.setFromMatrixColumn(e,0).length(),r=1/Fa.setFromMatrixColumn(e,1).length(),a=1/Fa.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*r,t[5]=n[5]*r,t[6]=n[6]*r,t[7]=0,t[8]=n[8]*a,t[9]=n[9]*a,t[10]=n[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,i=e.y,r=e.z,a=Math.cos(n),l=Math.sin(n),o=Math.cos(i),s=Math.sin(i),b=Math.cos(r),c=Math.sin(r);if("XYZ"===e.order){const e=a*b,n=a*c,i=l*b,r=l*c;t[0]=o*b,t[4]=-o*c,t[8]=s,t[1]=n+i*s,t[5]=e-r*s,t[9]=-l*o,t[2]=r-e*s,t[6]=i+n*s,t[10]=a*o}else if("YXZ"===e.order){const e=o*b,n=o*c,i=s*b,r=s*c;t[0]=e+r*l,t[4]=i*l-n,t[8]=a*s,t[1]=a*c,t[5]=a*b,t[9]=-l,t[2]=n*l-i,t[6]=r+e*l,t[10]=a*o}else if("ZXY"===e.order){const e=o*b,n=o*c,i=s*b,r=s*c;t[0]=e-r*l,t[4]=-a*c,t[8]=i+n*l,t[1]=n+i*l,t[5]=a*b,t[9]=r-e*l,t[2]=-a*s,t[6]=l,t[10]=a*o}else if("ZYX"===e.order){const e=a*b,n=a*c,i=l*b,r=l*c;t[0]=o*b,t[4]=i*s-n,t[8]=e*s+r,t[1]=o*c,t[5]=r*s+e,t[9]=n*s-i,t[2]=-s,t[6]=l*o,t[10]=a*o}else if("YZX"===e.order){const e=a*o,n=a*s,i=l*o,r=l*s;t[0]=o*b,t[4]=r-e*c,t[8]=i*c+n,t[1]=c,t[5]=a*b,t[9]=-l*b,t[2]=-s*b,t[6]=n*c+i,t[10]=e-r*c}else if("XZY"===e.order){const e=a*o,n=a*s,i=l*o,r=l*s;t[0]=o*b,t[4]=-c,t[8]=s*b,t[1]=e*c+r,t[5]=a*b,t[9]=n*c-i,t[2]=i*c-n,t[6]=l*b,t[10]=r*c+e}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(Ha,e,Va)}lookAt(e,t,n){const i=this.elements;return ja.subVectors(e,t),0===ja.lengthSq()&&(ja.z=1),ja.normalize(),Ga.crossVectors(n,ja),0===Ga.lengthSq()&&(1===Math.abs(n.z)?ja.x+=1e-4:ja.z+=1e-4,ja.normalize(),Ga.crossVectors(n,ja)),Ga.normalize(),Wa.crossVectors(ja,Ga),i[0]=Ga.x,i[4]=Wa.x,i[8]=ja.x,i[1]=Ga.y,i[5]=Wa.y,i[9]=ja.y,i[2]=Ga.z,i[6]=Wa.z,i[10]=ja.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,a=n[0],l=n[4],o=n[8],s=n[12],b=n[1],c=n[5],u=n[9],h=n[13],d=n[2],m=n[6],f=n[10],p=n[14],g=n[3],x=n[7],v=n[11],_=n[15],y=i[0],S=i[4],M=i[8],w=i[12],z=i[1],E=i[5],T=i[9],A=i[13],C=i[2],R=i[6],P=i[10],L=i[14],I=i[3],N=i[7],k=i[11],D=i[15];return r[0]=a*y+l*z+o*C+s*I,r[4]=a*S+l*E+o*R+s*N,r[8]=a*M+l*T+o*P+s*k,r[12]=a*w+l*A+o*L+s*D,r[1]=b*y+c*z+u*C+h*I,r[5]=b*S+c*E+u*R+h*N,r[9]=b*M+c*T+u*P+h*k,r[13]=b*w+c*A+u*L+h*D,r[2]=d*y+m*z+f*C+p*I,r[6]=d*S+m*E+f*R+p*N,r[10]=d*M+m*T+f*P+p*k,r[14]=d*w+m*A+f*L+p*D,r[3]=g*y+x*z+v*C+_*I,r[7]=g*S+x*E+v*R+_*N,r[11]=g*M+x*T+v*P+_*k,r[15]=g*w+x*A+v*L+_*D,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],r=e[12],a=e[1],l=e[5],o=e[9],s=e[13],b=e[2],c=e[6],u=e[10],h=e[14];return e[3]*(+r*o*c-i*s*c-r*l*u+n*s*u+i*l*h-n*o*h)+e[7]*(+t*o*h-t*s*u+r*a*u-i*a*h+i*s*b-r*o*b)+e[11]*(+t*s*c-t*l*h-r*a*c+n*a*h+r*l*b-n*s*b)+e[15]*(-i*l*b-t*o*c+t*l*u+i*a*c-n*a*u+n*o*b)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],l=e[5],o=e[6],s=e[7],b=e[8],c=e[9],u=e[10],h=e[11],d=e[12],m=e[13],f=e[14],p=e[15],g=c*f*s-m*u*s+m*o*h-l*f*h-c*o*p+l*u*p,x=d*u*s-b*f*s-d*o*h+a*f*h+b*o*p-a*u*p,v=b*m*s-d*c*s+d*l*h-a*m*h-b*l*p+a*c*p,_=d*c*o-b*m*o-d*l*u+a*m*u+b*l*f-a*c*f,y=t*g+n*x+i*v+r*_;if(0===y)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const S=1/y;return e[0]=g*S,e[1]=(m*u*r-c*f*r-m*i*h+n*f*h+c*i*p-n*u*p)*S,e[2]=(l*f*r-m*o*r+m*i*s-n*f*s-l*i*p+n*o*p)*S,e[3]=(c*o*r-l*u*r-c*i*s+n*u*s+l*i*h-n*o*h)*S,e[4]=x*S,e[5]=(b*f*r-d*u*r+d*i*h-t*f*h-b*i*p+t*u*p)*S,e[6]=(d*o*r-a*f*r-d*i*s+t*f*s+a*i*p-t*o*p)*S,e[7]=(a*u*r-b*o*r+b*i*s-t*u*s-a*i*h+t*o*h)*S,e[8]=v*S,e[9]=(d*c*r-b*m*r-d*n*h+t*m*h+b*n*p-t*c*p)*S,e[10]=(a*m*r-d*l*r+d*n*s-t*m*s-a*n*p+t*l*p)*S,e[11]=(b*l*r-a*c*r-b*n*s+t*c*s+a*n*h-t*l*h)*S,e[12]=_*S,e[13]=(b*m*i-d*c*i+d*n*u-t*m*u-b*n*f+t*c*f)*S,e[14]=(d*l*i-a*m*i-d*n*o+t*m*o+a*n*f-t*l*f)*S,e[15]=(a*c*i-b*l*i+b*n*o-t*c*o-a*n*u+t*l*u)*S,this}scale(e){const t=this.elements,n=e.x,i=e.y,r=e.z;return t[0]*=n,t[4]*=i,t[8]*=r,t[1]*=n,t[5]*=i,t[9]*=r,t[2]*=n,t[6]*=i,t[10]*=r,t[3]*=n,t[7]*=i,t[11]*=r,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),r=1-n,a=e.x,l=e.y,o=e.z,s=r*a,b=r*l;return this.set(s*a+n,s*l-i*o,s*o+i*l,0,s*l+i*o,b*l+n,b*o-i*a,0,s*o-i*l,b*o+i*a,r*o*o+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,r,a){return this.set(1,n,r,0,e,1,a,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,r=t._x,a=t._y,l=t._z,o=t._w,s=r+r,b=a+a,c=l+l,u=r*s,h=r*b,d=r*c,m=a*b,f=a*c,p=l*c,g=o*s,x=o*b,v=o*c,_=n.x,y=n.y,S=n.z;return i[0]=(1-(m+p))*_,i[1]=(h+v)*_,i[2]=(d-x)*_,i[3]=0,i[4]=(h-v)*y,i[5]=(1-(u+p))*y,i[6]=(f+g)*y,i[7]=0,i[8]=(d+x)*S,i[9]=(f-g)*S,i[10]=(1-(u+m))*S,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let r=Fa.set(i[0],i[1],i[2]).length();const a=Fa.set(i[4],i[5],i[6]).length(),l=Fa.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),e.x=i[12],e.y=i[13],e.z=i[14],Ba.copy(this);const o=1/r,s=1/a,b=1/l;return Ba.elements[0]*=o,Ba.elements[1]*=o,Ba.elements[2]*=o,Ba.elements[4]*=s,Ba.elements[5]*=s,Ba.elements[6]*=s,Ba.elements[8]*=b,Ba.elements[9]*=b,Ba.elements[10]*=b,t.setFromRotationMatrix(Ba),n.x=r,n.y=a,n.z=l,this}makePerspective(e,t,n,i,r,a){let l=arguments.length>6&&void 0!==arguments[6]?arguments[6]:pr;const o=this.elements,s=2*r/(t-e),b=2*r/(n-i),c=(t+e)/(t-e),u=(n+i)/(n-i);let h,d;if(l===pr)h=-(a+r)/(a-r),d=-2*a*r/(a-r);else{if(l!==gr)throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+l);h=-a/(a-r),d=-a*r/(a-r)}return o[0]=s,o[4]=0,o[8]=c,o[12]=0,o[1]=0,o[5]=b,o[9]=u,o[13]=0,o[2]=0,o[6]=0,o[10]=h,o[14]=d,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this}makeOrthographic(e,t,n,i,r,a){let l=arguments.length>6&&void 0!==arguments[6]?arguments[6]:pr;const o=this.elements,s=1/(t-e),b=1/(n-i),c=1/(a-r),u=(t+e)*s,h=(n+i)*b;let d,m;if(l===pr)d=(a+r)*c,m=-2*c;else{if(l!==gr)throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+l);d=r*c,m=-1*c}return o[0]=2*s,o[4]=0,o[8]=0,o[12]=-u,o[1]=0,o[5]=2*b,o[9]=0,o[13]=-h,o[2]=0,o[6]=0,o[10]=m,o[14]=-d,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const Fa=new sa,Ba=new Oa,Ha=new sa(0,0,0),Va=new sa(1,1,1),Ga=new sa,Wa=new sa,ja=new sa,Xa=new Oa,qa=new oa;class Ya{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Ya.DEFAULT_ORDER;this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:this._order;return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this._order,n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const i=e.elements,r=i[0],a=i[4],l=i[8],o=i[1],s=i[5],b=i[9],c=i[2],u=i[6],h=i[10];switch(t){case"XYZ":this._y=Math.asin(wr(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-b,h),this._z=Math.atan2(-a,r)):(this._x=Math.atan2(u,s),this._z=0);break;case"YXZ":this._x=Math.asin(-wr(b,-1,1)),Math.abs(b)<.9999999?(this._y=Math.atan2(l,h),this._z=Math.atan2(o,s)):(this._y=Math.atan2(-c,r),this._z=0);break;case"ZXY":this._x=Math.asin(wr(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(-c,h),this._z=Math.atan2(-a,s)):(this._y=0,this._z=Math.atan2(o,r));break;case"ZYX":this._y=Math.asin(-wr(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(u,h),this._z=Math.atan2(o,r)):(this._x=0,this._z=Math.atan2(-a,s));break;case"YZX":this._z=Math.asin(wr(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-b,s),this._y=Math.atan2(-c,r)):(this._x=0,this._y=Math.atan2(l,h));break;case"XZY":this._z=Math.asin(-wr(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(u,s),this._y=Math.atan2(l,r)):(this._x=Math.atan2(-b,h),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,!0===n&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return Xa.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Xa,t,n)}setFromVector3(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this._order;return this.set(e.x,e.y,e.z,t)}reorder(e){return qa.setFromEuler(this),this.setFromQuaternion(qa,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this}toArray(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Ya.DEFAULT_ORDER="XYZ";class Za{constructor(){this.mask=1}set(e){this.mask=1<<e>>>0}enable(e){this.mask|=1<<e}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e}disable(e){this.mask&=~(1<<e)}disableAll(){this.mask=0}test(e){return 0!==(this.mask&e.mask)}isEnabled(e){return 0!==(this.mask&1<<e)}}let Ka=0;const $a=new sa,Ja=new oa,Qa=new Oa,el=new sa,tl=new sa,nl=new sa,il=new oa,rl=new sa(1,0,0),al=new sa(0,1,0),ll=new sa(0,0,1),ol={type:"added"},sl={type:"removed"},bl={type:"childadded",child:null},cl={type:"childremoved",child:null};class ul extends xr{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:Ka++}),this.uuid=Mr(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=ul.DEFAULT_UP.clone();const e=new sa,t=new Ya,n=new oa,i=new sa(1,1,1);t._onChange((function(){n.setFromEuler(t,!1)})),n._onChange((function(){t.setFromQuaternion(n,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new Oa},normalMatrix:{value:new Pr}}),this.matrix=new Oa,this.matrixWorld=new Oa,this.matrixAutoUpdate=ul.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=ul.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Za,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Ja.setFromAxisAngle(e,t),this.quaternion.multiply(Ja),this}rotateOnWorldAxis(e,t){return Ja.setFromAxisAngle(e,t),this.quaternion.premultiply(Ja),this}rotateX(e){return this.rotateOnAxis(rl,e)}rotateY(e){return this.rotateOnAxis(al,e)}rotateZ(e){return this.rotateOnAxis(ll,e)}translateOnAxis(e,t){return $a.copy(e).applyQuaternion(this.quaternion),this.position.add($a.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(rl,e)}translateY(e){return this.translateOnAxis(al,e)}translateZ(e){return this.translateOnAxis(ll,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Qa.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?el.copy(e):el.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),tl.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Qa.lookAt(tl,el,this.up):Qa.lookAt(el,tl,this.up),this.quaternion.setFromRotationMatrix(Qa),i&&(Qa.extractRotation(i.matrixWorld),Ja.setFromRotationMatrix(Qa),this.quaternion.premultiply(Ja.invert()))}add(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(ol),bl.child=e,this.dispatchEvent(bl),bl.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}const t=this.children.indexOf(e);return-1!==t&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(sl),cl.child=e,this.dispatchEvent(cl),cl.child=null),this}removeFromParent(){const e=this.parent;return null!==e&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),Qa.copy(this.matrixWorld).invert(),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),Qa.multiply(e.parent.matrixWorld)),e.applyMatrix4(Qa),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(ol),bl.child=e,this.dispatchEvent(bl),bl.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const i=this.children[n].getObjectByProperty(e,t);if(void 0!==i)return i}}getObjectsByProperty(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];this[e]===t&&n.push(this);const i=this.children;for(let r=0,a=i.length;r<a;r++)i[r].getObjectsByProperty(e,t,n);return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(tl,e,nl),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(tl,il,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(!1===this.visible)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(!0===this.matrixWorldAutoUpdate&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++){t[n].updateMatrixWorld(e)}}updateWorldMatrix(e,t){const n=this.parent;if(!0===e&&null!==n&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),!0===this.matrixWorldAutoUpdate&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),!0===t){const e=this.children;for(let t=0,n=e.length;t<n;t++){e[t].updateWorldMatrix(!1,!0)}}}toJSON(e){const t=void 0===e||"string"===typeof e,n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const i={};function r(t,n){return void 0===t[n.uuid]&&(t[n.uuid]=n.toJSON(e)),n.uuid}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),!0===this.castShadow&&(i.castShadow=!0),!0===this.receiveShadow&&(i.receiveShadow=!0),!1===this.visible&&(i.visible=!1),!1===this.frustumCulled&&(i.frustumCulled=!1),0!==this.renderOrder&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),!1===this.matrixAutoUpdate&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(i.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(i.type="BatchedMesh",i.perObjectFrustumCulled=this.perObjectFrustumCulled,i.sortObjects=this.sortObjects,i.drawRanges=this._drawRanges,i.reservedRanges=this._reservedRanges,i.visibility=this._visibility,i.active=this._active,i.bounds=this._bounds.map((e=>({boxInitialized:e.boxInitialized,boxMin:e.box.min.toArray(),boxMax:e.box.max.toArray(),sphereInitialized:e.sphereInitialized,sphereRadius:e.sphere.radius,sphereCenter:e.sphere.center.toArray()}))),i.maxInstanceCount=this._maxInstanceCount,i.maxVertexCount=this._maxVertexCount,i.maxIndexCount=this._maxIndexCount,i.geometryInitialized=this._geometryInitialized,i.geometryCount=this._geometryCount,i.matricesTexture=this._matricesTexture.toJSON(e),null!==this._colorsTexture&&(i.colorsTexture=this._colorsTexture.toJSON(e)),null!==this.boundingSphere&&(i.boundingSphere={center:i.boundingSphere.center.toArray(),radius:i.boundingSphere.radius}),null!==this.boundingBox&&(i.boundingBox={min:i.boundingBox.min.toArray(),max:i.boundingBox.max.toArray()})),this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&!0!==this.environment.isRenderTargetTexture&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(e.geometries,this.geometry);const t=this.geometry.parameters;if(void 0!==t&&void 0!==t.shapes){const n=t.shapes;if(Array.isArray(n))for(let t=0,i=n.length;t<i;t++){const i=n[t];r(e.shapes,i)}else r(e.shapes,n)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(r(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const t=[];for(let n=0,i=this.material.length;n<i;n++)t.push(r(e.materials,this.material[n]));i.material=t}else i.material=r(e.materials,this.material);if(this.children.length>0){i.children=[];for(let t=0;t<this.children.length;t++)i.children.push(this.children[t].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let t=0;t<this.animations.length;t++){const n=this.animations[t];i.animations.push(r(e.animations,n))}}if(t){const t=a(e.geometries),i=a(e.materials),r=a(e.textures),l=a(e.images),o=a(e.shapes),s=a(e.skeletons),b=a(e.animations),c=a(e.nodes);t.length>0&&(n.geometries=t),i.length>0&&(n.materials=i),r.length>0&&(n.textures=r),l.length>0&&(n.images=l),o.length>0&&(n.shapes=o),s.length>0&&(n.skeletons=s),b.length>0&&(n.animations=b),c.length>0&&(n.nodes=c)}return n.object=i,n;function a(e){const t=[];for(const n in e){const i=e[n];delete i.metadata,t.push(i)}return t}}clone(e){return(new this.constructor).copy(this,e)}copy(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(let n=0;n<e.children.length;n++){const t=e.children[n];this.add(t.clone())}return this}}ul.DEFAULT_UP=new sa(0,1,0),ul.DEFAULT_MATRIX_AUTO_UPDATE=!0,ul.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const hl=new sa,dl=new sa,ml=new sa,fl=new sa,pl=new sa,gl=new sa,xl=new sa,vl=new sa,_l=new sa,yl=new sa;class Sl{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new sa,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new sa,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new sa;this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),hl.subVectors(e,t),i.cross(hl);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(e,t,n,i,r){hl.subVectors(i,t),dl.subVectors(n,t),ml.subVectors(e,t);const a=hl.dot(hl),l=hl.dot(dl),o=hl.dot(ml),s=dl.dot(dl),b=dl.dot(ml),c=a*s-l*l;if(0===c)return r.set(0,0,0),null;const u=1/c,h=(s*o-l*b)*u,d=(a*b-l*o)*u;return r.set(1-h-d,d,h)}static containsPoint(e,t,n,i){return null!==this.getBarycoord(e,t,n,i,fl)&&(fl.x>=0&&fl.y>=0&&fl.x+fl.y<=1)}static getInterpolation(e,t,n,i,r,a,l,o){return null===this.getBarycoord(e,t,n,i,fl)?(o.x=0,o.y=0,"z"in o&&(o.z=0),"w"in o&&(o.w=0),null):(o.setScalar(0),o.addScaledVector(r,fl.x),o.addScaledVector(a,fl.y),o.addScaledVector(l,fl.z),o)}static isFrontFacing(e,t,n,i){return hl.subVectors(n,t),dl.subVectors(e,t),hl.cross(dl).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return hl.subVectors(this.c,this.b),dl.subVectors(this.a,this.b),.5*hl.cross(dl).length()}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Sl.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Sl.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,n,i,r){return Sl.getInterpolation(e,this.a,this.b,this.c,t,n,i,r)}containsPoint(e){return Sl.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Sl.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,r=this.c;let a,l;pl.subVectors(i,n),gl.subVectors(r,n),vl.subVectors(e,n);const o=pl.dot(vl),s=gl.dot(vl);if(o<=0&&s<=0)return t.copy(n);_l.subVectors(e,i);const b=pl.dot(_l),c=gl.dot(_l);if(b>=0&&c<=b)return t.copy(i);const u=o*c-b*s;if(u<=0&&o>=0&&b<=0)return a=o/(o-b),t.copy(n).addScaledVector(pl,a);yl.subVectors(e,r);const h=pl.dot(yl),d=gl.dot(yl);if(d>=0&&h<=d)return t.copy(r);const m=h*s-o*d;if(m<=0&&s>=0&&d<=0)return l=s/(s-d),t.copy(n).addScaledVector(gl,l);const f=b*d-h*c;if(f<=0&&c-b>=0&&h-d>=0)return xl.subVectors(r,i),l=(c-b)/(c-b+(h-d)),t.copy(i).addScaledVector(xl,l);const p=1/(f+m+u);return a=m*p,l=u*p,t.copy(n).addScaledVector(pl,a).addScaledVector(gl,l)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const Ml={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},wl={h:0,s:0,l:0},zl={h:0,s:0,l:0};function El(e,t,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+6*(t-e)*n:n<.5?t:n<2/3?e+6*(t-e)*(2/3-n):e}class Tl{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(void 0===t&&void 0===n){const t=e;t&&t.isColor?this.copy(t):"number"===typeof t?this.setHex(t):"string"===typeof t&&this.setStyle(t)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Ti;return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,Wr.toWorkingColorSpace(this,t),this}setRGB(e,t,n){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Wr.workingColorSpace;return this.r=e,this.g=t,this.b=n,Wr.toWorkingColorSpace(this,i),this}setHSL(e,t,n){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Wr.workingColorSpace;if(e=zr(e,1),t=wr(t,0,1),n=wr(n,0,1),0===t)this.r=this.g=this.b=n;else{const i=n<=.5?n*(1+t):n+t-n*t,r=2*n-i;this.r=El(r,i,e+1/3),this.g=El(r,i,e),this.b=El(r,i,e-1/3)}return Wr.toWorkingColorSpace(this,i),this}setStyle(e){let t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Ti;function i(t){void 0!==t&&parseFloat(t)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}if(t=/^(\w+)\(([^\)]*)\)/.exec(e)){let r;const a=t[1],l=t[2];switch(a){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(l))return i(r[4]),this.setRGB(Math.min(255,parseInt(r[1],10))/255,Math.min(255,parseInt(r[2],10))/255,Math.min(255,parseInt(r[3],10))/255,n);if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(l))return i(r[4]),this.setRGB(Math.min(100,parseInt(r[1],10))/100,Math.min(100,parseInt(r[2],10))/100,Math.min(100,parseInt(r[3],10))/100,n);break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(l))return i(r[4]),this.setHSL(parseFloat(r[1])/360,parseFloat(r[2])/100,parseFloat(r[3])/100,n);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(t=/^\#([A-Fa-f\d]+)$/.exec(e)){const i=t[1],r=i.length;if(3===r)return this.setRGB(parseInt(i.charAt(0),16)/15,parseInt(i.charAt(1),16)/15,parseInt(i.charAt(2),16)/15,n);if(6===r)return this.setHex(parseInt(i,16),n);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,n);return this}setColorName(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Ti;const n=Ml[e.toLowerCase()];return void 0!==n?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=jr(e.r),this.g=jr(e.g),this.b=jr(e.b),this}copyLinearToSRGB(e){return this.r=Xr(e.r),this.g=Xr(e.g),this.b=Xr(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Ti;return Wr.fromWorkingColorSpace(Al.copy(this),e),65536*Math.round(wr(255*Al.r,0,255))+256*Math.round(wr(255*Al.g,0,255))+Math.round(wr(255*Al.b,0,255))}getHexString(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Ti;return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Wr.workingColorSpace;Wr.fromWorkingColorSpace(Al.copy(this),t);const n=Al.r,i=Al.g,r=Al.b,a=Math.max(n,i,r),l=Math.min(n,i,r);let o,s;const b=(l+a)/2;if(l===a)o=0,s=0;else{const e=a-l;switch(s=b<=.5?e/(a+l):e/(2-a-l),a){case n:o=(i-r)/e+(i<r?6:0);break;case i:o=(r-n)/e+2;break;case r:o=(n-i)/e+4}o/=6}return e.h=o,e.s=s,e.l=b,e}getRGB(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Wr.workingColorSpace;return Wr.fromWorkingColorSpace(Al.copy(this),t),e.r=Al.r,e.g=Al.g,e.b=Al.b,e}getStyle(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Ti;Wr.fromWorkingColorSpace(Al.copy(this),e);const t=Al.r,n=Al.g,i=Al.b;return e!==Ti?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(255*t)},${Math.round(255*n)},${Math.round(255*i)})`}offsetHSL(e,t,n){return this.getHSL(wl),this.setHSL(wl.h+e,wl.s+t,wl.l+n)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(wl),e.getHSL(zl);const n=Er(wl.h,zl.h,t),i=Er(wl.s,zl.s,t),r=Er(wl.l,zl.l,t);return this.setHSL(n,i,r),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,i=this.b,r=e.elements;return this.r=r[0]*t+r[3]*n+r[6]*i,this.g=r[1]*t+r[4]*n+r[7]*i,this.b=r[2]*t+r[5]*n+r[8]*i,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Al=new Tl;Tl.NAMES=Ml;let Cl=0;class Rl extends xr{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:Cl++}),this.uuid=Mr(),this.name="",this.type="Material",this.blending=je,this.side=He,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=at,this.blendDst=lt,this.blendEquation=Ke,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new Tl(0,0,0),this.blendAlpha=0,this.depthFunc=vt,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Ki,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Di,this.stencilZFail=Di,this.stencilZPass=Di,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!==e>0&&this.version++,this._alphaTest=e}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(void 0!==e)for(const t in e){const n=e[t];if(void 0===n){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const i=this[t];void 0!==i?i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n:console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`)}}toJSON(e){const t=void 0===e||"string"===typeof e;t&&(e={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};function i(e){const t=[];for(const n in e){const i=e[n];delete i.metadata,t.push(i)}return t}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),void 0!==this.sheen&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),void 0!==this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),void 0!==this.dispersion&&(n.dispersion=this.dispersion),void 0!==this.iridescence&&(n.iridescence=this.iridescence),void 0!==this.iridescenceIOR&&(n.iridescenceIOR=this.iridescenceIOR),void 0!==this.iridescenceThicknessRange&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),void 0!==this.anisotropy&&(n.anisotropy=this.anisotropy),void 0!==this.anisotropyRotation&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,void 0!==this.combine&&(n.combine=this.combine)),void 0!==this.envMapRotation&&(n.envMapRotation=this.envMapRotation.toArray()),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(n.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.transmission&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),void 0!==this.thickness&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),void 0!==this.attenuationDistance&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(n.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(n.size=this.size),null!==this.shadowSide&&(n.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==je&&(n.blending=this.blending),this.side!==He&&(n.side=this.side),!0===this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=!0),this.blendSrc!==at&&(n.blendSrc=this.blendSrc),this.blendDst!==lt&&(n.blendDst=this.blendDst),this.blendEquation!==Ke&&(n.blendEquation=this.blendEquation),null!==this.blendSrcAlpha&&(n.blendSrcAlpha=this.blendSrcAlpha),null!==this.blendDstAlpha&&(n.blendDstAlpha=this.blendDstAlpha),null!==this.blendEquationAlpha&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),0!==this.blendAlpha&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==vt&&(n.depthFunc=this.depthFunc),!1===this.depthTest&&(n.depthTest=this.depthTest),!1===this.depthWrite&&(n.depthWrite=this.depthWrite),!1===this.colorWrite&&(n.colorWrite=this.colorWrite),255!==this.stencilWriteMask&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==Ki&&(n.stencilFunc=this.stencilFunc),0!==this.stencilRef&&(n.stencilRef=this.stencilRef),255!==this.stencilFuncMask&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==Di&&(n.stencilFail=this.stencilFail),this.stencilZFail!==Di&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==Di&&(n.stencilZPass=this.stencilZPass),!0===this.stencilWrite&&(n.stencilWrite=this.stencilWrite),void 0!==this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.alphaHash&&(n.alphaHash=!0),!0===this.alphaToCoverage&&(n.alphaToCoverage=!0),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=!0),!0===this.forceSinglePass&&(n.forceSinglePass=!0),!0===this.wireframe&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(n.flatShading=!0),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),!1===this.fog&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData),t){const t=i(e.textures),r=i(e.images);t.length>0&&(n.textures=t),r.length>0&&(n.images=r)}return n}clone(){return(new this.constructor).copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(null!==t){const e=t.length;n=new Array(e);for(let i=0;i!==e;++i)n[i]=t[i].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){!0===e&&this.version++}onBuild(){console.warn("Material: onBuild() has been removed.")}}class Pl extends Rl{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Tl(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ya,this.combine=wt,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const Ll=Il();function Il(){const e=new ArrayBuffer(4),t=new Float32Array(e),n=new Uint32Array(e),i=new Uint32Array(512),r=new Uint32Array(512);for(let s=0;s<256;++s){const e=s-127;e<-27?(i[s]=0,i[256|s]=32768,r[s]=24,r[256|s]=24):e<-14?(i[s]=1024>>-e-14,i[256|s]=1024>>-e-14|32768,r[s]=-e-1,r[256|s]=-e-1):e<=15?(i[s]=e+15<<10,i[256|s]=e+15<<10|32768,r[s]=13,r[256|s]=13):e<128?(i[s]=31744,i[256|s]=64512,r[s]=24,r[256|s]=24):(i[s]=31744,i[256|s]=64512,r[s]=13,r[256|s]=13)}const a=new Uint32Array(2048),l=new Uint32Array(64),o=new Uint32Array(64);for(let s=1;s<1024;++s){let e=s<<13,t=0;for(;0===(8388608&e);)e<<=1,t-=8388608;e&=-8388609,t+=947912704,a[s]=e|t}for(let s=1024;s<2048;++s)a[s]=939524096+(s-1024<<13);for(let s=1;s<31;++s)l[s]=s<<23;l[31]=1199570944,l[32]=2147483648;for(let s=33;s<63;++s)l[s]=2147483648+(s-32<<23);l[63]=3347054592;for(let s=1;s<64;++s)32!==s&&(o[s]=1024);return{floatView:t,uint32View:n,baseTable:i,shiftTable:r,mantissaTable:a,exponentTable:l,offsetTable:o}}function Nl(e){Math.abs(e)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),e=wr(e,-65504,65504),Ll.floatView[0]=e;const t=Ll.uint32View[0],n=t>>23&511;return Ll.baseTable[n]+((8388607&t)>>Ll.shiftTable[n])}function kl(e){const t=e>>10;return Ll.uint32View[0]=Ll.mantissaTable[Ll.offsetTable[t]+(1023&e)]+Ll.exponentTable[t],Ll.floatView[0]}const Dl={toHalfFloat:Nl,fromHalfFloat:kl},Ul=new sa,Ol=new Rr;class Fl{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=void 0!==e?e.length/t:0,this.normalized=n,this.usage=ar,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.gpuType=bn,this.version=0}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}get updateRange(){return Fr("THREE.BufferAttribute: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead."),this._updateRange}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(2===this.itemSize)for(let t=0,n=this.count;t<n;t++)Ol.fromBufferAttribute(this,t),Ol.applyMatrix3(e),this.setXY(t,Ol.x,Ol.y);else if(3===this.itemSize)for(let t=0,n=this.count;t<n;t++)Ul.fromBufferAttribute(this,t),Ul.applyMatrix3(e),this.setXYZ(t,Ul.x,Ul.y,Ul.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)Ul.fromBufferAttribute(this,t),Ul.applyMatrix4(e),this.setXYZ(t,Ul.x,Ul.y,Ul.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Ul.fromBufferAttribute(this,t),Ul.applyNormalMatrix(e),this.setXYZ(t,Ul.x,Ul.y,Ul.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Ul.fromBufferAttribute(this,t),Ul.transformDirection(e),this.setXYZ(t,Ul.x,Ul.y,Ul.z);return this}set(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.array.set(e,t),this}getComponent(e,t){let n=this.array[e*this.itemSize+t];return this.normalized&&(n=Tr(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=Ar(n,this.array)),this.array[e*this.itemSize+t]=n,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=Tr(t,this.array)),t}setX(e,t){return this.normalized&&(t=Ar(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=Tr(t,this.array)),t}setY(e,t){return this.normalized&&(t=Ar(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=Tr(t,this.array)),t}setZ(e,t){return this.normalized&&(t=Ar(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=Tr(t,this.array)),t}setW(e,t){return this.normalized&&(t=Ar(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=Ar(t,this.array),n=Ar(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=Ar(t,this.array),n=Ar(n,this.array),i=Ar(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e*=this.itemSize,this.normalized&&(t=Ar(t,this.array),n=Ar(n,this.array),i=Ar(i,this.array),r=Ar(r,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=r,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return""!==this.name&&(e.name=this.name),this.usage!==ar&&(e.usage=this.usage),e}}class Bl extends Fl{constructor(e,t,n){super(new Int8Array(e),t,n)}}class Hl extends Fl{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class Vl extends Fl{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class Gl extends Fl{constructor(e,t,n){super(new Int16Array(e),t,n)}}class Wl extends Fl{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class jl extends Fl{constructor(e,t,n){super(new Int32Array(e),t,n)}}class Xl extends Fl{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class ql extends Fl{constructor(e,t,n){super(new Uint16Array(e),t,n),this.isFloat16BufferAttribute=!0}getX(e){let t=kl(this.array[e*this.itemSize]);return this.normalized&&(t=Tr(t,this.array)),t}setX(e,t){return this.normalized&&(t=Ar(t,this.array)),this.array[e*this.itemSize]=Nl(t),this}getY(e){let t=kl(this.array[e*this.itemSize+1]);return this.normalized&&(t=Tr(t,this.array)),t}setY(e,t){return this.normalized&&(t=Ar(t,this.array)),this.array[e*this.itemSize+1]=Nl(t),this}getZ(e){let t=kl(this.array[e*this.itemSize+2]);return this.normalized&&(t=Tr(t,this.array)),t}setZ(e,t){return this.normalized&&(t=Ar(t,this.array)),this.array[e*this.itemSize+2]=Nl(t),this}getW(e){let t=kl(this.array[e*this.itemSize+3]);return this.normalized&&(t=Tr(t,this.array)),t}setW(e,t){return this.normalized&&(t=Ar(t,this.array)),this.array[e*this.itemSize+3]=Nl(t),this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=Ar(t,this.array),n=Ar(n,this.array)),this.array[e+0]=Nl(t),this.array[e+1]=Nl(n),this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=Ar(t,this.array),n=Ar(n,this.array),i=Ar(i,this.array)),this.array[e+0]=Nl(t),this.array[e+1]=Nl(n),this.array[e+2]=Nl(i),this}setXYZW(e,t,n,i,r){return e*=this.itemSize,this.normalized&&(t=Ar(t,this.array),n=Ar(n,this.array),i=Ar(i,this.array),r=Ar(r,this.array)),this.array[e+0]=Nl(t),this.array[e+1]=Nl(n),this.array[e+2]=Nl(i),this.array[e+3]=Nl(r),this}}class Yl extends Fl{constructor(e,t,n){super(new Float32Array(e),t,n)}}let Zl=0;const Kl=new Oa,$l=new ul,Jl=new sa,Ql=new ua,eo=new ua,to=new sa;class no extends xr{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Zl++}),this.uuid=Mr(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(Ir(e)?Xl:Wl)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return void 0!==this.attributes[e]}addGroup(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(void 0!==n){const t=(new Pr).getNormalMatrix(e);n.applyNormalMatrix(t),n.needsUpdate=!0}const i=this.attributes.tangent;return void 0!==i&&(i.transformDirection(e),i.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(e){return Kl.makeRotationFromQuaternion(e),this.applyMatrix4(Kl),this}rotateX(e){return Kl.makeRotationX(e),this.applyMatrix4(Kl),this}rotateY(e){return Kl.makeRotationY(e),this.applyMatrix4(Kl),this}rotateZ(e){return Kl.makeRotationZ(e),this.applyMatrix4(Kl),this}translate(e,t,n){return Kl.makeTranslation(e,t,n),this.applyMatrix4(Kl),this}scale(e,t,n){return Kl.makeScale(e,t,n),this.applyMatrix4(Kl),this}lookAt(e){return $l.lookAt(e),$l.updateMatrix(),this.applyMatrix4($l.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Jl).negate(),this.translate(Jl.x,Jl.y,Jl.z),this}setFromPoints(e){const t=[];for(let n=0,i=e.length;n<i;n++){const i=e[n];t.push(i.x,i.y,i.z||0)}return this.setAttribute("position",new Yl(t,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new ua);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),void this.boundingBox.set(new sa(-1/0,-1/0,-1/0),new sa(1/0,1/0,1/0));if(void 0!==e){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const e=t[n];Ql.setFromBufferAttribute(e),this.morphTargetsRelative?(to.addVectors(this.boundingBox.min,Ql.min),this.boundingBox.expandByPoint(to),to.addVectors(this.boundingBox.max,Ql.max),this.boundingBox.expandByPoint(to)):(this.boundingBox.expandByPoint(Ql.min),this.boundingBox.expandByPoint(Ql.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new Ca);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),void this.boundingSphere.set(new sa,1/0);if(e){const n=this.boundingSphere.center;if(Ql.setFromBufferAttribute(e),t)for(let e=0,r=t.length;e<r;e++){const n=t[e];eo.setFromBufferAttribute(n),this.morphTargetsRelative?(to.addVectors(Ql.min,eo.min),Ql.expandByPoint(to),to.addVectors(Ql.max,eo.max),Ql.expandByPoint(to)):(Ql.expandByPoint(eo.min),Ql.expandByPoint(eo.max))}Ql.getCenter(n);let i=0;for(let t=0,r=e.count;t<r;t++)to.fromBufferAttribute(e,t),i=Math.max(i,n.distanceToSquared(to));if(t)for(let r=0,a=t.length;r<a;r++){const a=t[r],l=this.morphTargetsRelative;for(let t=0,r=a.count;t<r;t++)to.fromBufferAttribute(a,t),l&&(Jl.fromBufferAttribute(e,t),to.add(Jl)),i=Math.max(i,n.distanceToSquared(to))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(null===e||void 0===t.position||void 0===t.normal||void 0===t.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const n=t.position,i=t.normal,r=t.uv;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new Fl(new Float32Array(4*n.count),4));const a=this.getAttribute("tangent"),l=[],o=[];for(let M=0;M<n.count;M++)l[M]=new sa,o[M]=new sa;const s=new sa,b=new sa,c=new sa,u=new Rr,h=new Rr,d=new Rr,m=new sa,f=new sa;function p(e,t,i){s.fromBufferAttribute(n,e),b.fromBufferAttribute(n,t),c.fromBufferAttribute(n,i),u.fromBufferAttribute(r,e),h.fromBufferAttribute(r,t),d.fromBufferAttribute(r,i),b.sub(s),c.sub(s),h.sub(u),d.sub(u);const a=1/(h.x*d.y-d.x*h.y);isFinite(a)&&(m.copy(b).multiplyScalar(d.y).addScaledVector(c,-h.y).multiplyScalar(a),f.copy(c).multiplyScalar(h.x).addScaledVector(b,-d.x).multiplyScalar(a),l[e].add(m),l[t].add(m),l[i].add(m),o[e].add(f),o[t].add(f),o[i].add(f))}let g=this.groups;0===g.length&&(g=[{start:0,count:e.count}]);for(let M=0,w=g.length;M<w;++M){const t=g[M],n=t.start;for(let i=n,r=n+t.count;i<r;i+=3)p(e.getX(i+0),e.getX(i+1),e.getX(i+2))}const x=new sa,v=new sa,_=new sa,y=new sa;function S(e){_.fromBufferAttribute(i,e),y.copy(_);const t=l[e];x.copy(t),x.sub(_.multiplyScalar(_.dot(t))).normalize(),v.crossVectors(y,t);const n=v.dot(o[e])<0?-1:1;a.setXYZW(e,x.x,x.y,x.z,n)}for(let M=0,w=g.length;M<w;++M){const t=g[M],n=t.start;for(let i=n,r=n+t.count;i<r;i+=3)S(e.getX(i+0)),S(e.getX(i+1)),S(e.getX(i+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(void 0!==t){let n=this.getAttribute("normal");if(void 0===n)n=new Fl(new Float32Array(3*t.count),3),this.setAttribute("normal",n);else for(let e=0,t=n.count;e<t;e++)n.setXYZ(e,0,0,0);const i=new sa,r=new sa,a=new sa,l=new sa,o=new sa,s=new sa,b=new sa,c=new sa;if(e)for(let u=0,h=e.count;u<h;u+=3){const h=e.getX(u+0),d=e.getX(u+1),m=e.getX(u+2);i.fromBufferAttribute(t,h),r.fromBufferAttribute(t,d),a.fromBufferAttribute(t,m),b.subVectors(a,r),c.subVectors(i,r),b.cross(c),l.fromBufferAttribute(n,h),o.fromBufferAttribute(n,d),s.fromBufferAttribute(n,m),l.add(b),o.add(b),s.add(b),n.setXYZ(h,l.x,l.y,l.z),n.setXYZ(d,o.x,o.y,o.z),n.setXYZ(m,s.x,s.y,s.z)}else for(let e=0,u=t.count;e<u;e+=3)i.fromBufferAttribute(t,e+0),r.fromBufferAttribute(t,e+1),a.fromBufferAttribute(t,e+2),b.subVectors(a,r),c.subVectors(i,r),b.cross(c),n.setXYZ(e+0,b.x,b.y,b.z),n.setXYZ(e+1,b.x,b.y,b.z),n.setXYZ(e+2,b.x,b.y,b.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)to.fromBufferAttribute(e,t),to.normalize(),e.setXYZ(t,to.x,to.y,to.z)}toNonIndexed(){function e(e,t){const n=e.array,i=e.itemSize,r=e.normalized,a=new n.constructor(t.length*i);let l=0,o=0;for(let s=0,b=t.length;s<b;s++){l=e.isInterleavedBufferAttribute?t[s]*e.data.stride+e.offset:t[s]*i;for(let e=0;e<i;e++)a[o++]=n[l++]}return new Fl(a,i,r)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new no,n=this.index.array,i=this.attributes;for(const l in i){const r=e(i[l],n);t.setAttribute(l,r)}const r=this.morphAttributes;for(const l in r){const i=[],a=r[l];for(let t=0,r=a.length;t<r;t++){const r=e(a[t],n);i.push(r)}t.morphAttributes[l]=i}t.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let l=0,o=a.length;l<o;l++){const e=a[l];t.addGroup(e.start,e.count,e.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),void 0!==this.parameters){const t=this.parameters;for(const n in t)void 0!==t[n]&&(e[n]=t[n]);return e}e.data={attributes:{}};const t=this.index;null!==t&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const o in n){const t=n[o];e.data.attributes[o]=t.toJSON(e.data)}const i={};let r=!1;for(const o in this.morphAttributes){const t=this.morphAttributes[o],n=[];for(let i=0,r=t.length;i<r;i++){const r=t[i];n.push(r.toJSON(e.data))}n.length>0&&(i[o]=n,r=!0)}r&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(e.data.groups=JSON.parse(JSON.stringify(a)));const l=this.boundingSphere;return null!==l&&(e.data.boundingSphere={center:l.center.toArray(),radius:l.radius}),e}clone(){return(new this.constructor).copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;null!==n&&this.setIndex(n.clone(t));const i=e.attributes;for(const s in i){const e=i[s];this.setAttribute(s,e.clone(t))}const r=e.morphAttributes;for(const s in r){const e=[],n=r[s];for(let i=0,r=n.length;i<r;i++)e.push(n[i].clone(t));this.morphAttributes[s]=e}this.morphTargetsRelative=e.morphTargetsRelative;const a=e.groups;for(let s=0,b=a.length;s<b;s++){const e=a[s];this.addGroup(e.start,e.count,e.materialIndex)}const l=e.boundingBox;null!==l&&(this.boundingBox=l.clone());const o=e.boundingSphere;return null!==o&&(this.boundingSphere=o.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const io=new Oa,ro=new Ua,ao=new Ca,lo=new sa,oo=new sa,so=new sa,bo=new sa,co=new sa,uo=new sa,ho=new Rr,mo=new Rr,fo=new Rr,po=new sa,go=new sa,xo=new sa,vo=new sa,_o=new sa;class yo extends ul{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new no,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Pl;super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,t=Object.keys(e);if(t.length>0){const n=e[t[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=n.length;e<t;e++){const t=n[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[t]=e}}}}getVertexPosition(e,t){const n=this.geometry,i=n.attributes.position,r=n.morphAttributes.position,a=n.morphTargetsRelative;t.fromBufferAttribute(i,e);const l=this.morphTargetInfluences;if(r&&l){uo.set(0,0,0);for(let n=0,i=r.length;n<i;n++){const i=l[n],o=r[n];0!==i&&(co.fromBufferAttribute(o,e),a?uo.addScaledVector(co,i):uo.addScaledVector(co.sub(t),i))}t.add(uo)}return t}raycast(e,t){const n=this.geometry,i=this.material,r=this.matrixWorld;if(void 0!==i){if(null===n.boundingSphere&&n.computeBoundingSphere(),ao.copy(n.boundingSphere),ao.applyMatrix4(r),ro.copy(e.ray).recast(e.near),!1===ao.containsPoint(ro.origin)){if(null===ro.intersectSphere(ao,lo))return;if(ro.origin.distanceToSquared(lo)>(e.far-e.near)**2)return}io.copy(r).invert(),ro.copy(e.ray).applyMatrix4(io),null!==n.boundingBox&&!1===ro.intersectsBox(n.boundingBox)||this._computeIntersections(e,t,ro)}}_computeIntersections(e,t,n){let i;const r=this.geometry,a=this.material,l=r.index,o=r.attributes.position,s=r.attributes.uv,b=r.attributes.uv1,c=r.attributes.normal,u=r.groups,h=r.drawRange;if(null!==l)if(Array.isArray(a))for(let d=0,m=u.length;d<m;d++){const r=u[d],o=a[r.materialIndex];for(let a=Math.max(r.start,h.start),u=Math.min(l.count,Math.min(r.start+r.count,h.start+h.count));a<u;a+=3){i=So(this,o,e,n,s,b,c,l.getX(a),l.getX(a+1),l.getX(a+2)),i&&(i.faceIndex=Math.floor(a/3),i.face.materialIndex=r.materialIndex,t.push(i))}}else{for(let r=Math.max(0,h.start),o=Math.min(l.count,h.start+h.count);r<o;r+=3){i=So(this,a,e,n,s,b,c,l.getX(r),l.getX(r+1),l.getX(r+2)),i&&(i.faceIndex=Math.floor(r/3),t.push(i))}}else if(void 0!==o)if(Array.isArray(a))for(let d=0,m=u.length;d<m;d++){const r=u[d],l=a[r.materialIndex];for(let a=Math.max(r.start,h.start),u=Math.min(o.count,Math.min(r.start+r.count,h.start+h.count));a<u;a+=3){i=So(this,l,e,n,s,b,c,a,a+1,a+2),i&&(i.faceIndex=Math.floor(a/3),i.face.materialIndex=r.materialIndex,t.push(i))}}else{for(let r=Math.max(0,h.start),l=Math.min(o.count,h.start+h.count);r<l;r+=3){i=So(this,a,e,n,s,b,c,r,r+1,r+2),i&&(i.faceIndex=Math.floor(r/3),t.push(i))}}}}function So(e,t,n,i,r,a,l,o,s,b){e.getVertexPosition(o,oo),e.getVertexPosition(s,so),e.getVertexPosition(b,bo);const c=function(e,t,n,i,r,a,l,o){let s;if(s=t.side===Ve?i.intersectTriangle(l,a,r,!0,o):i.intersectTriangle(r,a,l,t.side===He,o),null===s)return null;_o.copy(o),_o.applyMatrix4(e.matrixWorld);const b=n.ray.origin.distanceTo(_o);return b<n.near||b>n.far?null:{distance:b,point:_o.clone(),object:e}}(e,t,n,i,oo,so,bo,vo);if(c){r&&(ho.fromBufferAttribute(r,o),mo.fromBufferAttribute(r,s),fo.fromBufferAttribute(r,b),c.uv=Sl.getInterpolation(vo,oo,so,bo,ho,mo,fo,new Rr)),a&&(ho.fromBufferAttribute(a,o),mo.fromBufferAttribute(a,s),fo.fromBufferAttribute(a,b),c.uv1=Sl.getInterpolation(vo,oo,so,bo,ho,mo,fo,new Rr)),l&&(po.fromBufferAttribute(l,o),go.fromBufferAttribute(l,s),xo.fromBufferAttribute(l,b),c.normal=Sl.getInterpolation(vo,oo,so,bo,po,go,xo,new sa),c.normal.dot(i.direction)>0&&c.normal.multiplyScalar(-1));const e={a:o,b:s,c:b,normal:new sa,materialIndex:0};Sl.getNormal(oo,so,bo,e.normal),c.face=e}return c}class Mo extends no{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:r,depthSegments:a};const l=this;i=Math.floor(i),r=Math.floor(r),a=Math.floor(a);const o=[],s=[],b=[],c=[];let u=0,h=0;function d(e,t,n,i,r,a,d,m,f,p,g){const x=a/f,v=d/p,_=a/2,y=d/2,S=m/2,M=f+1,w=p+1;let z=0,E=0;const T=new sa;for(let l=0;l<w;l++){const a=l*v-y;for(let o=0;o<M;o++){const u=o*x-_;T[e]=u*i,T[t]=a*r,T[n]=S,s.push(T.x,T.y,T.z),T[e]=0,T[t]=0,T[n]=m>0?1:-1,b.push(T.x,T.y,T.z),c.push(o/f),c.push(1-l/p),z+=1}}for(let l=0;l<p;l++)for(let e=0;e<f;e++){const t=u+e+M*l,n=u+e+M*(l+1),i=u+(e+1)+M*(l+1),r=u+(e+1)+M*l;o.push(t,n,r),o.push(n,i,r),E+=6}l.addGroup(h,E,g),h+=E,u+=z}d("z","y","x",-1,-1,n,t,e,a,r,0),d("z","y","x",1,-1,n,t,-e,a,r,1),d("x","z","y",1,1,e,n,t,i,a,2),d("x","z","y",1,-1,e,n,-t,i,a,3),d("x","y","z",1,-1,e,t,n,i,r,4),d("x","y","z",-1,-1,e,t,-n,i,r,5),this.setIndex(o),this.setAttribute("position",new Yl(s,3)),this.setAttribute("normal",new Yl(b,3)),this.setAttribute("uv",new Yl(c,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Mo(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function wo(e){const t={};for(const n in e){t[n]={};for(const i in e[n]){const r=e[n][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?r.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),t[n][i]=null):t[n][i]=r.clone():Array.isArray(r)?t[n][i]=r.slice():t[n][i]=r}}return t}function zo(e){const t={};for(let n=0;n<e.length;n++){const i=wo(e[n]);for(const e in i)t[e]=i[e]}return t}function Eo(e){const t=e.getRenderTarget();return null===t?e.outputColorSpace:!0===t.isXRRenderTarget?t.texture.colorSpace:Wr.workingColorSpace}const To={clone:wo,merge:zo};class Ao extends Rl{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==e&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=wo(e.uniforms),this.uniformsGroups=function(e){const t=[];for(let n=0;n<e.length;n++)t.push(e[n].clone());return t}(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const n=this.uniforms[i].value;n&&n.isTexture?t.uniforms[i]={type:"t",value:n.toJSON(e).uuid}:n&&n.isColor?t.uniforms[i]={type:"c",value:n.getHex()}:n&&n.isVector2?t.uniforms[i]={type:"v2",value:n.toArray()}:n&&n.isVector3?t.uniforms[i]={type:"v3",value:n.toArray()}:n&&n.isVector4?t.uniforms[i]={type:"v4",value:n.toArray()}:n&&n.isMatrix3?t.uniforms[i]={type:"m3",value:n.toArray()}:n&&n.isMatrix4?t.uniforms[i]={type:"m4",value:n.toArray()}:t.uniforms[i]={value:n}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const i in this.extensions)!0===this.extensions[i]&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class Co extends ul{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new Oa,this.projectionMatrix=new Oa,this.projectionMatrixInverse=new Oa,this.coordinateSystem=pr}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}const Ro=new sa,Po=new Rr,Lo=new Rr;class Io extends Co{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:50,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:.1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:2e3;super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=2*Sr*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(.5*yr*this.fov);return.5*this.getFilmHeight()/e}getEffectiveFOV(){return 2*Sr*Math.atan(Math.tan(.5*yr*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,n){Ro.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(Ro.x,Ro.y).multiplyScalar(-e/Ro.z),Ro.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(Ro.x,Ro.y).multiplyScalar(-e/Ro.z)}getViewSize(e,t){return this.getViewBounds(e,Po,Lo),t.subVectors(Lo,Po)}setViewOffset(e,t,n,i,r,a){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(.5*yr*this.fov)/this.zoom,n=2*t,i=this.aspect*n,r=-.5*i;const a=this.view;if(null!==this.view&&this.view.enabled){const e=a.fullWidth,l=a.fullHeight;r+=a.offsetX*i/e,t-=a.offsetY*n/l,i*=a.width/e,n*=a.height/l}const l=this.filmOffset;0!==l&&(r+=e*l/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,t,t-n,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const No=-90;class ko extends ul{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const i=new Io(No,1,e,t);i.layers=this.layers,this.add(i);const r=new Io(No,1,e,t);r.layers=this.layers,this.add(r);const a=new Io(No,1,e,t);a.layers=this.layers,this.add(a);const l=new Io(No,1,e,t);l.layers=this.layers,this.add(l);const o=new Io(No,1,e,t);o.layers=this.layers,this.add(o);const s=new Io(No,1,e,t);s.layers=this.layers,this.add(s)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,i,r,a,l,o]=t;for(const s of t)this.remove(s);if(e===pr)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),r.up.set(0,0,-1),r.lookAt(0,1,0),a.up.set(0,0,1),a.lookAt(0,-1,0),l.up.set(0,1,0),l.lookAt(0,0,1),o.up.set(0,1,0),o.lookAt(0,0,-1);else{if(e!==gr)throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),r.up.set(0,0,1),r.lookAt(0,1,0),a.up.set(0,0,-1),a.lookAt(0,-1,0),l.up.set(0,-1,0),l.lookAt(0,0,1),o.up.set(0,-1,0),o.lookAt(0,0,-1)}for(const s of t)this.add(s),s.updateMatrixWorld()}update(e,t){null===this.parent&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:i}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[r,a,l,o,s,b]=this.children,c=e.getRenderTarget(),u=e.getActiveCubeFace(),h=e.getActiveMipmapLevel(),d=e.xr.enabled;e.xr.enabled=!1;const m=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0,i),e.render(t,r),e.setRenderTarget(n,1,i),e.render(t,a),e.setRenderTarget(n,2,i),e.render(t,l),e.setRenderTarget(n,3,i),e.render(t,o),e.setRenderTarget(n,4,i),e.render(t,s),n.texture.generateMipmaps=m,e.setRenderTarget(n,5,i),e.render(t,b),e.setRenderTarget(c,u,h),e.xr.enabled=d,n.texture.needsPMREMUpdate=!0}}class Do extends Qr{constructor(e,t,n,i,r,a,l,o,s,b){super(e=void 0!==e?e:[],t=void 0!==t?t:Ot,n,i,r,a,l,o,s,b),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class Uo extends na{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];this.texture=new Do(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==t.generateMipmaps&&t.generateMipmaps,this.texture.minFilter=void 0!==t.minFilter?t.minFilter:$t}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:"\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",fragmentShader:"\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t"},i=new Mo(5,5,5),r=new Ao({name:"CubemapFromEquirect",uniforms:wo(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:Ve,blending:We});r.uniforms.tEquirect.value=t;const a=new yo(i,r),l=t.minFilter;t.minFilter===en&&(t.minFilter=$t);return new ko(1,10,this).update(e,a),t.minFilter=l,a.geometry.dispose(),a.material.dispose(),this}clear(e,t,n,i){const r=e.getRenderTarget();for(let a=0;a<6;a++)e.setRenderTarget(this,a),e.clear(t,n,i);e.setRenderTarget(r)}}const Oo=new sa,Fo=new sa,Bo=new Pr;class Ho{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new sa(1,0,0),t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=Oo.subVectors(n,t).cross(Fo.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(Oo),i=this.normal.dot(n);if(0===i)return 0===this.distanceToPoint(e.start)?t.copy(e.start):null;const r=-(e.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:t.copy(e.start).addScaledVector(n,r)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||Bo.getNormalMatrix(e),i=this.coplanarPoint(Oo).applyMatrix4(e),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return(new this.constructor).copy(this)}}const Vo=new Ca,Go=new sa;class Wo{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Ho,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Ho,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Ho,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:new Ho,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:new Ho,a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:new Ho;this.planes=[e,t,n,i,r,a]}set(e,t,n,i,r,a){const l=this.planes;return l[0].copy(e),l[1].copy(t),l[2].copy(n),l[3].copy(i),l[4].copy(r),l[5].copy(a),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:pr;const n=this.planes,i=e.elements,r=i[0],a=i[1],l=i[2],o=i[3],s=i[4],b=i[5],c=i[6],u=i[7],h=i[8],d=i[9],m=i[10],f=i[11],p=i[12],g=i[13],x=i[14],v=i[15];if(n[0].setComponents(o-r,u-s,f-h,v-p).normalize(),n[1].setComponents(o+r,u+s,f+h,v+p).normalize(),n[2].setComponents(o+a,u+b,f+d,v+g).normalize(),n[3].setComponents(o-a,u-b,f-d,v-g).normalize(),n[4].setComponents(o-l,u-c,f-m,v-x).normalize(),t===pr)n[5].setComponents(o+l,u+c,f+m,v+x).normalize();else{if(t!==gr)throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);n[5].setComponents(l,c,m,x).normalize()}return this}intersectsObject(e){if(void 0!==e.boundingSphere)null===e.boundingSphere&&e.computeBoundingSphere(),Vo.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;null===t.boundingSphere&&t.computeBoundingSphere(),Vo.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(Vo)}intersectsSprite(e){return Vo.center.set(0,0,0),Vo.radius=.7071067811865476,Vo.applyMatrix4(e.matrixWorld),this.intersectsSphere(Vo)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let r=0;r<6;r++){if(t[r].distanceToPoint(n)<i)return!1}return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(Go.x=i.normal.x>0?e.max.x:e.min.x,Go.y=i.normal.y>0?e.max.y:e.min.y,Go.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(Go)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function jo(){let e=null,t=!1,n=null,i=null;function r(t,a){n(t,a),i=e.requestAnimationFrame(r)}return{start:function(){!0!==t&&null!==n&&(i=e.requestAnimationFrame(r),t=!0)},stop:function(){e.cancelAnimationFrame(i),t=!1},setAnimationLoop:function(e){n=e},setContext:function(t){e=t}}}function Xo(e){const t=new WeakMap;return{get:function(e){return e.isInterleavedBufferAttribute&&(e=e.data),t.get(e)},remove:function(n){n.isInterleavedBufferAttribute&&(n=n.data);const i=t.get(n);i&&(e.deleteBuffer(i.buffer),t.delete(n))},update:function(n,i){if(n.isInterleavedBufferAttribute&&(n=n.data),n.isGLBufferAttribute){const e=t.get(n);return void((!e||e.version<n.version)&&t.set(n,{buffer:n.buffer,type:n.type,bytesPerElement:n.elementSize,version:n.version}))}const r=t.get(n);if(void 0===r)t.set(n,function(t,n){const i=t.array,r=t.usage,a=i.byteLength,l=e.createBuffer();let o;if(e.bindBuffer(n,l),e.bufferData(n,i,r),t.onUploadCallback(),i instanceof Float32Array)o=e.FLOAT;else if(i instanceof Uint16Array)o=t.isFloat16BufferAttribute?e.HALF_FLOAT:e.UNSIGNED_SHORT;else if(i instanceof Int16Array)o=e.SHORT;else if(i instanceof Uint32Array)o=e.UNSIGNED_INT;else if(i instanceof Int32Array)o=e.INT;else if(i instanceof Int8Array)o=e.BYTE;else if(i instanceof Uint8Array)o=e.UNSIGNED_BYTE;else{if(!(i instanceof Uint8ClampedArray))throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+i);o=e.UNSIGNED_BYTE}return{buffer:l,type:o,bytesPerElement:i.BYTES_PER_ELEMENT,version:t.version,size:a}}(n,i));else if(r.version<n.version){if(r.size!==n.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");!function(t,n,i){const r=n.array,a=n._updateRange,l=n.updateRanges;if(e.bindBuffer(i,t),-1===a.count&&0===l.length&&e.bufferSubData(i,0,r),0!==l.length){for(let t=0,n=l.length;t<n;t++){const n=l[t];e.bufferSubData(i,n.start*r.BYTES_PER_ELEMENT,r,n.start,n.count)}n.clearUpdateRanges()}-1!==a.count&&(e.bufferSubData(i,a.offset*r.BYTES_PER_ELEMENT,r,a.offset,a.count),a.count=-1),n.onUploadCallback()}(r.buffer,n,i),r.version=n.version}}}}class qo extends no{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const r=e/2,a=t/2,l=Math.floor(n),o=Math.floor(i),s=l+1,b=o+1,c=e/l,u=t/o,h=[],d=[],m=[],f=[];for(let p=0;p<b;p++){const e=p*u-a;for(let t=0;t<s;t++){const n=t*c-r;d.push(n,-e,0),m.push(0,0,1),f.push(t/l),f.push(1-p/o)}}for(let p=0;p<o;p++)for(let e=0;e<l;e++){const t=e+s*p,n=e+s*(p+1),i=e+1+s*(p+1),r=e+1+s*p;h.push(t,n,r),h.push(n,i,r)}this.setIndex(h),this.setAttribute("position",new Yl(d,3)),this.setAttribute("normal",new Yl(m,3)),this.setAttribute("uv",new Yl(f,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new qo(e.width,e.height,e.widthSegments,e.heightSegments)}}const Yo={alphahash_fragment:"#ifdef USE_ALPHAHASH\n\tif ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\n#endif",alphahash_pars_fragment:"#ifdef USE_ALPHAHASH\n\tconst float ALPHA_HASH_SCALE = 0.05;\n\tfloat hash2D( vec2 value ) {\n\t\treturn fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\n\t}\n\tfloat hash3D( vec3 value ) {\n\t\treturn hash2D( vec2( hash2D( value.xy ), value.z ) );\n\t}\n\tfloat getAlphaHashThreshold( vec3 position ) {\n\t\tfloat maxDeriv = max(\n\t\t\tlength( dFdx( position.xyz ) ),\n\t\t\tlength( dFdy( position.xyz ) )\n\t\t);\n\t\tfloat pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\n\t\tvec2 pixScales = vec2(\n\t\t\texp2( floor( log2( pixScale ) ) ),\n\t\t\texp2( ceil( log2( pixScale ) ) )\n\t\t);\n\t\tvec2 alpha = vec2(\n\t\t\thash3D( floor( pixScales.x * position.xyz ) ),\n\t\t\thash3D( floor( pixScales.y * position.xyz ) )\n\t\t);\n\t\tfloat lerpFactor = fract( log2( pixScale ) );\n\t\tfloat x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\n\t\tfloat a = min( lerpFactor, 1.0 - lerpFactor );\n\t\tvec3 cases = vec3(\n\t\t\tx * x / ( 2.0 * a * ( 1.0 - a ) ),\n\t\t\t( x - 0.5 * a ) / ( 1.0 - a ),\n\t\t\t1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\n\t\t);\n\t\tfloat threshold = ( x < ( 1.0 - a ) )\n\t\t\t? ( ( x < a ) ? cases.x : cases.y )\n\t\t\t: cases.z;\n\t\treturn clamp( threshold , 1.0e-6, 1.0 );\n\t}\n#endif",alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n\t#ifdef ALPHA_TO_COVERAGE\n\tdiffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );\n\tif ( diffuseColor.a == 0.0 ) discard;\n\t#else\n\tif ( diffuseColor.a < alphaTest ) discard;\n\t#endif\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_CLEARCOAT ) \n\t\tclearcoatSpecularIndirect *= ambientOcclusion;\n\t#endif\n\t#if defined( USE_SHEEN ) \n\t\tsheenSpecularIndirect *= ambientOcclusion;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometryNormal, geometryViewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",batching_pars_vertex:"#ifdef USE_BATCHING\n\t#if ! defined( GL_ANGLE_multi_draw )\n\t#define gl_DrawID _gl_DrawID\n\tuniform int _gl_DrawID;\n\t#endif\n\tuniform highp sampler2D batchingTexture;\n\tuniform highp usampler2D batchingIdTexture;\n\tmat4 getBatchingMatrix( const in float i ) {\n\t\tint size = textureSize( batchingTexture, 0 ).x;\n\t\tint j = int( i ) * 4;\n\t\tint x = j % size;\n\t\tint y = j / size;\n\t\tvec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );\n\t\tvec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );\n\t\tvec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );\n\t\tvec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );\n\t\treturn mat4( v1, v2, v3, v4 );\n\t}\n\tfloat getIndirectIndex( const in int i ) {\n\t\tint size = textureSize( batchingIdTexture, 0 ).x;\n\t\tint x = i % size;\n\t\tint y = i / size;\n\t\treturn float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );\n\t}\n#endif\n#ifdef USE_BATCHING_COLOR\n\tuniform sampler2D batchingColorTexture;\n\tvec3 getBatchingColor( const in float i ) {\n\t\tint size = textureSize( batchingColorTexture, 0 ).x;\n\t\tint j = int( i );\n\t\tint x = j % size;\n\t\tint y = j / size;\n\t\treturn texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;\n\t}\n#endif",batching_vertex:"#ifdef USE_BATCHING\n\tmat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );\n#endif",begin_vertex:"vec3 transformed = vec3( position );\n#ifdef USE_ALPHAHASH\n\tvPosition = vec3( position );\n#endif",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"float G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n} // validated",iridescence_fragment:"#ifdef USE_IRIDESCENCE\n\tconst mat3 XYZ_TO_REC709 = mat3(\n\t\t 3.2404542, -0.9692660,  0.0556434,\n\t\t-1.5371385,  1.8760108, -0.2040259,\n\t\t-0.4985314,  0.0415560,  1.0572252\n\t);\n\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\n\t\tvec3 sqrtF0 = sqrt( fresnel0 );\n\t\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n\t}\n\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n\t}\n\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n\t}\n\tvec3 evalSensitivity( float OPD, vec3 shift ) {\n\t\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\n\t\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n\t\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n\t\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n\t\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\n\t\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\n\t\txyz /= 1.0685e-7;\n\t\tvec3 rgb = XYZ_TO_REC709 * xyz;\n\t\treturn rgb;\n\t}\n\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n\t\tvec3 I;\n\t\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n\t\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n\t\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\n\t\tif ( cosTheta2Sq < 0.0 ) {\n\t\t\treturn vec3( 1.0 );\n\t\t}\n\t\tfloat cosTheta2 = sqrt( cosTheta2Sq );\n\t\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n\t\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\n\t\tfloat T121 = 1.0 - R12;\n\t\tfloat phi12 = 0.0;\n\t\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\n\t\tfloat phi21 = PI - phi12;\n\t\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\t\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\n\t\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\n\t\tvec3 phi23 = vec3( 0.0 );\n\t\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\n\t\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\n\t\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\n\t\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n\t\tvec3 phi = vec3( phi21 ) + phi23;\n\t\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\n\t\tvec3 r123 = sqrt( R123 );\n\t\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n\t\tvec3 C0 = R12 + Rs;\n\t\tI = C0;\n\t\tvec3 Cm = Rs - T121;\n\t\tfor ( int m = 1; m <= 2; ++ m ) {\n\t\t\tCm *= r123;\n\t\t\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n\t\t\tI += Cm * Sm;\n\t\t}\n\t\treturn max( I, vec3( 0.0 ) );\n\t}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vBumpMapUv );\n\t\tvec2 dSTdy = dFdy( vBumpMapUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );\n\t\tvec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#ifdef ALPHA_TO_COVERAGE\n\t\tfloat distanceToPlane, distanceGradient;\n\t\tfloat clipOpacity = 1.0;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\n\t\t\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\n\t\t\tclipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\n\t\t\tif ( clipOpacity == 0.0 ) discard;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\t\tfloat unionClipOpacity = 1.0;\n\t\t\t#pragma unroll_loop_start\n\t\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\t\tplane = clippingPlanes[ i ];\n\t\t\t\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\n\t\t\t\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\n\t\t\t\tunionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\n\t\t\t}\n\t\t\t#pragma unroll_loop_end\n\t\t\tclipOpacity *= 1.0 - unionClipOpacity;\n\t\t#endif\n\t\tdiffuseColor.a *= clipOpacity;\n\t\tif ( diffuseColor.a == 0.0 ) discard;\n\t#else\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\t\tbool clipped = true;\n\t\t\t#pragma unroll_loop_start\n\t\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\t\tplane = clippingPlanes[ i ];\n\t\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t\t}\n\t\t\t#pragma unroll_loop_end\n\t\t\tif ( clipped ) discard;\n\t\t#endif\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif\n#ifdef USE_BATCHING_COLOR\n\tvec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );\n\tvColor.xyz *= batchingColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\n#ifdef USE_ALPHAHASH\n\tvarying vec3 vPosition;\n#endif\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n} // validated",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\n\t\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n\t\tuv.x *= CUBEUV_TEXEL_WIDTH;\n\t\tuv.y *= CUBEUV_TEXEL_HEIGHT;\n\t\t#ifdef texture2DGradEXT\n\t\t\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n\t\t#else\n\t\t\treturn texture2D( envMap, uv ).rgb;\n\t\t#endif\n\t}\n\t#define cubeUV_r0 1.0\n\t#define cubeUV_m0 - 2.0\n\t#define cubeUV_r1 0.8\n\t#define cubeUV_m1 - 1.0\n\t#define cubeUV_r4 0.4\n\t#define cubeUV_m4 2.0\n\t#define cubeUV_r5 0.305\n\t#define cubeUV_m5 3.0\n\t#define cubeUV_r6 0.21\n\t#define cubeUV_m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= cubeUV_r1 ) {\n\t\t\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\n\t\t} else if ( roughness >= cubeUV_r4 ) {\n\t\t\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\n\t\t} else if ( roughness >= cubeUV_r5 ) {\n\t\t\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\n\t\t} else if ( roughness >= cubeUV_r6 ) {\n\t\t\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = objectTangent;\n#endif\n#ifdef USE_BATCHING\n\tmat3 bm = mat3( batchingMatrix );\n\ttransformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );\n\ttransformedNormal = bm * transformedNormal;\n\t#ifdef USE_TANGENT\n\t\ttransformedTangent = bm * transformedTangent;\n\t#endif\n#endif\n#ifdef USE_INSTANCING\n\tmat3 im = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );\n\ttransformedNormal = im * transformedNormal;\n\t#ifdef USE_TANGENT\n\t\ttransformedTangent = im * transformedTangent;\n\t#endif\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\ttransformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",colorspace_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",colorspace_pars_fragment:"\nconst mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(\n\tvec3( 0.8224621, 0.177538, 0.0 ),\n\tvec3( 0.0331941, 0.9668058, 0.0 ),\n\tvec3( 0.0170827, 0.0723974, 0.9105199 )\n);\nconst mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(\n\tvec3( 1.2249401, - 0.2249404, 0.0 ),\n\tvec3( - 0.0420569, 1.0420571, 0.0 ),\n\tvec3( - 0.0196376, - 0.0786361, 1.0982735 )\n);\nvec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {\n\treturn vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );\n}\nvec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {\n\treturn vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );\n}\nvec4 LinearTransferOETF( in vec4 value ) {\n\treturn value;\n}\nvec4 sRGBTransferOETF( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform mat3 envMapRotation;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#ifdef USE_ENVMAP\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\tvec3 reflectVec = reflect( - viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\t#ifdef USE_ANISOTROPY\n\t\tvec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\n\t\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\t\tvec3 bentNormal = cross( bitangent, viewDir );\n\t\t\t\tbentNormal = normalize( cross( bentNormal, bitangent ) );\n\t\t\t\tbentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\n\t\t\t\treturn getIBLRadiance( viewDir, bentNormal, roughness );\n\t\t\t#else\n\t\t\t\treturn vec3( 0.0 );\n\t\t\t#endif\n\t\t}\n\t#endif\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\t#else\n\t\tvec2 fw = fwidth( coord ) * 0.5;\n\t\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\n\t#endif\n}",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_fragment:"LambertMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularStrength = specularStrength;",lights_lambert_pars_fragment:"varying vec3 vViewPosition;\nstruct LambertMaterial {\n\tvec3 diffuseColor;\n\tfloat specularStrength;\n};\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Lambert\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Lambert",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\n#if defined( USE_LIGHT_PROBES )\n\tuniform vec3 lightProbe[ 9 ];\n#endif\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif ( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometryPosition;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometryPosition;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\tmaterial.ior = ior;\n\t#ifdef USE_SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULAR_COLORMAP\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\n\t\t#endif\n\t\t#ifdef USE_SPECULAR_INTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_DISPERSION\n\tmaterial.dispersion = dispersion;\n#endif\n#ifdef USE_IRIDESCENCE\n\tmaterial.iridescence = iridescence;\n\tmaterial.iridescenceIOR = iridescenceIOR;\n\t#ifdef USE_IRIDESCENCEMAP\n\t\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\n\t#endif\n\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\t\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\n\t#else\n\t\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\n\t#endif\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEEN_COLORMAP\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEEN_ROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\n\t#endif\n#endif\n#ifdef USE_ANISOTROPY\n\t#ifdef USE_ANISOTROPYMAP\n\t\tmat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\n\t\tvec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\n\t\tvec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\n\t#else\n\t\tvec2 anisotropyV = anisotropyVector;\n\t#endif\n\tmaterial.anisotropy = length( anisotropyV );\n\tif( material.anisotropy == 0.0 ) {\n\t\tanisotropyV = vec2( 1.0, 0.0 );\n\t} else {\n\t\tanisotropyV /= material.anisotropy;\n\t\tmaterial.anisotropy = saturate( material.anisotropy );\n\t}\n\tmaterial.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\n\tmaterial.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;\n\tmaterial.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\tfloat dispersion;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\tfloat iridescence;\n\t\tfloat iridescenceIOR;\n\t\tfloat iridescenceThickness;\n\t\tvec3 iridescenceFresnel;\n\t\tvec3 iridescenceF0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n\t#ifdef IOR\n\t\tfloat ior;\n\t#endif\n\t#ifdef USE_TRANSMISSION\n\t\tfloat transmission;\n\t\tfloat transmissionAlpha;\n\t\tfloat thickness;\n\t\tfloat attenuationDistance;\n\t\tvec3 attenuationColor;\n\t#endif\n\t#ifdef USE_ANISOTROPY\n\t\tfloat anisotropy;\n\t\tfloat alphaT;\n\t\tvec3 anisotropyT;\n\t\tvec3 anisotropyB;\n\t#endif\n};\nvec3 clearcoatSpecularDirect = vec3( 0.0 );\nvec3 clearcoatSpecularIndirect = vec3( 0.0 );\nvec3 sheenSpecularDirect = vec3( 0.0 );\nvec3 sheenSpecularIndirect = vec3(0.0 );\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\n    float x2 = x * x;\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\n#ifdef USE_ANISOTROPY\n\tfloat V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\n\t\tfloat gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\n\t\tfloat gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\n\t\tfloat v = 0.5 / ( gv + gl );\n\t\treturn saturate(v);\n\t}\n\tfloat D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\n\t\tfloat a2 = alphaT * alphaB;\n\t\thighp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\n\t\thighp float v2 = dot( v, v );\n\t\tfloat w2 = a2 / v2;\n\t\treturn RECIPROCAL_PI * a2 * pow2 ( w2 );\n\t}\n#endif\n#ifdef USE_CLEARCOAT\n\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\n\t\tvec3 f0 = material.clearcoatF0;\n\t\tfloat f90 = material.clearcoatF90;\n\t\tfloat roughness = material.clearcoatRoughness;\n\t\tfloat alpha = pow2( roughness );\n\t\tvec3 halfDir = normalize( lightDir + viewDir );\n\t\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\t\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\t\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\t\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\t\tvec3 F = F_Schlick( f0, f90, dotVH );\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t\treturn F * ( V * D );\n\t}\n#endif\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\n\tvec3 f0 = material.specularColor;\n\tfloat f90 = material.specularF90;\n\tfloat roughness = material.roughness;\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\t#ifdef USE_IRIDESCENCE\n\t\tF = mix( F, material.iridescenceFresnel, material.iridescence );\n\t#endif\n\t#ifdef USE_ANISOTROPY\n\t\tfloat dotTL = dot( material.anisotropyT, lightDir );\n\t\tfloat dotTV = dot( material.anisotropyT, viewDir );\n\t\tfloat dotTH = dot( material.anisotropyT, halfDir );\n\t\tfloat dotBL = dot( material.anisotropyB, lightDir );\n\t\tfloat dotBV = dot( material.anisotropyB, viewDir );\n\t\tfloat dotBH = dot( material.anisotropyB, halfDir );\n\t\tfloat V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\n\t\tfloat D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\n\t#else\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t#endif\n\treturn F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat r2 = roughness * roughness;\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\treturn saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\t#ifdef USE_IRIDESCENCE\n\t\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\n\t#else\n\t\tvec3 Fr = specularColor;\n\t#endif\n\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometryNormal;\n\t\tvec3 viewDir = geometryViewDir;\n\t\tvec3 position = geometryPosition;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\t#ifdef USE_IRIDESCENCE\n\t\tcomputeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n\t#else\n\t\tcomputeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\t#endif\n\tvec3 totalScattering = singleScattering + multiScattering;\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nvec3 geometryPosition = - vViewPosition;\nvec3 geometryNormal = normal;\nvec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\nvec3 geometryClearcoatNormal = vec3( 0.0 );\n#ifdef USE_CLEARCOAT\n\tgeometryClearcoatNormal = clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\n\tfloat dotNVi = saturate( dot( normal, geometryViewDir ) );\n\tif ( material.iridescenceThickness == 0.0 ) {\n\t\tmaterial.iridescence = 0.0;\n\t} else {\n\t\tmaterial.iridescence = saturate( material.iridescence );\n\t}\n\tif ( material.iridescence > 0.0 ) {\n\t\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n\t\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n\t}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometryPosition, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tvec4 spotColor;\n\tvec3 spotLightCoord;\n\tbool inSpotLightMap;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometryPosition, directLight );\n\t\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\n\t\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\n\t\t#else\n\t\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#endif\n\t\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\n\t\t\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\n\t\t\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\n\t\t\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\n\t\t\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\n\t\t#endif\n\t\t#undef SPOT_LIGHT_MAP_INDEX\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\t#if defined( USE_LIGHT_PROBES )\n\t\tirradiance += getLightProbeIrradiance( lightProbe, geometryNormal );\n\t#endif\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\t\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometryNormal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\t#ifdef USE_ANISOTROPY\n\t\tradiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );\n\t#else\n\t\tradiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF )\n\tgl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\tvFragDepth = 1.0 + gl_Position.w;\n\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 sampledDiffuseColor = texture2D( map, vMapUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\n\t\n\t#endif\n\tdiffuseColor *= sampledDiffuseColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\t#if defined( USE_POINTS_UV )\n\t\tvec2 uv = vUv;\n\t#else\n\t\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n\t#endif\n#endif\n#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_POINTS_UV )\n\tvarying vec2 vUv;\n#else\n\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\t\tuniform mat3 uvTransform;\n\t#endif\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphinstance_vertex:"#ifdef USE_INSTANCING_MORPH\n\tfloat morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\tfloat morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\tmorphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;\n\t}\n#endif",morphcolor_vertex:"#if defined( USE_MORPHCOLORS )\n\tvColor *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t#if defined( USE_COLOR_ALPHA )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n\t\t#elif defined( USE_COLOR )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n\t\t#endif\n\t}\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n\t}\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\t#ifndef USE_INSTANCING_MORPH\n\t\tuniform float morphTargetBaseInfluence;\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t#endif\n\tuniform sampler2DArray morphTargetsTexture;\n\tuniform ivec2 morphTargetsTextureSize;\n\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n\t\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n\t\tint y = texelIndex / morphTargetsTextureSize.x;\n\t\tint x = texelIndex - y * morphTargetsTextureSize.x;\n\t\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\n\t\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\n\t}\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n\t}\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = dFdx( vViewPosition );\n\tvec3 fdy = dFdy( vViewPosition );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal *= faceDirection;\n\t#endif\n#endif\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\n\t#ifdef USE_TANGENT\n\t\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n\t#else\n\t\tmat3 tbn = getTangentFrame( - vViewPosition, normal,\n\t\t#if defined( USE_NORMALMAP )\n\t\t\tvNormalMapUv\n\t\t#elif defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tvClearcoatNormalMapUv\n\t\t#else\n\t\t\tvUv\n\t\t#endif\n\t\t);\n\t#endif\n\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n\t\ttbn[0] *= faceDirection;\n\t\ttbn[1] *= faceDirection;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\t#ifdef USE_TANGENT\n\t\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n\t#else\n\t\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\n\t#endif\n\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n\t\ttbn2[0] *= faceDirection;\n\t\ttbn2[1] *= faceDirection;\n\t#endif\n#endif\nvec3 nonPerturbedNormal = normal;",normal_fragment_maps:"#ifdef USE_NORMALMAP_OBJECTSPACE\n\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\n\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\tnormal = normalize( tbn * mapN );\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef USE_NORMALMAP_OBJECTSPACE\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\n\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( uv.st );\n\t\tvec2 st1 = dFdy( uv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\n\t\treturn mat3( T * scale, B * scale, N );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = nonPerturbedNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif",iridescence_pars_fragment:"#ifdef USE_IRIDESCENCEMAP\n\tuniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform sampler2D iridescenceThicknessMap;\n#endif",opaque_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= material.transmissionAlpha;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;\nconst float Inv255 = 1. / 255.;\nconst vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );\nconst vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );\nconst vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );\nconst vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );\nvec4 packDepthToRGBA( const in float v ) {\n\tif( v <= 0.0 )\n\t\treturn vec4( 0., 0., 0., 0. );\n\tif( v >= 1.0 )\n\t\treturn vec4( 1., 1., 1., 1. );\n\tfloat vuf;\n\tfloat af = modf( v * PackFactors.a, vuf );\n\tfloat bf = modf( vuf * ShiftRight8, vuf );\n\tfloat gf = modf( vuf * ShiftRight8, vuf );\n\treturn vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );\n}\nvec3 packDepthToRGB( const in float v ) {\n\tif( v <= 0.0 )\n\t\treturn vec3( 0., 0., 0. );\n\tif( v >= 1.0 )\n\t\treturn vec3( 1., 1., 1. );\n\tfloat vuf;\n\tfloat bf = modf( v * PackFactors.b, vuf );\n\tfloat gf = modf( vuf * ShiftRight8, vuf );\n\treturn vec3( vuf * Inv255, gf * PackUpscale, bf );\n}\nvec2 packDepthToRG( const in float v ) {\n\tif( v <= 0.0 )\n\t\treturn vec2( 0., 0. );\n\tif( v >= 1.0 )\n\t\treturn vec2( 1., 1. );\n\tfloat vuf;\n\tfloat gf = modf( v * 256., vuf );\n\treturn vec2( vuf * Inv255, gf );\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors4 );\n}\nfloat unpackRGBToDepth( const in vec3 v ) {\n\treturn dot( v, UnpackFactors3 );\n}\nfloat unpackRGToDepth( const in vec2 v ) {\n\treturn v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;\n}\nvec4 pack2HalfToRGBA( const in vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( const in vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\n\treturn depth * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * depth - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_BATCHING\n\tmvPosition = batchingMatrix * mvPosition;\n#endif\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#if NUM_SPOT_LIGHT_COORDS > 0\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#if NUM_SPOT_LIGHT_MAPS > 0\n\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\n\t\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn mix( 1.0, shadow, shadowIntensity );\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tfloat shadow = 1.0;\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\t\n\t\tfloat lightToPositionLength = length( lightToPosition );\n\t\tif ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {\n\t\t\tfloat dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\t\tdp += shadowBias;\n\t\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\t\tshadow = (\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t\t) * ( 1.0 / 9.0 );\n\t\t\t#else\n\t\t\t\tshadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t\t#endif\n\t\t}\n\t\treturn mix( 1.0, shadow, shadowIntensity );\n\t}\n#endif",shadowmap_pars_vertex:"#if NUM_SPOT_LIGHT_COORDS > 0\n\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\n\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\tvec4 shadowWorldPosition;\n#endif\n#if defined( USE_SHADOWMAP )\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if NUM_SPOT_LIGHT_COORDS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition;\n\t\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\n\t\t#endif\n\t\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\tuniform highp sampler2D boneTexture;\n\tmat4 getBoneMatrix( const in float i ) {\n\t\tint size = textureSize( boneTexture, 0 ).x;\n\t\tint j = int( i ) * 4;\n\t\tint x = j % size;\n\t\tint y = j / size;\n\t\tvec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );\n\t\tvec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );\n\t\tvec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );\n\t\tvec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );\n\t\treturn mat4( v1, v2, v3, v4 );\n\t}\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn saturate( toneMappingExposure * color );\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 CineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nconst mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(\n\tvec3( 1.6605, - 0.1246, - 0.0182 ),\n\tvec3( - 0.5876, 1.1329, - 0.1006 ),\n\tvec3( - 0.0728, - 0.0083, 1.1187 )\n);\nconst mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(\n\tvec3( 0.6274, 0.0691, 0.0164 ),\n\tvec3( 0.3293, 0.9195, 0.0880 ),\n\tvec3( 0.0433, 0.0113, 0.8956 )\n);\nvec3 agxDefaultContrastApprox( vec3 x ) {\n\tvec3 x2 = x * x;\n\tvec3 x4 = x2 * x2;\n\treturn + 15.5 * x4 * x2\n\t\t- 40.14 * x4 * x\n\t\t+ 31.96 * x4\n\t\t- 6.868 * x2 * x\n\t\t+ 0.4298 * x2\n\t\t+ 0.1191 * x\n\t\t- 0.00232;\n}\nvec3 AgXToneMapping( vec3 color ) {\n\tconst mat3 AgXInsetMatrix = mat3(\n\t\tvec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),\n\t\tvec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),\n\t\tvec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )\n\t);\n\tconst mat3 AgXOutsetMatrix = mat3(\n\t\tvec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),\n\t\tvec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),\n\t\tvec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )\n\t);\n\tconst float AgxMinEv = - 12.47393;\tconst float AgxMaxEv = 4.026069;\n\tcolor *= toneMappingExposure;\n\tcolor = LINEAR_SRGB_TO_LINEAR_REC2020 * color;\n\tcolor = AgXInsetMatrix * color;\n\tcolor = max( color, 1e-10 );\tcolor = log2( color );\n\tcolor = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );\n\tcolor = clamp( color, 0.0, 1.0 );\n\tcolor = agxDefaultContrastApprox( color );\n\tcolor = AgXOutsetMatrix * color;\n\tcolor = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );\n\tcolor = LINEAR_REC2020_TO_LINEAR_SRGB * color;\n\tcolor = clamp( color, 0.0, 1.0 );\n\treturn color;\n}\nvec3 NeutralToneMapping( vec3 color ) {\n\tconst float StartCompression = 0.8 - 0.04;\n\tconst float Desaturation = 0.15;\n\tcolor *= toneMappingExposure;\n\tfloat x = min( color.r, min( color.g, color.b ) );\n\tfloat offset = x < 0.08 ? x - 6.25 * x * x : 0.04;\n\tcolor -= offset;\n\tfloat peak = max( color.r, max( color.g, color.b ) );\n\tif ( peak < StartCompression ) return color;\n\tfloat d = 1. - StartCompression;\n\tfloat newPeak = 1. - d * d / ( peak + d - StartCompression );\n\tcolor *= newPeak / peak;\n\tfloat g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );\n\treturn mix( color, vec3( newPeak ), g );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n\tmaterial.transmission = transmission;\n\tmaterial.transmissionAlpha = 1.0;\n\tmaterial.thickness = thickness;\n\tmaterial.attenuationDistance = attenuationDistance;\n\tmaterial.attenuationColor = attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmitted = getIBLVolumeRefraction(\n\t\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,\n\t\tmaterial.attenuationColor, material.attenuationDistance );\n\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\n\ttotalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tfloat w0( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\n\t}\n\tfloat w1( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\n\t}\n\tfloat w2( float a ){\n\t\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\n\t}\n\tfloat w3( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a * a * a );\n\t}\n\tfloat g0( float a ) {\n\t\treturn w0( a ) + w1( a );\n\t}\n\tfloat g1( float a ) {\n\t\treturn w2( a ) + w3( a );\n\t}\n\tfloat h0( float a ) {\n\t\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\n\t}\n\tfloat h1( float a ) {\n\t\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\n\t}\n\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\n\t\tuv = uv * texelSize.zw + 0.5;\n\t\tvec2 iuv = floor( uv );\n\t\tvec2 fuv = fract( uv );\n\t\tfloat g0x = g0( fuv.x );\n\t\tfloat g1x = g1( fuv.x );\n\t\tfloat h0x = h0( fuv.x );\n\t\tfloat h1x = h1( fuv.x );\n\t\tfloat h0y = h0( fuv.y );\n\t\tfloat h1y = h1( fuv.y );\n\t\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n\t\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\n\t\t\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\n\t}\n\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\n\t\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\n\t\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\n\t\tvec2 fLodSizeInv = 1.0 / fLodSize;\n\t\tvec2 cLodSizeInv = 1.0 / cLodSize;\n\t\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\n\t\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\n\t\treturn mix( fSample, cSample, fract( lod ) );\n\t}\n\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n\t\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\n\t}\n\tvec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tif ( isinf( attenuationDistance ) ) {\n\t\t\treturn vec3( 1.0 );\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n\t\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n\t\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,\n\t\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tvec4 transmittedLight;\n\t\tvec3 transmittance;\n\t\t#ifdef USE_DISPERSION\n\t\t\tfloat halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;\n\t\t\tvec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );\n\t\t\tfor ( int i = 0; i < 3; i ++ ) {\n\t\t\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );\n\t\t\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\t\n\t\t\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\t\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\t\t\trefractionCoords += 1.0;\n\t\t\t\trefractionCoords /= 2.0;\n\t\t\n\t\t\t\tvec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );\n\t\t\t\ttransmittedLight[ i ] = transmissionSample[ i ];\n\t\t\t\ttransmittedLight.a += transmissionSample.a;\n\t\t\t\ttransmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];\n\t\t\t}\n\t\t\ttransmittedLight.a /= 3.0;\n\t\t\n\t\t#else\n\t\t\n\t\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\t\trefractionCoords += 1.0;\n\t\t\trefractionCoords /= 2.0;\n\t\t\ttransmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\t\ttransmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\t\n\t\t#endif\n\t\tvec3 attenuatedColor = transmittance * transmittedLight.rgb;\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\tfloat transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\n\t}\n#endif",uv_pars_fragment:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\n\tvarying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n\tvarying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n\tvarying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n\tvarying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n\tvarying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n\tvarying vec2 vNormalMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tvarying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n\tvarying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tvarying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tvarying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tvarying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tvarying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tvarying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tvarying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tvarying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tvarying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tvarying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n\tvarying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tvarying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tvarying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tuniform mat3 transmissionMapTransform;\n\tvarying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n\tuniform mat3 thicknessMapTransform;\n\tvarying vec2 vThicknessMapUv;\n#endif",uv_pars_vertex:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\n\tuniform mat3 mapTransform;\n\tvarying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform mat3 alphaMapTransform;\n\tvarying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n\tuniform mat3 lightMapTransform;\n\tvarying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n\tuniform mat3 aoMapTransform;\n\tvarying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n\tuniform mat3 bumpMapTransform;\n\tvarying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n\tuniform mat3 normalMapTransform;\n\tvarying vec2 vNormalMapUv;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n\tuniform mat3 displacementMapTransform;\n\tvarying vec2 vDisplacementMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tuniform mat3 emissiveMapTransform;\n\tvarying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n\tuniform mat3 metalnessMapTransform;\n\tvarying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tuniform mat3 roughnessMapTransform;\n\tvarying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tuniform mat3 anisotropyMapTransform;\n\tvarying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tuniform mat3 clearcoatMapTransform;\n\tvarying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform mat3 clearcoatNormalMapTransform;\n\tvarying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform mat3 clearcoatRoughnessMapTransform;\n\tvarying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tuniform mat3 sheenColorMapTransform;\n\tvarying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tuniform mat3 sheenRoughnessMapTransform;\n\tvarying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tuniform mat3 iridescenceMapTransform;\n\tvarying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform mat3 iridescenceThicknessMapTransform;\n\tvarying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n\tuniform mat3 specularMapTransform;\n\tvarying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tuniform mat3 specularColorMapTransform;\n\tvarying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tuniform mat3 specularIntensityMapTransform;\n\tvarying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tuniform mat3 transmissionMapTransform;\n\tvarying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n\tuniform mat3 thicknessMapTransform;\n\tvarying vec2 vThicknessMapUv;\n#endif",uv_vertex:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvUv = vec3( uv, 1 ).xy;\n#endif\n#ifdef USE_MAP\n\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ALPHAMAP\n\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_LIGHTMAP\n\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_AOMAP\n\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_BUMPMAP\n\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_NORMALMAP\n\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_METALNESSMAP\n\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tvAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULARMAP\n\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_THICKNESSMAP\n\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_BATCHING\n\t\tworldPosition = batchingMatrix * worldPosition;\n\t#endif\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nuniform float backgroundIntensity;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\ttexColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\n\t#endif\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",backgroundCube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",backgroundCube_frag:"#ifdef ENVMAP_TYPE_CUBE\n\tuniform samplerCube envMap;\n#elif defined( ENVMAP_TYPE_CUBE_UV )\n\tuniform sampler2D envMap;\n#endif\nuniform float flipEnvMap;\nuniform float backgroundBlurriness;\nuniform float backgroundIntensity;\nuniform mat3 backgroundRotation;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );\n\t#else\n\t\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t#endif\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",cube_frag:"uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldDirection;\nvoid main() {\n\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n\tgl_FragColor = texColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",depth_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <batching_vertex>\n\t#include <skinbase_vertex>\n\t#include <morphinstance_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <clipping_planes_fragment>\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#elif DEPTH_PACKING == 3202\n\t\tgl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );\n\t#elif DEPTH_PACKING == 3203\n\t\tgl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );\n\t#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <batching_vertex>\n\t#include <skinbase_vertex>\n\t#include <morphinstance_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <clipping_planes_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"#define LAMBERT\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_lambert_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_lambert_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t#else\n\t\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );\n\t#ifdef OPAQUE\n\t\tgl_FragColor.a = 1.0;\n\t#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define USE_SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef USE_SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULAR_COLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n\t#ifdef USE_SPECULAR_INTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_DISPERSION\n\tuniform float dispersion;\n#endif\n#ifdef USE_IRIDESCENCE\n\tuniform float iridescence;\n\tuniform float iridescenceIOR;\n\tuniform float iridescenceThicknessMinimum;\n\tuniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEEN_COLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEEN_ROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\n#ifdef USE_ANISOTROPY\n\tuniform vec2 anisotropyVector;\n\t#ifdef USE_ANISOTROPYMAP\n\t\tuniform sampler2D anisotropyMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;\n\t#endif\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n#ifdef USE_POINTS_UV\n\tvarying vec2 vUv;\n\tuniform mat3 uvTransform;\n#endif\nvoid main() {\n\t#ifdef USE_POINTS_UV\n\t\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\t#endif\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <logdepthbuf_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\t#include <logdepthbuf_fragment>\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n}"},Zo={common:{diffuse:{value:new Tl(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new Pr},alphaMap:{value:null},alphaMapTransform:{value:new Pr},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new Pr}},envmap:{envMap:{value:null},envMapRotation:{value:new Pr},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new Pr}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new Pr}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new Pr},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new Pr},normalScale:{value:new Rr(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new Pr},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new Pr}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new Pr}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new Pr}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Tl(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Tl(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new Pr},alphaTest:{value:0},uvTransform:{value:new Pr}},sprite:{diffuse:{value:new Tl(16777215)},opacity:{value:1},center:{value:new Rr(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new Pr},alphaMap:{value:null},alphaMapTransform:{value:new Pr},alphaTest:{value:0}}},Ko={basic:{uniforms:zo([Zo.common,Zo.specularmap,Zo.envmap,Zo.aomap,Zo.lightmap,Zo.fog]),vertexShader:Yo.meshbasic_vert,fragmentShader:Yo.meshbasic_frag},lambert:{uniforms:zo([Zo.common,Zo.specularmap,Zo.envmap,Zo.aomap,Zo.lightmap,Zo.emissivemap,Zo.bumpmap,Zo.normalmap,Zo.displacementmap,Zo.fog,Zo.lights,{emissive:{value:new Tl(0)}}]),vertexShader:Yo.meshlambert_vert,fragmentShader:Yo.meshlambert_frag},phong:{uniforms:zo([Zo.common,Zo.specularmap,Zo.envmap,Zo.aomap,Zo.lightmap,Zo.emissivemap,Zo.bumpmap,Zo.normalmap,Zo.displacementmap,Zo.fog,Zo.lights,{emissive:{value:new Tl(0)},specular:{value:new Tl(1118481)},shininess:{value:30}}]),vertexShader:Yo.meshphong_vert,fragmentShader:Yo.meshphong_frag},standard:{uniforms:zo([Zo.common,Zo.envmap,Zo.aomap,Zo.lightmap,Zo.emissivemap,Zo.bumpmap,Zo.normalmap,Zo.displacementmap,Zo.roughnessmap,Zo.metalnessmap,Zo.fog,Zo.lights,{emissive:{value:new Tl(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Yo.meshphysical_vert,fragmentShader:Yo.meshphysical_frag},toon:{uniforms:zo([Zo.common,Zo.aomap,Zo.lightmap,Zo.emissivemap,Zo.bumpmap,Zo.normalmap,Zo.displacementmap,Zo.gradientmap,Zo.fog,Zo.lights,{emissive:{value:new Tl(0)}}]),vertexShader:Yo.meshtoon_vert,fragmentShader:Yo.meshtoon_frag},matcap:{uniforms:zo([Zo.common,Zo.bumpmap,Zo.normalmap,Zo.displacementmap,Zo.fog,{matcap:{value:null}}]),vertexShader:Yo.meshmatcap_vert,fragmentShader:Yo.meshmatcap_frag},points:{uniforms:zo([Zo.points,Zo.fog]),vertexShader:Yo.points_vert,fragmentShader:Yo.points_frag},dashed:{uniforms:zo([Zo.common,Zo.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Yo.linedashed_vert,fragmentShader:Yo.linedashed_frag},depth:{uniforms:zo([Zo.common,Zo.displacementmap]),vertexShader:Yo.depth_vert,fragmentShader:Yo.depth_frag},normal:{uniforms:zo([Zo.common,Zo.bumpmap,Zo.normalmap,Zo.displacementmap,{opacity:{value:1}}]),vertexShader:Yo.meshnormal_vert,fragmentShader:Yo.meshnormal_frag},sprite:{uniforms:zo([Zo.sprite,Zo.fog]),vertexShader:Yo.sprite_vert,fragmentShader:Yo.sprite_frag},background:{uniforms:{uvTransform:{value:new Pr},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:Yo.background_vert,fragmentShader:Yo.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new Pr}},vertexShader:Yo.backgroundCube_vert,fragmentShader:Yo.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Yo.cube_vert,fragmentShader:Yo.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Yo.equirect_vert,fragmentShader:Yo.equirect_frag},distanceRGBA:{uniforms:zo([Zo.common,Zo.displacementmap,{referencePosition:{value:new sa},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Yo.distanceRGBA_vert,fragmentShader:Yo.distanceRGBA_frag},shadow:{uniforms:zo([Zo.lights,Zo.fog,{color:{value:new Tl(0)},opacity:{value:1}}]),vertexShader:Yo.shadow_vert,fragmentShader:Yo.shadow_frag}};Ko.physical={uniforms:zo([Ko.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new Pr},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new Pr},clearcoatNormalScale:{value:new Rr(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new Pr},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new Pr},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new Pr},sheen:{value:0},sheenColor:{value:new Tl(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new Pr},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new Pr},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new Pr},transmissionSamplerSize:{value:new Rr},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new Pr},attenuationDistance:{value:0},attenuationColor:{value:new Tl(0)},specularColor:{value:new Tl(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new Pr},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new Pr},anisotropyVector:{value:new Rr},anisotropyMap:{value:null},anisotropyMapTransform:{value:new Pr}}]),vertexShader:Yo.meshphysical_vert,fragmentShader:Yo.meshphysical_frag};const $o={r:0,b:0,g:0},Jo=new Ya,Qo=new Oa;function es(e,t,n,i,r,a,l){const o=new Tl(0);let s,b,c=!0===a?0:1,u=null,h=0,d=null;function m(e){let i=!0===e.isScene?e.background:null;if(i&&i.isTexture){i=(e.backgroundBlurriness>0?n:t).get(i)}return i}function f(t,n){t.getRGB($o,Eo(e)),i.buffers.color.setClear($o.r,$o.g,$o.b,n,l)}return{getClearColor:function(){return o},setClearColor:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;o.set(e),c=t,f(o,c)},getClearAlpha:function(){return c},setClearAlpha:function(e){c=e,f(o,c)},render:function(t){let n=!1;const r=m(t);null===r?f(o,c):r&&r.isColor&&(f(r,1),n=!0);const a=e.xr.getEnvironmentBlendMode();"additive"===a?i.buffers.color.setClear(0,0,0,1,l):"alpha-blend"===a&&i.buffers.color.setClear(0,0,0,0,l),(e.autoClear||n)&&(i.buffers.depth.setTest(!0),i.buffers.depth.setMask(!0),i.buffers.color.setMask(!0),e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil))},addToRenderList:function(t,n){const i=m(n);i&&(i.isCubeTexture||i.mapping===Vt)?(void 0===b&&(b=new yo(new Mo(1,1,1),new Ao({name:"BackgroundCubeMaterial",uniforms:wo(Ko.backgroundCube.uniforms),vertexShader:Ko.backgroundCube.vertexShader,fragmentShader:Ko.backgroundCube.fragmentShader,side:Ve,depthTest:!1,depthWrite:!1,fog:!1})),b.geometry.deleteAttribute("normal"),b.geometry.deleteAttribute("uv"),b.onBeforeRender=function(e,t,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(b.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(b)),Jo.copy(n.backgroundRotation),Jo.x*=-1,Jo.y*=-1,Jo.z*=-1,i.isCubeTexture&&!1===i.isRenderTargetTexture&&(Jo.y*=-1,Jo.z*=-1),b.material.uniforms.envMap.value=i,b.material.uniforms.flipEnvMap.value=i.isCubeTexture&&!1===i.isRenderTargetTexture?-1:1,b.material.uniforms.backgroundBlurriness.value=n.backgroundBlurriness,b.material.uniforms.backgroundIntensity.value=n.backgroundIntensity,b.material.uniforms.backgroundRotation.value.setFromMatrix4(Qo.makeRotationFromEuler(Jo)),b.material.toneMapped=Wr.getTransfer(i.colorSpace)!==Li,u===i&&h===i.version&&d===e.toneMapping||(b.material.needsUpdate=!0,u=i,h=i.version,d=e.toneMapping),b.layers.enableAll(),t.unshift(b,b.geometry,b.material,0,0,null)):i&&i.isTexture&&(void 0===s&&(s=new yo(new qo(2,2),new Ao({name:"BackgroundMaterial",uniforms:wo(Ko.background.uniforms),vertexShader:Ko.background.vertexShader,fragmentShader:Ko.background.fragmentShader,side:He,depthTest:!1,depthWrite:!1,fog:!1})),s.geometry.deleteAttribute("normal"),Object.defineProperty(s.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(s)),s.material.uniforms.t2D.value=i,s.material.uniforms.backgroundIntensity.value=n.backgroundIntensity,s.material.toneMapped=Wr.getTransfer(i.colorSpace)!==Li,!0===i.matrixAutoUpdate&&i.updateMatrix(),s.material.uniforms.uvTransform.value.copy(i.matrix),u===i&&h===i.version&&d===e.toneMapping||(s.material.needsUpdate=!0,u=i,h=i.version,d=e.toneMapping),s.layers.enableAll(),t.unshift(s,s.geometry,s.material,0,0,null))}}}function ts(e,t){const n=e.getParameter(e.MAX_VERTEX_ATTRIBS),i={},r=b(null);let a=r,l=!1;function o(t){return e.bindVertexArray(t)}function s(t){return e.deleteVertexArray(t)}function b(e){const t=[],i=[],r=[];for(let a=0;a<n;a++)t[a]=0,i[a]=0,r[a]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:t,enabledAttributes:i,attributeDivisors:r,object:e,attributes:{},index:null}}function c(){const e=a.newAttributes;for(let t=0,n=e.length;t<n;t++)e[t]=0}function u(e){h(e,0)}function h(t,n){const i=a.newAttributes,r=a.enabledAttributes,l=a.attributeDivisors;i[t]=1,0===r[t]&&(e.enableVertexAttribArray(t),r[t]=1),l[t]!==n&&(e.vertexAttribDivisor(t,n),l[t]=n)}function d(){const t=a.newAttributes,n=a.enabledAttributes;for(let i=0,r=n.length;i<r;i++)n[i]!==t[i]&&(e.disableVertexAttribArray(i),n[i]=0)}function m(t,n,i,r,a,l,o){!0===o?e.vertexAttribIPointer(t,n,i,a,l):e.vertexAttribPointer(t,n,i,r,a,l)}function f(){p(),l=!0,a!==r&&(a=r,o(a.object))}function p(){r.geometry=null,r.program=null,r.wireframe=!1}return{setup:function(n,r,s,f,p){let g=!1;const x=function(t,n,r){const a=!0===r.wireframe;let l=i[t.id];void 0===l&&(l={},i[t.id]=l);let o=l[n.id];void 0===o&&(o={},l[n.id]=o);let s=o[a];void 0===s&&(s=b(e.createVertexArray()),o[a]=s);return s}(f,s,r);a!==x&&(a=x,o(a.object)),g=function(e,t,n,i){const r=a.attributes,l=t.attributes;let o=0;const s=n.getAttributes();for(const a in s){if(s[a].location>=0){const t=r[a];let n=l[a];if(void 0===n&&("instanceMatrix"===a&&e.instanceMatrix&&(n=e.instanceMatrix),"instanceColor"===a&&e.instanceColor&&(n=e.instanceColor)),void 0===t)return!0;if(t.attribute!==n)return!0;if(n&&t.data!==n.data)return!0;o++}}return a.attributesNum!==o||a.index!==i}(n,f,s,p),g&&function(e,t,n,i){const r={},l=t.attributes;let o=0;const s=n.getAttributes();for(const a in s){if(s[a].location>=0){let t=l[a];void 0===t&&("instanceMatrix"===a&&e.instanceMatrix&&(t=e.instanceMatrix),"instanceColor"===a&&e.instanceColor&&(t=e.instanceColor));const n={};n.attribute=t,t&&t.data&&(n.data=t.data),r[a]=n,o++}}a.attributes=r,a.attributesNum=o,a.index=i}(n,f,s,p),null!==p&&t.update(p,e.ELEMENT_ARRAY_BUFFER),(g||l)&&(l=!1,function(n,i,r,a){c();const l=a.attributes,o=r.getAttributes(),s=i.defaultAttributeValues;for(const b in o){const i=o[b];if(i.location>=0){let r=l[b];if(void 0===r&&("instanceMatrix"===b&&n.instanceMatrix&&(r=n.instanceMatrix),"instanceColor"===b&&n.instanceColor&&(r=n.instanceColor)),void 0!==r){const l=r.normalized,o=r.itemSize,s=t.get(r);if(void 0===s)continue;const b=s.buffer,c=s.type,d=s.bytesPerElement,f=c===e.INT||c===e.UNSIGNED_INT||r.gpuType===on;if(r.isInterleavedBufferAttribute){const t=r.data,s=t.stride,p=r.offset;if(t.isInstancedInterleavedBuffer){for(let e=0;e<i.locationSize;e++)h(i.location+e,t.meshPerAttribute);!0!==n.isInstancedMesh&&void 0===a._maxInstanceCount&&(a._maxInstanceCount=t.meshPerAttribute*t.count)}else for(let e=0;e<i.locationSize;e++)u(i.location+e);e.bindBuffer(e.ARRAY_BUFFER,b);for(let e=0;e<i.locationSize;e++)m(i.location+e,o/i.locationSize,c,l,s*d,(p+o/i.locationSize*e)*d,f)}else{if(r.isInstancedBufferAttribute){for(let e=0;e<i.locationSize;e++)h(i.location+e,r.meshPerAttribute);!0!==n.isInstancedMesh&&void 0===a._maxInstanceCount&&(a._maxInstanceCount=r.meshPerAttribute*r.count)}else for(let e=0;e<i.locationSize;e++)u(i.location+e);e.bindBuffer(e.ARRAY_BUFFER,b);for(let e=0;e<i.locationSize;e++)m(i.location+e,o/i.locationSize,c,l,o*d,o/i.locationSize*e*d,f)}}else if(void 0!==s){const t=s[b];if(void 0!==t)switch(t.length){case 2:e.vertexAttrib2fv(i.location,t);break;case 3:e.vertexAttrib3fv(i.location,t);break;case 4:e.vertexAttrib4fv(i.location,t);break;default:e.vertexAttrib1fv(i.location,t)}}}}d()}(n,r,s,f),null!==p&&e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,t.get(p).buffer))},reset:f,resetDefaultState:p,dispose:function(){f();for(const e in i){const t=i[e];for(const e in t){const n=t[e];for(const e in n)s(n[e].object),delete n[e];delete t[e]}delete i[e]}},releaseStatesOfGeometry:function(e){if(void 0===i[e.id])return;const t=i[e.id];for(const n in t){const e=t[n];for(const t in e)s(e[t].object),delete e[t];delete t[n]}delete i[e.id]},releaseStatesOfProgram:function(e){for(const t in i){const n=i[t];if(void 0===n[e.id])continue;const r=n[e.id];for(const e in r)s(r[e].object),delete r[e];delete n[e.id]}},initAttributes:c,enableAttribute:u,disableUnusedAttributes:d}}function ns(e,t,n){let i;function r(t,r,a){0!==a&&(e.drawArraysInstanced(i,t,r,a),n.update(r,i,a))}this.setMode=function(e){i=e},this.render=function(t,r){e.drawArrays(i,t,r),n.update(r,i,1)},this.renderInstances=r,this.renderMultiDraw=function(e,r,a){if(0===a)return;t.get("WEBGL_multi_draw").multiDrawArraysWEBGL(i,e,0,r,0,a);let l=0;for(let t=0;t<a;t++)l+=r[t];n.update(l,i,1)},this.renderMultiDrawInstances=function(e,a,l,o){if(0===l)return;const s=t.get("WEBGL_multi_draw");if(null===s)for(let t=0;t<e.length;t++)r(e[t],a[t],o[t]);else{s.multiDrawArraysInstancedWEBGL(i,e,0,a,0,o,0,l);let t=0;for(let e=0;e<l;e++)t+=a[e];for(let e=0;e<o.length;e++)n.update(t,i,o[e])}}}function is(e,t,n,i){let r;function a(t){if("highp"===t){if(e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_FLOAT).precision>0)return"highp";t="mediump"}return"mediump"===t&&e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let l=void 0!==n.precision?n.precision:"highp";const o=a(l);o!==l&&(console.warn("THREE.WebGLRenderer:",l,"not supported, using",o,"instead."),l=o);const s=!0===n.logarithmicDepthBuffer,b=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),c=e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS);return{isWebGL2:!0,getMaxAnisotropy:function(){if(void 0!==r)return r;if(!0===t.has("EXT_texture_filter_anisotropic")){const n=t.get("EXT_texture_filter_anisotropic");r=e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else r=0;return r},getMaxPrecision:a,textureFormatReadable:function(t){return t===gn||i.convert(t)===e.getParameter(e.IMPLEMENTATION_COLOR_READ_FORMAT)},textureTypeReadable:function(n){const r=n===cn&&(t.has("EXT_color_buffer_half_float")||t.has("EXT_color_buffer_float"));return!(n!==nn&&i.convert(n)!==e.getParameter(e.IMPLEMENTATION_COLOR_READ_TYPE)&&n!==bn&&!r)},precision:l,logarithmicDepthBuffer:s,maxTextures:b,maxVertexTextures:c,maxTextureSize:e.getParameter(e.MAX_TEXTURE_SIZE),maxCubemapSize:e.getParameter(e.MAX_CUBE_MAP_TEXTURE_SIZE),maxAttributes:e.getParameter(e.MAX_VERTEX_ATTRIBS),maxVertexUniforms:e.getParameter(e.MAX_VERTEX_UNIFORM_VECTORS),maxVaryings:e.getParameter(e.MAX_VARYING_VECTORS),maxFragmentUniforms:e.getParameter(e.MAX_FRAGMENT_UNIFORM_VECTORS),vertexTextures:c>0,maxSamples:e.getParameter(e.MAX_SAMPLES)}}function rs(e){const t=this;let n=null,i=0,r=!1,a=!1;const l=new Ho,o=new Pr,s={value:null,needsUpdate:!1};function b(e,n,i,r){const a=null!==e?e.length:0;let b=null;if(0!==a){if(b=s.value,!0!==r||null===b){const t=i+4*a,r=n.matrixWorldInverse;o.getNormalMatrix(r),(null===b||b.length<t)&&(b=new Float32Array(t));for(let n=0,s=i;n!==a;++n,s+=4)l.copy(e[n]).applyMatrix4(r,o),l.normal.toArray(b,s),b[s+3]=l.constant}s.value=b,s.needsUpdate=!0}return t.numPlanes=a,t.numIntersection=0,b}this.uniform=s,this.numPlanes=0,this.numIntersection=0,this.init=function(e,t){const n=0!==e.length||t||0!==i||r;return r=t,i=e.length,n},this.beginShadows=function(){a=!0,b(null)},this.endShadows=function(){a=!1},this.setGlobalState=function(e,t){n=b(e,t,0)},this.setState=function(l,o,c){const u=l.clippingPlanes,h=l.clipIntersection,d=l.clipShadows,m=e.get(l);if(!r||null===u||0===u.length||a&&!d)a?b(null):function(){s.value!==n&&(s.value=n,s.needsUpdate=i>0);t.numPlanes=i,t.numIntersection=0}();else{const e=a?0:i,t=4*e;let r=m.clippingState||null;s.value=r,r=b(u,o,t,c);for(let i=0;i!==t;++i)r[i]=n[i];m.clippingState=r,this.numIntersection=h?this.numPlanes:0,this.numPlanes+=e}}}function as(e){let t=new WeakMap;function n(e,t){return t===Bt?e.mapping=Ot:t===Ht&&(e.mapping=Ft),e}function i(e){const n=e.target;n.removeEventListener("dispose",i);const r=t.get(n);void 0!==r&&(t.delete(n),r.dispose())}return{get:function(r){if(r&&r.isTexture){const a=r.mapping;if(a===Bt||a===Ht){if(t.has(r)){return n(t.get(r).texture,r.mapping)}{const a=r.image;if(a&&a.height>0){const l=new Uo(a.height);return l.fromEquirectangularTexture(e,r),t.set(r,l),r.addEventListener("dispose",i),n(l.texture,r.mapping)}return null}}}return r},dispose:function(){t=new WeakMap}}}class ls extends Co{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:-1,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:-1,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.1,a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:2e3;super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=r,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,r,a){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-e,a=n+e,l=i+t,o=i-t;if(null!==this.view&&this.view.enabled){const e=(this.right-this.left)/this.view.fullWidth/this.zoom,t=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=e*this.view.offsetX,a=r+e*this.view.width,l-=t*this.view.offsetY,o=l-t*this.view.height}this.projectionMatrix.makeOrthographic(r,a,l,o,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}const os=[.125,.215,.35,.446,.526,.582],ss=20,bs=new ls,cs=new Tl;let us=null,hs=0,ds=0,ms=!1;const fs=(1+Math.sqrt(5))/2,ps=1/fs,gs=[new sa(-fs,ps,0),new sa(fs,ps,0),new sa(-ps,0,fs),new sa(ps,0,fs),new sa(0,fs,-ps),new sa(0,fs,ps),new sa(-1,1,-1),new sa(1,1,-1),new sa(-1,1,1),new sa(1,1,1)];class xs{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:.1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:100;us=this._renderer.getRenderTarget(),hs=this._renderer.getActiveCubeFace(),ds=this._renderer.getActiveMipmapLevel(),ms=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(256);const r=this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(e,n,i,r),t>0&&this._blur(r,0,0,t),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return this._fromTexture(e,t)}fromCubemap(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return this._fromTexture(e,t)}compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=Ss(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=ys(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(us,hs,ds),this._renderer.xr.enabled=ms,e.scissorTest=!1,_s(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===Ot||e.mapping===Ft?this._setSize(0===e.image.length?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),us=this._renderer.getRenderTarget(),hs=this._renderer.getActiveCubeFace(),ds=this._renderer.getActiveMipmapLevel(),ms=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:$t,minFilter:$t,generateMipmaps:!1,type:cn,format:gn,colorSpace:Ai,depthBuffer:!1},i=vs(e,t,n);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=vs(e,t,n);const{_lodMax:i}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=function(e){const t=[],n=[],i=[];let r=e;const a=e-4+1+os.length;for(let l=0;l<a;l++){const a=Math.pow(2,r);n.push(a);let o=1/a;l>e-4?o=os[l-e+4-1]:0===l&&(o=0),i.push(o);const s=1/(a-2),b=-s,c=1+s,u=[b,b,c,b,c,c,b,b,c,c,b,c],h=6,d=6,m=3,f=2,p=1,g=new Float32Array(m*d*h),x=new Float32Array(f*d*h),v=new Float32Array(p*d*h);for(let e=0;e<h;e++){const t=e%3*2/3-1,n=e>2?0:-1,i=[t,n,0,t+2/3,n,0,t+2/3,n+1,0,t,n,0,t+2/3,n+1,0,t,n+1,0];g.set(i,m*d*e),x.set(u,f*d*e);const r=[e,e,e,e,e,e];v.set(r,p*d*e)}const _=new no;_.setAttribute("position",new Fl(g,m)),_.setAttribute("uv",new Fl(x,f)),_.setAttribute("faceIndex",new Fl(v,p)),t.push(_),r>4&&r--}return{lodPlanes:t,sizeLods:n,sigmas:i}}(i)),this._blurMaterial=function(e,t,n){const i=new Float32Array(ss),r=new sa(0,1,0),a=new Ao({name:"SphericalGaussianBlur",defines:{n:ss,CUBEUV_TEXEL_WIDTH:1/t,CUBEUV_TEXEL_HEIGHT:1/n,CUBEUV_MAX_MIP:`${e}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:r}},vertexShader:Ms(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t",blending:We,depthTest:!1,depthWrite:!1});return a}(i,e,t)}return i}_compileMaterial(e){const t=new yo(this._lodPlanes[0],e);this._renderer.compile(t,bs)}_sceneToCubeUV(e,t,n,i){const r=new Io(90,1,t,n),a=[1,-1,1,1,1,1],l=[1,1,1,-1,-1,-1],o=this._renderer,s=o.autoClear,b=o.toneMapping;o.getClearColor(cs),o.toneMapping=Tt,o.autoClear=!1;const c=new Pl({name:"PMREM.Background",side:Ve,depthWrite:!1,depthTest:!1}),u=new yo(new Mo,c);let h=!1;const d=e.background;d?d.isColor&&(c.color.copy(d),e.background=null,h=!0):(c.color.copy(cs),h=!0);for(let m=0;m<6;m++){const t=m%3;0===t?(r.up.set(0,a[m],0),r.lookAt(l[m],0,0)):1===t?(r.up.set(0,0,a[m]),r.lookAt(0,l[m],0)):(r.up.set(0,a[m],0),r.lookAt(0,0,l[m]));const n=this._cubeSize;_s(i,t*n,m>2?n:0,n,n),o.setRenderTarget(i),h&&o.render(u,r),o.render(e,r)}u.geometry.dispose(),u.material.dispose(),o.toneMapping=b,o.autoClear=s,e.background=d}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===Ot||e.mapping===Ft;i?(null===this._cubemapMaterial&&(this._cubemapMaterial=Ss()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===e.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=ys());const r=i?this._cubemapMaterial:this._equirectMaterial,a=new yo(this._lodPlanes[0],r);r.uniforms.envMap.value=e;const l=this._cubeSize;_s(t,0,0,3*l,2*l),n.setRenderTarget(t),n.render(a,bs)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;const i=this._lodPlanes.length;for(let r=1;r<i;r++){const t=Math.sqrt(this._sigmas[r]*this._sigmas[r]-this._sigmas[r-1]*this._sigmas[r-1]),n=gs[(i-r-1)%gs.length];this._blur(e,r-1,r,t,n)}t.autoClear=n}_blur(e,t,n,i,r){const a=this._pingPongRenderTarget;this._halfBlur(e,a,t,n,i,"latitudinal",r),this._halfBlur(a,e,n,n,i,"longitudinal",r)}_halfBlur(e,t,n,i,r,a,l){const o=this._renderer,s=this._blurMaterial;"latitudinal"!==a&&"longitudinal"!==a&&console.error("blur direction must be either latitudinal or longitudinal!");const b=new yo(this._lodPlanes[i],s),c=s.uniforms,u=this._sizeLods[n]-1,h=isFinite(r)?Math.PI/(2*u):2*Math.PI/39,d=r/h,m=isFinite(r)?1+Math.floor(3*d):ss;m>ss&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${m} samples when the maximum is set to 20`);const f=[];let p=0;for(let v=0;v<ss;++v){const e=v/d,t=Math.exp(-e*e/2);f.push(t),0===v?p+=t:v<m&&(p+=2*t)}for(let v=0;v<f.length;v++)f[v]=f[v]/p;c.envMap.value=e.texture,c.samples.value=m,c.weights.value=f,c.latitudinal.value="latitudinal"===a,l&&(c.poleAxis.value=l);const{_lodMax:g}=this;c.dTheta.value=h,c.mipInt.value=g-n;const x=this._sizeLods[i];_s(t,3*x*(i>g-4?i-g+4:0),4*(this._cubeSize-x),3*x,2*x),o.setRenderTarget(t),o.render(b,bs)}}function vs(e,t,n){const i=new na(e,t,n);return i.texture.mapping=Vt,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function _s(e,t,n,i,r){e.viewport.set(t,n,i,r),e.scissor.set(t,n,i,r)}function ys(){return new Ao({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Ms(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t",blending:We,depthTest:!1,depthWrite:!1})}function Ss(){return new Ao({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Ms(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t",blending:We,depthTest:!1,depthWrite:!1})}function Ms(){return"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t"}function ws(e){let t=new WeakMap,n=null;function i(e){const n=e.target;n.removeEventListener("dispose",i);const r=t.get(n);void 0!==r&&(t.delete(n),r.dispose())}return{get:function(r){if(r&&r.isTexture){const a=r.mapping,l=a===Bt||a===Ht,o=a===Ot||a===Ft;if(l||o){let a=t.get(r);const s=void 0!==a?a.texture.pmremVersion:0;if(r.isRenderTargetTexture&&r.pmremVersion!==s)return null===n&&(n=new xs(e)),a=l?n.fromEquirectangular(r,a):n.fromCubemap(r,a),a.texture.pmremVersion=r.pmremVersion,t.set(r,a),a.texture;if(void 0!==a)return a.texture;{const s=r.image;return l&&s&&s.height>0||o&&s&&function(e){let t=0;const n=6;for(let i=0;i<n;i++)void 0!==e[i]&&t++;return t===n}(s)?(null===n&&(n=new xs(e)),a=l?n.fromEquirectangular(r):n.fromCubemap(r),a.texture.pmremVersion=r.pmremVersion,t.set(r,a),r.addEventListener("dispose",i),a.texture):null}}}return r},dispose:function(){t=new WeakMap,null!==n&&(n.dispose(),n=null)}}}function zs(e){const t={};function n(n){if(void 0!==t[n])return t[n];let i;switch(n){case"WEBGL_depth_texture":i=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=e.getExtension(n)}return t[n]=i,i}return{has:function(e){return null!==n(e)},init:function(){n("EXT_color_buffer_float"),n("WEBGL_clip_cull_distance"),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float"),n("WEBGL_multisampled_render_to_texture"),n("WEBGL_render_shared_exponent")},get:function(e){const t=n(e);return null===t&&Fr("THREE.WebGLRenderer: "+e+" extension not supported."),t}}}function Es(e,t,n,i){const r={},a=new WeakMap;function l(e){const o=e.target;null!==o.index&&t.remove(o.index);for(const n in o.attributes)t.remove(o.attributes[n]);for(const n in o.morphAttributes){const e=o.morphAttributes[n];for(let n=0,i=e.length;n<i;n++)t.remove(e[n])}o.removeEventListener("dispose",l),delete r[o.id];const s=a.get(o);s&&(t.remove(s),a.delete(o)),i.releaseStatesOfGeometry(o),!0===o.isInstancedBufferGeometry&&delete o._maxInstanceCount,n.memory.geometries--}function o(e){const n=[],i=e.index,r=e.attributes.position;let l=0;if(null!==i){const e=i.array;l=i.version;for(let t=0,i=e.length;t<i;t+=3){const i=e[t+0],r=e[t+1],a=e[t+2];n.push(i,r,r,a,a,i)}}else{if(void 0===r)return;{const e=r.array;l=r.version;for(let t=0,i=e.length/3-1;t<i;t+=3){const e=t+0,i=t+1,r=t+2;n.push(e,i,i,r,r,e)}}}const o=new(Ir(n)?Xl:Wl)(n,1);o.version=l;const s=a.get(e);s&&t.remove(s),a.set(e,o)}return{get:function(e,t){return!0===r[t.id]||(t.addEventListener("dispose",l),r[t.id]=!0,n.memory.geometries++),t},update:function(n){const i=n.attributes;for(const a in i)t.update(i[a],e.ARRAY_BUFFER);const r=n.morphAttributes;for(const a in r){const n=r[a];for(let i=0,r=n.length;i<r;i++)t.update(n[i],e.ARRAY_BUFFER)}},getWireframeAttribute:function(e){const t=a.get(e);if(t){const n=e.index;null!==n&&t.version<n.version&&o(e)}else o(e);return a.get(e)}}}function Ts(e,t,n){let i,r,a;function l(t,l,o){0!==o&&(e.drawElementsInstanced(i,l,r,t*a,o),n.update(l,i,o))}this.setMode=function(e){i=e},this.setIndex=function(e){r=e.type,a=e.bytesPerElement},this.render=function(t,l){e.drawElements(i,l,r,t*a),n.update(l,i,1)},this.renderInstances=l,this.renderMultiDraw=function(e,a,l){if(0===l)return;t.get("WEBGL_multi_draw").multiDrawElementsWEBGL(i,a,0,r,e,0,l);let o=0;for(let t=0;t<l;t++)o+=a[t];n.update(o,i,1)},this.renderMultiDrawInstances=function(e,o,s,b){if(0===s)return;const c=t.get("WEBGL_multi_draw");if(null===c)for(let t=0;t<e.length;t++)l(e[t]/a,o[t],b[t]);else{c.multiDrawElementsInstancedWEBGL(i,o,0,r,e,0,b,0,s);let t=0;for(let e=0;e<s;e++)t+=o[e];for(let e=0;e<b.length;e++)n.update(t,i,b[e])}}}function As(e){const t={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:t,programs:null,autoReset:!0,reset:function(){t.calls=0,t.triangles=0,t.points=0,t.lines=0},update:function(n,i,r){switch(t.calls++,i){case e.TRIANGLES:t.triangles+=r*(n/3);break;case e.LINES:t.lines+=r*(n/2);break;case e.LINE_STRIP:t.lines+=r*(n-1);break;case e.LINE_LOOP:t.lines+=r*n;break;case e.POINTS:t.points+=r*n;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",i)}}}}function Cs(e,t,n){const i=new WeakMap,r=new ea;return{update:function(a,l,o){const s=a.morphTargetInfluences,b=l.morphAttributes.position||l.morphAttributes.normal||l.morphAttributes.color,c=void 0!==b?b.length:0;let u=i.get(l);if(void 0===u||u.count!==c){void 0!==u&&u.texture.dispose();const h=void 0!==l.morphAttributes.position,d=void 0!==l.morphAttributes.normal,m=void 0!==l.morphAttributes.color,f=l.morphAttributes.position||[],p=l.morphAttributes.normal||[],g=l.morphAttributes.color||[];let x=0;!0===h&&(x=1),!0===d&&(x=2),!0===m&&(x=3);let v=l.attributes.position.count*x,_=1;v>t.maxTextureSize&&(_=Math.ceil(v/t.maxTextureSize),v=t.maxTextureSize);const y=new Float32Array(v*_*4*c),S=new ia(y,v,_,c);S.type=bn,S.needsUpdate=!0;const M=4*x;for(let z=0;z<c;z++){const E=f[z],T=p[z],A=g[z],C=v*_*4*z;for(let R=0;R<E.count;R++){const P=R*M;!0===h&&(r.fromBufferAttribute(E,R),y[C+P+0]=r.x,y[C+P+1]=r.y,y[C+P+2]=r.z,y[C+P+3]=0),!0===d&&(r.fromBufferAttribute(T,R),y[C+P+4]=r.x,y[C+P+5]=r.y,y[C+P+6]=r.z,y[C+P+7]=0),!0===m&&(r.fromBufferAttribute(A,R),y[C+P+8]=r.x,y[C+P+9]=r.y,y[C+P+10]=r.z,y[C+P+11]=4===A.itemSize?r.w:1)}}function w(){S.dispose(),i.delete(l),l.removeEventListener("dispose",w)}u={count:c,texture:S,size:new Rr(v,_)},i.set(l,u),l.addEventListener("dispose",w)}if(!0===a.isInstancedMesh&&null!==a.morphTexture)o.getUniforms().setValue(e,"morphTexture",a.morphTexture,n);else{let L=0;for(let N=0;N<s.length;N++)L+=s[N];const I=l.morphTargetsRelative?1:1-L;o.getUniforms().setValue(e,"morphTargetBaseInfluence",I),o.getUniforms().setValue(e,"morphTargetInfluences",s)}o.getUniforms().setValue(e,"morphTargetsTexture",u.texture,n),o.getUniforms().setValue(e,"morphTargetsTextureSize",u.size)}}}function Rs(e,t,n,i){let r=new WeakMap;function a(e){const t=e.target;t.removeEventListener("dispose",a),n.remove(t.instanceMatrix),null!==t.instanceColor&&n.remove(t.instanceColor)}return{update:function(l){const o=i.render.frame,s=l.geometry,b=t.get(l,s);if(r.get(b)!==o&&(t.update(b),r.set(b,o)),l.isInstancedMesh&&(!1===l.hasEventListener("dispose",a)&&l.addEventListener("dispose",a),r.get(l)!==o&&(n.update(l.instanceMatrix,e.ARRAY_BUFFER),null!==l.instanceColor&&n.update(l.instanceColor,e.ARRAY_BUFFER),r.set(l,o))),l.isSkinnedMesh){const e=l.skeleton;r.get(e)!==o&&(e.update(),r.set(e,o))}return b},dispose:function(){r=new WeakMap}}}class Ps extends Qr{constructor(e,t,n,i,r,a,l,o,s){let b=arguments.length>9&&void 0!==arguments[9]?arguments[9]:_n;if(b!==_n&&b!==yn)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===n&&b===_n&&(n=sn),void 0===n&&b===yn&&(n=dn),super(null,i,r,a,l,o,b,n,s),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=void 0!==l?l:Xt,this.minFilter=void 0!==o?o:Xt,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return null!==this.compareFunction&&(t.compareFunction=this.compareFunction),t}}const Ls=new Qr,Is=new Ps(1,1),Ns=new ia,ks=new aa,Ds=new Do,Us=[],Os=[],Fs=new Float32Array(16),Bs=new Float32Array(9),Hs=new Float32Array(4);function Vs(e,t,n){const i=e[0];if(i<=0||i>0)return e;const r=t*n;let a=Us[r];if(void 0===a&&(a=new Float32Array(r),Us[r]=a),0!==t){i.toArray(a,0);for(let i=1,r=0;i!==t;++i)r+=n,e[i].toArray(a,r)}return a}function Gs(e,t){if(e.length!==t.length)return!1;for(let n=0,i=e.length;n<i;n++)if(e[n]!==t[n])return!1;return!0}function Ws(e,t){for(let n=0,i=t.length;n<i;n++)e[n]=t[n]}function js(e,t){let n=Os[t];void 0===n&&(n=new Int32Array(t),Os[t]=n);for(let i=0;i!==t;++i)n[i]=e.allocateTextureUnit();return n}function Xs(e,t){const n=this.cache;n[0]!==t&&(e.uniform1f(this.addr,t),n[0]=t)}function qs(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y||(e.uniform2f(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if(Gs(n,t))return;e.uniform2fv(this.addr,t),Ws(n,t)}}function Ys(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z||(e.uniform3f(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else if(void 0!==t.r)n[0]===t.r&&n[1]===t.g&&n[2]===t.b||(e.uniform3f(this.addr,t.r,t.g,t.b),n[0]=t.r,n[1]=t.g,n[2]=t.b);else{if(Gs(n,t))return;e.uniform3fv(this.addr,t),Ws(n,t)}}function Zs(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z&&n[3]===t.w||(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if(Gs(n,t))return;e.uniform4fv(this.addr,t),Ws(n,t)}}function Ks(e,t){const n=this.cache,i=t.elements;if(void 0===i){if(Gs(n,t))return;e.uniformMatrix2fv(this.addr,!1,t),Ws(n,t)}else{if(Gs(n,i))return;Hs.set(i),e.uniformMatrix2fv(this.addr,!1,Hs),Ws(n,i)}}function $s(e,t){const n=this.cache,i=t.elements;if(void 0===i){if(Gs(n,t))return;e.uniformMatrix3fv(this.addr,!1,t),Ws(n,t)}else{if(Gs(n,i))return;Bs.set(i),e.uniformMatrix3fv(this.addr,!1,Bs),Ws(n,i)}}function Js(e,t){const n=this.cache,i=t.elements;if(void 0===i){if(Gs(n,t))return;e.uniformMatrix4fv(this.addr,!1,t),Ws(n,t)}else{if(Gs(n,i))return;Fs.set(i),e.uniformMatrix4fv(this.addr,!1,Fs),Ws(n,i)}}function Qs(e,t){const n=this.cache;n[0]!==t&&(e.uniform1i(this.addr,t),n[0]=t)}function eb(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y||(e.uniform2i(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if(Gs(n,t))return;e.uniform2iv(this.addr,t),Ws(n,t)}}function tb(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z||(e.uniform3i(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else{if(Gs(n,t))return;e.uniform3iv(this.addr,t),Ws(n,t)}}function nb(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z&&n[3]===t.w||(e.uniform4i(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if(Gs(n,t))return;e.uniform4iv(this.addr,t),Ws(n,t)}}function ib(e,t){const n=this.cache;n[0]!==t&&(e.uniform1ui(this.addr,t),n[0]=t)}function rb(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y||(e.uniform2ui(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if(Gs(n,t))return;e.uniform2uiv(this.addr,t),Ws(n,t)}}function ab(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z||(e.uniform3ui(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else{if(Gs(n,t))return;e.uniform3uiv(this.addr,t),Ws(n,t)}}function lb(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z&&n[3]===t.w||(e.uniform4ui(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if(Gs(n,t))return;e.uniform4uiv(this.addr,t),Ws(n,t)}}function ob(e,t,n){const i=this.cache,r=n.allocateTextureUnit();let a;i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),this.type===e.SAMPLER_2D_SHADOW?(Is.compareFunction=er,a=Is):a=Ls,n.setTexture2D(t||a,r)}function sb(e,t,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.setTexture3D(t||ks,r)}function bb(e,t,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.setTextureCube(t||Ds,r)}function cb(e,t,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.setTexture2DArray(t||Ns,r)}function ub(e,t){e.uniform1fv(this.addr,t)}function hb(e,t){const n=Vs(t,this.size,2);e.uniform2fv(this.addr,n)}function db(e,t){const n=Vs(t,this.size,3);e.uniform3fv(this.addr,n)}function mb(e,t){const n=Vs(t,this.size,4);e.uniform4fv(this.addr,n)}function fb(e,t){const n=Vs(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,n)}function pb(e,t){const n=Vs(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,n)}function gb(e,t){const n=Vs(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,n)}function xb(e,t){e.uniform1iv(this.addr,t)}function vb(e,t){e.uniform2iv(this.addr,t)}function _b(e,t){e.uniform3iv(this.addr,t)}function yb(e,t){e.uniform4iv(this.addr,t)}function Sb(e,t){e.uniform1uiv(this.addr,t)}function Mb(e,t){e.uniform2uiv(this.addr,t)}function wb(e,t){e.uniform3uiv(this.addr,t)}function zb(e,t){e.uniform4uiv(this.addr,t)}function Eb(e,t,n){const i=this.cache,r=t.length,a=js(n,r);Gs(i,a)||(e.uniform1iv(this.addr,a),Ws(i,a));for(let l=0;l!==r;++l)n.setTexture2D(t[l]||Ls,a[l])}function Tb(e,t,n){const i=this.cache,r=t.length,a=js(n,r);Gs(i,a)||(e.uniform1iv(this.addr,a),Ws(i,a));for(let l=0;l!==r;++l)n.setTexture3D(t[l]||ks,a[l])}function Ab(e,t,n){const i=this.cache,r=t.length,a=js(n,r);Gs(i,a)||(e.uniform1iv(this.addr,a),Ws(i,a));for(let l=0;l!==r;++l)n.setTextureCube(t[l]||Ds,a[l])}function Cb(e,t,n){const i=this.cache,r=t.length,a=js(n,r);Gs(i,a)||(e.uniform1iv(this.addr,a),Ws(i,a));for(let l=0;l!==r;++l)n.setTexture2DArray(t[l]||Ns,a[l])}class Rb{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.setValue=function(e){switch(e){case 5126:return Xs;case 35664:return qs;case 35665:return Ys;case 35666:return Zs;case 35674:return Ks;case 35675:return $s;case 35676:return Js;case 5124:case 35670:return Qs;case 35667:case 35671:return eb;case 35668:case 35672:return tb;case 35669:case 35673:return nb;case 5125:return ib;case 36294:return rb;case 36295:return ab;case 36296:return lb;case 35678:case 36198:case 36298:case 36306:case 35682:return ob;case 35679:case 36299:case 36307:return sb;case 35680:case 36300:case 36308:case 36293:return bb;case 36289:case 36303:case 36311:case 36292:return cb}}(t.type)}}class Pb{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=function(e){switch(e){case 5126:return ub;case 35664:return hb;case 35665:return db;case 35666:return mb;case 35674:return fb;case 35675:return pb;case 35676:return gb;case 5124:case 35670:return xb;case 35667:case 35671:return vb;case 35668:case 35672:return _b;case 35669:case 35673:return yb;case 5125:return Sb;case 36294:return Mb;case 36295:return wb;case 36296:return zb;case 35678:case 36198:case 36298:case 36306:case 35682:return Eb;case 35679:case 36299:case 36307:return Tb;case 35680:case 36300:case 36308:case 36293:return Ab;case 36289:case 36303:case 36311:case 36292:return Cb}}(t.type)}}class Lb{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const i=this.seq;for(let r=0,a=i.length;r!==a;++r){const a=i[r];a.setValue(e,t[a.id],n)}}}const Ib=/(\w+)(\])?(\[|\.)?/g;function Nb(e,t){e.seq.push(t),e.map[t.id]=t}function kb(e,t,n){const i=e.name,r=i.length;for(Ib.lastIndex=0;;){const a=Ib.exec(i),l=Ib.lastIndex;let o=a[1];const s="]"===a[2],b=a[3];if(s&&(o|=0),void 0===b||"["===b&&l+2===r){Nb(n,void 0===b?new Rb(o,e,t):new Pb(o,e,t));break}{let e=n.map[o];void 0===e&&(e=new Lb(o),Nb(n,e)),n=e}}}class Db{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const n=e.getActiveUniform(t,i);kb(n,e.getUniformLocation(t,n.name),this)}}setValue(e,t,n,i){const r=this.map[t];void 0!==r&&r.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];void 0!==i&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let r=0,a=t.length;r!==a;++r){const a=t[r],l=n[a.id];!1!==l.needsUpdate&&a.setValue(e,l.value,i)}}static seqWithValue(e,t){const n=[];for(let i=0,r=e.length;i!==r;++i){const r=e[i];r.id in t&&n.push(r)}return n}}function Ub(e,t,n){const i=e.createShader(t);return e.shaderSource(i,n),e.compileShader(i),i}const Ob=37297;let Fb=0;function Bb(e,t,n){const i=e.getShaderParameter(t,e.COMPILE_STATUS),r=e.getShaderInfoLog(t).trim();if(i&&""===r)return"";const a=/ERROR: 0:(\d+)/.exec(r);if(a){const i=parseInt(a[1]);return n.toUpperCase()+"\n\n"+r+"\n\n"+function(e,t){const n=e.split("\n"),i=[],r=Math.max(t-6,0),a=Math.min(t+6,n.length);for(let l=r;l<a;l++){const e=l+1;i.push(`${e===t?">":" "} ${e}: ${n[l]}`)}return i.join("\n")}(e.getShaderSource(t),i)}return r}function Hb(e,t){const n=function(e){const t=Wr.getPrimaries(Wr.workingColorSpace),n=Wr.getPrimaries(e);let i;switch(t===n?i="":t===Ni&&n===Ii?i="LinearDisplayP3ToLinearSRGB":t===Ii&&n===Ni&&(i="LinearSRGBToLinearDisplayP3"),e){case Ai:case Ri:return[i,"LinearTransferOETF"];case Ti:case Ci:return[i,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",e),[i,"LinearTransferOETF"]}}(t);return`vec4 ${e}( vec4 value ) { return ${n[0]}( ${n[1]}( value ) ); }`}function Vb(e,t){let n;switch(t){case At:n="Linear";break;case Ct:n="Reinhard";break;case Rt:n="Cineon";break;case Pt:n="ACESFilmic";break;case It:n="AgX";break;case Nt:n="Neutral";break;case Lt:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),n="Linear"}return"vec3 "+e+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}const Gb=new sa;function Wb(){Wr.getLuminanceCoefficients(Gb);return["float luminance( const in vec3 rgb ) {",`\tconst vec3 weights = vec3( ${Gb.x.toFixed(4)}, ${Gb.y.toFixed(4)}, ${Gb.z.toFixed(4)} );`,"\treturn dot( weights, rgb );","}"].join("\n")}function jb(e){return""!==e}function Xb(e,t){const n=t.numSpotLightShadows+t.numSpotLightMaps-t.numSpotLightShadowsWithMaps;return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,t.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,n).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,t.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function qb(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const Yb=/^[ \t]*#include +<([\w\d./]+)>/gm;function Zb(e){return e.replace(Yb,$b)}const Kb=new Map;function $b(e,t){let n=Yo[t];if(void 0===n){const e=Kb.get(t);if(void 0===e)throw new Error("Can not resolve #include <"+t+">");n=Yo[e],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',t,e)}return Zb(n)}const Jb=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Qb(e){return e.replace(Jb,ec)}function ec(e,t,n,i){let r="";for(let a=parseInt(t);a<parseInt(n);a++)r+=i.replace(/\[\s*i\s*\]/g,"[ "+a+" ]").replace(/UNROLLED_LOOP_INDEX/g,a);return r}function tc(e){let t=`precision ${e.precision} float;\n\tprecision ${e.precision} int;\n\tprecision ${e.precision} sampler2D;\n\tprecision ${e.precision} samplerCube;\n\tprecision ${e.precision} sampler3D;\n\tprecision ${e.precision} sampler2DArray;\n\tprecision ${e.precision} sampler2DShadow;\n\tprecision ${e.precision} samplerCubeShadow;\n\tprecision ${e.precision} sampler2DArrayShadow;\n\tprecision ${e.precision} isampler2D;\n\tprecision ${e.precision} isampler3D;\n\tprecision ${e.precision} isamplerCube;\n\tprecision ${e.precision} isampler2DArray;\n\tprecision ${e.precision} usampler2D;\n\tprecision ${e.precision} usampler3D;\n\tprecision ${e.precision} usamplerCube;\n\tprecision ${e.precision} usampler2DArray;\n\t`;return"highp"===e.precision?t+="\n#define HIGH_PRECISION":"mediump"===e.precision?t+="\n#define MEDIUM_PRECISION":"lowp"===e.precision&&(t+="\n#define LOW_PRECISION"),t}function nc(e,t,n,i){const r=e.getContext(),a=n.defines;let l=n.vertexShader,o=n.fragmentShader;const s=function(e){let t="SHADOWMAP_TYPE_BASIC";return e.shadowMapType===Oe?t="SHADOWMAP_TYPE_PCF":e.shadowMapType===Fe?t="SHADOWMAP_TYPE_PCF_SOFT":e.shadowMapType===Be&&(t="SHADOWMAP_TYPE_VSM"),t}(n),b=function(e){let t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case Ot:case Ft:t="ENVMAP_TYPE_CUBE";break;case Vt:t="ENVMAP_TYPE_CUBE_UV"}return t}(n),c=function(e){let t="ENVMAP_MODE_REFLECTION";e.envMap&&e.envMapMode===Ft&&(t="ENVMAP_MODE_REFRACTION");return t}(n),u=function(e){let t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case wt:t="ENVMAP_BLENDING_MULTIPLY";break;case zt:t="ENVMAP_BLENDING_MIX";break;case Et:t="ENVMAP_BLENDING_ADD"}return t}(n),h=function(e){const t=e.envMapCubeUVHeight;if(null===t)return null;const n=Math.log2(t)-2,i=1/t;return{texelWidth:1/(3*Math.max(Math.pow(2,n),112)),texelHeight:i,maxMip:n}}(n),d=function(e){return[e.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",e.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(jb).join("\n")}(n),m=function(e){const t=[];for(const n in e){const i=e[n];!1!==i&&t.push("#define "+n+" "+i)}return t.join("\n")}(a),f=r.createProgram();let p,g,x=n.glslVersion?"#version "+n.glslVersion+"\n":"";n.isRawShaderMaterial?(p=["#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,m].filter(jb).join("\n"),p.length>0&&(p+="\n"),g=["#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,m].filter(jb).join("\n"),g.length>0&&(g+="\n")):(p=[tc(n),"#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,m,n.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",n.batching?"#define USE_BATCHING":"",n.batchingColor?"#define USE_BATCHING_COLOR":"",n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.instancingMorph?"#define USE_INSTANCING_MORPH":"",n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+c:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",n.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",n.displacementMap?"#define USE_DISPLACEMENTMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.anisotropy?"#define USE_ANISOTROPY":"",n.anisotropyMap?"#define USE_ANISOTROPYMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",n.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaHash?"#define USE_ALPHAHASH":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",n.mapUv?"#define MAP_UV "+n.mapUv:"",n.alphaMapUv?"#define ALPHAMAP_UV "+n.alphaMapUv:"",n.lightMapUv?"#define LIGHTMAP_UV "+n.lightMapUv:"",n.aoMapUv?"#define AOMAP_UV "+n.aoMapUv:"",n.emissiveMapUv?"#define EMISSIVEMAP_UV "+n.emissiveMapUv:"",n.bumpMapUv?"#define BUMPMAP_UV "+n.bumpMapUv:"",n.normalMapUv?"#define NORMALMAP_UV "+n.normalMapUv:"",n.displacementMapUv?"#define DISPLACEMENTMAP_UV "+n.displacementMapUv:"",n.metalnessMapUv?"#define METALNESSMAP_UV "+n.metalnessMapUv:"",n.roughnessMapUv?"#define ROUGHNESSMAP_UV "+n.roughnessMapUv:"",n.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+n.anisotropyMapUv:"",n.clearcoatMapUv?"#define CLEARCOATMAP_UV "+n.clearcoatMapUv:"",n.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+n.clearcoatNormalMapUv:"",n.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+n.clearcoatRoughnessMapUv:"",n.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+n.iridescenceMapUv:"",n.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+n.iridescenceThicknessMapUv:"",n.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+n.sheenColorMapUv:"",n.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+n.sheenRoughnessMapUv:"",n.specularMapUv?"#define SPECULARMAP_UV "+n.specularMapUv:"",n.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+n.specularColorMapUv:"",n.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+n.specularIntensityMapUv:"",n.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+n.transmissionMapUv:"",n.thicknessMapUv?"#define THICKNESSMAP_UV "+n.thicknessMapUv:"",n.vertexTangents&&!1===n.flatShading?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUv1s?"#define USE_UV1":"",n.vertexUv2s?"#define USE_UV2":"",n.vertexUv3s?"#define USE_UV3":"",n.pointsUvs?"#define USE_POINTS_UV":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&!1===n.flatShading?"#define USE_MORPHNORMALS":"",n.morphColors?"#define USE_MORPHCOLORS":"",n.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+n.morphTextureStride:"",n.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+n.morphTargetsCount:"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+s:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.numLightProbes>0?"#define USE_LIGHT_PROBES":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","\tuniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","\tattribute vec2 uv1;","#endif","#ifdef USE_UV2","\tattribute vec2 uv2;","#endif","#ifdef USE_UV3","\tattribute vec2 uv3;","#endif","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(jb).join("\n"),g=[tc(n),"#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,m,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+b:"",n.envMap?"#define "+c:"",n.envMap?"#define "+u:"",h?"#define CUBEUV_TEXEL_WIDTH "+h.texelWidth:"",h?"#define CUBEUV_TEXEL_HEIGHT "+h.texelHeight:"",h?"#define CUBEUV_MAX_MIP "+h.maxMip+".0":"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",n.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.anisotropy?"#define USE_ANISOTROPY":"",n.anisotropyMap?"#define USE_ANISOTROPYMAP":"",n.clearcoat?"#define USE_CLEARCOAT":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.dispersion?"#define USE_DISPERSION":"",n.iridescence?"#define USE_IRIDESCENCE":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",n.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaTest?"#define USE_ALPHATEST":"",n.alphaHash?"#define USE_ALPHAHASH":"",n.sheen?"#define USE_SHEEN":"",n.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.vertexTangents&&!1===n.flatShading?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor||n.batchingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUv1s?"#define USE_UV1":"",n.vertexUv2s?"#define USE_UV2":"",n.vertexUv3s?"#define USE_UV3":"",n.pointsUvs?"#define USE_POINTS_UV":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+s:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.numLightProbes>0?"#define USE_LIGHT_PROBES":"",n.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",n.toneMapping!==Tt?"#define TONE_MAPPING":"",n.toneMapping!==Tt?Yo.tonemapping_pars_fragment:"",n.toneMapping!==Tt?Vb("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",n.opaque?"#define OPAQUE":"",Yo.colorspace_pars_fragment,Hb("linearToOutputTexel",n.outputColorSpace),Wb(),n.useDepthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(jb).join("\n")),l=Zb(l),l=Xb(l,n),l=qb(l,n),o=Zb(o),o=Xb(o,n),o=qb(o,n),l=Qb(l),o=Qb(o),!0!==n.isRawShaderMaterial&&(x="#version 300 es\n",p=[d,"#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+p,g=["#define varying in",n.glslVersion===fr?"":"layout(location = 0) out highp vec4 pc_fragColor;",n.glslVersion===fr?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+g);const v=x+p+l,_=x+g+o,y=Ub(r,r.VERTEX_SHADER,v),S=Ub(r,r.FRAGMENT_SHADER,_);function M(t){if(e.debug.checkShaderErrors){const n=r.getProgramInfoLog(f).trim(),i=r.getShaderInfoLog(y).trim(),a=r.getShaderInfoLog(S).trim();let l=!0,o=!0;if(!1===r.getProgramParameter(f,r.LINK_STATUS))if(l=!1,"function"===typeof e.debug.onShaderError)e.debug.onShaderError(r,f,y,S);else{const e=Bb(r,y,"vertex"),i=Bb(r,S,"fragment");console.error("THREE.WebGLProgram: Shader Error "+r.getError()+" - VALIDATE_STATUS "+r.getProgramParameter(f,r.VALIDATE_STATUS)+"\n\nMaterial Name: "+t.name+"\nMaterial Type: "+t.type+"\n\nProgram Info Log: "+n+"\n"+e+"\n"+i)}else""!==n?console.warn("THREE.WebGLProgram: Program Info Log:",n):""!==i&&""!==a||(o=!1);o&&(t.diagnostics={runnable:l,programLog:n,vertexShader:{log:i,prefix:p},fragmentShader:{log:a,prefix:g}})}r.deleteShader(y),r.deleteShader(S),w=new Db(r,f),z=function(e,t){const n={},i=e.getProgramParameter(t,e.ACTIVE_ATTRIBUTES);for(let r=0;r<i;r++){const i=e.getActiveAttrib(t,r),a=i.name;let l=1;i.type===e.FLOAT_MAT2&&(l=2),i.type===e.FLOAT_MAT3&&(l=3),i.type===e.FLOAT_MAT4&&(l=4),n[a]={type:i.type,location:e.getAttribLocation(t,a),locationSize:l}}return n}(r,f)}let w,z;r.attachShader(f,y),r.attachShader(f,S),void 0!==n.index0AttributeName?r.bindAttribLocation(f,0,n.index0AttributeName):!0===n.morphTargets&&r.bindAttribLocation(f,0,"position"),r.linkProgram(f),this.getUniforms=function(){return void 0===w&&M(this),w},this.getAttributes=function(){return void 0===z&&M(this),z};let E=!1===n.rendererExtensionParallelShaderCompile;return this.isReady=function(){return!1===E&&(E=r.getProgramParameter(f,Ob)),E},this.destroy=function(){i.releaseStatesOfProgram(this),r.deleteProgram(f),this.program=void 0},this.type=n.shaderType,this.name=n.shaderName,this.id=Fb++,this.cacheKey=t,this.usedTimes=1,this.program=f,this.vertexShader=y,this.fragmentShader=S,this}let ic=0;class rc{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),r=this._getShaderStage(n),a=this._getShaderCacheForMaterial(e);return!1===a.has(i)&&(a.add(i),i.usedTimes++),!1===a.has(r)&&(a.add(r),r.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,0===n.usedTimes&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return void 0===n&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return void 0===n&&(n=new ac(e),t.set(e,n)),n}}class ac{constructor(e){this.id=ic++,this.code=e,this.usedTimes=0}}function lc(e,t,n,i,r,a,l){const o=new Za,s=new rc,b=new Set,c=[],u=r.logarithmicDepthBuffer,h=r.vertexTextures;let d=r.precision;const m={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function f(e){return b.add(e),0===e?"uv":`uv${e}`}return{getParameters:function(a,o,c,p,g){const x=p.fog,v=g.geometry,_=a.isMeshStandardMaterial?p.environment:null,y=(a.isMeshStandardMaterial?n:t).get(a.envMap||_),S=y&&y.mapping===Vt?y.image.height:null,M=m[a.type];null!==a.precision&&(d=r.getMaxPrecision(a.precision),d!==a.precision&&console.warn("THREE.WebGLProgram.getParameters:",a.precision,"not supported, using",d,"instead."));const w=v.morphAttributes.position||v.morphAttributes.normal||v.morphAttributes.color,z=void 0!==w?w.length:0;let E,T,A,C,R=0;if(void 0!==v.morphAttributes.position&&(R=1),void 0!==v.morphAttributes.normal&&(R=2),void 0!==v.morphAttributes.color&&(R=3),M){const e=Ko[M];E=e.vertexShader,T=e.fragmentShader}else E=a.vertexShader,T=a.fragmentShader,s.update(a),A=s.getVertexShaderID(a),C=s.getFragmentShaderID(a);const P=e.getRenderTarget(),L=!0===g.isInstancedMesh,I=!0===g.isBatchedMesh,N=!!a.map,k=!!a.matcap,D=!!y,U=!!a.aoMap,O=!!a.lightMap,F=!!a.bumpMap,B=!!a.normalMap,H=!!a.displacementMap,V=!!a.emissiveMap,G=!!a.metalnessMap,W=!!a.roughnessMap,j=a.anisotropy>0,X=a.clearcoat>0,q=a.dispersion>0,Y=a.iridescence>0,Z=a.sheen>0,K=a.transmission>0,$=j&&!!a.anisotropyMap,J=X&&!!a.clearcoatMap,Q=X&&!!a.clearcoatNormalMap,ee=X&&!!a.clearcoatRoughnessMap,te=Y&&!!a.iridescenceMap,ne=Y&&!!a.iridescenceThicknessMap,ie=Z&&!!a.sheenColorMap,re=Z&&!!a.sheenRoughnessMap,ae=!!a.specularMap,le=!!a.specularColorMap,oe=!!a.specularIntensityMap,se=K&&!!a.transmissionMap,be=K&&!!a.thicknessMap,ce=!!a.gradientMap,ue=!!a.alphaMap,he=a.alphaTest>0,de=!!a.alphaHash,me=!!a.extensions;let fe=Tt;a.toneMapped&&(null!==P&&!0!==P.isXRRenderTarget||(fe=e.toneMapping));const pe={shaderID:M,shaderType:a.type,shaderName:a.name,vertexShader:E,fragmentShader:T,defines:a.defines,customVertexShaderID:A,customFragmentShaderID:C,isRawShaderMaterial:!0===a.isRawShaderMaterial,glslVersion:a.glslVersion,precision:d,batching:I,batchingColor:I&&null!==g._colorsTexture,instancing:L,instancingColor:L&&null!==g.instanceColor,instancingMorph:L&&null!==g.morphTexture,supportsVertexTextures:h,outputColorSpace:null===P?e.outputColorSpace:!0===P.isXRRenderTarget?P.texture.colorSpace:Ai,alphaToCoverage:!!a.alphaToCoverage,map:N,matcap:k,envMap:D,envMapMode:D&&y.mapping,envMapCubeUVHeight:S,aoMap:U,lightMap:O,bumpMap:F,normalMap:B,displacementMap:h&&H,emissiveMap:V,normalMapObjectSpace:B&&a.normalMapType===zi,normalMapTangentSpace:B&&a.normalMapType===wi,metalnessMap:G,roughnessMap:W,anisotropy:j,anisotropyMap:$,clearcoat:X,clearcoatMap:J,clearcoatNormalMap:Q,clearcoatRoughnessMap:ee,dispersion:q,iridescence:Y,iridescenceMap:te,iridescenceThicknessMap:ne,sheen:Z,sheenColorMap:ie,sheenRoughnessMap:re,specularMap:ae,specularColorMap:le,specularIntensityMap:oe,transmission:K,transmissionMap:se,thicknessMap:be,gradientMap:ce,opaque:!1===a.transparent&&a.blending===je&&!1===a.alphaToCoverage,alphaMap:ue,alphaTest:he,alphaHash:de,combine:a.combine,mapUv:N&&f(a.map.channel),aoMapUv:U&&f(a.aoMap.channel),lightMapUv:O&&f(a.lightMap.channel),bumpMapUv:F&&f(a.bumpMap.channel),normalMapUv:B&&f(a.normalMap.channel),displacementMapUv:H&&f(a.displacementMap.channel),emissiveMapUv:V&&f(a.emissiveMap.channel),metalnessMapUv:G&&f(a.metalnessMap.channel),roughnessMapUv:W&&f(a.roughnessMap.channel),anisotropyMapUv:$&&f(a.anisotropyMap.channel),clearcoatMapUv:J&&f(a.clearcoatMap.channel),clearcoatNormalMapUv:Q&&f(a.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:ee&&f(a.clearcoatRoughnessMap.channel),iridescenceMapUv:te&&f(a.iridescenceMap.channel),iridescenceThicknessMapUv:ne&&f(a.iridescenceThicknessMap.channel),sheenColorMapUv:ie&&f(a.sheenColorMap.channel),sheenRoughnessMapUv:re&&f(a.sheenRoughnessMap.channel),specularMapUv:ae&&f(a.specularMap.channel),specularColorMapUv:le&&f(a.specularColorMap.channel),specularIntensityMapUv:oe&&f(a.specularIntensityMap.channel),transmissionMapUv:se&&f(a.transmissionMap.channel),thicknessMapUv:be&&f(a.thicknessMap.channel),alphaMapUv:ue&&f(a.alphaMap.channel),vertexTangents:!!v.attributes.tangent&&(B||j),vertexColors:a.vertexColors,vertexAlphas:!0===a.vertexColors&&!!v.attributes.color&&4===v.attributes.color.itemSize,pointsUvs:!0===g.isPoints&&!!v.attributes.uv&&(N||ue),fog:!!x,useFog:!0===a.fog,fogExp2:!!x&&x.isFogExp2,flatShading:!0===a.flatShading,sizeAttenuation:!0===a.sizeAttenuation,logarithmicDepthBuffer:u,skinning:!0===g.isSkinnedMesh,morphTargets:void 0!==v.morphAttributes.position,morphNormals:void 0!==v.morphAttributes.normal,morphColors:void 0!==v.morphAttributes.color,morphTargetsCount:z,morphTextureStride:R,numDirLights:o.directional.length,numPointLights:o.point.length,numSpotLights:o.spot.length,numSpotLightMaps:o.spotLightMap.length,numRectAreaLights:o.rectArea.length,numHemiLights:o.hemi.length,numDirLightShadows:o.directionalShadowMap.length,numPointLightShadows:o.pointShadowMap.length,numSpotLightShadows:o.spotShadowMap.length,numSpotLightShadowsWithMaps:o.numSpotLightShadowsWithMaps,numLightProbes:o.numLightProbes,numClippingPlanes:l.numPlanes,numClipIntersection:l.numIntersection,dithering:a.dithering,shadowMapEnabled:e.shadowMap.enabled&&c.length>0,shadowMapType:e.shadowMap.type,toneMapping:fe,decodeVideoTexture:N&&!0===a.map.isVideoTexture&&Wr.getTransfer(a.map.colorSpace)===Li,premultipliedAlpha:a.premultipliedAlpha,doubleSided:a.side===Ge,flipSided:a.side===Ve,useDepthPacking:a.depthPacking>=0,depthPacking:a.depthPacking||0,index0AttributeName:a.index0AttributeName,extensionClipCullDistance:me&&!0===a.extensions.clipCullDistance&&i.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(me&&!0===a.extensions.multiDraw||I)&&i.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:i.has("KHR_parallel_shader_compile"),customProgramCacheKey:a.customProgramCacheKey()};return pe.vertexUv1s=b.has(1),pe.vertexUv2s=b.has(2),pe.vertexUv3s=b.has(3),b.clear(),pe},getProgramCacheKey:function(t){const n=[];if(t.shaderID?n.push(t.shaderID):(n.push(t.customVertexShaderID),n.push(t.customFragmentShaderID)),void 0!==t.defines)for(const e in t.defines)n.push(e),n.push(t.defines[e]);return!1===t.isRawShaderMaterial&&(!function(e,t){e.push(t.precision),e.push(t.outputColorSpace),e.push(t.envMapMode),e.push(t.envMapCubeUVHeight),e.push(t.mapUv),e.push(t.alphaMapUv),e.push(t.lightMapUv),e.push(t.aoMapUv),e.push(t.bumpMapUv),e.push(t.normalMapUv),e.push(t.displacementMapUv),e.push(t.emissiveMapUv),e.push(t.metalnessMapUv),e.push(t.roughnessMapUv),e.push(t.anisotropyMapUv),e.push(t.clearcoatMapUv),e.push(t.clearcoatNormalMapUv),e.push(t.clearcoatRoughnessMapUv),e.push(t.iridescenceMapUv),e.push(t.iridescenceThicknessMapUv),e.push(t.sheenColorMapUv),e.push(t.sheenRoughnessMapUv),e.push(t.specularMapUv),e.push(t.specularColorMapUv),e.push(t.specularIntensityMapUv),e.push(t.transmissionMapUv),e.push(t.thicknessMapUv),e.push(t.combine),e.push(t.fogExp2),e.push(t.sizeAttenuation),e.push(t.morphTargetsCount),e.push(t.morphAttributeCount),e.push(t.numDirLights),e.push(t.numPointLights),e.push(t.numSpotLights),e.push(t.numSpotLightMaps),e.push(t.numHemiLights),e.push(t.numRectAreaLights),e.push(t.numDirLightShadows),e.push(t.numPointLightShadows),e.push(t.numSpotLightShadows),e.push(t.numSpotLightShadowsWithMaps),e.push(t.numLightProbes),e.push(t.shadowMapType),e.push(t.toneMapping),e.push(t.numClippingPlanes),e.push(t.numClipIntersection),e.push(t.depthPacking)}(n,t),function(e,t){o.disableAll(),t.supportsVertexTextures&&o.enable(0);t.instancing&&o.enable(1);t.instancingColor&&o.enable(2);t.instancingMorph&&o.enable(3);t.matcap&&o.enable(4);t.envMap&&o.enable(5);t.normalMapObjectSpace&&o.enable(6);t.normalMapTangentSpace&&o.enable(7);t.clearcoat&&o.enable(8);t.iridescence&&o.enable(9);t.alphaTest&&o.enable(10);t.vertexColors&&o.enable(11);t.vertexAlphas&&o.enable(12);t.vertexUv1s&&o.enable(13);t.vertexUv2s&&o.enable(14);t.vertexUv3s&&o.enable(15);t.vertexTangents&&o.enable(16);t.anisotropy&&o.enable(17);t.alphaHash&&o.enable(18);t.batching&&o.enable(19);t.dispersion&&o.enable(20);t.batchingColor&&o.enable(21);e.push(o.mask),o.disableAll(),t.fog&&o.enable(0);t.useFog&&o.enable(1);t.flatShading&&o.enable(2);t.logarithmicDepthBuffer&&o.enable(3);t.skinning&&o.enable(4);t.morphTargets&&o.enable(5);t.morphNormals&&o.enable(6);t.morphColors&&o.enable(7);t.premultipliedAlpha&&o.enable(8);t.shadowMapEnabled&&o.enable(9);t.doubleSided&&o.enable(10);t.flipSided&&o.enable(11);t.useDepthPacking&&o.enable(12);t.dithering&&o.enable(13);t.transmission&&o.enable(14);t.sheen&&o.enable(15);t.opaque&&o.enable(16);t.pointsUvs&&o.enable(17);t.decodeVideoTexture&&o.enable(18);t.alphaToCoverage&&o.enable(19);e.push(o.mask)}(n,t),n.push(e.outputColorSpace)),n.push(t.customProgramCacheKey),n.join()},getUniforms:function(e){const t=m[e.type];let n;if(t){const e=Ko[t];n=To.clone(e.uniforms)}else n=e.uniforms;return n},acquireProgram:function(t,n){let i;for(let e=0,r=c.length;e<r;e++){const t=c[e];if(t.cacheKey===n){i=t,++i.usedTimes;break}}return void 0===i&&(i=new nc(e,n,t,a),c.push(i)),i},releaseProgram:function(e){if(0===--e.usedTimes){const t=c.indexOf(e);c[t]=c[c.length-1],c.pop(),e.destroy()}},releaseShaderCache:function(e){s.remove(e)},programs:c,dispose:function(){s.dispose()}}}function oc(){let e=new WeakMap;return{has:function(t){return e.has(t)},get:function(t){let n=e.get(t);return void 0===n&&(n={},e.set(t,n)),n},remove:function(t){e.delete(t)},update:function(t,n,i){e.get(t)[n]=i},dispose:function(){e=new WeakMap}}}function sc(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function bc(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function cc(){const e=[];let t=0;const n=[],i=[],r=[];function a(n,i,r,a,l,o){let s=e[t];return void 0===s?(s={id:n.id,object:n,geometry:i,material:r,groupOrder:a,renderOrder:n.renderOrder,z:l,group:o},e[t]=s):(s.id=n.id,s.object=n,s.geometry=i,s.material=r,s.groupOrder=a,s.renderOrder=n.renderOrder,s.z=l,s.group=o),t++,s}return{opaque:n,transmissive:i,transparent:r,init:function(){t=0,n.length=0,i.length=0,r.length=0},push:function(e,t,l,o,s,b){const c=a(e,t,l,o,s,b);l.transmission>0?i.push(c):!0===l.transparent?r.push(c):n.push(c)},unshift:function(e,t,l,o,s,b){const c=a(e,t,l,o,s,b);l.transmission>0?i.unshift(c):!0===l.transparent?r.unshift(c):n.unshift(c)},finish:function(){for(let n=t,i=e.length;n<i;n++){const t=e[n];if(null===t.id)break;t.id=null,t.object=null,t.geometry=null,t.material=null,t.group=null}},sort:function(e,t){n.length>1&&n.sort(e||sc),i.length>1&&i.sort(t||bc),r.length>1&&r.sort(t||bc)}}}function uc(){let e=new WeakMap;return{get:function(t,n){const i=e.get(t);let r;return void 0===i?(r=new cc,e.set(t,[r])):n>=i.length?(r=new cc,i.push(r)):r=i[n],r},dispose:function(){e=new WeakMap}}}function hc(){const e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let n;switch(t.type){case"DirectionalLight":n={direction:new sa,color:new Tl};break;case"SpotLight":n={position:new sa,direction:new sa,color:new Tl,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new sa,color:new Tl,distance:0,decay:0};break;case"HemisphereLight":n={direction:new sa,skyColor:new Tl,groundColor:new Tl};break;case"RectAreaLight":n={color:new Tl,position:new sa,halfWidth:new sa,halfHeight:new sa}}return e[t.id]=n,n}}}let dc=0;function mc(e,t){return(t.castShadow?2:0)-(e.castShadow?2:0)+(t.map?1:0)-(e.map?1:0)}function fc(e){const t=new hc,n=function(){const e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let n;switch(t.type){case"DirectionalLight":case"SpotLight":n={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Rr};break;case"PointLight":n={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Rr,shadowCameraNear:1,shadowCameraFar:1e3}}return e[t.id]=n,n}}}(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let o=0;o<9;o++)i.probe.push(new sa);const r=new sa,a=new Oa,l=new Oa;return{setup:function(r){let a=0,l=0,o=0;for(let e=0;e<9;e++)i.probe[e].set(0,0,0);let s=0,b=0,c=0,u=0,h=0,d=0,m=0,f=0,p=0,g=0,x=0;r.sort(mc);for(let e=0,_=r.length;e<_;e++){const v=r[e],_=v.color,y=v.intensity,S=v.distance,M=v.shadow&&v.shadow.map?v.shadow.map.texture:null;if(v.isAmbientLight)a+=_.r*y,l+=_.g*y,o+=_.b*y;else if(v.isLightProbe){for(let e=0;e<9;e++)i.probe[e].addScaledVector(v.sh.coefficients[e],y);x++}else if(v.isDirectionalLight){const e=t.get(v);if(e.color.copy(v.color).multiplyScalar(v.intensity),v.castShadow){const e=v.shadow,t=n.get(v);t.shadowIntensity=e.intensity,t.shadowBias=e.bias,t.shadowNormalBias=e.normalBias,t.shadowRadius=e.radius,t.shadowMapSize=e.mapSize,i.directionalShadow[s]=t,i.directionalShadowMap[s]=M,i.directionalShadowMatrix[s]=v.shadow.matrix,d++}i.directional[s]=e,s++}else if(v.isSpotLight){const e=t.get(v);e.position.setFromMatrixPosition(v.matrixWorld),e.color.copy(_).multiplyScalar(y),e.distance=S,e.coneCos=Math.cos(v.angle),e.penumbraCos=Math.cos(v.angle*(1-v.penumbra)),e.decay=v.decay,i.spot[c]=e;const r=v.shadow;if(v.map&&(i.spotLightMap[p]=v.map,p++,r.updateMatrices(v),v.castShadow&&g++),i.spotLightMatrix[c]=r.matrix,v.castShadow){const e=n.get(v);e.shadowIntensity=r.intensity,e.shadowBias=r.bias,e.shadowNormalBias=r.normalBias,e.shadowRadius=r.radius,e.shadowMapSize=r.mapSize,i.spotShadow[c]=e,i.spotShadowMap[c]=M,f++}c++}else if(v.isRectAreaLight){const e=t.get(v);e.color.copy(_).multiplyScalar(y),e.halfWidth.set(.5*v.width,0,0),e.halfHeight.set(0,.5*v.height,0),i.rectArea[u]=e,u++}else if(v.isPointLight){const e=t.get(v);if(e.color.copy(v.color).multiplyScalar(v.intensity),e.distance=v.distance,e.decay=v.decay,v.castShadow){const e=v.shadow,t=n.get(v);t.shadowIntensity=e.intensity,t.shadowBias=e.bias,t.shadowNormalBias=e.normalBias,t.shadowRadius=e.radius,t.shadowMapSize=e.mapSize,t.shadowCameraNear=e.camera.near,t.shadowCameraFar=e.camera.far,i.pointShadow[b]=t,i.pointShadowMap[b]=M,i.pointShadowMatrix[b]=v.shadow.matrix,m++}i.point[b]=e,b++}else if(v.isHemisphereLight){const e=t.get(v);e.skyColor.copy(v.color).multiplyScalar(y),e.groundColor.copy(v.groundColor).multiplyScalar(y),i.hemi[h]=e,h++}}u>0&&(!0===e.has("OES_texture_float_linear")?(i.rectAreaLTC1=Zo.LTC_FLOAT_1,i.rectAreaLTC2=Zo.LTC_FLOAT_2):(i.rectAreaLTC1=Zo.LTC_HALF_1,i.rectAreaLTC2=Zo.LTC_HALF_2)),i.ambient[0]=a,i.ambient[1]=l,i.ambient[2]=o;const v=i.hash;v.directionalLength===s&&v.pointLength===b&&v.spotLength===c&&v.rectAreaLength===u&&v.hemiLength===h&&v.numDirectionalShadows===d&&v.numPointShadows===m&&v.numSpotShadows===f&&v.numSpotMaps===p&&v.numLightProbes===x||(i.directional.length=s,i.spot.length=c,i.rectArea.length=u,i.point.length=b,i.hemi.length=h,i.directionalShadow.length=d,i.directionalShadowMap.length=d,i.pointShadow.length=m,i.pointShadowMap.length=m,i.spotShadow.length=f,i.spotShadowMap.length=f,i.directionalShadowMatrix.length=d,i.pointShadowMatrix.length=m,i.spotLightMatrix.length=f+p-g,i.spotLightMap.length=p,i.numSpotLightShadowsWithMaps=g,i.numLightProbes=x,v.directionalLength=s,v.pointLength=b,v.spotLength=c,v.rectAreaLength=u,v.hemiLength=h,v.numDirectionalShadows=d,v.numPointShadows=m,v.numSpotShadows=f,v.numSpotMaps=p,v.numLightProbes=x,i.version=dc++)},setupView:function(e,t){let n=0,o=0,s=0,b=0,c=0;const u=t.matrixWorldInverse;for(let h=0,d=e.length;h<d;h++){const t=e[h];if(t.isDirectionalLight){const e=i.directional[n];e.direction.setFromMatrixPosition(t.matrixWorld),r.setFromMatrixPosition(t.target.matrixWorld),e.direction.sub(r),e.direction.transformDirection(u),n++}else if(t.isSpotLight){const e=i.spot[s];e.position.setFromMatrixPosition(t.matrixWorld),e.position.applyMatrix4(u),e.direction.setFromMatrixPosition(t.matrixWorld),r.setFromMatrixPosition(t.target.matrixWorld),e.direction.sub(r),e.direction.transformDirection(u),s++}else if(t.isRectAreaLight){const e=i.rectArea[b];e.position.setFromMatrixPosition(t.matrixWorld),e.position.applyMatrix4(u),l.identity(),a.copy(t.matrixWorld),a.premultiply(u),l.extractRotation(a),e.halfWidth.set(.5*t.width,0,0),e.halfHeight.set(0,.5*t.height,0),e.halfWidth.applyMatrix4(l),e.halfHeight.applyMatrix4(l),b++}else if(t.isPointLight){const e=i.point[o];e.position.setFromMatrixPosition(t.matrixWorld),e.position.applyMatrix4(u),o++}else if(t.isHemisphereLight){const e=i.hemi[c];e.direction.setFromMatrixPosition(t.matrixWorld),e.direction.transformDirection(u),c++}}},state:i}}function pc(e){const t=new fc(e),n=[],i=[];const r={lightsArray:n,shadowsArray:i,camera:null,lights:t,transmissionRenderTarget:{}};return{init:function(e){r.camera=e,n.length=0,i.length=0},state:r,setupLights:function(){t.setup(n)},setupLightsView:function(e){t.setupView(n,e)},pushLight:function(e){n.push(e)},pushShadow:function(e){i.push(e)}}}function gc(e){let t=new WeakMap;return{get:function(n){let i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const r=t.get(n);let a;return void 0===r?(a=new pc(e),t.set(n,[a])):i>=r.length?(a=new pc(e),r.push(a)):a=r[i],a},dispose:function(){t=new WeakMap}}}class xc extends Rl{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=_i,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class vc extends Rl{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}function _c(e,t,n){let i=new Wo;const r=new Rr,a=new Rr,l=new ea,o=new xc({depthPacking:yi}),s=new vc,b={},c=n.maxTextureSize,u={[He]:Ve,[Ve]:He,[Ge]:Ge},h=new Ao({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Rr},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),d=h.clone();d.defines.HORIZONTAL_PASS=1;const m=new no;m.setAttribute("position",new Fl(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const f=new yo(m,h),p=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Oe;let g=this.type;function x(n,i){const a=t.update(f);h.defines.VSM_SAMPLES!==n.blurSamples&&(h.defines.VSM_SAMPLES=n.blurSamples,d.defines.VSM_SAMPLES=n.blurSamples,h.needsUpdate=!0,d.needsUpdate=!0),null===n.mapPass&&(n.mapPass=new na(r.x,r.y)),h.uniforms.shadow_pass.value=n.map.texture,h.uniforms.resolution.value=n.mapSize,h.uniforms.radius.value=n.radius,e.setRenderTarget(n.mapPass),e.clear(),e.renderBufferDirect(i,null,a,h,f,null),d.uniforms.shadow_pass.value=n.mapPass.texture,d.uniforms.resolution.value=n.mapSize,d.uniforms.radius.value=n.radius,e.setRenderTarget(n.map),e.clear(),e.renderBufferDirect(i,null,a,d,f,null)}function v(t,n,i,r){let a=null;const l=!0===i.isPointLight?t.customDistanceMaterial:t.customDepthMaterial;if(void 0!==l)a=l;else if(a=!0===i.isPointLight?s:o,e.localClippingEnabled&&!0===n.clipShadows&&Array.isArray(n.clippingPlanes)&&0!==n.clippingPlanes.length||n.displacementMap&&0!==n.displacementScale||n.alphaMap&&n.alphaTest>0||n.map&&n.alphaTest>0){const e=a.uuid,t=n.uuid;let i=b[e];void 0===i&&(i={},b[e]=i);let r=i[t];void 0===r&&(r=a.clone(),i[t]=r,n.addEventListener("dispose",y)),a=r}if(a.visible=n.visible,a.wireframe=n.wireframe,a.side=r===Be?null!==n.shadowSide?n.shadowSide:n.side:null!==n.shadowSide?n.shadowSide:u[n.side],a.alphaMap=n.alphaMap,a.alphaTest=n.alphaTest,a.map=n.map,a.clipShadows=n.clipShadows,a.clippingPlanes=n.clippingPlanes,a.clipIntersection=n.clipIntersection,a.displacementMap=n.displacementMap,a.displacementScale=n.displacementScale,a.displacementBias=n.displacementBias,a.wireframeLinewidth=n.wireframeLinewidth,a.linewidth=n.linewidth,!0===i.isPointLight&&!0===a.isMeshDistanceMaterial){e.properties.get(a).light=i}return a}function _(n,r,a,l,o){if(!1===n.visible)return;if(n.layers.test(r.layers)&&(n.isMesh||n.isLine||n.isPoints)&&(n.castShadow||n.receiveShadow&&o===Be)&&(!n.frustumCulled||i.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(a.matrixWorldInverse,n.matrixWorld);const i=t.update(n),s=n.material;if(Array.isArray(s)){const t=i.groups;for(let b=0,c=t.length;b<c;b++){const c=t[b],u=s[c.materialIndex];if(u&&u.visible){const t=v(n,u,l,o);n.onBeforeShadow(e,n,r,a,i,t,c),e.renderBufferDirect(a,null,i,t,n,c),n.onAfterShadow(e,n,r,a,i,t,c)}}}else if(s.visible){const t=v(n,s,l,o);n.onBeforeShadow(e,n,r,a,i,t,null),e.renderBufferDirect(a,null,i,t,n,null),n.onAfterShadow(e,n,r,a,i,t,null)}}const s=n.children;for(let e=0,t=s.length;e<t;e++)_(s[e],r,a,l,o)}function y(e){e.target.removeEventListener("dispose",y);for(const t in b){const n=b[t],i=e.target.uuid;if(i in n){n[i].dispose(),delete n[i]}}}this.render=function(t,n,o){if(!1===p.enabled)return;if(!1===p.autoUpdate&&!1===p.needsUpdate)return;if(0===t.length)return;const s=e.getRenderTarget(),b=e.getActiveCubeFace(),u=e.getActiveMipmapLevel(),h=e.state;h.setBlending(We),h.buffers.color.setClear(1,1,1,1),h.buffers.depth.setTest(!0),h.setScissorTest(!1);const d=g!==Be&&this.type===Be,m=g===Be&&this.type!==Be;for(let f=0,p=t.length;f<p;f++){const s=t[f],b=s.shadow;if(void 0===b){console.warn("THREE.WebGLShadowMap:",s,"has no shadow.");continue}if(!1===b.autoUpdate&&!1===b.needsUpdate)continue;r.copy(b.mapSize);const u=b.getFrameExtents();if(r.multiply(u),a.copy(b.mapSize),(r.x>c||r.y>c)&&(r.x>c&&(a.x=Math.floor(c/u.x),r.x=a.x*u.x,b.mapSize.x=a.x),r.y>c&&(a.y=Math.floor(c/u.y),r.y=a.y*u.y,b.mapSize.y=a.y)),null===b.map||!0===d||!0===m){const e=this.type!==Be?{minFilter:Xt,magFilter:Xt}:{};null!==b.map&&b.map.dispose(),b.map=new na(r.x,r.y,e),b.map.texture.name=s.name+".shadowMap",b.camera.updateProjectionMatrix()}e.setRenderTarget(b.map),e.clear();const p=b.getViewportCount();for(let e=0;e<p;e++){const t=b.getViewport(e);l.set(a.x*t.x,a.y*t.y,a.x*t.z,a.y*t.w),h.viewport(l),b.updateMatrices(s,e),i=b.getFrustum(),_(n,o,b.camera,s,this.type)}!0!==b.isPointLightShadow&&this.type===Be&&x(b,o),b.needsUpdate=!1}g=this.type,p.needsUpdate=!1,e.setRenderTarget(s,b,u)}}function yc(e){const t=new function(){let t=!1;const n=new ea;let i=null;const r=new ea(0,0,0,0);return{setMask:function(n){i===n||t||(e.colorMask(n,n,n,n),i=n)},setLocked:function(e){t=e},setClear:function(t,i,a,l,o){!0===o&&(t*=l,i*=l,a*=l),n.set(t,i,a,l),!1===r.equals(n)&&(e.clearColor(t,i,a,l),r.copy(n))},reset:function(){t=!1,i=null,r.set(-1,0,0,0)}}},n=new function(){let t=!1,n=null,i=null,r=null;return{setTest:function(t){t?F(e.DEPTH_TEST):B(e.DEPTH_TEST)},setMask:function(i){n===i||t||(e.depthMask(i),n=i)},setFunc:function(t){if(i!==t){switch(t){case pt:e.depthFunc(e.NEVER);break;case gt:e.depthFunc(e.ALWAYS);break;case xt:e.depthFunc(e.LESS);break;case vt:e.depthFunc(e.LEQUAL);break;case _t:e.depthFunc(e.EQUAL);break;case yt:e.depthFunc(e.GEQUAL);break;case St:e.depthFunc(e.GREATER);break;case Mt:e.depthFunc(e.NOTEQUAL);break;default:e.depthFunc(e.LEQUAL)}i=t}},setLocked:function(e){t=e},setClear:function(t){r!==t&&(e.clearDepth(t),r=t)},reset:function(){t=!1,n=null,i=null,r=null}}},i=new function(){let t=!1,n=null,i=null,r=null,a=null,l=null,o=null,s=null,b=null;return{setTest:function(n){t||(n?F(e.STENCIL_TEST):B(e.STENCIL_TEST))},setMask:function(i){n===i||t||(e.stencilMask(i),n=i)},setFunc:function(t,n,l){i===t&&r===n&&a===l||(e.stencilFunc(t,n,l),i=t,r=n,a=l)},setOp:function(t,n,i){l===t&&o===n&&s===i||(e.stencilOp(t,n,i),l=t,o=n,s=i)},setLocked:function(e){t=e},setClear:function(t){b!==t&&(e.clearStencil(t),b=t)},reset:function(){t=!1,n=null,i=null,r=null,a=null,l=null,o=null,s=null,b=null}}},r=new WeakMap,a=new WeakMap;let l={},o={},s=new WeakMap,b=[],c=null,u=!1,h=null,d=null,m=null,f=null,p=null,g=null,x=null,v=new Tl(0,0,0),_=0,y=!1,S=null,M=null,w=null,z=null,E=null;const T=e.getParameter(e.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let A=!1,C=0;const R=e.getParameter(e.VERSION);-1!==R.indexOf("WebGL")?(C=parseFloat(/^WebGL (\d)/.exec(R)[1]),A=C>=1):-1!==R.indexOf("OpenGL ES")&&(C=parseFloat(/^OpenGL ES (\d)/.exec(R)[1]),A=C>=2);let P=null,L={};const I=e.getParameter(e.SCISSOR_BOX),N=e.getParameter(e.VIEWPORT),k=(new ea).fromArray(I),D=(new ea).fromArray(N);function U(t,n,i,r){const a=new Uint8Array(4),l=e.createTexture();e.bindTexture(t,l),e.texParameteri(t,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(t,e.TEXTURE_MAG_FILTER,e.NEAREST);for(let o=0;o<i;o++)t===e.TEXTURE_3D||t===e.TEXTURE_2D_ARRAY?e.texImage3D(n,0,e.RGBA,1,1,r,0,e.RGBA,e.UNSIGNED_BYTE,a):e.texImage2D(n+o,0,e.RGBA,1,1,0,e.RGBA,e.UNSIGNED_BYTE,a);return l}const O={};function F(t){!0!==l[t]&&(e.enable(t),l[t]=!0)}function B(t){!1!==l[t]&&(e.disable(t),l[t]=!1)}O[e.TEXTURE_2D]=U(e.TEXTURE_2D,e.TEXTURE_2D,1),O[e.TEXTURE_CUBE_MAP]=U(e.TEXTURE_CUBE_MAP,e.TEXTURE_CUBE_MAP_POSITIVE_X,6),O[e.TEXTURE_2D_ARRAY]=U(e.TEXTURE_2D_ARRAY,e.TEXTURE_2D_ARRAY,1,1),O[e.TEXTURE_3D]=U(e.TEXTURE_3D,e.TEXTURE_3D,1,1),t.setClear(0,0,0,1),n.setClear(1),i.setClear(0),F(e.DEPTH_TEST),n.setFunc(vt),W(!1),j(Ne),F(e.CULL_FACE),G(We);const H={[Ke]:e.FUNC_ADD,[$e]:e.FUNC_SUBTRACT,[Je]:e.FUNC_REVERSE_SUBTRACT};H[Qe]=e.MIN,H[et]=e.MAX;const V={[tt]:e.ZERO,[nt]:e.ONE,[it]:e.SRC_COLOR,[at]:e.SRC_ALPHA,[ut]:e.SRC_ALPHA_SATURATE,[bt]:e.DST_COLOR,[ot]:e.DST_ALPHA,[rt]:e.ONE_MINUS_SRC_COLOR,[lt]:e.ONE_MINUS_SRC_ALPHA,[ct]:e.ONE_MINUS_DST_COLOR,[st]:e.ONE_MINUS_DST_ALPHA,[ht]:e.CONSTANT_COLOR,[dt]:e.ONE_MINUS_CONSTANT_COLOR,[mt]:e.CONSTANT_ALPHA,[ft]:e.ONE_MINUS_CONSTANT_ALPHA};function G(t,n,i,r,a,l,o,s,b,c){if(t!==We){if(!1===u&&(F(e.BLEND),u=!0),t===Ze)a=a||n,l=l||i,o=o||r,n===d&&a===p||(e.blendEquationSeparate(H[n],H[a]),d=n,p=a),i===m&&r===f&&l===g&&o===x||(e.blendFuncSeparate(V[i],V[r],V[l],V[o]),m=i,f=r,g=l,x=o),!1!==s.equals(v)&&b===_||(e.blendColor(s.r,s.g,s.b,b),v.copy(s),_=b),h=t,y=!1;else if(t!==h||c!==y){if(d===Ke&&p===Ke||(e.blendEquation(e.FUNC_ADD),d=Ke,p=Ke),c)switch(t){case je:e.blendFuncSeparate(e.ONE,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA);break;case Xe:e.blendFunc(e.ONE,e.ONE);break;case qe:e.blendFuncSeparate(e.ZERO,e.ONE_MINUS_SRC_COLOR,e.ZERO,e.ONE);break;case Ye:e.blendFuncSeparate(e.ZERO,e.SRC_COLOR,e.ZERO,e.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}else switch(t){case je:e.blendFuncSeparate(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA);break;case Xe:e.blendFunc(e.SRC_ALPHA,e.ONE);break;case qe:e.blendFuncSeparate(e.ZERO,e.ONE_MINUS_SRC_COLOR,e.ZERO,e.ONE);break;case Ye:e.blendFunc(e.ZERO,e.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}m=null,f=null,g=null,x=null,v.set(0,0,0),_=0,h=t,y=c}}else!0===u&&(B(e.BLEND),u=!1)}function W(t){S!==t&&(t?e.frontFace(e.CW):e.frontFace(e.CCW),S=t)}function j(t){t!==Ie?(F(e.CULL_FACE),t!==M&&(t===Ne?e.cullFace(e.BACK):t===ke?e.cullFace(e.FRONT):e.cullFace(e.FRONT_AND_BACK))):B(e.CULL_FACE),M=t}function X(t,n,i){t?(F(e.POLYGON_OFFSET_FILL),z===n&&E===i||(e.polygonOffset(n,i),z=n,E=i)):B(e.POLYGON_OFFSET_FILL)}return{buffers:{color:t,depth:n,stencil:i},enable:F,disable:B,bindFramebuffer:function(t,n){return o[t]!==n&&(e.bindFramebuffer(t,n),o[t]=n,t===e.DRAW_FRAMEBUFFER&&(o[e.FRAMEBUFFER]=n),t===e.FRAMEBUFFER&&(o[e.DRAW_FRAMEBUFFER]=n),!0)},drawBuffers:function(t,n){let i=b,r=!1;if(t){i=s.get(n),void 0===i&&(i=[],s.set(n,i));const a=t.textures;if(i.length!==a.length||i[0]!==e.COLOR_ATTACHMENT0){for(let t=0,n=a.length;t<n;t++)i[t]=e.COLOR_ATTACHMENT0+t;i.length=a.length,r=!0}}else i[0]!==e.BACK&&(i[0]=e.BACK,r=!0);r&&e.drawBuffers(i)},useProgram:function(t){return c!==t&&(e.useProgram(t),c=t,!0)},setBlending:G,setMaterial:function(r,a){r.side===Ge?B(e.CULL_FACE):F(e.CULL_FACE);let l=r.side===Ve;a&&(l=!l),W(l),r.blending===je&&!1===r.transparent?G(We):G(r.blending,r.blendEquation,r.blendSrc,r.blendDst,r.blendEquationAlpha,r.blendSrcAlpha,r.blendDstAlpha,r.blendColor,r.blendAlpha,r.premultipliedAlpha),n.setFunc(r.depthFunc),n.setTest(r.depthTest),n.setMask(r.depthWrite),t.setMask(r.colorWrite);const o=r.stencilWrite;i.setTest(o),o&&(i.setMask(r.stencilWriteMask),i.setFunc(r.stencilFunc,r.stencilRef,r.stencilFuncMask),i.setOp(r.stencilFail,r.stencilZFail,r.stencilZPass)),X(r.polygonOffset,r.polygonOffsetFactor,r.polygonOffsetUnits),!0===r.alphaToCoverage?F(e.SAMPLE_ALPHA_TO_COVERAGE):B(e.SAMPLE_ALPHA_TO_COVERAGE)},setFlipSided:W,setCullFace:j,setLineWidth:function(t){t!==w&&(A&&e.lineWidth(t),w=t)},setPolygonOffset:X,setScissorTest:function(t){t?F(e.SCISSOR_TEST):B(e.SCISSOR_TEST)},activeTexture:function(t){void 0===t&&(t=e.TEXTURE0+T-1),P!==t&&(e.activeTexture(t),P=t)},bindTexture:function(t,n,i){void 0===i&&(i=null===P?e.TEXTURE0+T-1:P);let r=L[i];void 0===r&&(r={type:void 0,texture:void 0},L[i]=r),r.type===t&&r.texture===n||(P!==i&&(e.activeTexture(i),P=i),e.bindTexture(t,n||O[t]),r.type=t,r.texture=n)},unbindTexture:function(){const t=L[P];void 0!==t&&void 0!==t.type&&(e.bindTexture(t.type,null),t.type=void 0,t.texture=void 0)},compressedTexImage2D:function(){try{e.compressedTexImage2D.apply(e,arguments)}catch(Sx){console.error("THREE.WebGLState:",Sx)}},compressedTexImage3D:function(){try{e.compressedTexImage3D.apply(e,arguments)}catch(Sx){console.error("THREE.WebGLState:",Sx)}},texImage2D:function(){try{e.texImage2D.apply(e,arguments)}catch(Sx){console.error("THREE.WebGLState:",Sx)}},texImage3D:function(){try{e.texImage3D.apply(e,arguments)}catch(Sx){console.error("THREE.WebGLState:",Sx)}},updateUBOMapping:function(t,n){let i=a.get(n);void 0===i&&(i=new WeakMap,a.set(n,i));let r=i.get(t);void 0===r&&(r=e.getUniformBlockIndex(n,t.name),i.set(t,r))},uniformBlockBinding:function(t,n){const i=a.get(n).get(t);r.get(n)!==i&&(e.uniformBlockBinding(n,i,t.__bindingPointIndex),r.set(n,i))},texStorage2D:function(){try{e.texStorage2D.apply(e,arguments)}catch(Sx){console.error("THREE.WebGLState:",Sx)}},texStorage3D:function(){try{e.texStorage3D.apply(e,arguments)}catch(Sx){console.error("THREE.WebGLState:",Sx)}},texSubImage2D:function(){try{e.texSubImage2D.apply(e,arguments)}catch(Sx){console.error("THREE.WebGLState:",Sx)}},texSubImage3D:function(){try{e.texSubImage3D.apply(e,arguments)}catch(Sx){console.error("THREE.WebGLState:",Sx)}},compressedTexSubImage2D:function(){try{e.compressedTexSubImage2D.apply(e,arguments)}catch(Sx){console.error("THREE.WebGLState:",Sx)}},compressedTexSubImage3D:function(){try{e.compressedTexSubImage3D.apply(e,arguments)}catch(Sx){console.error("THREE.WebGLState:",Sx)}},scissor:function(t){!1===k.equals(t)&&(e.scissor(t.x,t.y,t.z,t.w),k.copy(t))},viewport:function(t){!1===D.equals(t)&&(e.viewport(t.x,t.y,t.z,t.w),D.copy(t))},reset:function(){e.disable(e.BLEND),e.disable(e.CULL_FACE),e.disable(e.DEPTH_TEST),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SCISSOR_TEST),e.disable(e.STENCIL_TEST),e.disable(e.SAMPLE_ALPHA_TO_COVERAGE),e.blendEquation(e.FUNC_ADD),e.blendFunc(e.ONE,e.ZERO),e.blendFuncSeparate(e.ONE,e.ZERO,e.ONE,e.ZERO),e.blendColor(0,0,0,0),e.colorMask(!0,!0,!0,!0),e.clearColor(0,0,0,0),e.depthMask(!0),e.depthFunc(e.LESS),e.clearDepth(1),e.stencilMask(4294967295),e.stencilFunc(e.ALWAYS,0,4294967295),e.stencilOp(e.KEEP,e.KEEP,e.KEEP),e.clearStencil(0),e.cullFace(e.BACK),e.frontFace(e.CCW),e.polygonOffset(0,0),e.activeTexture(e.TEXTURE0),e.bindFramebuffer(e.FRAMEBUFFER,null),e.bindFramebuffer(e.DRAW_FRAMEBUFFER,null),e.bindFramebuffer(e.READ_FRAMEBUFFER,null),e.useProgram(null),e.lineWidth(1),e.scissor(0,0,e.canvas.width,e.canvas.height),e.viewport(0,0,e.canvas.width,e.canvas.height),l={},P=null,L={},o={},s=new WeakMap,b=[],c=null,u=!1,h=null,d=null,m=null,f=null,p=null,g=null,x=null,v=new Tl(0,0,0),_=0,y=!1,S=null,M=null,w=null,z=null,E=null,k.set(0,0,e.canvas.width,e.canvas.height),D.set(0,0,e.canvas.width,e.canvas.height),t.reset(),n.reset(),i.reset()}}}function Sc(e,t,n,i){const r=function(e){switch(e){case nn:case rn:return{byteLength:1,components:1};case ln:case an:case cn:return{byteLength:2,components:1};case un:case hn:return{byteLength:2,components:4};case sn:case on:case bn:return{byteLength:4,components:1};case mn:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${e}.`)}(i);switch(n){case fn:case xn:return e*t;case vn:return e*t*2;case Sn:case Mn:return e*t/r.components*r.byteLength;case wn:case zn:return e*t*2/r.components*r.byteLength;case pn:return e*t*3/r.components*r.byteLength;case gn:case Tn:return e*t*4/r.components*r.byteLength;case An:case Cn:return Math.floor((e+3)/4)*Math.floor((t+3)/4)*8;case Rn:case Pn:return Math.floor((e+3)/4)*Math.floor((t+3)/4)*16;case In:case kn:return Math.max(e,16)*Math.max(t,8)/4;case Ln:case Nn:return Math.max(e,8)*Math.max(t,8)/2;case Dn:case Un:return Math.floor((e+3)/4)*Math.floor((t+3)/4)*8;case On:case Fn:return Math.floor((e+3)/4)*Math.floor((t+3)/4)*16;case Bn:return Math.floor((e+4)/5)*Math.floor((t+3)/4)*16;case Hn:return Math.floor((e+4)/5)*Math.floor((t+4)/5)*16;case Vn:return Math.floor((e+5)/6)*Math.floor((t+4)/5)*16;case Gn:return Math.floor((e+5)/6)*Math.floor((t+5)/6)*16;case Wn:return Math.floor((e+7)/8)*Math.floor((t+4)/5)*16;case jn:return Math.floor((e+7)/8)*Math.floor((t+5)/6)*16;case Xn:return Math.floor((e+7)/8)*Math.floor((t+7)/8)*16;case qn:return Math.floor((e+9)/10)*Math.floor((t+4)/5)*16;case Yn:return Math.floor((e+9)/10)*Math.floor((t+5)/6)*16;case Zn:return Math.floor((e+9)/10)*Math.floor((t+7)/8)*16;case Kn:return Math.floor((e+9)/10)*Math.floor((t+9)/10)*16;case $n:return Math.floor((e+11)/12)*Math.floor((t+9)/10)*16;case Jn:return Math.floor((e+11)/12)*Math.floor((t+11)/12)*16;case Qn:case ei:case ti:return Math.ceil(e/4)*Math.ceil(t/4)*16;case ni:case ii:return Math.ceil(e/4)*Math.ceil(t/4)*8;case ri:case ai:return Math.ceil(e/4)*Math.ceil(t/4)*16}throw new Error(`Unable to determine texture byte length for ${n} format.`)}const Mc={contain:function(e,t){const n=e.image&&e.image.width?e.image.width/e.image.height:1;return n>t?(e.repeat.x=1,e.repeat.y=n/t,e.offset.x=0,e.offset.y=(1-e.repeat.y)/2):(e.repeat.x=t/n,e.repeat.y=1,e.offset.x=(1-e.repeat.x)/2,e.offset.y=0),e},cover:function(e,t){const n=e.image&&e.image.width?e.image.width/e.image.height:1;return n>t?(e.repeat.x=t/n,e.repeat.y=1,e.offset.x=(1-e.repeat.x)/2,e.offset.y=0):(e.repeat.x=1,e.repeat.y=n/t,e.offset.x=0,e.offset.y=(1-e.repeat.y)/2),e},fill:function(e){return e.repeat.x=1,e.repeat.y=1,e.offset.x=0,e.offset.y=0,e},getByteLength:Sc};function wc(e,t,n,i,r,a,l){const o=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,s="undefined"!==typeof navigator&&/OculusBrowser/g.test(navigator.userAgent),b=new Rr,c=new WeakMap;let u;const h=new WeakMap;let d=!1;try{d="undefined"!==typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(H){}function m(e,t){return d?new OffscreenCanvas(e,t):Dr("canvas")}function f(e,t,n){let i=1;const r=B(e);if((r.width>n||r.height>n)&&(i=n/Math.max(r.width,r.height)),i<1){if("undefined"!==typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!==typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!==typeof ImageBitmap&&e instanceof ImageBitmap||"undefined"!==typeof VideoFrame&&e instanceof VideoFrame){const n=Math.floor(i*r.width),a=Math.floor(i*r.height);void 0===u&&(u=m(n,a));const l=t?m(n,a):u;l.width=n,l.height=a;return l.getContext("2d").drawImage(e,0,0,n,a),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+r.width+"x"+r.height+") to ("+n+"x"+a+")."),l}return"data"in e&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+r.width+"x"+r.height+")."),e}return e}function p(e){return e.generateMipmaps&&e.minFilter!==Xt&&e.minFilter!==$t}function g(t){e.generateMipmap(t)}function x(n,i,r,a){let l=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(null!==n){if(void 0!==e[n])return e[n];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+n+"'")}let o=i;if(i===e.RED&&(r===e.FLOAT&&(o=e.R32F),r===e.HALF_FLOAT&&(o=e.R16F),r===e.UNSIGNED_BYTE&&(o=e.R8)),i===e.RED_INTEGER&&(r===e.UNSIGNED_BYTE&&(o=e.R8UI),r===e.UNSIGNED_SHORT&&(o=e.R16UI),r===e.UNSIGNED_INT&&(o=e.R32UI),r===e.BYTE&&(o=e.R8I),r===e.SHORT&&(o=e.R16I),r===e.INT&&(o=e.R32I)),i===e.RG&&(r===e.FLOAT&&(o=e.RG32F),r===e.HALF_FLOAT&&(o=e.RG16F),r===e.UNSIGNED_BYTE&&(o=e.RG8)),i===e.RG_INTEGER&&(r===e.UNSIGNED_BYTE&&(o=e.RG8UI),r===e.UNSIGNED_SHORT&&(o=e.RG16UI),r===e.UNSIGNED_INT&&(o=e.RG32UI),r===e.BYTE&&(o=e.RG8I),r===e.SHORT&&(o=e.RG16I),r===e.INT&&(o=e.RG32I)),i===e.RGB&&r===e.UNSIGNED_INT_5_9_9_9_REV&&(o=e.RGB9_E5),i===e.RGBA){const t=l?Pi:Wr.getTransfer(a);r===e.FLOAT&&(o=e.RGBA32F),r===e.HALF_FLOAT&&(o=e.RGBA16F),r===e.UNSIGNED_BYTE&&(o=t===Li?e.SRGB8_ALPHA8:e.RGBA8),r===e.UNSIGNED_SHORT_4_4_4_4&&(o=e.RGBA4),r===e.UNSIGNED_SHORT_5_5_5_1&&(o=e.RGB5_A1)}return o!==e.R16F&&o!==e.R32F&&o!==e.RG16F&&o!==e.RG32F&&o!==e.RGBA16F&&o!==e.RGBA32F||t.get("EXT_color_buffer_float"),o}function v(t,n){let i;return t?null===n||n===sn||n===dn?i=e.DEPTH24_STENCIL8:n===bn?i=e.DEPTH32F_STENCIL8:n===ln&&(i=e.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):null===n||n===sn||n===dn?i=e.DEPTH_COMPONENT24:n===bn?i=e.DEPTH_COMPONENT32F:n===ln&&(i=e.DEPTH_COMPONENT16),i}function _(e,t){return!0===p(e)||e.isFramebufferTexture&&e.minFilter!==Xt&&e.minFilter!==$t?Math.log2(Math.max(t.width,t.height))+1:void 0!==e.mipmaps&&e.mipmaps.length>0?e.mipmaps.length:e.isCompressedTexture&&Array.isArray(e.image)?t.mipmaps.length:1}function y(e){const t=e.target;t.removeEventListener("dispose",y),function(e){const t=i.get(e);if(void 0===t.__webglInit)return;const n=e.source,r=h.get(n);if(r){const i=r[t.__cacheKey];i.usedTimes--,0===i.usedTimes&&M(e),0===Object.keys(r).length&&h.delete(n)}i.remove(e)}(t),t.isVideoTexture&&c.delete(t)}function S(t){const n=t.target;n.removeEventListener("dispose",S),function(t){const n=i.get(t);t.depthTexture&&t.depthTexture.dispose();if(t.isWebGLCubeRenderTarget)for(let i=0;i<6;i++){if(Array.isArray(n.__webglFramebuffer[i]))for(let t=0;t<n.__webglFramebuffer[i].length;t++)e.deleteFramebuffer(n.__webglFramebuffer[i][t]);else e.deleteFramebuffer(n.__webglFramebuffer[i]);n.__webglDepthbuffer&&e.deleteRenderbuffer(n.__webglDepthbuffer[i])}else{if(Array.isArray(n.__webglFramebuffer))for(let t=0;t<n.__webglFramebuffer.length;t++)e.deleteFramebuffer(n.__webglFramebuffer[t]);else e.deleteFramebuffer(n.__webglFramebuffer);if(n.__webglDepthbuffer&&e.deleteRenderbuffer(n.__webglDepthbuffer),n.__webglMultisampledFramebuffer&&e.deleteFramebuffer(n.__webglMultisampledFramebuffer),n.__webglColorRenderbuffer)for(let t=0;t<n.__webglColorRenderbuffer.length;t++)n.__webglColorRenderbuffer[t]&&e.deleteRenderbuffer(n.__webglColorRenderbuffer[t]);n.__webglDepthRenderbuffer&&e.deleteRenderbuffer(n.__webglDepthRenderbuffer)}const r=t.textures;for(let a=0,o=r.length;a<o;a++){const t=i.get(r[a]);t.__webglTexture&&(e.deleteTexture(t.__webglTexture),l.memory.textures--),i.remove(r[a])}i.remove(t)}(n)}function M(t){const n=i.get(t);e.deleteTexture(n.__webglTexture);const r=t.source;delete h.get(r)[n.__cacheKey],l.memory.textures--}let w=0;function z(t,r){const a=i.get(t);if(t.isVideoTexture&&function(e){const t=l.render.frame;c.get(e)!==t&&(c.set(e,t),e.update())}(t),!1===t.isRenderTargetTexture&&t.version>0&&a.__version!==t.version){const e=t.image;if(null===e)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else{if(!1!==e.complete)return void P(a,t,r);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}n.bindTexture(e.TEXTURE_2D,a.__webglTexture,e.TEXTURE0+r)}const E={[Gt]:e.REPEAT,[Wt]:e.CLAMP_TO_EDGE,[jt]:e.MIRRORED_REPEAT},T={[Xt]:e.NEAREST,[qt]:e.NEAREST_MIPMAP_NEAREST,[Zt]:e.NEAREST_MIPMAP_LINEAR,[$t]:e.LINEAR,[Jt]:e.LINEAR_MIPMAP_NEAREST,[en]:e.LINEAR_MIPMAP_LINEAR},A={[$i]:e.NEVER,[rr]:e.ALWAYS,[Ji]:e.LESS,[er]:e.LEQUAL,[Qi]:e.EQUAL,[ir]:e.GEQUAL,[tr]:e.GREATER,[nr]:e.NOTEQUAL};function C(n,a){if(a.type!==bn||!1!==t.has("OES_texture_float_linear")||a.magFilter!==$t&&a.magFilter!==Jt&&a.magFilter!==Zt&&a.magFilter!==en&&a.minFilter!==$t&&a.minFilter!==Jt&&a.minFilter!==Zt&&a.minFilter!==en||console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),e.texParameteri(n,e.TEXTURE_WRAP_S,E[a.wrapS]),e.texParameteri(n,e.TEXTURE_WRAP_T,E[a.wrapT]),n!==e.TEXTURE_3D&&n!==e.TEXTURE_2D_ARRAY||e.texParameteri(n,e.TEXTURE_WRAP_R,E[a.wrapR]),e.texParameteri(n,e.TEXTURE_MAG_FILTER,T[a.magFilter]),e.texParameteri(n,e.TEXTURE_MIN_FILTER,T[a.minFilter]),a.compareFunction&&(e.texParameteri(n,e.TEXTURE_COMPARE_MODE,e.COMPARE_REF_TO_TEXTURE),e.texParameteri(n,e.TEXTURE_COMPARE_FUNC,A[a.compareFunction])),!0===t.has("EXT_texture_filter_anisotropic")){if(a.magFilter===Xt)return;if(a.minFilter!==Zt&&a.minFilter!==en)return;if(a.type===bn&&!1===t.has("OES_texture_float_linear"))return;if(a.anisotropy>1||i.get(a).__currentAnisotropy){const l=t.get("EXT_texture_filter_anisotropic");e.texParameterf(n,l.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(a.anisotropy,r.getMaxAnisotropy())),i.get(a).__currentAnisotropy=a.anisotropy}}}function R(t,n){let i=!1;void 0===t.__webglInit&&(t.__webglInit=!0,n.addEventListener("dispose",y));const r=n.source;let a=h.get(r);void 0===a&&(a={},h.set(r,a));const o=function(e){const t=[];return t.push(e.wrapS),t.push(e.wrapT),t.push(e.wrapR||0),t.push(e.magFilter),t.push(e.minFilter),t.push(e.anisotropy),t.push(e.internalFormat),t.push(e.format),t.push(e.type),t.push(e.generateMipmaps),t.push(e.premultiplyAlpha),t.push(e.flipY),t.push(e.unpackAlignment),t.push(e.colorSpace),t.join()}(n);if(o!==t.__cacheKey){void 0===a[o]&&(a[o]={texture:e.createTexture(),usedTimes:0},l.memory.textures++,i=!0),a[o].usedTimes++;const r=a[t.__cacheKey];void 0!==r&&(a[t.__cacheKey].usedTimes--,0===r.usedTimes&&M(n)),t.__cacheKey=o,t.__webglTexture=a[o].texture}return i}function P(t,l,o){let s=e.TEXTURE_2D;(l.isDataArrayTexture||l.isCompressedArrayTexture)&&(s=e.TEXTURE_2D_ARRAY),l.isData3DTexture&&(s=e.TEXTURE_3D);const b=R(t,l),c=l.source;n.bindTexture(s,t.__webglTexture,e.TEXTURE0+o);const u=i.get(c);if(c.version!==u.__version||!0===b){n.activeTexture(e.TEXTURE0+o);const t=Wr.getPrimaries(Wr.workingColorSpace),i=l.colorSpace===Ei?null:Wr.getPrimaries(l.colorSpace),h=l.colorSpace===Ei||t===i?e.NONE:e.BROWSER_DEFAULT_WEBGL;e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,l.flipY),e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,l.premultiplyAlpha),e.pixelStorei(e.UNPACK_ALIGNMENT,l.unpackAlignment),e.pixelStorei(e.UNPACK_COLORSPACE_CONVERSION_WEBGL,h);let d=f(l.image,!1,r.maxTextureSize);d=F(l,d);const m=a.convert(l.format,l.colorSpace),y=a.convert(l.type);let S,M=x(l.internalFormat,m,y,l.colorSpace,l.isVideoTexture);C(s,l);const w=l.mipmaps,z=!0!==l.isVideoTexture,E=void 0===u.__version||!0===b,T=c.dataReady,A=_(l,d);if(l.isDepthTexture)M=v(l.format===yn,l.type),E&&(z?n.texStorage2D(e.TEXTURE_2D,1,M,d.width,d.height):n.texImage2D(e.TEXTURE_2D,0,M,d.width,d.height,0,m,y,null));else if(l.isDataTexture)if(w.length>0){z&&E&&n.texStorage2D(e.TEXTURE_2D,A,M,w[0].width,w[0].height);for(let t=0,i=w.length;t<i;t++)S=w[t],z?T&&n.texSubImage2D(e.TEXTURE_2D,t,0,0,S.width,S.height,m,y,S.data):n.texImage2D(e.TEXTURE_2D,t,M,S.width,S.height,0,m,y,S.data);l.generateMipmaps=!1}else z?(E&&n.texStorage2D(e.TEXTURE_2D,A,M,d.width,d.height),T&&n.texSubImage2D(e.TEXTURE_2D,0,0,0,d.width,d.height,m,y,d.data)):n.texImage2D(e.TEXTURE_2D,0,M,d.width,d.height,0,m,y,d.data);else if(l.isCompressedTexture)if(l.isCompressedArrayTexture){z&&E&&n.texStorage3D(e.TEXTURE_2D_ARRAY,A,M,w[0].width,w[0].height,d.depth);for(let t=0,i=w.length;t<i;t++)if(S=w[t],l.format!==gn)if(null!==m)if(z){if(T)if(l.layerUpdates.size>0){const i=Sc(S.width,S.height,l.format,l.type);for(const r of l.layerUpdates){const a=S.data.subarray(r*i/S.data.BYTES_PER_ELEMENT,(r+1)*i/S.data.BYTES_PER_ELEMENT);n.compressedTexSubImage3D(e.TEXTURE_2D_ARRAY,t,0,0,r,S.width,S.height,1,m,a,0,0)}l.clearLayerUpdates()}else n.compressedTexSubImage3D(e.TEXTURE_2D_ARRAY,t,0,0,0,S.width,S.height,d.depth,m,S.data,0,0)}else n.compressedTexImage3D(e.TEXTURE_2D_ARRAY,t,M,S.width,S.height,d.depth,0,S.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else z?T&&n.texSubImage3D(e.TEXTURE_2D_ARRAY,t,0,0,0,S.width,S.height,d.depth,m,y,S.data):n.texImage3D(e.TEXTURE_2D_ARRAY,t,M,S.width,S.height,d.depth,0,m,y,S.data)}else{z&&E&&n.texStorage2D(e.TEXTURE_2D,A,M,w[0].width,w[0].height);for(let t=0,i=w.length;t<i;t++)S=w[t],l.format!==gn?null!==m?z?T&&n.compressedTexSubImage2D(e.TEXTURE_2D,t,0,0,S.width,S.height,m,S.data):n.compressedTexImage2D(e.TEXTURE_2D,t,M,S.width,S.height,0,S.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):z?T&&n.texSubImage2D(e.TEXTURE_2D,t,0,0,S.width,S.height,m,y,S.data):n.texImage2D(e.TEXTURE_2D,t,M,S.width,S.height,0,m,y,S.data)}else if(l.isDataArrayTexture)if(z){if(E&&n.texStorage3D(e.TEXTURE_2D_ARRAY,A,M,d.width,d.height,d.depth),T)if(l.layerUpdates.size>0){const t=Sc(d.width,d.height,l.format,l.type);for(const i of l.layerUpdates){const r=d.data.subarray(i*t/d.data.BYTES_PER_ELEMENT,(i+1)*t/d.data.BYTES_PER_ELEMENT);n.texSubImage3D(e.TEXTURE_2D_ARRAY,0,0,0,i,d.width,d.height,1,m,y,r)}l.clearLayerUpdates()}else n.texSubImage3D(e.TEXTURE_2D_ARRAY,0,0,0,0,d.width,d.height,d.depth,m,y,d.data)}else n.texImage3D(e.TEXTURE_2D_ARRAY,0,M,d.width,d.height,d.depth,0,m,y,d.data);else if(l.isData3DTexture)z?(E&&n.texStorage3D(e.TEXTURE_3D,A,M,d.width,d.height,d.depth),T&&n.texSubImage3D(e.TEXTURE_3D,0,0,0,0,d.width,d.height,d.depth,m,y,d.data)):n.texImage3D(e.TEXTURE_3D,0,M,d.width,d.height,d.depth,0,m,y,d.data);else if(l.isFramebufferTexture){if(E)if(z)n.texStorage2D(e.TEXTURE_2D,A,M,d.width,d.height);else{let t=d.width,i=d.height;for(let r=0;r<A;r++)n.texImage2D(e.TEXTURE_2D,r,M,t,i,0,m,y,null),t>>=1,i>>=1}}else if(w.length>0){if(z&&E){const t=B(w[0]);n.texStorage2D(e.TEXTURE_2D,A,M,t.width,t.height)}for(let t=0,i=w.length;t<i;t++)S=w[t],z?T&&n.texSubImage2D(e.TEXTURE_2D,t,0,0,m,y,S):n.texImage2D(e.TEXTURE_2D,t,M,m,y,S);l.generateMipmaps=!1}else if(z){if(E){const t=B(d);n.texStorage2D(e.TEXTURE_2D,A,M,t.width,t.height)}T&&n.texSubImage2D(e.TEXTURE_2D,0,0,0,m,y,d)}else n.texImage2D(e.TEXTURE_2D,0,M,m,y,d);p(l)&&g(s),u.__version=c.version,l.onUpdate&&l.onUpdate(l)}t.__version=l.version}function L(t,r,l,s,b,c){const u=a.convert(l.format,l.colorSpace),h=a.convert(l.type),d=x(l.internalFormat,u,h,l.colorSpace);if(!i.get(r).__hasExternalTextures){const t=Math.max(1,r.width>>c),i=Math.max(1,r.height>>c);b===e.TEXTURE_3D||b===e.TEXTURE_2D_ARRAY?n.texImage3D(b,c,d,t,i,r.depth,0,u,h,null):n.texImage2D(b,c,d,t,i,0,u,h,null)}n.bindFramebuffer(e.FRAMEBUFFER,t),O(r)?o.framebufferTexture2DMultisampleEXT(e.FRAMEBUFFER,s,b,i.get(l).__webglTexture,0,U(r)):(b===e.TEXTURE_2D||b>=e.TEXTURE_CUBE_MAP_POSITIVE_X&&b<=e.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&e.framebufferTexture2D(e.FRAMEBUFFER,s,b,i.get(l).__webglTexture,c),n.bindFramebuffer(e.FRAMEBUFFER,null)}function I(t,n,i){if(e.bindRenderbuffer(e.RENDERBUFFER,t),n.depthBuffer){const r=n.depthTexture,a=r&&r.isDepthTexture?r.type:null,l=v(n.stencilBuffer,a),s=n.stencilBuffer?e.DEPTH_STENCIL_ATTACHMENT:e.DEPTH_ATTACHMENT,b=U(n);O(n)?o.renderbufferStorageMultisampleEXT(e.RENDERBUFFER,b,l,n.width,n.height):i?e.renderbufferStorageMultisample(e.RENDERBUFFER,b,l,n.width,n.height):e.renderbufferStorage(e.RENDERBUFFER,l,n.width,n.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,s,e.RENDERBUFFER,t)}else{const t=n.textures;for(let r=0;r<t.length;r++){const l=t[r],s=a.convert(l.format,l.colorSpace),b=a.convert(l.type),c=x(l.internalFormat,s,b,l.colorSpace),u=U(n);i&&!1===O(n)?e.renderbufferStorageMultisample(e.RENDERBUFFER,u,c,n.width,n.height):O(n)?o.renderbufferStorageMultisampleEXT(e.RENDERBUFFER,u,c,n.width,n.height):e.renderbufferStorage(e.RENDERBUFFER,c,n.width,n.height)}}e.bindRenderbuffer(e.RENDERBUFFER,null)}function N(t){const r=i.get(t),a=!0===t.isWebGLCubeRenderTarget;if(r.__boundDepthTexture!==t.depthTexture){const e=t.depthTexture;if(r.__depthDisposeCallback&&r.__depthDisposeCallback(),e){const t=()=>{delete r.__boundDepthTexture,delete r.__depthDisposeCallback,e.removeEventListener("dispose",t)};e.addEventListener("dispose",t),r.__depthDisposeCallback=t}r.__boundDepthTexture=e}if(t.depthTexture&&!r.__autoAllocateDepthBuffer){if(a)throw new Error("target.depthTexture not supported in Cube render targets");!function(t,r){if(r&&r.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(e.FRAMEBUFFER,t),!r.depthTexture||!r.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");i.get(r.depthTexture).__webglTexture&&r.depthTexture.image.width===r.width&&r.depthTexture.image.height===r.height||(r.depthTexture.image.width=r.width,r.depthTexture.image.height=r.height,r.depthTexture.needsUpdate=!0),z(r.depthTexture,0);const a=i.get(r.depthTexture).__webglTexture,l=U(r);if(r.depthTexture.format===_n)O(r)?o.framebufferTexture2DMultisampleEXT(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.TEXTURE_2D,a,0,l):e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.TEXTURE_2D,a,0);else{if(r.depthTexture.format!==yn)throw new Error("Unknown depthTexture format");O(r)?o.framebufferTexture2DMultisampleEXT(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.TEXTURE_2D,a,0,l):e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.TEXTURE_2D,a,0)}}(r.__webglFramebuffer,t)}else if(a){r.__webglDepthbuffer=[];for(let i=0;i<6;i++)if(n.bindFramebuffer(e.FRAMEBUFFER,r.__webglFramebuffer[i]),void 0===r.__webglDepthbuffer[i])r.__webglDepthbuffer[i]=e.createRenderbuffer(),I(r.__webglDepthbuffer[i],t,!1);else{const n=t.stencilBuffer?e.DEPTH_STENCIL_ATTACHMENT:e.DEPTH_ATTACHMENT,a=r.__webglDepthbuffer[i];e.bindRenderbuffer(e.RENDERBUFFER,a),e.framebufferRenderbuffer(e.FRAMEBUFFER,n,e.RENDERBUFFER,a)}}else if(n.bindFramebuffer(e.FRAMEBUFFER,r.__webglFramebuffer),void 0===r.__webglDepthbuffer)r.__webglDepthbuffer=e.createRenderbuffer(),I(r.__webglDepthbuffer,t,!1);else{const n=t.stencilBuffer?e.DEPTH_STENCIL_ATTACHMENT:e.DEPTH_ATTACHMENT,i=r.__webglDepthbuffer;e.bindRenderbuffer(e.RENDERBUFFER,i),e.framebufferRenderbuffer(e.FRAMEBUFFER,n,e.RENDERBUFFER,i)}n.bindFramebuffer(e.FRAMEBUFFER,null)}const k=[],D=[];function U(e){return Math.min(r.maxSamples,e.samples)}function O(e){const n=i.get(e);return e.samples>0&&!0===t.has("WEBGL_multisampled_render_to_texture")&&!1!==n.__useRenderToTexture}function F(e,t){const n=e.colorSpace,i=e.format,r=e.type;return!0===e.isCompressedTexture||!0===e.isVideoTexture||n!==Ai&&n!==Ei&&(Wr.getTransfer(n)===Li?i===gn&&r===nn||console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",n)),t}function B(e){return"undefined"!==typeof HTMLImageElement&&e instanceof HTMLImageElement?(b.width=e.naturalWidth||e.width,b.height=e.naturalHeight||e.height):"undefined"!==typeof VideoFrame&&e instanceof VideoFrame?(b.width=e.displayWidth,b.height=e.displayHeight):(b.width=e.width,b.height=e.height),b}this.allocateTextureUnit=function(){const e=w;return e>=r.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+e+" texture units while this GPU supports only "+r.maxTextures),w+=1,e},this.resetTextureUnits=function(){w=0},this.setTexture2D=z,this.setTexture2DArray=function(t,r){const a=i.get(t);t.version>0&&a.__version!==t.version?P(a,t,r):n.bindTexture(e.TEXTURE_2D_ARRAY,a.__webglTexture,e.TEXTURE0+r)},this.setTexture3D=function(t,r){const a=i.get(t);t.version>0&&a.__version!==t.version?P(a,t,r):n.bindTexture(e.TEXTURE_3D,a.__webglTexture,e.TEXTURE0+r)},this.setTextureCube=function(t,l){const o=i.get(t);t.version>0&&o.__version!==t.version?function(t,l,o){if(6!==l.image.length)return;const s=R(t,l),b=l.source;n.bindTexture(e.TEXTURE_CUBE_MAP,t.__webglTexture,e.TEXTURE0+o);const c=i.get(b);if(b.version!==c.__version||!0===s){n.activeTexture(e.TEXTURE0+o);const t=Wr.getPrimaries(Wr.workingColorSpace),i=l.colorSpace===Ei?null:Wr.getPrimaries(l.colorSpace),u=l.colorSpace===Ei||t===i?e.NONE:e.BROWSER_DEFAULT_WEBGL;e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,l.flipY),e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,l.premultiplyAlpha),e.pixelStorei(e.UNPACK_ALIGNMENT,l.unpackAlignment),e.pixelStorei(e.UNPACK_COLORSPACE_CONVERSION_WEBGL,u);const h=l.isCompressedTexture||l.image[0].isCompressedTexture,d=l.image[0]&&l.image[0].isDataTexture,m=[];for(let e=0;e<6;e++)m[e]=h||d?d?l.image[e].image:l.image[e]:f(l.image[e],!0,r.maxCubemapSize),m[e]=F(l,m[e]);const v=m[0],y=a.convert(l.format,l.colorSpace),S=a.convert(l.type),M=x(l.internalFormat,y,S,l.colorSpace),w=!0!==l.isVideoTexture,z=void 0===c.__version||!0===s,E=b.dataReady;let T,A=_(l,v);if(C(e.TEXTURE_CUBE_MAP,l),h){w&&z&&n.texStorage2D(e.TEXTURE_CUBE_MAP,A,M,v.width,v.height);for(let t=0;t<6;t++){T=m[t].mipmaps;for(let i=0;i<T.length;i++){const r=T[i];l.format!==gn?null!==y?w?E&&n.compressedTexSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,i,0,0,r.width,r.height,y,r.data):n.compressedTexImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,i,M,r.width,r.height,0,r.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):w?E&&n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,i,0,0,r.width,r.height,y,S,r.data):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,i,M,r.width,r.height,0,y,S,r.data)}}}else{if(T=l.mipmaps,w&&z){T.length>0&&A++;const t=B(m[0]);n.texStorage2D(e.TEXTURE_CUBE_MAP,A,M,t.width,t.height)}for(let t=0;t<6;t++)if(d){w?E&&n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,0,0,m[t].width,m[t].height,y,S,m[t].data):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,M,m[t].width,m[t].height,0,y,S,m[t].data);for(let i=0;i<T.length;i++){const r=T[i].image[t].image;w?E&&n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,i+1,0,0,r.width,r.height,y,S,r.data):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,i+1,M,r.width,r.height,0,y,S,r.data)}}else{w?E&&n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,0,0,y,S,m[t]):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,M,y,S,m[t]);for(let i=0;i<T.length;i++){const r=T[i];w?E&&n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,i+1,0,0,y,S,r.image[t]):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,i+1,M,y,S,r.image[t])}}}p(l)&&g(e.TEXTURE_CUBE_MAP),c.__version=b.version,l.onUpdate&&l.onUpdate(l)}t.__version=l.version}(o,t,l):n.bindTexture(e.TEXTURE_CUBE_MAP,o.__webglTexture,e.TEXTURE0+l)},this.rebindTextures=function(t,n,r){const a=i.get(t);void 0!==n&&L(a.__webglFramebuffer,t,t.texture,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,0),void 0!==r&&N(t)},this.setupRenderTarget=function(t){const r=t.texture,o=i.get(t),s=i.get(r);t.addEventListener("dispose",S);const b=t.textures,c=!0===t.isWebGLCubeRenderTarget,u=b.length>1;if(u||(void 0===s.__webglTexture&&(s.__webglTexture=e.createTexture()),s.__version=r.version,l.memory.textures++),c){o.__webglFramebuffer=[];for(let t=0;t<6;t++)if(r.mipmaps&&r.mipmaps.length>0){o.__webglFramebuffer[t]=[];for(let n=0;n<r.mipmaps.length;n++)o.__webglFramebuffer[t][n]=e.createFramebuffer()}else o.__webglFramebuffer[t]=e.createFramebuffer()}else{if(r.mipmaps&&r.mipmaps.length>0){o.__webglFramebuffer=[];for(let t=0;t<r.mipmaps.length;t++)o.__webglFramebuffer[t]=e.createFramebuffer()}else o.__webglFramebuffer=e.createFramebuffer();if(u)for(let t=0,n=b.length;t<n;t++){const n=i.get(b[t]);void 0===n.__webglTexture&&(n.__webglTexture=e.createTexture(),l.memory.textures++)}if(t.samples>0&&!1===O(t)){o.__webglMultisampledFramebuffer=e.createFramebuffer(),o.__webglColorRenderbuffer=[],n.bindFramebuffer(e.FRAMEBUFFER,o.__webglMultisampledFramebuffer);for(let n=0;n<b.length;n++){const i=b[n];o.__webglColorRenderbuffer[n]=e.createRenderbuffer(),e.bindRenderbuffer(e.RENDERBUFFER,o.__webglColorRenderbuffer[n]);const r=a.convert(i.format,i.colorSpace),l=a.convert(i.type),s=x(i.internalFormat,r,l,i.colorSpace,!0===t.isXRRenderTarget),c=U(t);e.renderbufferStorageMultisample(e.RENDERBUFFER,c,s,t.width,t.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+n,e.RENDERBUFFER,o.__webglColorRenderbuffer[n])}e.bindRenderbuffer(e.RENDERBUFFER,null),t.depthBuffer&&(o.__webglDepthRenderbuffer=e.createRenderbuffer(),I(o.__webglDepthRenderbuffer,t,!0)),n.bindFramebuffer(e.FRAMEBUFFER,null)}}if(c){n.bindTexture(e.TEXTURE_CUBE_MAP,s.__webglTexture),C(e.TEXTURE_CUBE_MAP,r);for(let n=0;n<6;n++)if(r.mipmaps&&r.mipmaps.length>0)for(let i=0;i<r.mipmaps.length;i++)L(o.__webglFramebuffer[n][i],t,r,e.COLOR_ATTACHMENT0,e.TEXTURE_CUBE_MAP_POSITIVE_X+n,i);else L(o.__webglFramebuffer[n],t,r,e.COLOR_ATTACHMENT0,e.TEXTURE_CUBE_MAP_POSITIVE_X+n,0);p(r)&&g(e.TEXTURE_CUBE_MAP),n.unbindTexture()}else if(u){for(let r=0,a=b.length;r<a;r++){const a=b[r],l=i.get(a);n.bindTexture(e.TEXTURE_2D,l.__webglTexture),C(e.TEXTURE_2D,a),L(o.__webglFramebuffer,t,a,e.COLOR_ATTACHMENT0+r,e.TEXTURE_2D,0),p(a)&&g(e.TEXTURE_2D)}n.unbindTexture()}else{let i=e.TEXTURE_2D;if((t.isWebGL3DRenderTarget||t.isWebGLArrayRenderTarget)&&(i=t.isWebGL3DRenderTarget?e.TEXTURE_3D:e.TEXTURE_2D_ARRAY),n.bindTexture(i,s.__webglTexture),C(i,r),r.mipmaps&&r.mipmaps.length>0)for(let n=0;n<r.mipmaps.length;n++)L(o.__webglFramebuffer[n],t,r,e.COLOR_ATTACHMENT0,i,n);else L(o.__webglFramebuffer,t,r,e.COLOR_ATTACHMENT0,i,0);p(r)&&g(i),n.unbindTexture()}t.depthBuffer&&N(t)},this.updateRenderTargetMipmap=function(t){const r=t.textures;for(let a=0,l=r.length;a<l;a++){const l=r[a];if(p(l)){const r=t.isWebGLCubeRenderTarget?e.TEXTURE_CUBE_MAP:e.TEXTURE_2D,a=i.get(l).__webglTexture;n.bindTexture(r,a),g(r),n.unbindTexture()}}},this.updateMultisampleRenderTarget=function(t){if(t.samples>0)if(!1===O(t)){const r=t.textures,a=t.width,l=t.height;let o=e.COLOR_BUFFER_BIT;const b=t.stencilBuffer?e.DEPTH_STENCIL_ATTACHMENT:e.DEPTH_ATTACHMENT,c=i.get(t),u=r.length>1;if(u)for(let t=0;t<r.length;t++)n.bindFramebuffer(e.FRAMEBUFFER,c.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+t,e.RENDERBUFFER,null),n.bindFramebuffer(e.FRAMEBUFFER,c.__webglFramebuffer),e.framebufferTexture2D(e.DRAW_FRAMEBUFFER,e.COLOR_ATTACHMENT0+t,e.TEXTURE_2D,null,0);n.bindFramebuffer(e.READ_FRAMEBUFFER,c.__webglMultisampledFramebuffer),n.bindFramebuffer(e.DRAW_FRAMEBUFFER,c.__webglFramebuffer);for(let n=0;n<r.length;n++){if(t.resolveDepthBuffer&&(t.depthBuffer&&(o|=e.DEPTH_BUFFER_BIT),t.stencilBuffer&&t.resolveStencilBuffer&&(o|=e.STENCIL_BUFFER_BIT)),u){e.framebufferRenderbuffer(e.READ_FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.RENDERBUFFER,c.__webglColorRenderbuffer[n]);const t=i.get(r[n]).__webglTexture;e.framebufferTexture2D(e.DRAW_FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)}e.blitFramebuffer(0,0,a,l,0,0,a,l,o,e.NEAREST),!0===s&&(k.length=0,D.length=0,k.push(e.COLOR_ATTACHMENT0+n),t.depthBuffer&&!1===t.resolveDepthBuffer&&(k.push(b),D.push(b),e.invalidateFramebuffer(e.DRAW_FRAMEBUFFER,D)),e.invalidateFramebuffer(e.READ_FRAMEBUFFER,k))}if(n.bindFramebuffer(e.READ_FRAMEBUFFER,null),n.bindFramebuffer(e.DRAW_FRAMEBUFFER,null),u)for(let t=0;t<r.length;t++){n.bindFramebuffer(e.FRAMEBUFFER,c.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+t,e.RENDERBUFFER,c.__webglColorRenderbuffer[t]);const a=i.get(r[t]).__webglTexture;n.bindFramebuffer(e.FRAMEBUFFER,c.__webglFramebuffer),e.framebufferTexture2D(e.DRAW_FRAMEBUFFER,e.COLOR_ATTACHMENT0+t,e.TEXTURE_2D,a,0)}n.bindFramebuffer(e.DRAW_FRAMEBUFFER,c.__webglMultisampledFramebuffer)}else if(t.depthBuffer&&!1===t.resolveDepthBuffer&&s){const n=t.stencilBuffer?e.DEPTH_STENCIL_ATTACHMENT:e.DEPTH_ATTACHMENT;e.invalidateFramebuffer(e.DRAW_FRAMEBUFFER,[n])}},this.setupDepthRenderbuffer=N,this.setupFrameBufferTexture=L,this.useMultisampledRTT=O}function zc(e,t){return{convert:function(n){let i,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Ei;const a=Wr.getTransfer(r);if(n===nn)return e.UNSIGNED_BYTE;if(n===un)return e.UNSIGNED_SHORT_4_4_4_4;if(n===hn)return e.UNSIGNED_SHORT_5_5_5_1;if(n===mn)return e.UNSIGNED_INT_5_9_9_9_REV;if(n===rn)return e.BYTE;if(n===an)return e.SHORT;if(n===ln)return e.UNSIGNED_SHORT;if(n===on)return e.INT;if(n===sn)return e.UNSIGNED_INT;if(n===bn)return e.FLOAT;if(n===cn)return e.HALF_FLOAT;if(n===fn)return e.ALPHA;if(n===pn)return e.RGB;if(n===gn)return e.RGBA;if(n===xn)return e.LUMINANCE;if(n===vn)return e.LUMINANCE_ALPHA;if(n===_n)return e.DEPTH_COMPONENT;if(n===yn)return e.DEPTH_STENCIL;if(n===Sn)return e.RED;if(n===Mn)return e.RED_INTEGER;if(n===wn)return e.RG;if(n===zn)return e.RG_INTEGER;if(n===Tn)return e.RGBA_INTEGER;if(n===An||n===Cn||n===Rn||n===Pn)if(a===Li){if(i=t.get("WEBGL_compressed_texture_s3tc_srgb"),null===i)return null;if(n===An)return i.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===Cn)return i.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===Rn)return i.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===Pn)return i.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(i=t.get("WEBGL_compressed_texture_s3tc"),null===i)return null;if(n===An)return i.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===Cn)return i.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===Rn)return i.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===Pn)return i.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(n===Ln||n===In||n===Nn||n===kn){if(i=t.get("WEBGL_compressed_texture_pvrtc"),null===i)return null;if(n===Ln)return i.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===In)return i.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===Nn)return i.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===kn)return i.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(n===Dn||n===Un||n===On){if(i=t.get("WEBGL_compressed_texture_etc"),null===i)return null;if(n===Dn||n===Un)return a===Li?i.COMPRESSED_SRGB8_ETC2:i.COMPRESSED_RGB8_ETC2;if(n===On)return a===Li?i.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:i.COMPRESSED_RGBA8_ETC2_EAC}if(n===Fn||n===Bn||n===Hn||n===Vn||n===Gn||n===Wn||n===jn||n===Xn||n===qn||n===Yn||n===Zn||n===Kn||n===$n||n===Jn){if(i=t.get("WEBGL_compressed_texture_astc"),null===i)return null;if(n===Fn)return a===Li?i.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:i.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===Bn)return a===Li?i.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:i.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===Hn)return a===Li?i.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:i.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===Vn)return a===Li?i.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:i.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===Gn)return a===Li?i.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:i.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===Wn)return a===Li?i.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:i.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===jn)return a===Li?i.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:i.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===Xn)return a===Li?i.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:i.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===qn)return a===Li?i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:i.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===Yn)return a===Li?i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:i.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===Zn)return a===Li?i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:i.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===Kn)return a===Li?i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:i.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===$n)return a===Li?i.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:i.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===Jn)return a===Li?i.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:i.COMPRESSED_RGBA_ASTC_12x12_KHR}if(n===Qn||n===ei||n===ti){if(i=t.get("EXT_texture_compression_bptc"),null===i)return null;if(n===Qn)return a===Li?i.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:i.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(n===ei)return i.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(n===ti)return i.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}if(n===ni||n===ii||n===ri||n===ai){if(i=t.get("EXT_texture_compression_rgtc"),null===i)return null;if(n===Qn)return i.COMPRESSED_RED_RGTC1_EXT;if(n===ii)return i.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(n===ri)return i.COMPRESSED_RED_GREEN_RGTC2_EXT;if(n===ai)return i.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}return n===dn?e.UNSIGNED_INT_24_8:void 0!==e[n]?e[n]:null}}}class Ec extends Io{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];super(),this.isArrayCamera=!0,this.cameras=e}}class Tc extends ul{constructor(){super(),this.isGroup=!0,this.type="Group"}}const Ac={type:"move"};class Cc{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new Tc,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new Tc,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new sa,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new sa),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new Tc,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new sa,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new sa),this._grip}dispatchEvent(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),null!==this._hand&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(e,t,n){let i=null,r=null,a=null;const l=this._targetRay,o=this._grip,s=this._hand;if(e&&"visible-blurred"!==t.session.visibilityState){if(s&&e.hand){a=!0;for(const a of e.hand.values()){const e=t.getJointPose(a,n),i=this._getHandJoint(s,a);null!==e&&(i.matrix.fromArray(e.transform.matrix),i.matrix.decompose(i.position,i.rotation,i.scale),i.matrixWorldNeedsUpdate=!0,i.jointRadius=e.radius),i.visible=null!==e}const i=s.joints["index-finger-tip"],r=s.joints["thumb-tip"],l=i.position.distanceTo(r.position),o=.02,b=.005;s.inputState.pinching&&l>o+b?(s.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!s.inputState.pinching&&l<=o-b&&(s.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else null!==o&&e.gripSpace&&(r=t.getPose(e.gripSpace,n),null!==r&&(o.matrix.fromArray(r.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),o.matrixWorldNeedsUpdate=!0,r.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(r.linearVelocity)):o.hasLinearVelocity=!1,r.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(r.angularVelocity)):o.hasAngularVelocity=!1));null!==l&&(i=t.getPose(e.targetRaySpace,n),null===i&&null!==r&&(i=r),null!==i&&(l.matrix.fromArray(i.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),l.matrixWorldNeedsUpdate=!0,i.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(i.linearVelocity)):l.hasLinearVelocity=!1,i.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(i.angularVelocity)):l.hasAngularVelocity=!1,this.dispatchEvent(Ac)))}return null!==l&&(l.visible=null!==i),null!==o&&(o.visible=null!==r),null!==s&&(s.visible=null!==a),this}_getHandJoint(e,t){if(void 0===e.joints[t.jointName]){const n=new Tc;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}class Rc{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t,n){if(null===this.texture){const i=new Qr;e.properties.get(i).__webglTexture=t.texture,t.depthNear==n.depthNear&&t.depthFar==n.depthFar||(this.depthNear=t.depthNear,this.depthFar=t.depthFar),this.texture=i}}getMesh(e){if(null!==this.texture&&null===this.mesh){const t=e.cameras[0].viewport,n=new Ao({vertexShader:"\nvoid main() {\n\n\tgl_Position = vec4( position, 1.0 );\n\n}",fragmentShader:"\nuniform sampler2DArray depthColor;\nuniform float depthWidth;\nuniform float depthHeight;\n\nvoid main() {\n\n\tvec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );\n\n\tif ( coord.x >= 1.0 ) {\n\n\t\tgl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;\n\n\t} else {\n\n\t\tgl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;\n\n\t}\n\n}",uniforms:{depthColor:{value:this.texture},depthWidth:{value:t.z},depthHeight:{value:t.w}}});this.mesh=new yo(new qo(20,20),n)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class Pc extends xr{constructor(e,t){super();const n=this;let i=null,r=1,a=null,l="local-floor",o=1,s=null,b=null,c=null,u=null,h=null,d=null;const m=new Rc,f=t.getContextAttributes();let p=null,g=null;const x=[],v=[],_=new Rr;let y=null;const S=new Io;S.layers.enable(1),S.viewport=new ea;const M=new Io;M.layers.enable(2),M.viewport=new ea;const w=[S,M],z=new Ec;z.layers.enable(1),z.layers.enable(2);let E=null,T=null;function A(e){const t=v.indexOf(e.inputSource);if(-1===t)return;const n=x[t];void 0!==n&&(n.update(e.inputSource,e.frame,s||a),n.dispatchEvent({type:e.type,data:e.inputSource}))}function C(){i.removeEventListener("select",A),i.removeEventListener("selectstart",A),i.removeEventListener("selectend",A),i.removeEventListener("squeeze",A),i.removeEventListener("squeezestart",A),i.removeEventListener("squeezeend",A),i.removeEventListener("end",C),i.removeEventListener("inputsourceschange",R);for(let e=0;e<x.length;e++){const t=v[e];null!==t&&(v[e]=null,x[e].disconnect(t))}E=null,T=null,m.reset(),e.setRenderTarget(p),h=null,u=null,c=null,i=null,g=null,k.stop(),n.isPresenting=!1,e.setPixelRatio(y),e.setSize(_.width,_.height,!1),n.dispatchEvent({type:"sessionend"})}function R(e){for(let t=0;t<e.removed.length;t++){const n=e.removed[t],i=v.indexOf(n);i>=0&&(v[i]=null,x[i].disconnect(n))}for(let t=0;t<e.added.length;t++){const n=e.added[t];let i=v.indexOf(n);if(-1===i){for(let e=0;e<x.length;e++){if(e>=v.length){v.push(n),i=e;break}if(null===v[e]){v[e]=n,i=e;break}}if(-1===i)break}const r=x[i];r&&r.connect(n)}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(e){let t=x[e];return void 0===t&&(t=new Cc,x[e]=t),t.getTargetRaySpace()},this.getControllerGrip=function(e){let t=x[e];return void 0===t&&(t=new Cc,x[e]=t),t.getGripSpace()},this.getHand=function(e){let t=x[e];return void 0===t&&(t=new Cc,x[e]=t),t.getHandSpace()},this.setFramebufferScaleFactor=function(e){r=e,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(e){l=e,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return s||a},this.setReferenceSpace=function(e){s=e},this.getBaseLayer=function(){return null!==u?u:h},this.getBinding=function(){return c},this.getFrame=function(){return d},this.getSession=function(){return i},this.setSession=async function(b){if(i=b,null!==i){if(p=e.getRenderTarget(),i.addEventListener("select",A),i.addEventListener("selectstart",A),i.addEventListener("selectend",A),i.addEventListener("squeeze",A),i.addEventListener("squeezestart",A),i.addEventListener("squeezeend",A),i.addEventListener("end",C),i.addEventListener("inputsourceschange",R),!0!==f.xrCompatible&&await t.makeXRCompatible(),y=e.getPixelRatio(),e.getSize(_),void 0===i.renderState.layers){const n={antialias:f.antialias,alpha:!0,depth:f.depth,stencil:f.stencil,framebufferScaleFactor:r};h=new XRWebGLLayer(i,t,n),i.updateRenderState({baseLayer:h}),e.setPixelRatio(1),e.setSize(h.framebufferWidth,h.framebufferHeight,!1),g=new na(h.framebufferWidth,h.framebufferHeight,{format:gn,type:nn,colorSpace:e.outputColorSpace,stencilBuffer:f.stencil})}else{let n=null,a=null,l=null;f.depth&&(l=f.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,n=f.stencil?yn:_n,a=f.stencil?dn:sn);const o={colorFormat:t.RGBA8,depthFormat:l,scaleFactor:r};c=new XRWebGLBinding(i,t),u=c.createProjectionLayer(o),i.updateRenderState({layers:[u]}),e.setPixelRatio(1),e.setSize(u.textureWidth,u.textureHeight,!1),g=new na(u.textureWidth,u.textureHeight,{format:gn,type:nn,depthTexture:new Ps(u.textureWidth,u.textureHeight,a,void 0,void 0,void 0,void 0,void 0,void 0,n),stencilBuffer:f.stencil,colorSpace:e.outputColorSpace,samples:f.antialias?4:0,resolveDepthBuffer:!1===u.ignoreDepthValues})}g.isXRRenderTarget=!0,this.setFoveation(o),s=null,a=await i.requestReferenceSpace(l),k.setContext(i),k.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(null!==i)return i.environmentBlendMode},this.getDepthTexture=function(){return m.getDepthTexture()};const P=new sa,L=new sa;function I(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.copy(e.matrixWorld).invert()}this.updateCamera=function(e){if(null===i)return;let t=e.near,n=e.far;null!==m.texture&&(m.depthNear>0&&(t=m.depthNear),m.depthFar>0&&(n=m.depthFar)),z.near=M.near=S.near=t,z.far=M.far=S.far=n,E===z.near&&T===z.far||(i.updateRenderState({depthNear:z.near,depthFar:z.far}),E=z.near,T=z.far);const r=e.parent,a=z.cameras;I(z,r);for(let i=0;i<a.length;i++)I(a[i],r);2===a.length?function(e,t,n){P.setFromMatrixPosition(t.matrixWorld),L.setFromMatrixPosition(n.matrixWorld);const i=P.distanceTo(L),r=t.projectionMatrix.elements,a=n.projectionMatrix.elements,l=r[14]/(r[10]-1),o=r[14]/(r[10]+1),s=(r[9]+1)/r[5],b=(r[9]-1)/r[5],c=(r[8]-1)/r[0],u=(a[8]+1)/a[0],h=l*c,d=l*u,m=i/(-c+u),f=m*-c;if(t.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(f),e.translateZ(m),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.copy(e.matrixWorld).invert(),-1===r[10])e.projectionMatrix.copy(t.projectionMatrix),e.projectionMatrixInverse.copy(t.projectionMatrixInverse);else{const t=l+m,n=o+m,r=h-f,a=d+(i-f),c=s*o/n*t,u=b*o/n*t;e.projectionMatrix.makePerspective(r,a,c,u,t,n),e.projectionMatrixInverse.copy(e.projectionMatrix).invert()}}(z,S,M):z.projectionMatrix.copy(S.projectionMatrix),function(e,t,n){null===n?e.matrix.copy(t.matrixWorld):(e.matrix.copy(n.matrixWorld),e.matrix.invert(),e.matrix.multiply(t.matrixWorld));e.matrix.decompose(e.position,e.quaternion,e.scale),e.updateMatrixWorld(!0),e.projectionMatrix.copy(t.projectionMatrix),e.projectionMatrixInverse.copy(t.projectionMatrixInverse),e.isPerspectiveCamera&&(e.fov=2*Sr*Math.atan(1/e.projectionMatrix.elements[5]),e.zoom=1)}(e,z,r)},this.getCamera=function(){return z},this.getFoveation=function(){if(null!==u||null!==h)return o},this.setFoveation=function(e){o=e,null!==u&&(u.fixedFoveation=e),null!==h&&void 0!==h.fixedFoveation&&(h.fixedFoveation=e)},this.hasDepthSensing=function(){return null!==m.texture},this.getDepthSensingMesh=function(){return m.getMesh(z)};let N=null;const k=new jo;k.setAnimationLoop((function(t,r){if(b=r.getViewerPose(s||a),d=r,null!==b){const t=b.views;null!==h&&(e.setRenderTargetFramebuffer(g,h.framebuffer),e.setRenderTarget(g));let n=!1;t.length!==z.cameras.length&&(z.cameras.length=0,n=!0);for(let i=0;i<t.length;i++){const r=t[i];let a=null;if(null!==h)a=h.getViewport(r);else{const t=c.getViewSubImage(u,r);a=t.viewport,0===i&&(e.setRenderTargetTextures(g,t.colorTexture,u.ignoreDepthValues?void 0:t.depthStencilTexture),e.setRenderTarget(g))}let l=w[i];void 0===l&&(l=new Io,l.layers.enable(i),l.viewport=new ea,w[i]=l),l.matrix.fromArray(r.transform.matrix),l.matrix.decompose(l.position,l.quaternion,l.scale),l.projectionMatrix.fromArray(r.projectionMatrix),l.projectionMatrixInverse.copy(l.projectionMatrix).invert(),l.viewport.set(a.x,a.y,a.width,a.height),0===i&&(z.matrix.copy(l.matrix),z.matrix.decompose(z.position,z.quaternion,z.scale)),!0===n&&z.cameras.push(l)}const r=i.enabledFeatures;if(r&&r.includes("depth-sensing")){const n=c.getDepthInformation(t[0]);n&&n.isValid&&n.texture&&m.init(e,n,i.renderState)}}for(let e=0;e<x.length;e++){const t=v[e],n=x[e];null!==t&&void 0!==n&&n.update(t,r,s||a)}N&&N(t,r),r.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:r}),d=null})),this.setAnimationLoop=function(e){N=e},this.dispose=function(){}}}const Lc=new Ya,Ic=new Oa;function Nc(e,t){function n(e,t){!0===e.matrixAutoUpdate&&e.updateMatrix(),t.value.copy(e.matrix)}function i(e,i){e.opacity.value=i.opacity,i.color&&e.diffuse.value.copy(i.color),i.emissive&&e.emissive.value.copy(i.emissive).multiplyScalar(i.emissiveIntensity),i.map&&(e.map.value=i.map,n(i.map,e.mapTransform)),i.alphaMap&&(e.alphaMap.value=i.alphaMap,n(i.alphaMap,e.alphaMapTransform)),i.bumpMap&&(e.bumpMap.value=i.bumpMap,n(i.bumpMap,e.bumpMapTransform),e.bumpScale.value=i.bumpScale,i.side===Ve&&(e.bumpScale.value*=-1)),i.normalMap&&(e.normalMap.value=i.normalMap,n(i.normalMap,e.normalMapTransform),e.normalScale.value.copy(i.normalScale),i.side===Ve&&e.normalScale.value.negate()),i.displacementMap&&(e.displacementMap.value=i.displacementMap,n(i.displacementMap,e.displacementMapTransform),e.displacementScale.value=i.displacementScale,e.displacementBias.value=i.displacementBias),i.emissiveMap&&(e.emissiveMap.value=i.emissiveMap,n(i.emissiveMap,e.emissiveMapTransform)),i.specularMap&&(e.specularMap.value=i.specularMap,n(i.specularMap,e.specularMapTransform)),i.alphaTest>0&&(e.alphaTest.value=i.alphaTest);const r=t.get(i),a=r.envMap,l=r.envMapRotation;a&&(e.envMap.value=a,Lc.copy(l),Lc.x*=-1,Lc.y*=-1,Lc.z*=-1,a.isCubeTexture&&!1===a.isRenderTargetTexture&&(Lc.y*=-1,Lc.z*=-1),e.envMapRotation.value.setFromMatrix4(Ic.makeRotationFromEuler(Lc)),e.flipEnvMap.value=a.isCubeTexture&&!1===a.isRenderTargetTexture?-1:1,e.reflectivity.value=i.reflectivity,e.ior.value=i.ior,e.refractionRatio.value=i.refractionRatio),i.lightMap&&(e.lightMap.value=i.lightMap,e.lightMapIntensity.value=i.lightMapIntensity,n(i.lightMap,e.lightMapTransform)),i.aoMap&&(e.aoMap.value=i.aoMap,e.aoMapIntensity.value=i.aoMapIntensity,n(i.aoMap,e.aoMapTransform))}return{refreshFogUniforms:function(t,n){n.color.getRGB(t.fogColor.value,Eo(e)),n.isFog?(t.fogNear.value=n.near,t.fogFar.value=n.far):n.isFogExp2&&(t.fogDensity.value=n.density)},refreshMaterialUniforms:function(e,r,a,l,o){r.isMeshBasicMaterial||r.isMeshLambertMaterial?i(e,r):r.isMeshToonMaterial?(i(e,r),function(e,t){t.gradientMap&&(e.gradientMap.value=t.gradientMap)}(e,r)):r.isMeshPhongMaterial?(i(e,r),function(e,t){e.specular.value.copy(t.specular),e.shininess.value=Math.max(t.shininess,1e-4)}(e,r)):r.isMeshStandardMaterial?(i(e,r),function(e,t){e.metalness.value=t.metalness,t.metalnessMap&&(e.metalnessMap.value=t.metalnessMap,n(t.metalnessMap,e.metalnessMapTransform));e.roughness.value=t.roughness,t.roughnessMap&&(e.roughnessMap.value=t.roughnessMap,n(t.roughnessMap,e.roughnessMapTransform));t.envMap&&(e.envMapIntensity.value=t.envMapIntensity)}(e,r),r.isMeshPhysicalMaterial&&function(e,t,i){e.ior.value=t.ior,t.sheen>0&&(e.sheenColor.value.copy(t.sheenColor).multiplyScalar(t.sheen),e.sheenRoughness.value=t.sheenRoughness,t.sheenColorMap&&(e.sheenColorMap.value=t.sheenColorMap,n(t.sheenColorMap,e.sheenColorMapTransform)),t.sheenRoughnessMap&&(e.sheenRoughnessMap.value=t.sheenRoughnessMap,n(t.sheenRoughnessMap,e.sheenRoughnessMapTransform)));t.clearcoat>0&&(e.clearcoat.value=t.clearcoat,e.clearcoatRoughness.value=t.clearcoatRoughness,t.clearcoatMap&&(e.clearcoatMap.value=t.clearcoatMap,n(t.clearcoatMap,e.clearcoatMapTransform)),t.clearcoatRoughnessMap&&(e.clearcoatRoughnessMap.value=t.clearcoatRoughnessMap,n(t.clearcoatRoughnessMap,e.clearcoatRoughnessMapTransform)),t.clearcoatNormalMap&&(e.clearcoatNormalMap.value=t.clearcoatNormalMap,n(t.clearcoatNormalMap,e.clearcoatNormalMapTransform),e.clearcoatNormalScale.value.copy(t.clearcoatNormalScale),t.side===Ve&&e.clearcoatNormalScale.value.negate()));t.dispersion>0&&(e.dispersion.value=t.dispersion);t.iridescence>0&&(e.iridescence.value=t.iridescence,e.iridescenceIOR.value=t.iridescenceIOR,e.iridescenceThicknessMinimum.value=t.iridescenceThicknessRange[0],e.iridescenceThicknessMaximum.value=t.iridescenceThicknessRange[1],t.iridescenceMap&&(e.iridescenceMap.value=t.iridescenceMap,n(t.iridescenceMap,e.iridescenceMapTransform)),t.iridescenceThicknessMap&&(e.iridescenceThicknessMap.value=t.iridescenceThicknessMap,n(t.iridescenceThicknessMap,e.iridescenceThicknessMapTransform)));t.transmission>0&&(e.transmission.value=t.transmission,e.transmissionSamplerMap.value=i.texture,e.transmissionSamplerSize.value.set(i.width,i.height),t.transmissionMap&&(e.transmissionMap.value=t.transmissionMap,n(t.transmissionMap,e.transmissionMapTransform)),e.thickness.value=t.thickness,t.thicknessMap&&(e.thicknessMap.value=t.thicknessMap,n(t.thicknessMap,e.thicknessMapTransform)),e.attenuationDistance.value=t.attenuationDistance,e.attenuationColor.value.copy(t.attenuationColor));t.anisotropy>0&&(e.anisotropyVector.value.set(t.anisotropy*Math.cos(t.anisotropyRotation),t.anisotropy*Math.sin(t.anisotropyRotation)),t.anisotropyMap&&(e.anisotropyMap.value=t.anisotropyMap,n(t.anisotropyMap,e.anisotropyMapTransform)));e.specularIntensity.value=t.specularIntensity,e.specularColor.value.copy(t.specularColor),t.specularColorMap&&(e.specularColorMap.value=t.specularColorMap,n(t.specularColorMap,e.specularColorMapTransform));t.specularIntensityMap&&(e.specularIntensityMap.value=t.specularIntensityMap,n(t.specularIntensityMap,e.specularIntensityMapTransform))}(e,r,o)):r.isMeshMatcapMaterial?(i(e,r),function(e,t){t.matcap&&(e.matcap.value=t.matcap)}(e,r)):r.isMeshDepthMaterial?i(e,r):r.isMeshDistanceMaterial?(i(e,r),function(e,n){const i=t.get(n).light;e.referencePosition.value.setFromMatrixPosition(i.matrixWorld),e.nearDistance.value=i.shadow.camera.near,e.farDistance.value=i.shadow.camera.far}(e,r)):r.isMeshNormalMaterial?i(e,r):r.isLineBasicMaterial?(function(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,t.map&&(e.map.value=t.map,n(t.map,e.mapTransform))}(e,r),r.isLineDashedMaterial&&function(e,t){e.dashSize.value=t.dashSize,e.totalSize.value=t.dashSize+t.gapSize,e.scale.value=t.scale}(e,r)):r.isPointsMaterial?function(e,t,i,r){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.size.value=t.size*i,e.scale.value=.5*r,t.map&&(e.map.value=t.map,n(t.map,e.uvTransform));t.alphaMap&&(e.alphaMap.value=t.alphaMap,n(t.alphaMap,e.alphaMapTransform));t.alphaTest>0&&(e.alphaTest.value=t.alphaTest)}(e,r,a,l):r.isSpriteMaterial?function(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.rotation.value=t.rotation,t.map&&(e.map.value=t.map,n(t.map,e.mapTransform));t.alphaMap&&(e.alphaMap.value=t.alphaMap,n(t.alphaMap,e.alphaMapTransform));t.alphaTest>0&&(e.alphaTest.value=t.alphaTest)}(e,r):r.isShadowMaterial?(e.color.value.copy(r.color),e.opacity.value=r.opacity):r.isShaderMaterial&&(r.uniformsNeedUpdate=!1)}}}function kc(e,t,n,i){let r={},a={},l=[];const o=e.getParameter(e.MAX_UNIFORM_BUFFER_BINDINGS);function s(e,t,n,i){const r=e.value,a=t+"_"+n;if(void 0===i[a])return i[a]="number"===typeof r||"boolean"===typeof r?r:r.clone(),!0;{const e=i[a];if("number"===typeof r||"boolean"===typeof r){if(e!==r)return i[a]=r,!0}else if(!1===e.equals(r))return e.copy(r),!0}return!1}function b(e){const t={boundary:0,storage:0};return"number"===typeof e||"boolean"===typeof e?(t.boundary=4,t.storage=4):e.isVector2?(t.boundary=8,t.storage=8):e.isVector3||e.isColor?(t.boundary=16,t.storage=12):e.isVector4?(t.boundary=16,t.storage=16):e.isMatrix3?(t.boundary=48,t.storage=48):e.isMatrix4?(t.boundary=64,t.storage=64):e.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",e),t}function c(t){const n=t.target;n.removeEventListener("dispose",c);const i=l.indexOf(n.__bindingPointIndex);l.splice(i,1),e.deleteBuffer(r[n.id]),delete r[n.id],delete a[n.id]}return{bind:function(e,t){const n=t.program;i.uniformBlockBinding(e,n)},update:function(n,u){let h=r[n.id];void 0===h&&(!function(e){const t=e.uniforms;let n=0;const i=16;for(let a=0,l=t.length;a<l;a++){const e=Array.isArray(t[a])?t[a]:[t[a]];for(let t=0,r=e.length;t<r;t++){const r=e[t],a=Array.isArray(r.value)?r.value:[r.value];for(let e=0,t=a.length;e<t;e++){const t=b(a[e]),l=n%i,o=l%t.boundary,s=l+o;n+=o,0!==s&&i-s<t.storage&&(n+=i-s),r.__data=new Float32Array(t.storage/Float32Array.BYTES_PER_ELEMENT),r.__offset=n,n+=t.storage}}}const r=n%i;r>0&&(n+=i-r);e.__size=n,e.__cache={}}(n),h=function(t){const n=function(){for(let e=0;e<o;e++)if(-1===l.indexOf(e))return l.push(e),e;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}();t.__bindingPointIndex=n;const i=e.createBuffer(),r=t.__size,a=t.usage;return e.bindBuffer(e.UNIFORM_BUFFER,i),e.bufferData(e.UNIFORM_BUFFER,r,a),e.bindBuffer(e.UNIFORM_BUFFER,null),e.bindBufferBase(e.UNIFORM_BUFFER,n,i),i}(n),r[n.id]=h,n.addEventListener("dispose",c));const d=u.program;i.updateUBOMapping(n,d);const m=t.render.frame;a[n.id]!==m&&(!function(t){const n=r[t.id],i=t.uniforms,a=t.__cache;e.bindBuffer(e.UNIFORM_BUFFER,n);for(let r=0,l=i.length;r<l;r++){const t=Array.isArray(i[r])?i[r]:[i[r]];for(let n=0,i=t.length;n<i;n++){const i=t[n];if(!0===s(i,r,n,a)){const t=i.__offset,n=Array.isArray(i.value)?i.value:[i.value];let r=0;for(let a=0;a<n.length;a++){const l=n[a],o=b(l);"number"===typeof l||"boolean"===typeof l?(i.__data[0]=l,e.bufferSubData(e.UNIFORM_BUFFER,t+r,i.__data)):l.isMatrix3?(i.__data[0]=l.elements[0],i.__data[1]=l.elements[1],i.__data[2]=l.elements[2],i.__data[3]=0,i.__data[4]=l.elements[3],i.__data[5]=l.elements[4],i.__data[6]=l.elements[5],i.__data[7]=0,i.__data[8]=l.elements[6],i.__data[9]=l.elements[7],i.__data[10]=l.elements[8],i.__data[11]=0):(l.toArray(i.__data,r),r+=o.storage/Float32Array.BYTES_PER_ELEMENT)}e.bufferSubData(e.UNIFORM_BUFFER,t,i.__data)}}}e.bindBuffer(e.UNIFORM_BUFFER,null)}(n),a[n.id]=m)},dispose:function(){for(const t in r)e.deleteBuffer(r[t]);l=[],r={},a={}}}}class Dc{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{canvas:t=Ur(),context:n=null,depth:i=!0,stencil:r=!1,alpha:a=!1,antialias:l=!1,premultipliedAlpha:o=!0,preserveDrawingBuffer:s=!1,powerPreference:b="default",failIfMajorPerformanceCaveat:c=!1}=e;let u;if(this.isWebGLRenderer=!0,null!==n){if("undefined"!==typeof WebGLRenderingContext&&n instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");u=n.getContextAttributes().alpha}else u=a;const h=new Uint32Array(4),d=new Int32Array(4);let m=null,f=null;const p=[],g=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=Ti,this.toneMapping=Tt,this.toneMappingExposure=1;const x=this;let v=!1,_=0,y=0,S=null,M=-1,w=null;const z=new ea,E=new ea;let T=null;const A=new Tl(0);let C=0,R=t.width,P=t.height,L=1,I=null,N=null;const k=new ea(0,0,R,P),D=new ea(0,0,R,P);let U=!1;const O=new Wo;let F=!1,B=!1;const H=new Oa,V=new sa,G=new ea,W={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let j=!1;function X(){return null===S?L:1}let q,Y,Z,K,$,J,Q,ee,te,ne,ie,re,ae,le,oe,se,be,ce,ue,he,de,me,fe,pe,ge=n;function xe(e,n){return t.getContext(e,n)}try{const e={alpha:!0,depth:i,stencil:r,antialias:l,premultipliedAlpha:o,preserveDrawingBuffer:s,powerPreference:b,failIfMajorPerformanceCaveat:c};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${Re}`),t.addEventListener("webglcontextlost",ye,!1),t.addEventListener("webglcontextrestored",Se,!1),t.addEventListener("webglcontextcreationerror",Me,!1),null===ge){const t="webgl2";if(ge=xe(t,e),null===ge)throw xe(t)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(Sx){throw console.error("THREE.WebGLRenderer: "+Sx.message),Sx}function ve(){q=new zs(ge),q.init(),me=new zc(ge,q),Y=new is(ge,q,e,me),Z=new yc(ge),K=new As(ge),$=new oc,J=new wc(ge,q,Z,$,Y,me,K),Q=new as(x),ee=new ws(x),te=new Xo(ge),fe=new ts(ge,te),ne=new Es(ge,te,K,fe),ie=new Rs(ge,ne,te,K),ue=new Cs(ge,Y,J),se=new rs($),re=new lc(x,Q,ee,q,Y,fe,se),ae=new Nc(x,$),le=new uc,oe=new gc(q),ce=new es(x,Q,ee,Z,ie,u,o),be=new _c(x,ie,Y),pe=new kc(ge,K,Y,Z),he=new ns(ge,q,K),de=new Ts(ge,q,K),K.programs=re.programs,x.capabilities=Y,x.extensions=q,x.properties=$,x.renderLists=le,x.shadowMap=be,x.state=Z,x.info=K}ve();const _e=new Pc(x,ge);function ye(e){e.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),v=!0}function Se(){console.log("THREE.WebGLRenderer: Context Restored."),v=!1;const e=K.autoReset,t=be.enabled,n=be.autoUpdate,i=be.needsUpdate,r=be.type;ve(),K.autoReset=e,be.enabled=t,be.autoUpdate=n,be.needsUpdate=i,be.type=r}function Me(e){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",e.statusMessage)}function we(e){const t=e.target;t.removeEventListener("dispose",we),function(e){(function(e){const t=$.get(e).programs;void 0!==t&&(t.forEach((function(e){re.releaseProgram(e)})),e.isShaderMaterial&&re.releaseShaderCache(e))})(e),$.remove(e)}(t)}function ze(e,t,n){!0===e.transparent&&e.side===Ge&&!1===e.forceSinglePass?(e.side=Ve,e.needsUpdate=!0,De(e,t,n),e.side=He,e.needsUpdate=!0,De(e,t,n),e.side=Ge):De(e,t,n)}this.xr=_e,this.getContext=function(){return ge},this.getContextAttributes=function(){return ge.getContextAttributes()},this.forceContextLoss=function(){const e=q.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){const e=q.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return L},this.setPixelRatio=function(e){void 0!==e&&(L=e,this.setSize(R,P,!1))},this.getSize=function(e){return e.set(R,P)},this.setSize=function(e,n){let i=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];_e.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(R=e,P=n,t.width=Math.floor(e*L),t.height=Math.floor(n*L),!0===i&&(t.style.width=e+"px",t.style.height=n+"px"),this.setViewport(0,0,e,n))},this.getDrawingBufferSize=function(e){return e.set(R*L,P*L).floor()},this.setDrawingBufferSize=function(e,n,i){R=e,P=n,L=i,t.width=Math.floor(e*i),t.height=Math.floor(n*i),this.setViewport(0,0,e,n)},this.getCurrentViewport=function(e){return e.copy(z)},this.getViewport=function(e){return e.copy(k)},this.setViewport=function(e,t,n,i){e.isVector4?k.set(e.x,e.y,e.z,e.w):k.set(e,t,n,i),Z.viewport(z.copy(k).multiplyScalar(L).round())},this.getScissor=function(e){return e.copy(D)},this.setScissor=function(e,t,n,i){e.isVector4?D.set(e.x,e.y,e.z,e.w):D.set(e,t,n,i),Z.scissor(E.copy(D).multiplyScalar(L).round())},this.getScissorTest=function(){return U},this.setScissorTest=function(e){Z.setScissorTest(U=e)},this.setOpaqueSort=function(e){I=e},this.setTransparentSort=function(e){N=e},this.getClearColor=function(e){return e.copy(ce.getClearColor())},this.setClearColor=function(){ce.setClearColor.apply(ce,arguments)},this.getClearAlpha=function(){return ce.getClearAlpha()},this.setClearAlpha=function(){ce.setClearAlpha.apply(ce,arguments)},this.clear=function(){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],t=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],n=0;if(!(arguments.length>0&&void 0!==arguments[0])||arguments[0]){let e=!1;if(null!==S){const t=S.texture.format;e=t===Tn||t===zn||t===Mn}if(e){const e=S.texture.type,t=e===nn||e===sn||e===ln||e===dn||e===un||e===hn,n=ce.getClearColor(),i=ce.getClearAlpha(),r=n.r,a=n.g,l=n.b;t?(h[0]=r,h[1]=a,h[2]=l,h[3]=i,ge.clearBufferuiv(ge.COLOR,0,h)):(d[0]=r,d[1]=a,d[2]=l,d[3]=i,ge.clearBufferiv(ge.COLOR,0,d))}else n|=ge.COLOR_BUFFER_BIT}e&&(n|=ge.DEPTH_BUFFER_BIT),t&&(n|=ge.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),ge.clear(n)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",ye,!1),t.removeEventListener("webglcontextrestored",Se,!1),t.removeEventListener("webglcontextcreationerror",Me,!1),le.dispose(),oe.dispose(),$.dispose(),Q.dispose(),ee.dispose(),ie.dispose(),fe.dispose(),pe.dispose(),re.dispose(),_e.dispose(),_e.removeEventListener("sessionstart",Te),_e.removeEventListener("sessionend",Ae),Ce.stop()},this.renderBufferDirect=function(e,t,n,i,r,a){null===t&&(t=W);const l=r.isMesh&&r.matrixWorld.determinant()<0,o=function(e,t,n,i,r){!0!==t.isScene&&(t=W);J.resetTextureUnits();const a=t.fog,l=i.isMeshStandardMaterial?t.environment:null,o=null===S?x.outputColorSpace:!0===S.isXRRenderTarget?S.texture.colorSpace:Ai,s=(i.isMeshStandardMaterial?ee:Q).get(i.envMap||l),b=!0===i.vertexColors&&!!n.attributes.color&&4===n.attributes.color.itemSize,c=!!n.attributes.tangent&&(!!i.normalMap||i.anisotropy>0),u=!!n.morphAttributes.position,h=!!n.morphAttributes.normal,d=!!n.morphAttributes.color;let m=Tt;i.toneMapped&&(null!==S&&!0!==S.isXRRenderTarget||(m=x.toneMapping));const p=n.morphAttributes.position||n.morphAttributes.normal||n.morphAttributes.color,g=void 0!==p?p.length:0,v=$.get(i),_=f.state.lights;if(!0===F&&(!0===B||e!==w)){const t=e===w&&i.id===M;se.setState(i,e,t)}let y=!1;i.version===v.__version?v.needsLights&&v.lightsStateVersion!==_.state.version||v.outputColorSpace!==o||r.isBatchedMesh&&!1===v.batching?y=!0:r.isBatchedMesh||!0!==v.batching?r.isBatchedMesh&&!0===v.batchingColor&&null===r.colorTexture||r.isBatchedMesh&&!1===v.batchingColor&&null!==r.colorTexture||r.isInstancedMesh&&!1===v.instancing?y=!0:r.isInstancedMesh||!0!==v.instancing?r.isSkinnedMesh&&!1===v.skinning?y=!0:r.isSkinnedMesh||!0!==v.skinning?r.isInstancedMesh&&!0===v.instancingColor&&null===r.instanceColor||r.isInstancedMesh&&!1===v.instancingColor&&null!==r.instanceColor||r.isInstancedMesh&&!0===v.instancingMorph&&null===r.morphTexture||r.isInstancedMesh&&!1===v.instancingMorph&&null!==r.morphTexture||v.envMap!==s||!0===i.fog&&v.fog!==a?y=!0:void 0===v.numClippingPlanes||v.numClippingPlanes===se.numPlanes&&v.numIntersection===se.numIntersection?(v.vertexAlphas!==b||v.vertexTangents!==c||v.morphTargets!==u||v.morphNormals!==h||v.morphColors!==d||v.toneMapping!==m||v.morphTargetsCount!==g)&&(y=!0):y=!0:y=!0:y=!0:y=!0:(y=!0,v.__version=i.version);let z=v.currentProgram;!0===y&&(z=De(i,t,r));let E=!1,T=!1,A=!1;const C=z.getUniforms(),R=v.uniforms;Z.useProgram(z.program)&&(E=!0,T=!0,A=!0);i.id!==M&&(M=i.id,T=!0);if(E||w!==e){C.setValue(ge,"projectionMatrix",e.projectionMatrix),C.setValue(ge,"viewMatrix",e.matrixWorldInverse);const t=C.map.cameraPosition;void 0!==t&&t.setValue(ge,V.setFromMatrixPosition(e.matrixWorld)),Y.logarithmicDepthBuffer&&C.setValue(ge,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),(i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshLambertMaterial||i.isMeshBasicMaterial||i.isMeshStandardMaterial||i.isShaderMaterial)&&C.setValue(ge,"isOrthographic",!0===e.isOrthographicCamera),w!==e&&(w=e,T=!0,A=!0)}if(r.isSkinnedMesh){C.setOptional(ge,r,"bindMatrix"),C.setOptional(ge,r,"bindMatrixInverse");const e=r.skeleton;e&&(null===e.boneTexture&&e.computeBoneTexture(),C.setValue(ge,"boneTexture",e.boneTexture,J))}r.isBatchedMesh&&(C.setOptional(ge,r,"batchingTexture"),C.setValue(ge,"batchingTexture",r._matricesTexture,J),C.setOptional(ge,r,"batchingIdTexture"),C.setValue(ge,"batchingIdTexture",r._indirectTexture,J),C.setOptional(ge,r,"batchingColorTexture"),null!==r._colorsTexture&&C.setValue(ge,"batchingColorTexture",r._colorsTexture,J));const I=n.morphAttributes;void 0===I.position&&void 0===I.normal&&void 0===I.color||ue.update(r,n,z);(T||v.receiveShadow!==r.receiveShadow)&&(v.receiveShadow=r.receiveShadow,C.setValue(ge,"receiveShadow",r.receiveShadow));i.isMeshGouraudMaterial&&null!==i.envMap&&(R.envMap.value=s,R.flipEnvMap.value=s.isCubeTexture&&!1===s.isRenderTargetTexture?-1:1);i.isMeshStandardMaterial&&null===i.envMap&&null!==t.environment&&(R.envMapIntensity.value=t.environmentIntensity);T&&(C.setValue(ge,"toneMappingExposure",x.toneMappingExposure),v.needsLights&&(k=A,(N=R).ambientLightColor.needsUpdate=k,N.lightProbe.needsUpdate=k,N.directionalLights.needsUpdate=k,N.directionalLightShadows.needsUpdate=k,N.pointLights.needsUpdate=k,N.pointLightShadows.needsUpdate=k,N.spotLights.needsUpdate=k,N.spotLightShadows.needsUpdate=k,N.rectAreaLights.needsUpdate=k,N.hemisphereLights.needsUpdate=k),a&&!0===i.fog&&ae.refreshFogUniforms(R,a),ae.refreshMaterialUniforms(R,i,L,P,f.state.transmissionRenderTarget[e.id]),Db.upload(ge,Ue(v),R,J));var N,k;i.isShaderMaterial&&!0===i.uniformsNeedUpdate&&(Db.upload(ge,Ue(v),R,J),i.uniformsNeedUpdate=!1);i.isSpriteMaterial&&C.setValue(ge,"center",r.center);if(C.setValue(ge,"modelViewMatrix",r.modelViewMatrix),C.setValue(ge,"normalMatrix",r.normalMatrix),C.setValue(ge,"modelMatrix",r.matrixWorld),i.isShaderMaterial||i.isRawShaderMaterial){const e=i.uniformsGroups;for(let t=0,n=e.length;t<n;t++){const n=e[t];pe.update(n,z),pe.bind(n,z)}}return z}(e,t,n,i,r);Z.setMaterial(i,l);let s=n.index,b=1;if(!0===i.wireframe){if(s=ne.getWireframeAttribute(n),void 0===s)return;b=2}const c=n.drawRange,u=n.attributes.position;let h=c.start*b,d=(c.start+c.count)*b;null!==a&&(h=Math.max(h,a.start*b),d=Math.min(d,(a.start+a.count)*b)),null!==s?(h=Math.max(h,0),d=Math.min(d,s.count)):void 0!==u&&null!==u&&(h=Math.max(h,0),d=Math.min(d,u.count));const m=d-h;if(m<0||m===1/0)return;let p;fe.setup(r,i,o,n,s);let g=he;if(null!==s&&(p=te.get(s),g=de,g.setIndex(p)),r.isMesh)!0===i.wireframe?(Z.setLineWidth(i.wireframeLinewidth*X()),g.setMode(ge.LINES)):g.setMode(ge.TRIANGLES);else if(r.isLine){let e=i.linewidth;void 0===e&&(e=1),Z.setLineWidth(e*X()),r.isLineSegments?g.setMode(ge.LINES):r.isLineLoop?g.setMode(ge.LINE_LOOP):g.setMode(ge.LINE_STRIP)}else r.isPoints?g.setMode(ge.POINTS):r.isSprite&&g.setMode(ge.TRIANGLES);if(r.isBatchedMesh)if(null!==r._multiDrawInstances)g.renderMultiDrawInstances(r._multiDrawStarts,r._multiDrawCounts,r._multiDrawCount,r._multiDrawInstances);else if(q.get("WEBGL_multi_draw"))g.renderMultiDraw(r._multiDrawStarts,r._multiDrawCounts,r._multiDrawCount);else{const e=r._multiDrawStarts,t=r._multiDrawCounts,n=r._multiDrawCount,a=s?te.get(s).bytesPerElement:1,l=$.get(i).currentProgram.getUniforms();for(let i=0;i<n;i++)l.setValue(ge,"_gl_DrawID",i),g.render(e[i]/a,t[i])}else if(r.isInstancedMesh)g.renderInstances(h,m,r.count);else if(n.isInstancedBufferGeometry){const e=void 0!==n._maxInstanceCount?n._maxInstanceCount:1/0,t=Math.min(n.instanceCount,e);g.renderInstances(h,m,t)}else g.render(h,m)},this.compile=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;null===n&&(n=e),f=oe.get(n),f.init(t),g.push(f),n.traverseVisible((function(e){e.isLight&&e.layers.test(t.layers)&&(f.pushLight(e),e.castShadow&&f.pushShadow(e))})),e!==n&&e.traverseVisible((function(e){e.isLight&&e.layers.test(t.layers)&&(f.pushLight(e),e.castShadow&&f.pushShadow(e))})),f.setupLights();const i=new Set;return e.traverse((function(e){const t=e.material;if(t)if(Array.isArray(t))for(let r=0;r<t.length;r++){const a=t[r];ze(a,n,e),i.add(a)}else ze(t,n,e),i.add(t)})),g.pop(),f=null,i},this.compileAsync=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;const i=this.compile(e,t,n);return new Promise((t=>{function n(){i.forEach((function(e){$.get(e).currentProgram.isReady()&&i.delete(e)})),0!==i.size?setTimeout(n,10):t(e)}null!==q.get("KHR_parallel_shader_compile")?n():setTimeout(n,10)}))};let Ee=null;function Te(){Ce.stop()}function Ae(){Ce.start()}const Ce=new jo;function Pe(e,t,n,i){if(!1===e.visible)return;if(e.layers.test(t.layers))if(e.isGroup)n=e.renderOrder;else if(e.isLOD)!0===e.autoUpdate&&e.update(t);else if(e.isLight)f.pushLight(e),e.castShadow&&f.pushShadow(e);else if(e.isSprite){if(!e.frustumCulled||O.intersectsSprite(e)){i&&G.setFromMatrixPosition(e.matrixWorld).applyMatrix4(H);const t=ie.update(e),r=e.material;r.visible&&m.push(e,t,r,n,G.z,null)}}else if((e.isMesh||e.isLine||e.isPoints)&&(!e.frustumCulled||O.intersectsObject(e))){const t=ie.update(e),r=e.material;if(i&&(void 0!==e.boundingSphere?(null===e.boundingSphere&&e.computeBoundingSphere(),G.copy(e.boundingSphere.center)):(null===t.boundingSphere&&t.computeBoundingSphere(),G.copy(t.boundingSphere.center)),G.applyMatrix4(e.matrixWorld).applyMatrix4(H)),Array.isArray(r)){const i=t.groups;for(let a=0,l=i.length;a<l;a++){const l=i[a],o=r[l.materialIndex];o&&o.visible&&m.push(e,t,o,n,G.z,l)}}else r.visible&&m.push(e,t,r,n,G.z,null)}const r=e.children;for(let a=0,l=r.length;a<l;a++)Pe(r[a],t,n,i)}function Le(e,t,n,i){const r=e.opaque,a=e.transmissive,l=e.transparent;f.setupLightsView(n),!0===F&&se.setGlobalState(x.clippingPlanes,n),i&&Z.viewport(z.copy(i)),r.length>0&&Ne(r,t,n),a.length>0&&Ne(a,t,n),l.length>0&&Ne(l,t,n),Z.buffers.depth.setTest(!0),Z.buffers.depth.setMask(!0),Z.buffers.color.setMask(!0),Z.setPolygonOffset(!1)}function Ie(e,t,n,i){if(null!==(!0===n.isScene?n.overrideMaterial:null))return;void 0===f.state.transmissionRenderTarget[i.id]&&(f.state.transmissionRenderTarget[i.id]=new na(1,1,{generateMipmaps:!0,type:q.has("EXT_color_buffer_half_float")||q.has("EXT_color_buffer_float")?cn:nn,minFilter:en,samples:4,stencilBuffer:r,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:Wr.workingColorSpace}));const a=f.state.transmissionRenderTarget[i.id],l=i.viewport||z;a.setSize(l.z,l.w);const o=x.getRenderTarget();x.setRenderTarget(a),x.getClearColor(A),C=x.getClearAlpha(),C<1&&x.setClearColor(16777215,.5),x.clear(),j&&ce.render(n);const s=x.toneMapping;x.toneMapping=Tt;const b=i.viewport;if(void 0!==i.viewport&&(i.viewport=void 0),f.setupLightsView(i),!0===F&&se.setGlobalState(x.clippingPlanes,i),Ne(e,n,i),J.updateMultisampleRenderTarget(a),J.updateRenderTargetMipmap(a),!1===q.has("WEBGL_multisampled_render_to_texture")){let e=!1;for(let r=0,a=t.length;r<a;r++){const a=t[r],l=a.object,o=a.geometry,s=a.material,b=a.group;if(s.side===Ge&&l.layers.test(i.layers)){const t=s.side;s.side=Ve,s.needsUpdate=!0,ke(l,n,i,o,s,b),s.side=t,s.needsUpdate=!0,e=!0}}!0===e&&(J.updateMultisampleRenderTarget(a),J.updateRenderTargetMipmap(a))}x.setRenderTarget(o),x.setClearColor(A,C),void 0!==b&&(i.viewport=b),x.toneMapping=s}function Ne(e,t,n){const i=!0===t.isScene?t.overrideMaterial:null;for(let r=0,a=e.length;r<a;r++){const a=e[r],l=a.object,o=a.geometry,s=null===i?a.material:i,b=a.group;l.layers.test(n.layers)&&ke(l,t,n,o,s,b)}}function ke(e,t,n,i,r,a){e.onBeforeRender(x,t,n,i,r,a),e.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),r.onBeforeRender(x,t,n,i,e,a),!0===r.transparent&&r.side===Ge&&!1===r.forceSinglePass?(r.side=Ve,r.needsUpdate=!0,x.renderBufferDirect(n,t,i,r,e,a),r.side=He,r.needsUpdate=!0,x.renderBufferDirect(n,t,i,r,e,a),r.side=Ge):x.renderBufferDirect(n,t,i,r,e,a),e.onAfterRender(x,t,n,i,r,a)}function De(e,t,n){!0!==t.isScene&&(t=W);const i=$.get(e),r=f.state.lights,a=f.state.shadowsArray,l=r.state.version,o=re.getParameters(e,r.state,a,t,n),s=re.getProgramCacheKey(o);let b=i.programs;i.environment=e.isMeshStandardMaterial?t.environment:null,i.fog=t.fog,i.envMap=(e.isMeshStandardMaterial?ee:Q).get(e.envMap||i.environment),i.envMapRotation=null!==i.environment&&null===e.envMap?t.environmentRotation:e.envMapRotation,void 0===b&&(e.addEventListener("dispose",we),b=new Map,i.programs=b);let c=b.get(s);if(void 0!==c){if(i.currentProgram===c&&i.lightsStateVersion===l)return Oe(e,o),c}else o.uniforms=re.getUniforms(e),e.onBeforeCompile(o,x),c=re.acquireProgram(o,s),b.set(s,c),i.uniforms=o.uniforms;const u=i.uniforms;return(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(u.clippingPlanes=se.uniform),Oe(e,o),i.needsLights=function(e){return e.isMeshLambertMaterial||e.isMeshToonMaterial||e.isMeshPhongMaterial||e.isMeshStandardMaterial||e.isShadowMaterial||e.isShaderMaterial&&!0===e.lights}(e),i.lightsStateVersion=l,i.needsLights&&(u.ambientLightColor.value=r.state.ambient,u.lightProbe.value=r.state.probe,u.directionalLights.value=r.state.directional,u.directionalLightShadows.value=r.state.directionalShadow,u.spotLights.value=r.state.spot,u.spotLightShadows.value=r.state.spotShadow,u.rectAreaLights.value=r.state.rectArea,u.ltc_1.value=r.state.rectAreaLTC1,u.ltc_2.value=r.state.rectAreaLTC2,u.pointLights.value=r.state.point,u.pointLightShadows.value=r.state.pointShadow,u.hemisphereLights.value=r.state.hemi,u.directionalShadowMap.value=r.state.directionalShadowMap,u.directionalShadowMatrix.value=r.state.directionalShadowMatrix,u.spotShadowMap.value=r.state.spotShadowMap,u.spotLightMatrix.value=r.state.spotLightMatrix,u.spotLightMap.value=r.state.spotLightMap,u.pointShadowMap.value=r.state.pointShadowMap,u.pointShadowMatrix.value=r.state.pointShadowMatrix),i.currentProgram=c,i.uniformsList=null,c}function Ue(e){if(null===e.uniformsList){const t=e.currentProgram.getUniforms();e.uniformsList=Db.seqWithValue(t.seq,e.uniforms)}return e.uniformsList}function Oe(e,t){const n=$.get(e);n.outputColorSpace=t.outputColorSpace,n.batching=t.batching,n.batchingColor=t.batchingColor,n.instancing=t.instancing,n.instancingColor=t.instancingColor,n.instancingMorph=t.instancingMorph,n.skinning=t.skinning,n.morphTargets=t.morphTargets,n.morphNormals=t.morphNormals,n.morphColors=t.morphColors,n.morphTargetsCount=t.morphTargetsCount,n.numClippingPlanes=t.numClippingPlanes,n.numIntersection=t.numClipIntersection,n.vertexAlphas=t.vertexAlphas,n.vertexTangents=t.vertexTangents,n.toneMapping=t.toneMapping}Ce.setAnimationLoop((function(e){Ee&&Ee(e)})),"undefined"!==typeof self&&Ce.setContext(self),this.setAnimationLoop=function(e){Ee=e,_e.setAnimationLoop(e),null===e?Ce.stop():Ce.start()},_e.addEventListener("sessionstart",Te),_e.addEventListener("sessionend",Ae),this.render=function(e,t){if(void 0!==t&&!0!==t.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===v)return;if(!0===e.matrixWorldAutoUpdate&&e.updateMatrixWorld(),null===t.parent&&!0===t.matrixWorldAutoUpdate&&t.updateMatrixWorld(),!0===_e.enabled&&!0===_e.isPresenting&&(!0===_e.cameraAutoUpdate&&_e.updateCamera(t),t=_e.getCamera()),!0===e.isScene&&e.onBeforeRender(x,e,t,S),f=oe.get(e,g.length),f.init(t),g.push(f),H.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),O.setFromProjectionMatrix(H),B=this.localClippingEnabled,F=se.init(this.clippingPlanes,B),m=le.get(e,p.length),m.init(),p.push(m),!0===_e.enabled&&!0===_e.isPresenting){const e=x.xr.getDepthSensingMesh();null!==e&&Pe(e,t,-1/0,x.sortObjects)}Pe(e,t,0,x.sortObjects),m.finish(),!0===x.sortObjects&&m.sort(I,N),j=!1===_e.enabled||!1===_e.isPresenting||!1===_e.hasDepthSensing(),j&&ce.addToRenderList(m,e),this.info.render.frame++,!0===F&&se.beginShadows();const n=f.state.shadowsArray;be.render(n,e,t),!0===F&&se.endShadows(),!0===this.info.autoReset&&this.info.reset();const i=m.opaque,r=m.transmissive;if(f.setupLights(),t.isArrayCamera){const n=t.cameras;if(r.length>0)for(let t=0,a=n.length;t<a;t++){Ie(i,r,e,n[t])}j&&ce.render(e);for(let t=0,i=n.length;t<i;t++){const i=n[t];Le(m,e,i,i.viewport)}}else r.length>0&&Ie(i,r,e,t),j&&ce.render(e),Le(m,e,t);null!==S&&(J.updateMultisampleRenderTarget(S),J.updateRenderTargetMipmap(S)),!0===e.isScene&&e.onAfterRender(x,e,t),fe.resetDefaultState(),M=-1,w=null,g.pop(),g.length>0?(f=g[g.length-1],!0===F&&se.setGlobalState(x.clippingPlanes,f.state.camera)):f=null,p.pop(),m=p.length>0?p[p.length-1]:null},this.getActiveCubeFace=function(){return _},this.getActiveMipmapLevel=function(){return y},this.getRenderTarget=function(){return S},this.setRenderTargetTextures=function(e,t,n){$.get(e.texture).__webglTexture=t,$.get(e.depthTexture).__webglTexture=n;const i=$.get(e);i.__hasExternalTextures=!0,i.__autoAllocateDepthBuffer=void 0===n,i.__autoAllocateDepthBuffer||!0===q.has("WEBGL_multisampled_render_to_texture")&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),i.__useRenderToTexture=!1)},this.setRenderTargetFramebuffer=function(e,t){const n=$.get(e);n.__webglFramebuffer=t,n.__useDefaultFramebuffer=void 0===t},this.setRenderTarget=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;S=e,_=t,y=n;let i=!0,r=null,a=!1,l=!1;if(e){const o=$.get(e);if(void 0!==o.__useDefaultFramebuffer)Z.bindFramebuffer(ge.FRAMEBUFFER,null),i=!1;else if(void 0===o.__webglFramebuffer)J.setupRenderTarget(e);else if(o.__hasExternalTextures)J.rebindTextures(e,$.get(e.texture).__webglTexture,$.get(e.depthTexture).__webglTexture);else if(e.depthBuffer){const t=e.depthTexture;if(o.__boundDepthTexture!==t){if(null!==t&&$.has(t)&&(e.width!==t.image.width||e.height!==t.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");J.setupDepthRenderbuffer(e)}}const s=e.texture;(s.isData3DTexture||s.isDataArrayTexture||s.isCompressedArrayTexture)&&(l=!0);const b=$.get(e).__webglFramebuffer;e.isWebGLCubeRenderTarget?(r=Array.isArray(b[t])?b[t][n]:b[t],a=!0):r=e.samples>0&&!1===J.useMultisampledRTT(e)?$.get(e).__webglMultisampledFramebuffer:Array.isArray(b)?b[n]:b,z.copy(e.viewport),E.copy(e.scissor),T=e.scissorTest}else z.copy(k).multiplyScalar(L).floor(),E.copy(D).multiplyScalar(L).floor(),T=U;if(Z.bindFramebuffer(ge.FRAMEBUFFER,r)&&i&&Z.drawBuffers(e,r),Z.viewport(z),Z.scissor(E),Z.setScissorTest(T),a){const i=$.get(e.texture);ge.framebufferTexture2D(ge.FRAMEBUFFER,ge.COLOR_ATTACHMENT0,ge.TEXTURE_CUBE_MAP_POSITIVE_X+t,i.__webglTexture,n)}else if(l){const i=$.get(e.texture),r=t||0;ge.framebufferTextureLayer(ge.FRAMEBUFFER,ge.COLOR_ATTACHMENT0,i.__webglTexture,n||0,r)}M=-1},this.readRenderTargetPixels=function(e,t,n,i,r,a,l){if(!e||!e.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let o=$.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&void 0!==l&&(o=o[l]),o){Z.bindFramebuffer(ge.FRAMEBUFFER,o);try{const l=e.texture,o=l.format,s=l.type;if(!Y.textureFormatReadable(o))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");if(!Y.textureTypeReadable(s))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");t>=0&&t<=e.width-i&&n>=0&&n<=e.height-r&&ge.readPixels(t,n,i,r,me.convert(o),me.convert(s),a)}finally{const e=null!==S?$.get(S).__webglFramebuffer:null;Z.bindFramebuffer(ge.FRAMEBUFFER,e)}}},this.readRenderTargetPixelsAsync=async function(e,t,n,i,r,a,l){if(!e||!e.isWebGLRenderTarget)throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let o=$.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&void 0!==l&&(o=o[l]),o){Z.bindFramebuffer(ge.FRAMEBUFFER,o);try{const l=e.texture,o=l.format,s=l.type;if(!Y.textureFormatReadable(o))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!Y.textureTypeReadable(s))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");if(t>=0&&t<=e.width-i&&n>=0&&n<=e.height-r){const e=ge.createBuffer();ge.bindBuffer(ge.PIXEL_PACK_BUFFER,e),ge.bufferData(ge.PIXEL_PACK_BUFFER,a.byteLength,ge.STREAM_READ),ge.readPixels(t,n,i,r,me.convert(o),me.convert(s),0),ge.flush();const l=ge.fenceSync(ge.SYNC_GPU_COMMANDS_COMPLETE,0);await function(e,t,n){return new Promise((function(i,r){setTimeout((function a(){switch(e.clientWaitSync(t,e.SYNC_FLUSH_COMMANDS_BIT,0)){case e.WAIT_FAILED:r();break;case e.TIMEOUT_EXPIRED:setTimeout(a,n);break;default:i()}}),n)}))}(ge,l,4);try{ge.bindBuffer(ge.PIXEL_PACK_BUFFER,e),ge.getBufferSubData(ge.PIXEL_PACK_BUFFER,0,a)}finally{ge.deleteBuffer(e),ge.deleteSync(l)}return a}}finally{const e=null!==S?$.get(S).__webglFramebuffer:null;Z.bindFramebuffer(ge.FRAMEBUFFER,e)}}},this.copyFramebufferToTexture=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;!0!==e.isTexture&&(Fr("WebGLRenderer: copyFramebufferToTexture function signature has changed."),t=arguments[0]||null,e=arguments[1]);const i=Math.pow(2,-n),r=Math.floor(e.image.width*i),a=Math.floor(e.image.height*i),l=null!==t?t.x:0,o=null!==t?t.y:0;J.setTexture2D(e,0),ge.copyTexSubImage2D(ge.TEXTURE_2D,n,0,0,l,o,r,a),Z.unbindTexture()},this.copyTextureToTexture=function(e,t){let n,i,r,a,l,o,s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,b=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,c=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;!0!==e.isTexture&&(Fr("WebGLRenderer: copyTextureToTexture function signature has changed."),b=arguments[0]||null,e=arguments[1],t=arguments[2],c=arguments[3]||0,s=null),null!==s?(n=s.max.x-s.min.x,i=s.max.y-s.min.y,r=s.min.x,a=s.min.y):(n=e.image.width,i=e.image.height,r=0,a=0),null!==b?(l=b.x,o=b.y):(l=0,o=0);const u=me.convert(t.format),h=me.convert(t.type);J.setTexture2D(t,0),ge.pixelStorei(ge.UNPACK_FLIP_Y_WEBGL,t.flipY),ge.pixelStorei(ge.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t.premultiplyAlpha),ge.pixelStorei(ge.UNPACK_ALIGNMENT,t.unpackAlignment);const d=ge.getParameter(ge.UNPACK_ROW_LENGTH),m=ge.getParameter(ge.UNPACK_IMAGE_HEIGHT),f=ge.getParameter(ge.UNPACK_SKIP_PIXELS),p=ge.getParameter(ge.UNPACK_SKIP_ROWS),g=ge.getParameter(ge.UNPACK_SKIP_IMAGES),x=e.isCompressedTexture?e.mipmaps[c]:e.image;ge.pixelStorei(ge.UNPACK_ROW_LENGTH,x.width),ge.pixelStorei(ge.UNPACK_IMAGE_HEIGHT,x.height),ge.pixelStorei(ge.UNPACK_SKIP_PIXELS,r),ge.pixelStorei(ge.UNPACK_SKIP_ROWS,a),e.isDataTexture?ge.texSubImage2D(ge.TEXTURE_2D,c,l,o,n,i,u,h,x.data):e.isCompressedTexture?ge.compressedTexSubImage2D(ge.TEXTURE_2D,c,l,o,x.width,x.height,u,x.data):ge.texSubImage2D(ge.TEXTURE_2D,c,l,o,n,i,u,h,x),ge.pixelStorei(ge.UNPACK_ROW_LENGTH,d),ge.pixelStorei(ge.UNPACK_IMAGE_HEIGHT,m),ge.pixelStorei(ge.UNPACK_SKIP_PIXELS,f),ge.pixelStorei(ge.UNPACK_SKIP_ROWS,p),ge.pixelStorei(ge.UNPACK_SKIP_IMAGES,g),0===c&&t.generateMipmaps&&ge.generateMipmap(ge.TEXTURE_2D),Z.unbindTexture()},this.copyTextureToTexture3D=function(e,t){let n,i,r,a,l,o,s,b,c,u=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,h=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,d=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;!0!==e.isTexture&&(Fr("WebGLRenderer: copyTextureToTexture3D function signature has changed."),u=arguments[0]||null,h=arguments[1]||null,e=arguments[2],t=arguments[3],d=arguments[4]||0);const m=e.isCompressedTexture?e.mipmaps[d]:e.image;null!==u?(n=u.max.x-u.min.x,i=u.max.y-u.min.y,r=u.max.z-u.min.z,a=u.min.x,l=u.min.y,o=u.min.z):(n=m.width,i=m.height,r=m.depth,a=0,l=0,o=0),null!==h?(s=h.x,b=h.y,c=h.z):(s=0,b=0,c=0);const f=me.convert(t.format),p=me.convert(t.type);let g;if(t.isData3DTexture)J.setTexture3D(t,0),g=ge.TEXTURE_3D;else{if(!t.isDataArrayTexture&&!t.isCompressedArrayTexture)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");J.setTexture2DArray(t,0),g=ge.TEXTURE_2D_ARRAY}ge.pixelStorei(ge.UNPACK_FLIP_Y_WEBGL,t.flipY),ge.pixelStorei(ge.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t.premultiplyAlpha),ge.pixelStorei(ge.UNPACK_ALIGNMENT,t.unpackAlignment);const x=ge.getParameter(ge.UNPACK_ROW_LENGTH),v=ge.getParameter(ge.UNPACK_IMAGE_HEIGHT),_=ge.getParameter(ge.UNPACK_SKIP_PIXELS),y=ge.getParameter(ge.UNPACK_SKIP_ROWS),S=ge.getParameter(ge.UNPACK_SKIP_IMAGES);ge.pixelStorei(ge.UNPACK_ROW_LENGTH,m.width),ge.pixelStorei(ge.UNPACK_IMAGE_HEIGHT,m.height),ge.pixelStorei(ge.UNPACK_SKIP_PIXELS,a),ge.pixelStorei(ge.UNPACK_SKIP_ROWS,l),ge.pixelStorei(ge.UNPACK_SKIP_IMAGES,o),e.isDataTexture||e.isData3DTexture?ge.texSubImage3D(g,d,s,b,c,n,i,r,f,p,m.data):t.isCompressedArrayTexture?ge.compressedTexSubImage3D(g,d,s,b,c,n,i,r,f,m.data):ge.texSubImage3D(g,d,s,b,c,n,i,r,f,p,m),ge.pixelStorei(ge.UNPACK_ROW_LENGTH,x),ge.pixelStorei(ge.UNPACK_IMAGE_HEIGHT,v),ge.pixelStorei(ge.UNPACK_SKIP_PIXELS,_),ge.pixelStorei(ge.UNPACK_SKIP_ROWS,y),ge.pixelStorei(ge.UNPACK_SKIP_IMAGES,S),0===d&&t.generateMipmaps&&ge.generateMipmap(g),Z.unbindTexture()},this.initRenderTarget=function(e){void 0===$.get(e).__webglFramebuffer&&J.setupRenderTarget(e)},this.initTexture=function(e){e.isCubeTexture?J.setTextureCube(e,0):e.isData3DTexture?J.setTexture3D(e,0):e.isDataArrayTexture||e.isCompressedArrayTexture?J.setTexture2DArray(e,0):J.setTexture2D(e,0),Z.unbindTexture()},this.resetState=function(){_=0,y=0,S=null,Z.reset(),fe.reset()},"undefined"!==typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return pr}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=e===Ci?"display-p3":"srgb",t.unpackColorSpace=Wr.workingColorSpace===Ri?"display-p3":"srgb"}}class Uc{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:25e-5;this.isFogExp2=!0,this.name="",this.color=new Tl(e),this.density=t}clone(){return new Uc(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class Oc{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1e3;this.isFog=!0,this.name="",this.color=new Tl(e),this.near=t,this.far=n}clone(){return new Oc(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}class Fc extends ul{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new Ya,this.environmentIntensity=1,this.environmentRotation=new Ya,this.overrideMaterial=null,"undefined"!==typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return null!==this.fog&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),1!==this.backgroundIntensity&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),1!==this.environmentIntensity&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}}class Bc{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=void 0!==e?e.length/t:0,this.usage=ar,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.version=0,this.uuid=Mr()}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}get updateRange(){return Fr("THREE.InterleavedBuffer: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead."),this._updateRange}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,r=this.stride;i<r;i++)this.array[e+i]=t.array[n+i];return this}set(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.array.set(e,t),this}clone(e){void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=Mr()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=Mr()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Hc=new sa;class Vc{constructor(e,t,n){let i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)Hc.fromBufferAttribute(this,t),Hc.applyMatrix4(e),this.setXYZ(t,Hc.x,Hc.y,Hc.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Hc.fromBufferAttribute(this,t),Hc.applyNormalMatrix(e),this.setXYZ(t,Hc.x,Hc.y,Hc.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Hc.fromBufferAttribute(this,t),Hc.transformDirection(e),this.setXYZ(t,Hc.x,Hc.y,Hc.z);return this}getComponent(e,t){let n=this.array[e*this.data.stride+this.offset+t];return this.normalized&&(n=Tr(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=Ar(n,this.array)),this.data.array[e*this.data.stride+this.offset+t]=n,this}setX(e,t){return this.normalized&&(t=Ar(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=Ar(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=Ar(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=Ar(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=Tr(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=Tr(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=Tr(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=Tr(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=Ar(t,this.array),n=Ar(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=Ar(t,this.array),n=Ar(n,this.array),i=Ar(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e=e*this.data.stride+this.offset,this.normalized&&(t=Ar(t,this.array),n=Ar(n,this.array),i=Ar(i,this.array),r=Ar(r,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=r,this}clone(e){if(void 0===e){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const e=[];for(let t=0;t<this.count;t++){const n=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++)e.push(this.data.array[n+t])}return new Fl(new this.array.constructor(e),this.itemSize,this.normalized)}return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new Vc(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(void 0===e){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const e=[];for(let t=0;t<this.count;t++){const n=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++)e.push(this.data.array[n+t])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:e,normalized:this.normalized}}return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class Gc extends Rl{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new Tl(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let Wc;const jc=new sa,Xc=new sa,qc=new sa,Yc=new Rr,Zc=new Rr,Kc=new Oa,$c=new sa,Jc=new sa,Qc=new sa,eu=new Rr,tu=new Rr,nu=new Rr;class iu extends ul{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Gc;if(super(),this.isSprite=!0,this.type="Sprite",void 0===Wc){Wc=new no;const e=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),t=new Bc(e,5);Wc.setIndex([0,1,2,0,2,3]),Wc.setAttribute("position",new Vc(t,3,0,!1)),Wc.setAttribute("uv",new Vc(t,2,3,!1))}this.geometry=Wc,this.material=e,this.center=new Rr(.5,.5)}raycast(e,t){null===e.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Xc.setFromMatrixScale(this.matrixWorld),Kc.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),qc.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&Xc.multiplyScalar(-qc.z);const n=this.material.rotation;let i,r;0!==n&&(r=Math.cos(n),i=Math.sin(n));const a=this.center;ru($c.set(-.5,-.5,0),qc,a,Xc,i,r),ru(Jc.set(.5,-.5,0),qc,a,Xc,i,r),ru(Qc.set(.5,.5,0),qc,a,Xc,i,r),eu.set(0,0),tu.set(1,0),nu.set(1,1);let l=e.ray.intersectTriangle($c,Jc,Qc,!1,jc);if(null===l&&(ru(Jc.set(-.5,.5,0),qc,a,Xc,i,r),tu.set(0,1),l=e.ray.intersectTriangle($c,Qc,Jc,!1,jc),null===l))return;const o=e.ray.origin.distanceTo(jc);o<e.near||o>e.far||t.push({distance:o,point:jc.clone(),uv:Sl.getInterpolation(jc,$c,Jc,Qc,eu,tu,nu,new Rr),face:null,object:this})}copy(e,t){return super.copy(e,t),void 0!==e.center&&this.center.copy(e.center),this.material=e.material,this}}function ru(e,t,n,i,r,a){Yc.subVectors(e,n).addScalar(.5).multiply(i),void 0!==r?(Zc.x=a*Yc.x-r*Yc.y,Zc.y=r*Yc.x+a*Yc.y):Zc.copy(Yc),e.copy(t),e.x+=Zc.x,e.y+=Zc.y,e.applyMatrix4(Kc)}const au=new sa,lu=new sa;class ou extends ul{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let n=0,i=t.length;n<i;n++){const e=t[n];this.addLevel(e.object.clone(),e.distance,e.hysteresis)}return this.autoUpdate=e.autoUpdate,this}addLevel(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;t=Math.abs(t);const i=this.levels;let r;for(r=0;r<i.length&&!(t<i[r].distance);r++);return i.splice(r,0,{distance:t,hysteresis:n,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i;n++){let i=t[n].distance;if(t[n].object.visible&&(i-=i*t[n].hysteresis),e<i)break}return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){au.setFromMatrixPosition(this.matrixWorld);const n=e.ray.origin.distanceTo(au);this.getObjectForDistance(n).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){au.setFromMatrixPosition(e.matrixWorld),lu.setFromMatrixPosition(this.matrixWorld);const n=au.distanceTo(lu)/e.zoom;let i,r;for(t[0].object.visible=!0,i=1,r=t.length;i<r;i++){let e=t[i].distance;if(t[i].object.visible&&(e-=e*t[i].hysteresis),!(n>=e))break;t[i-1].object.visible=!1,t[i].object.visible=!0}for(this._currentLevel=i-1;i<r;i++)t[i].object.visible=!1}}toJSON(e){const t=super.toJSON(e);!1===this.autoUpdate&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let i=0,r=n.length;i<r;i++){const e=n[i];t.object.levels.push({object:e.object.uuid,distance:e.distance,hysteresis:e.hysteresis})}return t}}const su=new sa,bu=new ea,cu=new ea,uu=new sa,hu=new Oa,du=new sa,mu=new Ca,fu=new Oa,pu=new Ua;class gu extends yo{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=kt,this.bindMatrix=new Oa,this.bindMatrixInverse=new Oa,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;null===this.boundingBox&&(this.boundingBox=new ua),this.boundingBox.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,du),this.boundingBox.expandByPoint(du)}computeBoundingSphere(){const e=this.geometry;null===this.boundingSphere&&(this.boundingSphere=new Ca),this.boundingSphere.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,du),this.boundingSphere.expandByPoint(du)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){const n=this.material,i=this.matrixWorld;void 0!==n&&(null===this.boundingSphere&&this.computeBoundingSphere(),mu.copy(this.boundingSphere),mu.applyMatrix4(i),!1!==e.ray.intersectsSphere(mu)&&(fu.copy(i).invert(),pu.copy(e.ray).applyMatrix4(fu),null!==this.boundingBox&&!1===pu.intersectsBox(this.boundingBox)||this._computeIntersections(e,t,pu)))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,void 0===t&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new ea,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const i=1/e.manhattanLength();i!==1/0?e.multiplyScalar(i):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode===kt?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===Dt?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){const n=this.skeleton,i=this.geometry;bu.fromBufferAttribute(i.attributes.skinIndex,e),cu.fromBufferAttribute(i.attributes.skinWeight,e),su.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let r=0;r<4;r++){const e=cu.getComponent(r);if(0!==e){const i=bu.getComponent(r);hu.multiplyMatrices(n.bones[i].matrixWorld,n.boneInverses[i]),t.addScaledVector(uu.copy(su).applyMatrix4(hu),e)}}return t.applyMatrix4(this.bindMatrixInverse)}}class xu extends ul{constructor(){super(),this.isBone=!0,this.type="Bone"}}class vu extends Qr{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;super(null,arguments.length>5?arguments[5]:void 0,arguments.length>6?arguments[6]:void 0,arguments.length>7?arguments[7]:void 0,arguments.length>8&&void 0!==arguments[8]?arguments[8]:Xt,arguments.length>9&&void 0!==arguments[9]?arguments[9]:Xt,arguments.length>3?arguments[3]:void 0,arguments.length>4?arguments[4]:void 0,arguments.length>10?arguments[10]:void 0,arguments.length>11?arguments[11]:void 0),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const _u=new Oa,yu=new Oa;class Su{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];this.uuid=Mr(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(16*e.length),0===t.length)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let e=0,t=this.bones.length;e<t;e++)this.boneInverses.push(new Oa)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const t=new Oa;this.bones[e]&&t.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(t)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const t=this.bones[e];t&&t.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const t=this.bones[e];t&&(t.parent&&t.parent.isBone?(t.matrix.copy(t.parent.matrixWorld).invert(),t.matrix.multiply(t.matrixWorld)):t.matrix.copy(t.matrixWorld),t.matrix.decompose(t.position,t.quaternion,t.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let r=0,a=e.length;r<a;r++){const i=e[r]?e[r].matrixWorld:yu;_u.multiplyMatrices(i,t[r]),_u.toArray(n,16*r)}null!==i&&(i.needsUpdate=!0)}clone(){return new Su(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(4*this.bones.length);e=4*Math.ceil(e/4),e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new vu(t,e,e,gn,bn);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const n=this.bones[t];if(n.name===e)return n}}dispose(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){const i=e.bones[n];let r=t[i];void 0===r&&(console.warn("THREE.Skeleton: No bone found with UUID:",i),r=new xu),this.bones.push(r),this.boneInverses.push((new Oa).fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.6,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let i=0,r=t.length;i<r;i++){const r=t[i];e.bones.push(r.uuid);const a=n[i];e.boneInverses.push(a.toArray())}return e}}class Mu extends Fl{constructor(e,t,n){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const wu=new Oa,zu=new Oa,Eu=[],Tu=new ua,Au=new Oa,Cu=new yo,Ru=new Ca;class Pu extends yo{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new Mu(new Float32Array(16*n),16),this.instanceColor=null,this.morphTexture=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let i=0;i<n;i++)this.setMatrixAt(i,Au)}computeBoundingBox(){const e=this.geometry,t=this.count;null===this.boundingBox&&(this.boundingBox=new ua),null===e.boundingBox&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,wu),Tu.copy(e.boundingBox).applyMatrix4(wu),this.boundingBox.union(Tu)}computeBoundingSphere(){const e=this.geometry,t=this.count;null===this.boundingSphere&&(this.boundingSphere=new Ca),null===e.boundingSphere&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,wu),Ru.copy(e.boundingSphere).applyMatrix4(wu),this.boundingSphere.union(Ru)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),null!==e.morphTexture&&(this.morphTexture=e.morphTexture.clone()),null!==e.instanceColor&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,3*e)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,16*e)}getMorphAt(e,t){const n=t.morphTargetInfluences,i=this.morphTexture.source.data.data,r=e*(n.length+1)+1;for(let a=0;a<n.length;a++)n[a]=i[r+a]}raycast(e,t){const n=this.matrixWorld,i=this.count;if(Cu.geometry=this.geometry,Cu.material=this.material,void 0!==Cu.material&&(null===this.boundingSphere&&this.computeBoundingSphere(),Ru.copy(this.boundingSphere),Ru.applyMatrix4(n),!1!==e.ray.intersectsSphere(Ru)))for(let r=0;r<i;r++){this.getMatrixAt(r,wu),zu.multiplyMatrices(n,wu),Cu.matrixWorld=zu,Cu.raycast(e,Eu);for(let e=0,n=Eu.length;e<n;e++){const n=Eu[e];n.instanceId=r,n.object=this,t.push(n)}Eu.length=0}}setColorAt(e,t){null===this.instanceColor&&(this.instanceColor=new Mu(new Float32Array(3*this.instanceMatrix.count).fill(1),3)),t.toArray(this.instanceColor.array,3*e)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,16*e)}setMorphAt(e,t){const n=t.morphTargetInfluences,i=n.length+1;null===this.morphTexture&&(this.morphTexture=new vu(new Float32Array(i*this.count),i,this.count,Sn,bn));const r=this.morphTexture.source.data.data;let a=0;for(let s=0;s<n.length;s++)a+=n[s];const l=this.geometry.morphTargetsRelative?1:1-a,o=i*e;r[o]=l,r.set(n,o+1)}updateMorphTargets(){}dispose(){return this.dispatchEvent({type:"dispose"}),null!==this.morphTexture&&(this.morphTexture.dispose(),this.morphTexture=null),this}}function Lu(e,t){return e.z-t.z}function Iu(e,t){return t.z-e.z}class Nu{constructor(){this.index=0,this.pool=[],this.list=[]}push(e,t,n){const i=this.pool,r=this.list;this.index>=i.length&&i.push({start:-1,count:-1,z:-1,index:-1});const a=i[this.index];r.push(a),this.index++,a.start=e.start,a.count=e.count,a.z=t,a.index=n}reset(){this.list.length=0,this.index=0}}const ku=new Oa,Du=new Oa,Uu=new Oa,Ou=new Tl(1,1,1),Fu=new Oa,Bu=new Wo,Hu=new ua,Vu=new Ca,Gu=new sa,Wu=new sa,ju=new sa,Xu=new Nu,qu=new yo,Yu=[];function Zu(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const i=t.itemSize;if(e.isInterleavedBufferAttribute||e.array.constructor!==t.array.constructor){const r=e.count;for(let a=0;a<r;a++)for(let r=0;r<i;r++)t.setComponent(a+n,r,e.getComponent(a,r))}else t.array.set(e.array,n*i);t.needsUpdate=!0}class Ku extends yo{get maxInstanceCount(){return this._maxInstanceCount}constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:2*t,i=arguments.length>3?arguments[3]:void 0;super(new no,i),this.isBatchedMesh=!0,this.perObjectFrustumCulled=!0,this.sortObjects=!0,this.boundingBox=null,this.boundingSphere=null,this.customSort=null,this._drawInfo=[],this._drawRanges=[],this._reservedRanges=[],this._bounds=[],this._maxInstanceCount=e,this._maxVertexCount=t,this._maxIndexCount=n,this._geometryInitialized=!1,this._geometryCount=0,this._multiDrawCounts=new Int32Array(e),this._multiDrawStarts=new Int32Array(e),this._multiDrawCount=0,this._multiDrawInstances=null,this._visibilityChanged=!0,this._matricesTexture=null,this._indirectTexture=null,this._colorsTexture=null,this._initMatricesTexture(),this._initIndirectTexture()}_initMatricesTexture(){let e=Math.sqrt(4*this._maxInstanceCount);e=4*Math.ceil(e/4),e=Math.max(e,4);const t=new Float32Array(e*e*4),n=new vu(t,e,e,gn,bn);this._matricesTexture=n}_initIndirectTexture(){let e=Math.sqrt(this._maxInstanceCount);e=Math.ceil(e);const t=new Uint32Array(e*e),n=new vu(t,e,e,Mn,sn);this._indirectTexture=n}_initColorsTexture(){let e=Math.sqrt(this._maxInstanceCount);e=Math.ceil(e);const t=new Float32Array(e*e*4).fill(1),n=new vu(t,e,e,gn,bn);n.colorSpace=Wr.workingColorSpace,this._colorsTexture=n}_initializeGeometry(e){const t=this.geometry,n=this._maxVertexCount,i=this._maxIndexCount;if(!1===this._geometryInitialized){for(const i in e.attributes){const r=e.getAttribute(i),{array:a,itemSize:l,normalized:o}=r,s=new a.constructor(n*l),b=new Fl(s,l,o);t.setAttribute(i,b)}if(null!==e.getIndex()){const e=n>65535?new Uint32Array(i):new Uint16Array(i);t.setIndex(new Fl(e,1))}this._geometryInitialized=!0}}_validateGeometry(e){const t=this.geometry;if(Boolean(e.getIndex())!==Boolean(t.getIndex()))throw new Error('BatchedMesh: All geometries must consistently have "index".');for(const n in t.attributes){if(!e.hasAttribute(n))throw new Error(`BatchedMesh: Added geometry missing "${n}". All geometries must have consistent attributes.`);const i=e.getAttribute(n),r=t.getAttribute(n);if(i.itemSize!==r.itemSize||i.normalized!==r.normalized)throw new Error("BatchedMesh: All attributes must have a consistent itemSize and normalized value.")}}setCustomSort(e){return this.customSort=e,this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new ua);const e=this.boundingBox,t=this._drawInfo;e.makeEmpty();for(let n=0,i=t.length;n<i;n++){if(!1===t[n].active)continue;const i=t[n].geometryIndex;this.getMatrixAt(n,ku),this.getBoundingBoxAt(i,Hu).applyMatrix4(ku),e.union(Hu)}}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new Ca);const e=this.boundingSphere,t=this._drawInfo;e.makeEmpty();for(let n=0,i=t.length;n<i;n++){if(!1===t[n].active)continue;const i=t[n].geometryIndex;this.getMatrixAt(n,ku),this.getBoundingSphereAt(i,Vu).applyMatrix4(ku),e.union(Vu)}}addInstance(e){if(this._drawInfo.length>=this._maxInstanceCount)throw new Error("BatchedMesh: Maximum item count reached.");this._drawInfo.push({visible:!0,active:!0,geometryIndex:e});const t=this._drawInfo.length-1,n=this._matricesTexture,i=n.image.data;Uu.toArray(i,16*t),n.needsUpdate=!0;const r=this._colorsTexture;return r&&(Ou.toArray(r.image.data,4*t),r.needsUpdate=!0),t}addGeometry(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(this._initializeGeometry(e),this._validateGeometry(e),this._drawInfo.length>=this._maxInstanceCount)throw new Error("BatchedMesh: Maximum item count reached.");const i={vertexStart:-1,vertexCount:-1,indexStart:-1,indexCount:-1};let r=null;const a=this._reservedRanges,l=this._drawRanges,o=this._bounds;0!==this._geometryCount&&(r=a[a.length-1]),i.vertexCount=-1===t?e.getAttribute("position").count:t,i.vertexStart=null===r?0:r.vertexStart+r.vertexCount;const s=e.getIndex(),b=null!==s;if(b&&(i.indexCount=-1===n?s.count:n,i.indexStart=null===r?0:r.indexStart+r.indexCount),-1!==i.indexStart&&i.indexStart+i.indexCount>this._maxIndexCount||i.vertexStart+i.vertexCount>this._maxVertexCount)throw new Error("BatchedMesh: Reserved space request exceeds the maximum buffer size.");const c=this._geometryCount;return this._geometryCount++,a.push(i),l.push({start:b?i.indexStart:i.vertexStart,count:-1}),o.push({boxInitialized:!1,box:new ua,sphereInitialized:!1,sphere:new Ca}),this.setGeometryAt(c,e),c}setGeometryAt(e,t){if(e>=this._geometryCount)throw new Error("BatchedMesh: Maximum geometry count reached.");this._validateGeometry(t);const n=this.geometry,i=null!==n.getIndex(),r=n.getIndex(),a=t.getIndex(),l=this._reservedRanges[e];if(i&&a.count>l.indexCount||t.attributes.position.count>l.vertexCount)throw new Error("BatchedMesh: Reserved space not large enough for provided geometry.");const o=l.vertexStart,s=l.vertexCount;for(const h in n.attributes){const e=t.getAttribute(h),i=n.getAttribute(h);Zu(e,i,o);const r=e.itemSize;for(let t=e.count,n=s;t<n;t++){const e=o+t;for(let t=0;t<r;t++)i.setComponent(e,t,0)}i.needsUpdate=!0,i.addUpdateRange(o*r,s*r)}if(i){const e=l.indexStart;for(let t=0;t<a.count;t++)r.setX(e+t,o+a.getX(t));for(let t=a.count,n=l.indexCount;t<n;t++)r.setX(e+t,o);r.needsUpdate=!0,r.addUpdateRange(e,l.indexCount)}const b=this._bounds[e];null!==t.boundingBox?(b.box.copy(t.boundingBox),b.boxInitialized=!0):b.boxInitialized=!1,null!==t.boundingSphere?(b.sphere.copy(t.boundingSphere),b.sphereInitialized=!0):b.sphereInitialized=!1;const c=this._drawRanges[e],u=t.getAttribute("position");return c.count=i?a.count:u.count,this._visibilityChanged=!0,e}getBoundingBoxAt(e,t){if(e>=this._geometryCount)return null;const n=this._bounds[e],i=n.box,r=this.geometry;if(!1===n.boxInitialized){i.makeEmpty();const t=r.index,a=r.attributes.position,l=this._drawRanges[e];for(let e=l.start,n=l.start+l.count;e<n;e++){let n=e;t&&(n=t.getX(n)),i.expandByPoint(Gu.fromBufferAttribute(a,n))}n.boxInitialized=!0}return t.copy(i),t}getBoundingSphereAt(e,t){if(e>=this._geometryCount)return null;const n=this._bounds[e],i=n.sphere,r=this.geometry;if(!1===n.sphereInitialized){i.makeEmpty(),this.getBoundingBoxAt(e,Hu),Hu.getCenter(i.center);const t=r.index,a=r.attributes.position,l=this._drawRanges[e];let o=0;for(let e=l.start,n=l.start+l.count;e<n;e++){let n=e;t&&(n=t.getX(n)),Gu.fromBufferAttribute(a,n),o=Math.max(o,i.center.distanceToSquared(Gu))}i.radius=Math.sqrt(o),n.sphereInitialized=!0}return t.copy(i),t}setMatrixAt(e,t){const n=this._drawInfo,i=this._matricesTexture,r=this._matricesTexture.image.data;return e>=n.length||!1===n[e].active||(t.toArray(r,16*e),i.needsUpdate=!0),this}getMatrixAt(e,t){const n=this._drawInfo,i=this._matricesTexture.image.data;return e>=n.length||!1===n[e].active?null:t.fromArray(i,16*e)}setColorAt(e,t){null===this._colorsTexture&&this._initColorsTexture();const n=this._colorsTexture,i=this._colorsTexture.image.data,r=this._drawInfo;return e>=r.length||!1===r[e].active||(t.toArray(i,4*e),n.needsUpdate=!0),this}getColorAt(e,t){const n=this._colorsTexture.image.data,i=this._drawInfo;return e>=i.length||!1===i[e].active?null:t.fromArray(n,4*e)}setVisibleAt(e,t){const n=this._drawInfo;return e>=n.length||!1===n[e].active||n[e].visible===t||(n[e].visible=t,this._visibilityChanged=!0),this}getVisibleAt(e){const t=this._drawInfo;return!(e>=t.length||!1===t[e].active)&&t[e].visible}raycast(e,t){const n=this._drawInfo,i=this._drawRanges,r=this.matrixWorld,a=this.geometry;qu.material=this.material,qu.geometry.index=a.index,qu.geometry.attributes=a.attributes,null===qu.geometry.boundingBox&&(qu.geometry.boundingBox=new ua),null===qu.geometry.boundingSphere&&(qu.geometry.boundingSphere=new Ca);for(let l=0,o=n.length;l<o;l++){if(!n[l].visible||!n[l].active)continue;const a=n[l].geometryIndex,o=i[a];qu.geometry.setDrawRange(o.start,o.count),this.getMatrixAt(l,qu.matrixWorld).premultiply(r),this.getBoundingBoxAt(a,qu.geometry.boundingBox),this.getBoundingSphereAt(a,qu.geometry.boundingSphere),qu.raycast(e,Yu);for(let e=0,n=Yu.length;e<n;e++){const n=Yu[e];n.object=this,n.batchId=l,t.push(n)}Yu.length=0}qu.material=null,qu.geometry.index=null,qu.geometry.attributes={},qu.geometry.setDrawRange(0,1/0)}copy(e){return super.copy(e),this.geometry=e.geometry.clone(),this.perObjectFrustumCulled=e.perObjectFrustumCulled,this.sortObjects=e.sortObjects,this.boundingBox=null!==e.boundingBox?e.boundingBox.clone():null,this.boundingSphere=null!==e.boundingSphere?e.boundingSphere.clone():null,this._drawRanges=e._drawRanges.map((e=>({...e}))),this._reservedRanges=e._reservedRanges.map((e=>({...e}))),this._drawInfo=e._drawInfo.map((e=>({...e}))),this._bounds=e._bounds.map((e=>({boxInitialized:e.boxInitialized,box:e.box.clone(),sphereInitialized:e.sphereInitialized,sphere:e.sphere.clone()}))),this._maxInstanceCount=e._maxInstanceCount,this._maxVertexCount=e._maxVertexCount,this._maxIndexCount=e._maxIndexCount,this._geometryInitialized=e._geometryInitialized,this._geometryCount=e._geometryCount,this._multiDrawCounts=e._multiDrawCounts.slice(),this._multiDrawStarts=e._multiDrawStarts.slice(),this._matricesTexture=e._matricesTexture.clone(),this._matricesTexture.image.data=this._matricesTexture.image.data.slice(),null!==this._colorsTexture&&(this._colorsTexture=e._colorsTexture.clone(),this._colorsTexture.image.data=this._colorsTexture.image.data.slice()),this}dispose(){return this.geometry.dispose(),this._matricesTexture.dispose(),this._matricesTexture=null,this._indirectTexture.dispose(),this._indirectTexture=null,null!==this._colorsTexture&&(this._colorsTexture.dispose(),this._colorsTexture=null),this}onBeforeRender(e,t,n,i,r){if(!this._visibilityChanged&&!this.perObjectFrustumCulled&&!this.sortObjects)return;const a=i.getIndex(),l=null===a?1:a.array.BYTES_PER_ELEMENT,o=this._drawInfo,s=this._multiDrawStarts,b=this._multiDrawCounts,c=this._drawRanges,u=this.perObjectFrustumCulled,h=this._indirectTexture,d=h.image.data;u&&(Fu.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse).multiply(this.matrixWorld),Bu.setFromProjectionMatrix(Fu,e.coordinateSystem));let m=0;if(this.sortObjects){Du.copy(this.matrixWorld).invert(),Gu.setFromMatrixPosition(n.matrixWorld).applyMatrix4(Du),Wu.set(0,0,-1).transformDirection(n.matrixWorld).transformDirection(Du);for(let n=0,i=o.length;n<i;n++)if(o[n].visible&&o[n].active){const e=o[n].geometryIndex;this.getMatrixAt(n,ku),this.getBoundingSphereAt(e,Vu).applyMatrix4(ku);let t=!1;if(u&&(t=!Bu.intersectsSphere(Vu)),!t){const t=ju.subVectors(Vu.center,Gu).dot(Wu);Xu.push(c[e],t,n)}}const e=Xu.list,t=this.customSort;null===t?e.sort(r.transparent?Iu:Lu):t.call(this,e,n);for(let n=0,i=e.length;n<i;n++){const t=e[n];s[m]=t.start*l,b[m]=t.count,d[m]=t.index,m++}Xu.reset()}else for(let f=0,p=o.length;f<p;f++)if(o[f].visible&&o[f].active){const e=o[f].geometryIndex;let t=!1;if(u&&(this.getMatrixAt(f,ku),this.getBoundingSphereAt(e,Vu).applyMatrix4(ku),t=!Bu.intersectsSphere(Vu)),!t){const t=c[e];s[m]=t.start*l,b[m]=t.count,d[m]=f,m++}}h.needsUpdate=!0,this._multiDrawCount=m,this._visibilityChanged=!1}onBeforeShadow(e,t,n,i,r,a){this.onBeforeRender(e,null,i,r,a)}}class $u extends Rl{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Tl(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const Ju=new sa,Qu=new sa,eh=new Oa,th=new Ua,nh=new Ca,ih=new sa,rh=new sa;class ah extends ul{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new no,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new $u;super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(null===e.index){const t=e.attributes.position,n=[0];for(let e=1,i=t.count;e<i;e++)Ju.fromBufferAttribute(t,e-1),Qu.fromBufferAttribute(t,e),n[e]=n[e-1],n[e]+=Ju.distanceTo(Qu);e.setAttribute("lineDistance",new Yl(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Line.threshold,a=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),nh.copy(n.boundingSphere),nh.applyMatrix4(i),nh.radius+=r,!1===e.ray.intersectsSphere(nh))return;eh.copy(i).invert(),th.copy(e.ray).applyMatrix4(eh);const l=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=l*l,s=this.isLineSegments?2:1,b=n.index,c=n.attributes.position;if(null!==b){const n=Math.max(0,a.start),i=Math.min(b.count,a.start+a.count);for(let r=n,a=i-1;r<a;r+=s){const n=b.getX(r),i=b.getX(r+1),a=lh(this,e,th,o,n,i);a&&t.push(a)}if(this.isLineLoop){const r=b.getX(i-1),a=b.getX(n),l=lh(this,e,th,o,r,a);l&&t.push(l)}}else{const n=Math.max(0,a.start),i=Math.min(c.count,a.start+a.count);for(let r=n,a=i-1;r<a;r+=s){const n=lh(this,e,th,o,r,r+1);n&&t.push(n)}if(this.isLineLoop){const r=lh(this,e,th,o,i-1,n);r&&t.push(r)}}}updateMorphTargets(){const e=this.geometry.morphAttributes,t=Object.keys(e);if(t.length>0){const n=e[t[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=n.length;e<t;e++){const t=n[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[t]=e}}}}}function lh(e,t,n,i,r,a){const l=e.geometry.attributes.position;Ju.fromBufferAttribute(l,r),Qu.fromBufferAttribute(l,a);if(n.distanceSqToSegment(Ju,Qu,ih,rh)>i)return;ih.applyMatrix4(e.matrixWorld);const o=t.ray.origin.distanceTo(ih);return o<t.near||o>t.far?void 0:{distance:o,point:rh.clone().applyMatrix4(e.matrixWorld),index:r,face:null,faceIndex:null,object:e}}const oh=new sa,sh=new sa;class bh extends ah{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(null===e.index){const t=e.attributes.position,n=[];for(let e=0,i=t.count;e<i;e+=2)oh.fromBufferAttribute(t,e),sh.fromBufferAttribute(t,e+1),n[e]=0===e?0:n[e-1],n[e+1]=n[e]+oh.distanceTo(sh);e.setAttribute("lineDistance",new Yl(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class ch extends ah{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class uh extends Rl{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Tl(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const hh=new Oa,dh=new Ua,mh=new Ca,fh=new sa;class ph extends ul{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new no,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new uh;super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Points.threshold,a=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),mh.copy(n.boundingSphere),mh.applyMatrix4(i),mh.radius+=r,!1===e.ray.intersectsSphere(mh))return;hh.copy(i).invert(),dh.copy(e.ray).applyMatrix4(hh);const l=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=l*l,s=n.index,b=n.attributes.position;if(null!==s){for(let n=Math.max(0,a.start),r=Math.min(s.count,a.start+a.count);n<r;n++){const r=s.getX(n);fh.fromBufferAttribute(b,r),gh(fh,r,o,i,e,t,this)}}else{for(let n=Math.max(0,a.start),r=Math.min(b.count,a.start+a.count);n<r;n++)fh.fromBufferAttribute(b,n),gh(fh,n,o,i,e,t,this)}}updateMorphTargets(){const e=this.geometry.morphAttributes,t=Object.keys(e);if(t.length>0){const n=e[t[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=n.length;e<t;e++){const t=n[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[t]=e}}}}}function gh(e,t,n,i,r,a,l){const o=dh.distanceSqToPoint(e);if(o<n){const n=new sa;dh.closestPointToPoint(e,n),n.applyMatrix4(i);const s=r.ray.origin.distanceTo(n);if(s<r.near||s>r.far)return;a.push({distance:s,distanceToRay:Math.sqrt(o),point:n,index:t,face:null,object:l})}}class xh extends Qr{constructor(e,t,n,i,r,a,l,o,s){super(e,t,n,i,r,a,l,o,s),this.isVideoTexture=!0,this.minFilter=void 0!==a?a:$t,this.magFilter=void 0!==r?r:$t,this.generateMipmaps=!1;const b=this;"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback((function t(){b.needsUpdate=!0,e.requestVideoFrameCallback(t)}))}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;!1==="requestVideoFrameCallback"in e&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class vh extends Qr{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=Xt,this.minFilter=Xt,this.generateMipmaps=!1,this.needsUpdate=!0}}class _h extends Qr{constructor(e,t,n,i,r,a,l,o,s,b,c,u){super(null,a,l,o,s,b,i,r,c,u),this.isCompressedTexture=!0,this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class yh extends _h{constructor(e,t,n,i,r,a){super(e,t,n,r,a),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=Wt,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class Sh extends _h{constructor(e,t,n){super(void 0,e[0].width,e[0].height,t,n,Ot),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=e}}class Mh extends Qr{constructor(e,t,n,i,r,a,l,o,s){super(e,t,n,i,r,a,l,o,s),this.isCanvasTexture=!0,this.needsUpdate=!0}}class wh{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:5;const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:5;const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.arcLengthDivisions;if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),r=0;t.push(0);for(let a=1;a<=e;a++)n=this.getPoint(a/e),r+=n.distanceTo(i),t.push(r),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let i=0;const r=n.length;let a;a=t||e*n[r-1];let l,o=0,s=r-1;for(;o<=s;)if(i=Math.floor(o+(s-o)/2),l=n[i]-a,l<0)o=i+1;else{if(!(l>0)){s=i;break}s=i-1}if(i=s,n[i]===a)return i/(r-1);const b=n[i];return(i+(a-b)/(n[i+1]-b))/(r-1)}getTangent(e,t){const n=1e-4;let i=e-n,r=e+n;i<0&&(i=0),r>1&&(r=1);const a=this.getPoint(i),l=this.getPoint(r),o=t||(a.isVector2?new Rr:new sa);return o.copy(l).sub(a).normalize(),o}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new sa,i=[],r=[],a=[],l=new sa,o=new Oa;for(let h=0;h<=e;h++){const t=h/e;i[h]=this.getTangentAt(t,new sa)}r[0]=new sa,a[0]=new sa;let s=Number.MAX_VALUE;const b=Math.abs(i[0].x),c=Math.abs(i[0].y),u=Math.abs(i[0].z);b<=s&&(s=b,n.set(1,0,0)),c<=s&&(s=c,n.set(0,1,0)),u<=s&&n.set(0,0,1),l.crossVectors(i[0],n).normalize(),r[0].crossVectors(i[0],l),a[0].crossVectors(i[0],r[0]);for(let h=1;h<=e;h++){if(r[h]=r[h-1].clone(),a[h]=a[h-1].clone(),l.crossVectors(i[h-1],i[h]),l.length()>Number.EPSILON){l.normalize();const e=Math.acos(wr(i[h-1].dot(i[h]),-1,1));r[h].applyMatrix4(o.makeRotationAxis(l,e))}a[h].crossVectors(i[h],r[h])}if(!0===t){let t=Math.acos(wr(r[0].dot(r[e]),-1,1));t/=e,i[0].dot(l.crossVectors(r[0],r[e]))>0&&(t=-t);for(let n=1;n<=e;n++)r[n].applyMatrix4(o.makeRotationAxis(i[n],t*n)),a[n].crossVectors(i[n],r[n])}return{tangents:i,normals:r,binormals:a}}clone(){return(new this.constructor).copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class zh extends wh{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:2*Math.PI,l=arguments.length>6&&void 0!==arguments[6]&&arguments[6],o=arguments.length>7&&void 0!==arguments[7]?arguments[7]:0;super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=r,this.aEndAngle=a,this.aClockwise=l,this.aRotation=o}getPoint(e){const t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Rr,n=2*Math.PI;let i=this.aEndAngle-this.aStartAngle;const r=Math.abs(i)<Number.EPSILON;for(;i<0;)i+=n;for(;i>n;)i-=n;i<Number.EPSILON&&(i=r?0:n),!0!==this.aClockwise||r||(i===n?i=-n:i-=n);const a=this.aStartAngle+e*i;let l=this.aX+this.xRadius*Math.cos(a),o=this.aY+this.yRadius*Math.sin(a);if(0!==this.aRotation){const e=Math.cos(this.aRotation),t=Math.sin(this.aRotation),n=l-this.aX,i=o-this.aY;l=n*e-i*t+this.aX,o=n*t+i*e+this.aY}return t.set(l,o)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class Eh extends zh{constructor(e,t,n,i,r,a){super(e,t,n,n,i,r,a),this.isArcCurve=!0,this.type="ArcCurve"}}function Th(){let e=0,t=0,n=0,i=0;function r(r,a,l,o){e=r,t=l,n=-3*r+3*a-2*l-o,i=2*r-2*a+l+o}return{initCatmullRom:function(e,t,n,i,a){r(t,n,a*(n-e),a*(i-t))},initNonuniformCatmullRom:function(e,t,n,i,a,l,o){let s=(t-e)/a-(n-e)/(a+l)+(n-t)/l,b=(n-t)/l-(i-t)/(l+o)+(i-n)/o;s*=l,b*=l,r(t,n,s,b)},calc:function(r){const a=r*r;return e+t*r+n*a+i*(a*r)}}}const Ah=new sa,Ch=new Th,Rh=new Th,Ph=new Th;class Lh extends wh{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"centripetal",i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e){const t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new sa,n=this.points,i=n.length,r=(i-(this.closed?0:1))*e;let a,l,o=Math.floor(r),s=r-o;this.closed?o+=o>0?0:(Math.floor(Math.abs(o)/i)+1)*i:0===s&&o===i-1&&(o=i-2,s=1),this.closed||o>0?a=n[(o-1)%i]:(Ah.subVectors(n[0],n[1]).add(n[0]),a=Ah);const b=n[o%i],c=n[(o+1)%i];if(this.closed||o+2<i?l=n[(o+2)%i]:(Ah.subVectors(n[i-1],n[i-2]).add(n[i-1]),l=Ah),"centripetal"===this.curveType||"chordal"===this.curveType){const e="chordal"===this.curveType?.5:.25;let t=Math.pow(a.distanceToSquared(b),e),n=Math.pow(b.distanceToSquared(c),e),i=Math.pow(c.distanceToSquared(l),e);n<1e-4&&(n=1),t<1e-4&&(t=n),i<1e-4&&(i=n),Ch.initNonuniformCatmullRom(a.x,b.x,c.x,l.x,t,n,i),Rh.initNonuniformCatmullRom(a.y,b.y,c.y,l.y,t,n,i),Ph.initNonuniformCatmullRom(a.z,b.z,c.z,l.z,t,n,i)}else"catmullrom"===this.curveType&&(Ch.initCatmullRom(a.x,b.x,c.x,l.x,this.tension),Rh.initCatmullRom(a.y,b.y,c.y,l.y,this.tension),Ph.initCatmullRom(a.z,b.z,c.z,l.z,this.tension));return t.set(Ch.calc(s),Rh.calc(s),Ph.calc(s)),t}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const n=e.points[t];this.points.push(n.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const n=this.points[t];e.points.push(n.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const n=e.points[t];this.points.push((new sa).fromArray(n))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function Ih(e,t,n,i,r){const a=.5*(i-t),l=.5*(r-n),o=e*e;return(2*n-2*i+a+l)*(e*o)+(-3*n+3*i-2*a-l)*o+a*e+n}function Nh(e,t,n,i){return function(e,t){const n=1-e;return n*n*t}(e,t)+function(e,t){return 2*(1-e)*e*t}(e,n)+function(e,t){return e*e*t}(e,i)}function kh(e,t,n,i,r){return function(e,t){const n=1-e;return n*n*n*t}(e,t)+function(e,t){const n=1-e;return 3*n*n*e*t}(e,n)+function(e,t){return 3*(1-e)*e*e*t}(e,i)+function(e,t){return e*e*e*t}(e,r)}class Dh extends wh{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Rr,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Rr,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Rr,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:new Rr;super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e){const t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Rr,n=this.v0,i=this.v1,r=this.v2,a=this.v3;return t.set(kh(e,n.x,i.x,r.x,a.x),kh(e,n.y,i.y,r.y,a.y)),t}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class Uh extends wh{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new sa,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new sa,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new sa,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:new sa;super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e){const t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new sa,n=this.v0,i=this.v1,r=this.v2,a=this.v3;return t.set(kh(e,n.x,i.x,r.x,a.x),kh(e,n.y,i.y,r.y,a.y),kh(e,n.z,i.z,r.z,a.z)),t}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class Oh extends wh{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Rr,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Rr;super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e){const t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Rr;return 1===e?t.copy(this.v2):(t.copy(this.v2).sub(this.v1),t.multiplyScalar(e).add(this.v1)),t}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e){return(arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Rr).subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Fh extends wh{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new sa,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new sa;super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e){const t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new sa;return 1===e?t.copy(this.v2):(t.copy(this.v2).sub(this.v1),t.multiplyScalar(e).add(this.v1)),t}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e){return(arguments.length>1&&void 0!==arguments[1]?arguments[1]:new sa).subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Bh extends wh{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Rr,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Rr,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Rr;super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e){const t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Rr,n=this.v0,i=this.v1,r=this.v2;return t.set(Nh(e,n.x,i.x,r.x),Nh(e,n.y,i.y,r.y)),t}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Hh extends wh{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new sa,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new sa,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new sa;super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e){const t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new sa,n=this.v0,i=this.v1,r=this.v2;return t.set(Nh(e,n.x,i.x,r.x),Nh(e,n.y,i.y,r.y),Nh(e,n.z,i.z,r.z)),t}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Vh extends wh{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e){const t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Rr,n=this.points,i=(n.length-1)*e,r=Math.floor(i),a=i-r,l=n[0===r?r:r-1],o=n[r],s=n[r>n.length-2?n.length-1:r+1],b=n[r>n.length-3?n.length-1:r+2];return t.set(Ih(a,l.x,o.x,s.x,b.x),Ih(a,l.y,o.y,s.y,b.y)),t}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const n=e.points[t];this.points.push(n.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const n=this.points[t];e.points.push(n.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const n=e.points[t];this.points.push((new Rr).fromArray(n))}return this}}var Gh=Object.freeze({__proto__:null,ArcCurve:Eh,CatmullRomCurve3:Lh,CubicBezierCurve:Dh,CubicBezierCurve3:Uh,EllipseCurve:zh,LineCurve:Oh,LineCurve3:Fh,QuadraticBezierCurve:Bh,QuadraticBezierCurve3:Hh,SplineCurve:Vh});class Wh extends wh{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){const n=!0===e.isVector2?"LineCurve":"LineCurve3";this.curves.push(new Gh[n](t,e))}return this}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let r=0;for(;r<i.length;){if(i[r]>=n){const e=i[r]-n,a=this.curves[r],l=a.getLength(),o=0===l?0:1-e/l;return a.getPointAt(o,t)}r++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:40;const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:12;const t=[];let n;for(let i=0,r=this.curves;i<r.length;i++){const a=r[i],l=a.isEllipseCurve?2*e:a.isLineCurve||a.isLineCurve3?1:a.isSplineCurve?e*a.points.length:e,o=a.getPoints(l);for(let e=0;e<o.length;e++){const i=o[e];n&&n.equals(i)||(t.push(i),n=i)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const n=e.curves[t];this.curves.push(n.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const n=this.curves[t];e.curves.push(n.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const n=e.curves[t];this.curves.push((new Gh[n.type]).fromJSON(n))}return this}}class jh extends Wh{constructor(e){super(),this.type="Path",this.currentPoint=new Rr,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new Oh(this.currentPoint.clone(),new Rr(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const r=new Bh(this.currentPoint.clone(),new Rr(e,t),new Rr(n,i));return this.curves.push(r),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,r,a){const l=new Dh(this.currentPoint.clone(),new Rr(e,t),new Rr(n,i),new Rr(r,a));return this.curves.push(l),this.currentPoint.set(r,a),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new Vh(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,r,a){const l=this.currentPoint.x,o=this.currentPoint.y;return this.absarc(e+l,t+o,n,i,r,a),this}absarc(e,t,n,i,r,a){return this.absellipse(e,t,n,n,i,r,a),this}ellipse(e,t,n,i,r,a,l,o){const s=this.currentPoint.x,b=this.currentPoint.y;return this.absellipse(e+s,t+b,n,i,r,a,l,o),this}absellipse(e,t,n,i,r,a,l,o){const s=new zh(e,t,n,i,r,a,l,o);if(this.curves.length>0){const e=s.getPoint(0);e.equals(this.currentPoint)||this.lineTo(e.x,e.y)}this.curves.push(s);const b=s.getPoint(1);return this.currentPoint.copy(b),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class Xh extends no{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[new Rr(0,-.5),new Rr(.5,0),new Rr(0,.5)],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:12,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:2*Math.PI;super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},t=Math.floor(t),i=wr(i,0,2*Math.PI);const r=[],a=[],l=[],o=[],s=[],b=1/t,c=new sa,u=new Rr,h=new sa,d=new sa,m=new sa;let f=0,p=0;for(let g=0;g<=e.length-1;g++)switch(g){case 0:f=e[g+1].x-e[g].x,p=e[g+1].y-e[g].y,h.x=1*p,h.y=-f,h.z=0*p,m.copy(h),h.normalize(),o.push(h.x,h.y,h.z);break;case e.length-1:o.push(m.x,m.y,m.z);break;default:f=e[g+1].x-e[g].x,p=e[g+1].y-e[g].y,h.x=1*p,h.y=-f,h.z=0*p,d.copy(h),h.x+=m.x,h.y+=m.y,h.z+=m.z,h.normalize(),o.push(h.x,h.y,h.z),m.copy(d)}for(let g=0;g<=t;g++){const r=n+g*b*i,h=Math.sin(r),d=Math.cos(r);for(let n=0;n<=e.length-1;n++){c.x=e[n].x*h,c.y=e[n].y,c.z=e[n].x*d,a.push(c.x,c.y,c.z),u.x=g/t,u.y=n/(e.length-1),l.push(u.x,u.y);const i=o[3*n+0]*h,r=o[3*n+1],b=o[3*n+0]*d;s.push(i,r,b)}}for(let g=0;g<t;g++)for(let t=0;t<e.length-1;t++){const n=t+g*e.length,i=n,a=n+e.length,l=n+e.length+1,o=n+1;r.push(i,a,o),r.push(l,o,a)}this.setIndex(r),this.setAttribute("position",new Yl(a,3)),this.setAttribute("uv",new Yl(l,2)),this.setAttribute("normal",new Yl(s,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Xh(e.points,e.segments,e.phiStart,e.phiLength)}}class qh extends Xh{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:4,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:8;const r=new jh;r.absarc(0,-t/2,e,1.5*Math.PI,0),r.absarc(0,t/2,e,0,.5*Math.PI),super(r.getPoints(n),i),this.type="CapsuleGeometry",this.parameters={radius:e,length:t,capSegments:n,radialSegments:i}}static fromJSON(e){return new qh(e.radius,e.length,e.capSegments,e.radialSegments)}}class Yh extends no{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:32,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:2*Math.PI;super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},t=Math.max(3,t);const r=[],a=[],l=[],o=[],s=new sa,b=new Rr;a.push(0,0,0),l.push(0,0,1),o.push(.5,.5);for(let c=0,u=3;c<=t;c++,u+=3){const r=n+c/t*i;s.x=e*Math.cos(r),s.y=e*Math.sin(r),a.push(s.x,s.y,s.z),l.push(0,0,1),b.x=(a[u]/e+1)/2,b.y=(a[u+1]/e+1)/2,o.push(b.x,b.y)}for(let c=1;c<=t;c++)r.push(c,c+1,0);this.setIndex(r),this.setAttribute("position",new Yl(a,3)),this.setAttribute("normal",new Yl(l,3)),this.setAttribute("uv",new Yl(o,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Yh(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class Zh extends no{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:32,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,a=arguments.length>5&&void 0!==arguments[5]&&arguments[5],l=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0,o=arguments.length>7&&void 0!==arguments[7]?arguments[7]:2*Math.PI;super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:r,openEnded:a,thetaStart:l,thetaLength:o};const s=this;i=Math.floor(i),r=Math.floor(r);const b=[],c=[],u=[],h=[];let d=0;const m=[],f=n/2;let p=0;function g(n){const r=d,a=new Rr,m=new sa;let g=0;const x=!0===n?e:t,v=!0===n?1:-1;for(let e=1;e<=i;e++)c.push(0,f*v,0),u.push(0,v,0),h.push(.5,.5),d++;const _=d;for(let e=0;e<=i;e++){const t=e/i*o+l,n=Math.cos(t),r=Math.sin(t);m.x=x*r,m.y=f*v,m.z=x*n,c.push(m.x,m.y,m.z),u.push(0,v,0),a.x=.5*n+.5,a.y=.5*r*v+.5,h.push(a.x,a.y),d++}for(let e=0;e<i;e++){const t=r+e,i=_+e;!0===n?b.push(i,i+1,t):b.push(i+1,i,t),g+=3}s.addGroup(p,g,!0===n?1:2),p+=g}!function(){const a=new sa,g=new sa;let x=0;const v=(t-e)/n;for(let s=0;s<=r;s++){const b=[],p=s/r,x=p*(t-e)+e;for(let e=0;e<=i;e++){const t=e/i,r=t*o+l,s=Math.sin(r),m=Math.cos(r);g.x=x*s,g.y=-p*n+f,g.z=x*m,c.push(g.x,g.y,g.z),a.set(s,v,m).normalize(),u.push(a.x,a.y,a.z),h.push(t,1-p),b.push(d++)}m.push(b)}for(let e=0;e<i;e++)for(let t=0;t<r;t++){const n=m[t][e],i=m[t+1][e],r=m[t+1][e+1],a=m[t][e+1];b.push(n,i,a),b.push(i,r,a),x+=6}s.addGroup(p,x,0),p+=x}(),!1===a&&(e>0&&g(!0),t>0&&g(!1)),this.setIndex(b),this.setAttribute("position",new Yl(c,3)),this.setAttribute("normal",new Yl(u,3)),this.setAttribute("uv",new Yl(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Zh(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Kh extends Zh{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:32,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,l=arguments.length>6&&void 0!==arguments[6]?arguments[6]:2*Math.PI;super(0,e,t,n,i,r,a,l),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:r,thetaStart:a,thetaLength:l}}static fromJSON(e){return new Kh(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class $h extends no{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i};const r=[],a=[];function l(e,t,n,i){const r=i+1,a=[];for(let l=0;l<=r;l++){a[l]=[];const i=e.clone().lerp(n,l/r),o=t.clone().lerp(n,l/r),s=r-l;for(let e=0;e<=s;e++)a[l][e]=0===e&&l===r?i:i.clone().lerp(o,e/s)}for(let l=0;l<r;l++)for(let e=0;e<2*(r-l)-1;e++){const t=Math.floor(e/2);e%2===0?(o(a[l][t+1]),o(a[l+1][t]),o(a[l][t])):(o(a[l][t+1]),o(a[l+1][t+1]),o(a[l+1][t]))}}function o(e){r.push(e.x,e.y,e.z)}function s(t,n){const i=3*t;n.x=e[i+0],n.y=e[i+1],n.z=e[i+2]}function b(e,t,n,i){i<0&&1===e.x&&(a[t]=e.x-1),0===n.x&&0===n.z&&(a[t]=i/2/Math.PI+.5)}function c(e){return Math.atan2(e.z,-e.x)}!function(e){const n=new sa,i=new sa,r=new sa;for(let a=0;a<t.length;a+=3)s(t[a+0],n),s(t[a+1],i),s(t[a+2],r),l(n,i,r,e)}(i),function(e){const t=new sa;for(let n=0;n<r.length;n+=3)t.x=r[n+0],t.y=r[n+1],t.z=r[n+2],t.normalize().multiplyScalar(e),r[n+0]=t.x,r[n+1]=t.y,r[n+2]=t.z}(n),function(){const e=new sa;for(let n=0;n<r.length;n+=3){e.x=r[n+0],e.y=r[n+1],e.z=r[n+2];const i=c(e)/2/Math.PI+.5,l=(t=e,Math.atan2(-t.y,Math.sqrt(t.x*t.x+t.z*t.z))/Math.PI+.5);a.push(i,1-l)}var t;(function(){const e=new sa,t=new sa,n=new sa,i=new sa,l=new Rr,o=new Rr,s=new Rr;for(let u=0,h=0;u<r.length;u+=9,h+=6){e.set(r[u+0],r[u+1],r[u+2]),t.set(r[u+3],r[u+4],r[u+5]),n.set(r[u+6],r[u+7],r[u+8]),l.set(a[h+0],a[h+1]),o.set(a[h+2],a[h+3]),s.set(a[h+4],a[h+5]),i.copy(e).add(t).add(n).divideScalar(3);const d=c(i);b(l,h+0,e,d),b(o,h+2,t,d),b(s,h+4,n,d)}})(),function(){for(let e=0;e<a.length;e+=6){const t=a[e+0],n=a[e+2],i=a[e+4],r=Math.max(t,n,i),l=Math.min(t,n,i);r>.9&&l<.1&&(t<.2&&(a[e+0]+=1),n<.2&&(a[e+2]+=1),i<.2&&(a[e+4]+=1))}}()}(),this.setAttribute("position",new Yl(r,3)),this.setAttribute("normal",new Yl(r.slice(),3)),this.setAttribute("uv",new Yl(a,2)),0===i?this.computeVertexNormals():this.normalizeNormals()}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new $h(e.vertices,e.indices,e.radius,e.details)}}class Jh extends $h{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=(1+Math.sqrt(5))/2,i=1/n;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Jh(e.radius,e.detail)}}const Qh=new sa,ed=new sa,td=new sa,nd=new Sl;class id extends no{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},null!==e){const n=4,i=Math.pow(10,n),r=Math.cos(yr*t),a=e.getIndex(),l=e.getAttribute("position"),o=a?a.count:l.count,s=[0,0,0],b=["a","b","c"],c=new Array(3),u={},h=[];for(let e=0;e<o;e+=3){a?(s[0]=a.getX(e),s[1]=a.getX(e+1),s[2]=a.getX(e+2)):(s[0]=e,s[1]=e+1,s[2]=e+2);const{a:t,b:n,c:o}=nd;if(t.fromBufferAttribute(l,s[0]),n.fromBufferAttribute(l,s[1]),o.fromBufferAttribute(l,s[2]),nd.getNormal(td),c[0]=`${Math.round(t.x*i)},${Math.round(t.y*i)},${Math.round(t.z*i)}`,c[1]=`${Math.round(n.x*i)},${Math.round(n.y*i)},${Math.round(n.z*i)}`,c[2]=`${Math.round(o.x*i)},${Math.round(o.y*i)},${Math.round(o.z*i)}`,c[0]!==c[1]&&c[1]!==c[2]&&c[2]!==c[0])for(let e=0;e<3;e++){const t=(e+1)%3,n=c[e],i=c[t],a=nd[b[e]],l=nd[b[t]],o=`${n}_${i}`,d=`${i}_${n}`;d in u&&u[d]?(td.dot(u[d].normal)<=r&&(h.push(a.x,a.y,a.z),h.push(l.x,l.y,l.z)),u[d]=null):o in u||(u[o]={index0:s[e],index1:s[t],normal:td.clone()})}}for(const e in u)if(u[e]){const{index0:t,index1:n}=u[e];Qh.fromBufferAttribute(l,t),ed.fromBufferAttribute(l,n),h.push(Qh.x,Qh.y,Qh.z),h.push(ed.x,ed.y,ed.z)}this.setAttribute("position",new Yl(h,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class rd extends jh{constructor(e){super(e),this.uuid=Mr(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const n=e.holes[t];this.holes.push(n.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const n=this.holes[t];e.holes.push(n.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const n=e.holes[t];this.holes.push((new jh).fromJSON(n))}return this}}const ad=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:2;const i=t&&t.length,r=i?t[0]*n:e.length;let a=ld(e,0,r,n,!0);const l=[];if(!a||a.next===a.prev)return l;let o,s,b,c,u,h,d;if(i&&(a=function(e,t,n,i){const r=[];let a,l,o,s,b;for(a=0,l=t.length;a<l;a++)o=t[a]*i,s=a<l-1?t[a+1]*i:e.length,b=ld(e,o,s,i,!1),b===b.next&&(b.steiner=!0),r.push(gd(b));for(r.sort(dd),a=0;a<r.length;a++)n=md(r[a],n);return n}(e,t,a,n)),e.length>80*n){o=b=e[0],s=c=e[1];for(let t=n;t<r;t+=n)u=e[t],h=e[t+1],u<o&&(o=u),h<s&&(s=h),u>b&&(b=u),h>c&&(c=h);d=Math.max(b-o,c-s),d=0!==d?32767/d:0}return sd(a,l,n,o,s,d,0),l};function ld(e,t,n,i,r){let a,l;if(r===function(e,t,n,i){let r=0;for(let a=t,l=n-i;a<n;a+=i)r+=(e[l]-e[a])*(e[a+1]+e[l+1]),l=a;return r}(e,t,n,i)>0)for(a=t;a<n;a+=i)l=Td(a,e[a],e[a+1],l);else for(a=n-i;a>=t;a-=i)l=Td(a,e[a],e[a+1],l);return l&&yd(l,l.next)&&(Ad(l),l=l.next),l}function od(e,t){if(!e)return e;t||(t=e);let n,i=e;do{if(n=!1,i.steiner||!yd(i,i.next)&&0!==_d(i.prev,i,i.next))i=i.next;else{if(Ad(i),i=t=i.prev,i===i.next)break;n=!0}}while(n||i!==t);return t}function sd(e,t,n,i,r,a,l){if(!e)return;!l&&a&&function(e,t,n,i){let r=e;do{0===r.z&&(r.z=pd(r.x,r.y,t,n,i)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next}while(r!==e);r.prevZ.nextZ=null,r.prevZ=null,function(e){let t,n,i,r,a,l,o,s,b=1;do{for(n=e,e=null,a=null,l=0;n;){for(l++,i=n,o=0,t=0;t<b&&(o++,i=i.nextZ,i);t++);for(s=b;o>0||s>0&&i;)0!==o&&(0===s||!i||n.z<=i.z)?(r=n,n=n.nextZ,o--):(r=i,i=i.nextZ,s--),a?a.nextZ=r:e=r,r.prevZ=a,a=r;n=i}a.nextZ=null,b*=2}while(l>1)}(r)}(e,i,r,a);let o,s,b=e;for(;e.prev!==e.next;)if(o=e.prev,s=e.next,a?cd(e,i,r,a):bd(e))t.push(o.i/n|0),t.push(e.i/n|0),t.push(s.i/n|0),Ad(e),e=s.next,b=s.next;else if((e=s)===b){l?1===l?sd(e=ud(od(e),t,n),t,n,i,r,a,2):2===l&&hd(e,t,n,i,r,a):sd(od(e),t,n,i,r,a,1);break}}function bd(e){const t=e.prev,n=e,i=e.next;if(_d(t,n,i)>=0)return!1;const r=t.x,a=n.x,l=i.x,o=t.y,s=n.y,b=i.y,c=r<a?r<l?r:l:a<l?a:l,u=o<s?o<b?o:b:s<b?s:b,h=r>a?r>l?r:l:a>l?a:l,d=o>s?o>b?o:b:s>b?s:b;let m=i.next;for(;m!==t;){if(m.x>=c&&m.x<=h&&m.y>=u&&m.y<=d&&xd(r,o,a,s,l,b,m.x,m.y)&&_d(m.prev,m,m.next)>=0)return!1;m=m.next}return!0}function cd(e,t,n,i){const r=e.prev,a=e,l=e.next;if(_d(r,a,l)>=0)return!1;const o=r.x,s=a.x,b=l.x,c=r.y,u=a.y,h=l.y,d=o<s?o<b?o:b:s<b?s:b,m=c<u?c<h?c:h:u<h?u:h,f=o>s?o>b?o:b:s>b?s:b,p=c>u?c>h?c:h:u>h?u:h,g=pd(d,m,t,n,i),x=pd(f,p,t,n,i);let v=e.prevZ,_=e.nextZ;for(;v&&v.z>=g&&_&&_.z<=x;){if(v.x>=d&&v.x<=f&&v.y>=m&&v.y<=p&&v!==r&&v!==l&&xd(o,c,s,u,b,h,v.x,v.y)&&_d(v.prev,v,v.next)>=0)return!1;if(v=v.prevZ,_.x>=d&&_.x<=f&&_.y>=m&&_.y<=p&&_!==r&&_!==l&&xd(o,c,s,u,b,h,_.x,_.y)&&_d(_.prev,_,_.next)>=0)return!1;_=_.nextZ}for(;v&&v.z>=g;){if(v.x>=d&&v.x<=f&&v.y>=m&&v.y<=p&&v!==r&&v!==l&&xd(o,c,s,u,b,h,v.x,v.y)&&_d(v.prev,v,v.next)>=0)return!1;v=v.prevZ}for(;_&&_.z<=x;){if(_.x>=d&&_.x<=f&&_.y>=m&&_.y<=p&&_!==r&&_!==l&&xd(o,c,s,u,b,h,_.x,_.y)&&_d(_.prev,_,_.next)>=0)return!1;_=_.nextZ}return!0}function ud(e,t,n){let i=e;do{const r=i.prev,a=i.next.next;!yd(r,a)&&Sd(r,i,i.next,a)&&zd(r,a)&&zd(a,r)&&(t.push(r.i/n|0),t.push(i.i/n|0),t.push(a.i/n|0),Ad(i),Ad(i.next),i=e=a),i=i.next}while(i!==e);return od(i)}function hd(e,t,n,i,r,a){let l=e;do{let e=l.next.next;for(;e!==l.prev;){if(l.i!==e.i&&vd(l,e)){let o=Ed(l,e);return l=od(l,l.next),o=od(o,o.next),sd(l,t,n,i,r,a,0),void sd(o,t,n,i,r,a,0)}e=e.next}l=l.next}while(l!==e)}function dd(e,t){return e.x-t.x}function md(e,t){const n=function(e,t){let n,i=t,r=-1/0;const a=e.x,l=e.y;do{if(l<=i.y&&l>=i.next.y&&i.next.y!==i.y){const e=i.x+(l-i.y)*(i.next.x-i.x)/(i.next.y-i.y);if(e<=a&&e>r&&(r=e,n=i.x<i.next.x?i:i.next,e===a))return n}i=i.next}while(i!==t);if(!n)return null;const o=n,s=n.x,b=n.y;let c,u=1/0;i=n;do{a>=i.x&&i.x>=s&&a!==i.x&&xd(l<b?a:r,l,s,b,l<b?r:a,l,i.x,i.y)&&(c=Math.abs(l-i.y)/(a-i.x),zd(i,e)&&(c<u||c===u&&(i.x>n.x||i.x===n.x&&fd(n,i)))&&(n=i,u=c)),i=i.next}while(i!==o);return n}(e,t);if(!n)return t;const i=Ed(n,e);return od(i,i.next),od(n,n.next)}function fd(e,t){return _d(e.prev,e,t.prev)<0&&_d(t.next,e,e.next)<0}function pd(e,t,n,i,r){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=(e-n)*r|0)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=(t-i)*r|0)|t<<8))|t<<4))|t<<2))|t<<1))<<1}function gd(e){let t=e,n=e;do{(t.x<n.x||t.x===n.x&&t.y<n.y)&&(n=t),t=t.next}while(t!==e);return n}function xd(e,t,n,i,r,a,l,o){return(r-l)*(t-o)>=(e-l)*(a-o)&&(e-l)*(i-o)>=(n-l)*(t-o)&&(n-l)*(a-o)>=(r-l)*(i-o)}function vd(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!function(e,t){let n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&Sd(n,n.next,e,t))return!0;n=n.next}while(n!==e);return!1}(e,t)&&(zd(e,t)&&zd(t,e)&&function(e,t){let n=e,i=!1;const r=(e.x+t.x)/2,a=(e.y+t.y)/2;do{n.y>a!==n.next.y>a&&n.next.y!==n.y&&r<(n.next.x-n.x)*(a-n.y)/(n.next.y-n.y)+n.x&&(i=!i),n=n.next}while(n!==e);return i}(e,t)&&(_d(e.prev,e,t.prev)||_d(e,t.prev,t))||yd(e,t)&&_d(e.prev,e,e.next)>0&&_d(t.prev,t,t.next)>0)}function _d(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}function yd(e,t){return e.x===t.x&&e.y===t.y}function Sd(e,t,n,i){const r=wd(_d(e,t,n)),a=wd(_d(e,t,i)),l=wd(_d(n,i,e)),o=wd(_d(n,i,t));return r!==a&&l!==o||(!(0!==r||!Md(e,n,t))||(!(0!==a||!Md(e,i,t))||(!(0!==l||!Md(n,e,i))||!(0!==o||!Md(n,t,i)))))}function Md(e,t,n){return t.x<=Math.max(e.x,n.x)&&t.x>=Math.min(e.x,n.x)&&t.y<=Math.max(e.y,n.y)&&t.y>=Math.min(e.y,n.y)}function wd(e){return e>0?1:e<0?-1:0}function zd(e,t){return _d(e.prev,e,e.next)<0?_d(e,t,e.next)>=0&&_d(e,e.prev,t)>=0:_d(e,t,e.prev)<0||_d(e,e.next,t)<0}function Ed(e,t){const n=new Cd(e.i,e.x,e.y),i=new Cd(t.i,t.x,t.y),r=e.next,a=t.prev;return e.next=t,t.prev=e,n.next=r,r.prev=n,i.next=n,n.prev=i,a.next=i,i.prev=a,i}function Td(e,t,n,i){const r=new Cd(e,t,n);return i?(r.next=i.next,r.prev=i,i.next.prev=r,i.next=r):(r.prev=r,r.next=r),r}function Ad(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function Cd(e,t,n){this.i=e,this.x=t,this.y=n,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}class Rd{static area(e){const t=e.length;let n=0;for(let i=t-1,r=0;r<t;i=r++)n+=e[i].x*e[r].y-e[r].x*e[i].y;return.5*n}static isClockWise(e){return Rd.area(e)<0}static triangulateShape(e,t){const n=[],i=[],r=[];Pd(e),Ld(n,e);let a=e.length;t.forEach(Pd);for(let o=0;o<t.length;o++)i.push(a),a+=t[o].length,Ld(n,t[o]);const l=ad(n,i);for(let o=0;o<l.length;o+=3)r.push(l.slice(o,o+3));return r}}function Pd(e){const t=e.length;t>2&&e[t-1].equals(e[0])&&e.pop()}function Ld(e,t){for(let n=0;n<t.length;n++)e.push(t[n].x),e.push(t[n].y)}class Id extends no{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new rd([new Rr(.5,.5),new Rr(-.5,.5),new Rr(-.5,-.5),new Rr(.5,-.5)]),t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],r=[];for(let l=0,o=e.length;l<o;l++){a(e[l])}function a(e){const a=[],l=void 0!==t.curveSegments?t.curveSegments:12,o=void 0!==t.steps?t.steps:1,s=void 0!==t.depth?t.depth:1;let b=void 0===t.bevelEnabled||t.bevelEnabled,c=void 0!==t.bevelThickness?t.bevelThickness:.2,u=void 0!==t.bevelSize?t.bevelSize:c-.1,h=void 0!==t.bevelOffset?t.bevelOffset:0,d=void 0!==t.bevelSegments?t.bevelSegments:3;const m=t.extrudePath,f=void 0!==t.UVGenerator?t.UVGenerator:Nd;let p,g,x,v,_,y=!1;m&&(p=m.getSpacedPoints(o),y=!0,b=!1,g=m.computeFrenetFrames(o,!1),x=new sa,v=new sa,_=new sa),b||(d=0,c=0,u=0,h=0);const S=e.extractPoints(l);let M=S.shape;const w=S.holes;if(!Rd.isClockWise(M)){M=M.reverse();for(let e=0,t=w.length;e<t;e++){const t=w[e];Rd.isClockWise(t)&&(w[e]=t.reverse())}}const z=Rd.triangulateShape(M,w),E=M;for(let t=0,n=w.length;t<n;t++){const e=w[t];M=M.concat(e)}function T(e,t,n){return t||console.error("THREE.ExtrudeGeometry: vec does not exist"),e.clone().addScaledVector(t,n)}const A=M.length,C=z.length;function R(e,t,n){let i,r,a;const l=e.x-t.x,o=e.y-t.y,s=n.x-e.x,b=n.y-e.y,c=l*l+o*o,u=l*b-o*s;if(Math.abs(u)>Number.EPSILON){const u=Math.sqrt(c),h=Math.sqrt(s*s+b*b),d=t.x-o/u,m=t.y+l/u,f=((n.x-b/h-d)*b-(n.y+s/h-m)*s)/(l*b-o*s);i=d+l*f-e.x,r=m+o*f-e.y;const p=i*i+r*r;if(p<=2)return new Rr(i,r);a=Math.sqrt(p/2)}else{let e=!1;l>Number.EPSILON?s>Number.EPSILON&&(e=!0):l<-Number.EPSILON?s<-Number.EPSILON&&(e=!0):Math.sign(o)===Math.sign(b)&&(e=!0),e?(i=-o,r=l,a=Math.sqrt(c)):(i=l,r=o,a=Math.sqrt(c/2))}return new Rr(i/a,r/a)}const P=[];for(let t=0,n=E.length,i=n-1,r=t+1;t<n;t++,i++,r++)i===n&&(i=0),r===n&&(r=0),P[t]=R(E[t],E[i],E[r]);const L=[];let I,N=P.concat();for(let t=0,n=w.length;t<n;t++){const e=w[t];I=[];for(let t=0,n=e.length,i=n-1,r=t+1;t<n;t++,i++,r++)i===n&&(i=0),r===n&&(r=0),I[t]=R(e[t],e[i],e[r]);L.push(I),N=N.concat(I)}for(let t=0;t<d;t++){const e=t/d,n=c*Math.cos(e*Math.PI/2),i=u*Math.sin(e*Math.PI/2)+h;for(let t=0,r=E.length;t<r;t++){const e=T(E[t],P[t],i);U(e.x,e.y,-n)}for(let t=0,r=w.length;t<r;t++){const e=w[t];I=L[t];for(let t=0,r=e.length;t<r;t++){const r=T(e[t],I[t],i);U(r.x,r.y,-n)}}}const k=u+h;for(let t=0;t<A;t++){const e=b?T(M[t],N[t],k):M[t];y?(v.copy(g.normals[0]).multiplyScalar(e.x),x.copy(g.binormals[0]).multiplyScalar(e.y),_.copy(p[0]).add(v).add(x),U(_.x,_.y,_.z)):U(e.x,e.y,0)}for(let t=1;t<=o;t++)for(let e=0;e<A;e++){const n=b?T(M[e],N[e],k):M[e];y?(v.copy(g.normals[t]).multiplyScalar(n.x),x.copy(g.binormals[t]).multiplyScalar(n.y),_.copy(p[t]).add(v).add(x),U(_.x,_.y,_.z)):U(n.x,n.y,s/o*t)}for(let t=d-1;t>=0;t--){const e=t/d,n=c*Math.cos(e*Math.PI/2),i=u*Math.sin(e*Math.PI/2)+h;for(let t=0,r=E.length;t<r;t++){const e=T(E[t],P[t],i);U(e.x,e.y,s+n)}for(let t=0,r=w.length;t<r;t++){const e=w[t];I=L[t];for(let t=0,r=e.length;t<r;t++){const r=T(e[t],I[t],i);y?U(r.x,r.y+p[o-1].y,p[o-1].x+n):U(r.x,r.y,s+n)}}}function D(e,t){let n=e.length;for(;--n>=0;){const i=n;let r=n-1;r<0&&(r=e.length-1);for(let e=0,n=o+2*d;e<n;e++){const n=A*e,a=A*(e+1);F(t+i+n,t+r+n,t+r+a,t+i+a)}}}function U(e,t,n){a.push(e),a.push(t),a.push(n)}function O(e,t,r){B(e),B(t),B(r);const a=i.length/3,l=f.generateTopUV(n,i,a-3,a-2,a-1);H(l[0]),H(l[1]),H(l[2])}function F(e,t,r,a){B(e),B(t),B(a),B(t),B(r),B(a);const l=i.length/3,o=f.generateSideWallUV(n,i,l-6,l-3,l-2,l-1);H(o[0]),H(o[1]),H(o[3]),H(o[1]),H(o[2]),H(o[3])}function B(e){i.push(a[3*e+0]),i.push(a[3*e+1]),i.push(a[3*e+2])}function H(e){r.push(e.x),r.push(e.y)}!function(){const e=i.length/3;if(b){let e=0,t=A*e;for(let n=0;n<C;n++){const e=z[n];O(e[2]+t,e[1]+t,e[0]+t)}e=o+2*d,t=A*e;for(let n=0;n<C;n++){const e=z[n];O(e[0]+t,e[1]+t,e[2]+t)}}else{for(let e=0;e<C;e++){const t=z[e];O(t[2],t[1],t[0])}for(let e=0;e<C;e++){const t=z[e];O(t[0]+A*o,t[1]+A*o,t[2]+A*o)}}n.addGroup(e,i.length/3-e,0)}(),function(){const e=i.length/3;let t=0;D(E,t),t+=E.length;for(let n=0,i=w.length;n<i;n++){const e=w[n];D(e,t),t+=e.length}n.addGroup(e,i.length/3-e,1)}()}this.setAttribute("position",new Yl(i,3)),this.setAttribute("uv",new Yl(r,2)),this.computeVertexNormals()}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return function(e,t,n){if(n.shapes=[],Array.isArray(e))for(let i=0,r=e.length;i<r;i++){const t=e[i];n.shapes.push(t.uuid)}else n.shapes.push(e.uuid);n.options=Object.assign({},t),void 0!==t.extrudePath&&(n.options.extrudePath=t.extrudePath.toJSON());return n}(this.parameters.shapes,this.parameters.options,e)}static fromJSON(e,t){const n=[];for(let r=0,a=e.shapes.length;r<a;r++){const i=t[e.shapes[r]];n.push(i)}const i=e.options.extrudePath;return void 0!==i&&(e.options.extrudePath=(new Gh[i.type]).fromJSON(i)),new Id(n,e.options)}}const Nd={generateTopUV:function(e,t,n,i,r){const a=t[3*n],l=t[3*n+1],o=t[3*i],s=t[3*i+1],b=t[3*r],c=t[3*r+1];return[new Rr(a,l),new Rr(o,s),new Rr(b,c)]},generateSideWallUV:function(e,t,n,i,r,a){const l=t[3*n],o=t[3*n+1],s=t[3*n+2],b=t[3*i],c=t[3*i+1],u=t[3*i+2],h=t[3*r],d=t[3*r+1],m=t[3*r+2],f=t[3*a],p=t[3*a+1],g=t[3*a+2];return Math.abs(o-c)<Math.abs(l-b)?[new Rr(l,1-s),new Rr(b,1-u),new Rr(h,1-m),new Rr(f,1-g)]:[new Rr(o,1-s),new Rr(c,1-u),new Rr(d,1-m),new Rr(p,1-g)]}};class kd extends $h{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=(1+Math.sqrt(5))/2;super([-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new kd(e.radius,e.detail)}}class Dd extends $h{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Dd(e.radius,e.detail)}}class Ud extends no{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:.5,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:32,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:2*Math.PI;super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:r,thetaLength:a},n=Math.max(3,n),i=Math.max(1,i);const l=[],o=[],s=[],b=[];let c=e;const u=(t-e)/i,h=new sa,d=new Rr;for(let m=0;m<=i;m++){for(let e=0;e<=n;e++){const i=r+e/n*a;h.x=c*Math.cos(i),h.y=c*Math.sin(i),o.push(h.x,h.y,h.z),s.push(0,0,1),d.x=(h.x/t+1)/2,d.y=(h.y/t+1)/2,b.push(d.x,d.y)}c+=u}for(let m=0;m<i;m++){const e=m*(n+1);for(let t=0;t<n;t++){const i=t+e,r=i,a=i+n+1,o=i+n+2,s=i+1;l.push(r,a,s),l.push(a,o,s)}}this.setIndex(l),this.setAttribute("position",new Yl(o,3)),this.setAttribute("normal",new Yl(s,3)),this.setAttribute("uv",new Yl(b,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ud(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class Od extends no{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new rd([new Rr(0,.5),new Rr(-.5,-.5),new Rr(.5,-.5)]),t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:12;super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],r=[],a=[];let l=0,o=0;if(!1===Array.isArray(e))s(e);else for(let b=0;b<e.length;b++)s(e[b]),this.addGroup(l,o,b),l+=o,o=0;function s(e){const l=i.length/3,s=e.extractPoints(t);let b=s.shape;const c=s.holes;!1===Rd.isClockWise(b)&&(b=b.reverse());for(let t=0,n=c.length;t<n;t++){const e=c[t];!0===Rd.isClockWise(e)&&(c[t]=e.reverse())}const u=Rd.triangulateShape(b,c);for(let t=0,n=c.length;t<n;t++){const e=c[t];b=b.concat(e)}for(let t=0,n=b.length;t<n;t++){const e=b[t];i.push(e.x,e.y,0),r.push(0,0,1),a.push(e.x,e.y)}for(let t=0,i=u.length;t<i;t++){const e=u[t],i=e[0]+l,r=e[1]+l,a=e[2]+l;n.push(i,r,a),o+=3}}this.setIndex(n),this.setAttribute("position",new Yl(i,3)),this.setAttribute("normal",new Yl(r,3)),this.setAttribute("uv",new Yl(a,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return function(e,t){if(t.shapes=[],Array.isArray(e))for(let n=0,i=e.length;n<i;n++){const i=e[n];t.shapes.push(i.uuid)}else t.shapes.push(e.uuid);return t}(this.parameters.shapes,e)}static fromJSON(e,t){const n=[];for(let i=0,r=e.shapes.length;i<r;i++){const r=t[e.shapes[i]];n.push(r)}return new Od(n,e.curveSegments)}}class Fd extends no{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:32,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:16,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:2*Math.PI,a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,l=arguments.length>6&&void 0!==arguments[6]?arguments[6]:Math.PI;super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:r,thetaStart:a,thetaLength:l},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const o=Math.min(a+l,Math.PI);let s=0;const b=[],c=new sa,u=new sa,h=[],d=[],m=[],f=[];for(let p=0;p<=n;p++){const h=[],g=p/n;let x=0;0===p&&0===a?x=.5/t:p===n&&o===Math.PI&&(x=-.5/t);for(let n=0;n<=t;n++){const o=n/t;c.x=-e*Math.cos(i+o*r)*Math.sin(a+g*l),c.y=e*Math.cos(a+g*l),c.z=e*Math.sin(i+o*r)*Math.sin(a+g*l),d.push(c.x,c.y,c.z),u.copy(c).normalize(),m.push(u.x,u.y,u.z),f.push(o+x,1-g),h.push(s++)}b.push(h)}for(let p=0;p<n;p++)for(let e=0;e<t;e++){const t=b[p][e+1],i=b[p][e],r=b[p+1][e],l=b[p+1][e+1];(0!==p||a>0)&&h.push(t,i,l),(p!==n-1||o<Math.PI)&&h.push(i,r,l)}this.setIndex(h),this.setAttribute("position",new Yl(d,3)),this.setAttribute("normal",new Yl(m,3)),this.setAttribute("uv",new Yl(f,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Fd(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class Bd extends $h{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Bd(e.radius,e.detail)}}class Hd extends no{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.4,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:12,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:48,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:2*Math.PI;super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:r},n=Math.floor(n),i=Math.floor(i);const a=[],l=[],o=[],s=[],b=new sa,c=new sa,u=new sa;for(let h=0;h<=n;h++)for(let a=0;a<=i;a++){const d=a/i*r,m=h/n*Math.PI*2;c.x=(e+t*Math.cos(m))*Math.cos(d),c.y=(e+t*Math.cos(m))*Math.sin(d),c.z=t*Math.sin(m),l.push(c.x,c.y,c.z),b.x=e*Math.cos(d),b.y=e*Math.sin(d),u.subVectors(c,b).normalize(),o.push(u.x,u.y,u.z),s.push(a/i),s.push(h/n)}for(let h=1;h<=n;h++)for(let e=1;e<=i;e++){const t=(i+1)*h+e-1,n=(i+1)*(h-1)+e-1,r=(i+1)*(h-1)+e,l=(i+1)*h+e;a.push(t,n,l),a.push(n,r,l)}this.setIndex(a),this.setAttribute("position",new Yl(l,3)),this.setAttribute("normal",new Yl(o,3)),this.setAttribute("uv",new Yl(s,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Hd(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class Vd extends no{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.4,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:64,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:8,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:2,a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:3;super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:r,q:a},n=Math.floor(n),i=Math.floor(i);const l=[],o=[],s=[],b=[],c=new sa,u=new sa,h=new sa,d=new sa,m=new sa,f=new sa,p=new sa;for(let x=0;x<=n;++x){const l=x/n*r*Math.PI*2;g(l,r,a,e,h),g(l+.01,r,a,e,d),f.subVectors(d,h),p.addVectors(d,h),m.crossVectors(f,p),p.crossVectors(m,f),m.normalize(),p.normalize();for(let e=0;e<=i;++e){const r=e/i*Math.PI*2,a=-t*Math.cos(r),l=t*Math.sin(r);c.x=h.x+(a*p.x+l*m.x),c.y=h.y+(a*p.y+l*m.y),c.z=h.z+(a*p.z+l*m.z),o.push(c.x,c.y,c.z),u.subVectors(c,h).normalize(),s.push(u.x,u.y,u.z),b.push(x/n),b.push(e/i)}}for(let x=1;x<=n;x++)for(let e=1;e<=i;e++){const t=(i+1)*(x-1)+(e-1),n=(i+1)*x+(e-1),r=(i+1)*x+e,a=(i+1)*(x-1)+e;l.push(t,n,a),l.push(n,r,a)}function g(e,t,n,i,r){const a=Math.cos(e),l=Math.sin(e),o=n/t*e,s=Math.cos(o);r.x=i*(2+s)*.5*a,r.y=i*(2+s)*l*.5,r.z=i*Math.sin(o)*.5}this.setIndex(l),this.setAttribute("position",new Yl(o,3)),this.setAttribute("normal",new Yl(s,3)),this.setAttribute("uv",new Yl(b,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Vd(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class Gd extends no{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Hh(new sa(-1,-1,0),new sa(-1,1,0),new sa(1,1,0)),t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:64,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:8,r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:r};const a=e.computeFrenetFrames(t,r);this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals;const l=new sa,o=new sa,s=new Rr;let b=new sa;const c=[],u=[],h=[],d=[];function m(r){b=e.getPointAt(r/t,b);const s=a.normals[r],h=a.binormals[r];for(let e=0;e<=i;e++){const t=e/i*Math.PI*2,r=Math.sin(t),a=-Math.cos(t);o.x=a*s.x+r*h.x,o.y=a*s.y+r*h.y,o.z=a*s.z+r*h.z,o.normalize(),u.push(o.x,o.y,o.z),l.x=b.x+n*o.x,l.y=b.y+n*o.y,l.z=b.z+n*o.z,c.push(l.x,l.y,l.z)}}!function(){for(let e=0;e<t;e++)m(e);m(!1===r?t:0),function(){for(let e=0;e<=t;e++)for(let n=0;n<=i;n++)s.x=e/t,s.y=n/i,h.push(s.x,s.y)}(),function(){for(let e=1;e<=t;e++)for(let t=1;t<=i;t++){const n=(i+1)*(e-1)+(t-1),r=(i+1)*e+(t-1),a=(i+1)*e+t,l=(i+1)*(e-1)+t;d.push(n,r,l),d.push(r,a,l)}}()}(),this.setIndex(d),this.setAttribute("position",new Yl(c,3)),this.setAttribute("normal",new Yl(u,3)),this.setAttribute("uv",new Yl(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new Gd((new Gh[e.path.type]).fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class Wd extends no{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},null!==e){const t=[],n=new Set,i=new sa,r=new sa;if(null!==e.index){const a=e.attributes.position,l=e.index;let o=e.groups;0===o.length&&(o=[{start:0,count:l.count,materialIndex:0}]);for(let e=0,s=o.length;e<s;++e){const s=o[e],b=s.start;for(let e=b,o=b+s.count;e<o;e+=3)for(let s=0;s<3;s++){const o=l.getX(e+s),b=l.getX(e+(s+1)%3);i.fromBufferAttribute(a,o),r.fromBufferAttribute(a,b),!0===jd(i,r,n)&&(t.push(i.x,i.y,i.z),t.push(r.x,r.y,r.z))}}}else{const a=e.attributes.position;for(let e=0,l=a.count/3;e<l;e++)for(let o=0;o<3;o++){const l=3*e+o,s=3*e+(o+1)%3;i.fromBufferAttribute(a,l),r.fromBufferAttribute(a,s),!0===jd(i,r,n)&&(t.push(i.x,i.y,i.z),t.push(r.x,r.y,r.z))}}this.setAttribute("position",new Yl(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function jd(e,t,n){const i=`${e.x},${e.y},${e.z}-${t.x},${t.y},${t.z}`,r=`${t.x},${t.y},${t.z}-${e.x},${e.y},${e.z}`;return!0!==n.has(i)&&!0!==n.has(r)&&(n.add(i),n.add(r),!0)}var Xd=Object.freeze({__proto__:null,BoxGeometry:Mo,CapsuleGeometry:qh,CircleGeometry:Yh,ConeGeometry:Kh,CylinderGeometry:Zh,DodecahedronGeometry:Jh,EdgesGeometry:id,ExtrudeGeometry:Id,IcosahedronGeometry:kd,LatheGeometry:Xh,OctahedronGeometry:Dd,PlaneGeometry:qo,PolyhedronGeometry:$h,RingGeometry:Ud,ShapeGeometry:Od,SphereGeometry:Fd,TetrahedronGeometry:Bd,TorusGeometry:Hd,TorusKnotGeometry:Vd,TubeGeometry:Gd,WireframeGeometry:Wd});class qd extends Rl{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new Tl(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class Yd extends Ao{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class Zd extends Rl{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Tl(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Tl(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=wi,this.normalScale=new Rr(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ya,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Kd extends Zd{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new Rr(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return wr(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(e){this.ior=(1+.4*e)/(1-.4*e)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Tl(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new Tl(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Tl(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!==e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!==e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!==e>0&&this.version++,this._iridescence=e}get dispersion(){return this._dispersion}set dispersion(e){this._dispersion>0!==e>0&&this.version++,this._dispersion=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!==e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!==e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.dispersion=e.dispersion,this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class $d extends Rl{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Tl(16777215),this.specular=new Tl(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Tl(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=wi,this.normalScale=new Rr(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ya,this.combine=wt,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Jd extends Rl{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Tl(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Tl(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=wi,this.normalScale=new Rr(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class Qd extends Rl{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=wi,this.normalScale=new Rr(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class em extends Rl{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Tl(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Tl(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=wi,this.normalScale=new Rr(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ya,this.combine=wt,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class tm extends Rl{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Tl(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=wi,this.normalScale=new Rr(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class nm extends $u{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function im(e,t,n){return!e||!n&&e.constructor===t?e:"number"===typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e)}function rm(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)}function am(e){const t=e.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort((function(t,n){return e[t]-e[n]})),n}function lm(e,t,n){const i=e.length,r=new e.constructor(i);for(let a=0,l=0;l!==i;++a){const i=n[a]*t;for(let n=0;n!==t;++n)r[l++]=e[i+n]}return r}function om(e,t,n,i){let r=1,a=e[0];for(;void 0!==a&&void 0===a[i];)a=e[r++];if(void 0===a)return;let l=a[i];if(void 0!==l)if(Array.isArray(l))do{l=a[i],void 0!==l&&(t.push(a.time),n.push.apply(n,l)),a=e[r++]}while(void 0!==a);else if(void 0!==l.toArray)do{l=a[i],void 0!==l&&(t.push(a.time),l.toArray(n,n.length)),a=e[r++]}while(void 0!==a);else do{l=a[i],void 0!==l&&(t.push(a.time),n.push(l)),a=e[r++]}while(void 0!==a)}const sm={convertArray:im,isTypedArray:rm,getKeyframeOrder:am,sortedArray:lm,flattenJSON:om,subclip:function(e,t,n,i){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:30;const a=e.clone();a.name=t;const l=[];for(let s=0;s<a.tracks.length;++s){const e=a.tracks[s],t=e.getValueSize(),o=[],b=[];for(let a=0;a<e.times.length;++a){const l=e.times[a]*r;if(!(l<n||l>=i)){o.push(e.times[a]);for(let n=0;n<t;++n)b.push(e.values[a*t+n])}}0!==o.length&&(e.times=im(o,e.times.constructor),e.values=im(b,e.values.constructor),l.push(e))}a.tracks=l;let o=1/0;for(let s=0;s<a.tracks.length;++s)o>a.tracks[s].times[0]&&(o=a.tracks[s].times[0]);for(let s=0;s<a.tracks.length;++s)a.tracks[s].shift(-1*o);return a.resetDuration(),a},makeClipAdditive:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:e,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:30;i<=0&&(i=30);const r=n.tracks.length,a=t/i;for(let l=0;l<r;++l){const t=n.tracks[l],i=t.ValueTypeName;if("bool"===i||"string"===i)continue;const r=e.tracks.find((function(e){return e.name===t.name&&e.ValueTypeName===i}));if(void 0===r)continue;let o=0;const s=t.getValueSize();t.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(o=s/3);let b=0;const c=r.getValueSize();r.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(b=c/3);const u=t.times.length-1;let h;if(a<=t.times[0]){const e=o,n=s-o;h=t.values.slice(e,n)}else if(a>=t.times[u]){const e=u*s+o,n=e+s-o;h=t.values.slice(e,n)}else{const e=t.createInterpolant(),n=o,i=s-o;e.evaluate(a),h=e.resultBuffer.slice(n,i)}if("quaternion"===i){(new oa).fromArray(h).normalize().conjugate().toArray(h)}const d=r.times.length;for(let e=0;e<d;++e){const t=e*c+b;if("quaternion"===i)oa.multiplyQuaternionsFlat(r.values,t,h,0,r.values,t);else{const e=c-2*b;for(let n=0;n<e;++n)r.values[t+n]-=h[n]}}}return e.blendMode=pi,e}};class bm{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0!==i?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],r=t[n-1];e:{t:{let a;n:{i:if(!(e<i)){for(let a=n+2;;){if(void 0===i){if(e<r)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===a)break;if(r=i,i=t[++n],e<i)break t}a=t.length;break n}if(e>=r)break e;{const l=t[1];e<l&&(n=2,r=l);for(let a=n-2;;){if(void 0===r)return this._cachedIndex=0,this.copySampleValue_(0);if(n===a)break;if(i=r,r=t[--n-1],e>=r)break t}a=n,n=0}}for(;n<a;){const i=n+a>>>1;e<t[i]?a=i:n=i+1}if(i=t[n],r=t[n-1],void 0===r)return this._cachedIndex=0,this.copySampleValue_(0);if(void 0===i)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,r,i)}return this.interpolate_(n,r,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=e*i;for(let a=0;a!==i;++a)t[a]=n[r+a];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class cm extends bm{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:hi,endingEnd:hi}}intervalChanged_(e,t,n){const i=this.parameterPositions;let r=e-2,a=e+1,l=i[r],o=i[a];if(void 0===l)switch(this.getSettings_().endingStart){case di:r=e,l=2*t-n;break;case mi:r=i.length-2,l=t+i[r]-i[r+1];break;default:r=e,l=n}if(void 0===o)switch(this.getSettings_().endingEnd){case di:a=e,o=2*n-t;break;case mi:a=1,o=n+i[1]-i[0];break;default:a=e-1,o=t}const s=.5*(n-t),b=this.valueSize;this._weightPrev=s/(t-l),this._weightNext=s/(o-n),this._offsetPrev=r*b,this._offsetNext=a*b}interpolate_(e,t,n,i){const r=this.resultBuffer,a=this.sampleValues,l=this.valueSize,o=e*l,s=o-l,b=this._offsetPrev,c=this._offsetNext,u=this._weightPrev,h=this._weightNext,d=(n-t)/(i-t),m=d*d,f=m*d,p=-u*f+2*u*m-u*d,g=(1+u)*f+(-1.5-2*u)*m+(-.5+u)*d+1,x=(-1-h)*f+(1.5+h)*m+.5*d,v=h*f-h*m;for(let _=0;_!==l;++_)r[_]=p*a[b+_]+g*a[s+_]+x*a[o+_]+v*a[c+_];return r}}class um extends bm{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const r=this.resultBuffer,a=this.sampleValues,l=this.valueSize,o=e*l,s=o-l,b=(n-t)/(i-t),c=1-b;for(let u=0;u!==l;++u)r[u]=a[s+u]*c+a[o+u]*b;return r}}class hm extends bm{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class dm{constructor(e,t,n,i){if(void 0===e)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===t||0===t.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=im(t,this.TimeBufferType),this.values=im(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:im(e.times,Array),values:im(e.values,Array)};const t=e.getInterpolation();t!==e.DefaultInterpolation&&(n.interpolation=t)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new hm(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new um(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new cm(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case bi:t=this.InterpolantFactoryMethodDiscrete;break;case ci:t=this.InterpolantFactoryMethodLinear;break;case ui:t=this.InterpolantFactoryMethodSmooth}if(void 0===t){const t="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(e===this.DefaultInterpolation)throw new Error(t);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",t),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return bi;case this.InterpolantFactoryMethodLinear:return ci;case this.InterpolantFactoryMethodSmooth:return ui}}getValueSize(){return this.values.length/this.times.length}shift(e){if(0!==e){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(1!==e){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let r=0,a=i-1;for(;r!==i&&n[r]<e;)++r;for(;-1!==a&&n[a]>t;)--a;if(++a,0!==r||a!==i){r>=a&&(a=Math.max(a,1),r=a-1);const e=this.getValueSize();this.times=n.slice(r,a),this.values=this.values.slice(r*e,a*e)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,r=n.length;0===r&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let a=null;for(let l=0;l!==r;l++){const t=n[l];if("number"===typeof t&&isNaN(t)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,l,t),e=!1;break}if(null!==a&&a>t){console.error("THREE.KeyframeTrack: Out of order keys.",this,l,t,a),e=!1;break}a=t}if(void 0!==i&&rm(i))for(let l=0,o=i.length;l!==o;++l){const t=i[l];if(isNaN(t)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,l,t),e=!1;break}}return e}optimize(){const e=this.times.slice(),t=this.values.slice(),n=this.getValueSize(),i=this.getInterpolation()===ui,r=e.length-1;let a=1;for(let l=1;l<r;++l){let r=!1;const o=e[l];if(o!==e[l+1]&&(1!==l||o!==e[0]))if(i)r=!0;else{const e=l*n,i=e-n,a=e+n;for(let l=0;l!==n;++l){const n=t[e+l];if(n!==t[i+l]||n!==t[a+l]){r=!0;break}}}if(r){if(l!==a){e[a]=e[l];const i=l*n,r=a*n;for(let e=0;e!==n;++e)t[r+e]=t[i+e]}++a}}if(r>0){e[a]=e[r];for(let e=r*n,i=a*n,l=0;l!==n;++l)t[i+l]=t[e+l];++a}return a!==e.length?(this.times=e.slice(0,a),this.values=t.slice(0,a*n)):(this.times=e,this.values=t),this}clone(){const e=this.times.slice(),t=this.values.slice(),n=new(0,this.constructor)(this.name,e,t);return n.createInterpolant=this.createInterpolant,n}}dm.prototype.TimeBufferType=Float32Array,dm.prototype.ValueBufferType=Float32Array,dm.prototype.DefaultInterpolation=ci;class mm extends dm{constructor(e,t,n){super(e,t,n)}}mm.prototype.ValueTypeName="bool",mm.prototype.ValueBufferType=Array,mm.prototype.DefaultInterpolation=bi,mm.prototype.InterpolantFactoryMethodLinear=void 0,mm.prototype.InterpolantFactoryMethodSmooth=void 0;class fm extends dm{}fm.prototype.ValueTypeName="color";class pm extends dm{}pm.prototype.ValueTypeName="number";class gm extends bm{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const r=this.resultBuffer,a=this.sampleValues,l=this.valueSize,o=(n-t)/(i-t);let s=e*l;for(let b=s+l;s!==b;s+=4)oa.slerpFlat(r,0,a,s-l,a,s,o);return r}}class xm extends dm{InterpolantFactoryMethodLinear(e){return new gm(this.times,this.values,this.getValueSize(),e)}}xm.prototype.ValueTypeName="quaternion",xm.prototype.InterpolantFactoryMethodSmooth=void 0;class vm extends dm{constructor(e,t,n){super(e,t,n)}}vm.prototype.ValueTypeName="string",vm.prototype.ValueBufferType=Array,vm.prototype.DefaultInterpolation=bi,vm.prototype.InterpolantFactoryMethodLinear=void 0,vm.prototype.InterpolantFactoryMethodSmooth=void 0;class _m extends dm{}_m.prototype.ValueTypeName="vector";class ym{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[],i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:fi;this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=Mr(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let a=0,l=n.length;a!==l;++a)t.push(Sm(n[a]).scale(i));const r=new this(e.name,e.duration,t,e.blendMode);return r.uuid=e.uuid,r}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let r=0,a=n.length;r!==a;++r)t.push(dm.toJSON(n[r]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const r=t.length,a=[];for(let l=0;l<r;l++){let e=[],o=[];e.push((l+r-1)%r,l,(l+1)%r),o.push(0,1,0);const s=am(e);e=lm(e,1,s),o=lm(o,1,s),i||0!==e[0]||(e.push(r),o.push(o[0])),a.push(new pm(".morphTargetInfluences["+t[l].name+"]",e,o).scale(1/n))}return new this(e,-1,a)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const t=e;n=t.geometry&&t.geometry.animations||t.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},r=/^([\w-]*?)([\d]+)$/;for(let l=0,o=e.length;l<o;l++){const t=e[l],n=t.name.match(r);if(n&&n.length>1){const e=n[1];let r=i[e];r||(i[e]=r=[]),r.push(t)}}const a=[];for(const l in i)a.push(this.CreateFromMorphTargetSequence(l,i[l],t,n));return a}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(e,t,n,i,r){if(0!==n.length){const a=[],l=[];om(n,a,l,i),0!==a.length&&r.push(new e(t,a,l))}},i=[],r=e.name||"default",a=e.fps||30,l=e.blendMode;let o=e.length||-1;const s=e.hierarchy||[];for(let b=0;b<s.length;b++){const e=s[b].keys;if(e&&0!==e.length)if(e[0].morphTargets){const t={};let n;for(n=0;n<e.length;n++)if(e[n].morphTargets)for(let i=0;i<e[n].morphTargets.length;i++)t[e[n].morphTargets[i]]=-1;for(const r in t){const t=[],a=[];for(let i=0;i!==e[n].morphTargets.length;++i){const i=e[n];t.push(i.time),a.push(i.morphTarget===r?1:0)}i.push(new pm(".morphTargetInfluence["+r+"]",t,a))}o=t.length*a}else{const r=".bones["+t[b].name+"]";n(_m,r+".position",e,"pos",i),n(xm,r+".quaternion",e,"rot",i),n(_m,r+".scale",e,"scl",i)}}if(0===i.length)return null;return new this(r,o,i,l)}resetDuration(){let e=0;for(let t=0,n=this.tracks.length;t!==n;++t){const n=this.tracks[t];e=Math.max(e,n.times[n.times.length-1])}return this.duration=e,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function Sm(e){if(void 0===e.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const t=function(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return pm;case"vector":case"vector2":case"vector3":case"vector4":return _m;case"color":return fm;case"quaternion":return xm;case"bool":case"boolean":return mm;case"string":return vm}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+e)}(e.type);if(void 0===e.times){const t=[],n=[];om(e.keys,t,n,"value"),e.times=t,e.values=n}return void 0!==t.parse?t.parse(e):new t(e.name,e.times,e.values,e.interpolation)}const Mm={enabled:!1,files:{},add:function(e,t){!1!==this.enabled&&(this.files[e]=t)},get:function(e){if(!1!==this.enabled)return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}};class wm{constructor(e,t,n){const i=this;let r,a=!1,l=0,o=0;const s=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(e){o++,!1===a&&void 0!==i.onStart&&i.onStart(e,l,o),a=!0},this.itemEnd=function(e){l++,void 0!==i.onProgress&&i.onProgress(e,l,o),l===o&&(a=!1,void 0!==i.onLoad&&i.onLoad())},this.itemError=function(e){void 0!==i.onError&&i.onError(e)},this.resolveURL=function(e){return r?r(e):e},this.setURLModifier=function(e){return r=e,this},this.addHandler=function(e,t){return s.push(e,t),this},this.removeHandler=function(e){const t=s.indexOf(e);return-1!==t&&s.splice(t,2),this},this.getHandler=function(e){for(let t=0,n=s.length;t<n;t+=2){const n=s[t],i=s[t+1];if(n.global&&(n.lastIndex=0),n.test(e))return i}return null}}}const zm=new wm;class Em{constructor(e){this.manager=void 0!==e?e:zm,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise((function(i,r){n.load(e,i,t,r)}))}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}Em.DEFAULT_MATERIAL_NAME="__DEFAULT";const Tm={};class Am extends Error{constructor(e,t){super(e),this.response=t}}class Cm extends Em{constructor(e){super(e)}load(e,t,n,i){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const r=Mm.get(e);if(void 0!==r)return this.manager.itemStart(e),setTimeout((()=>{t&&t(r),this.manager.itemEnd(e)}),0),r;if(void 0!==Tm[e])return void Tm[e].push({onLoad:t,onProgress:n,onError:i});Tm[e]=[],Tm[e].push({onLoad:t,onProgress:n,onError:i});const a=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),l=this.mimeType,o=this.responseType;fetch(a).then((t=>{if(200===t.status||0===t.status){if(0===t.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),"undefined"===typeof ReadableStream||void 0===t.body||void 0===t.body.getReader)return t;const n=Tm[e],i=t.body.getReader(),r=t.headers.get("X-File-Size")||t.headers.get("Content-Length"),a=r?parseInt(r):0,l=0!==a;let o=0;const s=new ReadableStream({start(e){!function t(){i.read().then((i=>{let{done:r,value:s}=i;if(r)e.close();else{o+=s.byteLength;const i=new ProgressEvent("progress",{lengthComputable:l,loaded:o,total:a});for(let e=0,t=n.length;e<t;e++){const t=n[e];t.onProgress&&t.onProgress(i)}e.enqueue(s),t()}}),(t=>{e.error(t)}))}()}});return new Response(s)}throw new Am(`fetch for "${t.url}" responded with ${t.status}: ${t.statusText}`,t)})).then((e=>{switch(o){case"arraybuffer":return e.arrayBuffer();case"blob":return e.blob();case"document":return e.text().then((e=>(new DOMParser).parseFromString(e,l)));case"json":return e.json();default:if(void 0===l)return e.text();{const t=/charset="?([^;"\s]*)"?/i.exec(l),n=t&&t[1]?t[1].toLowerCase():void 0,i=new TextDecoder(n);return e.arrayBuffer().then((e=>i.decode(e)))}}})).then((t=>{Mm.add(e,t);const n=Tm[e];delete Tm[e];for(let e=0,i=n.length;e<i;e++){const i=n[e];i.onLoad&&i.onLoad(t)}})).catch((t=>{const n=Tm[e];if(void 0===n)throw this.manager.itemError(e),t;delete Tm[e];for(let e=0,i=n.length;e<i;e++){const i=n[e];i.onError&&i.onError(t)}this.manager.itemError(e)})).finally((()=>{this.manager.itemEnd(e)})),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class Rm extends Em{constructor(e){super(e)}load(e,t,n,i){const r=this,a=new Cm(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,(function(n){try{t(r.parse(JSON.parse(n)))}catch(VS){i?i(VS):console.error(VS),r.manager.itemError(e)}}),n,i)}parse(e){const t=[];for(let n=0;n<e.length;n++){const i=ym.parse(e[n]);t.push(i)}return t}}class Pm extends Em{constructor(e){super(e)}load(e,t,n,i){const r=this,a=[],l=new _h,o=new Cm(this.manager);o.setPath(this.path),o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setWithCredentials(r.withCredentials);let s=0;function b(b){o.load(e[b],(function(e){const n=r.parse(e,!0);a[b]={width:n.width,height:n.height,format:n.format,mipmaps:n.mipmaps},s+=1,6===s&&(1===n.mipmapCount&&(l.minFilter=$t),l.image=a,l.format=n.format,l.needsUpdate=!0,t&&t(l))}),n,i)}if(Array.isArray(e))for(let c=0,u=e.length;c<u;++c)b(c);else o.load(e,(function(e){const n=r.parse(e,!0);if(n.isCubemap){const e=n.mipmaps.length/n.mipmapCount;for(let t=0;t<e;t++){a[t]={mipmaps:[]};for(let e=0;e<n.mipmapCount;e++)a[t].mipmaps.push(n.mipmaps[t*n.mipmapCount+e]),a[t].format=n.format,a[t].width=n.width,a[t].height=n.height}l.image=a}else l.image.width=n.width,l.image.height=n.height,l.mipmaps=n.mipmaps;1===n.mipmapCount&&(l.minFilter=$t),l.format=n.format,l.needsUpdate=!0,t&&t(l)}),n,i);return l}}class Lm extends Em{constructor(e){super(e)}load(e,t,n,i){void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,a=Mm.get(e);if(void 0!==a)return r.manager.itemStart(e),setTimeout((function(){t&&t(a),r.manager.itemEnd(e)}),0),a;const l=Dr("img");function o(){b(),Mm.add(e,this),t&&t(this),r.manager.itemEnd(e)}function s(t){b(),i&&i(t),r.manager.itemError(e),r.manager.itemEnd(e)}function b(){l.removeEventListener("load",o,!1),l.removeEventListener("error",s,!1)}return l.addEventListener("load",o,!1),l.addEventListener("error",s,!1),"data:"!==e.slice(0,5)&&void 0!==this.crossOrigin&&(l.crossOrigin=this.crossOrigin),r.manager.itemStart(e),l.src=e,l}}class Im extends Em{constructor(e){super(e)}load(e,t,n,i){const r=new Do;r.colorSpace=Ti;const a=new Lm(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);let l=0;function o(n){a.load(e[n],(function(e){r.images[n]=e,l++,6===l&&(r.needsUpdate=!0,t&&t(r))}),void 0,i)}for(let s=0;s<e.length;++s)o(s);return r}}class Nm extends Em{constructor(e){super(e)}load(e,t,n,i){const r=this,a=new vu,l=new Cm(this.manager);return l.setResponseType("arraybuffer"),l.setRequestHeader(this.requestHeader),l.setPath(this.path),l.setWithCredentials(r.withCredentials),l.load(e,(function(e){let n;try{n=r.parse(e)}catch(Sx){if(void 0===i)return void console.error(Sx);i(Sx)}void 0!==n.image?a.image=n.image:void 0!==n.data&&(a.image.width=n.width,a.image.height=n.height,a.image.data=n.data),a.wrapS=void 0!==n.wrapS?n.wrapS:Wt,a.wrapT=void 0!==n.wrapT?n.wrapT:Wt,a.magFilter=void 0!==n.magFilter?n.magFilter:$t,a.minFilter=void 0!==n.minFilter?n.minFilter:$t,a.anisotropy=void 0!==n.anisotropy?n.anisotropy:1,void 0!==n.colorSpace&&(a.colorSpace=n.colorSpace),void 0!==n.flipY&&(a.flipY=n.flipY),void 0!==n.format&&(a.format=n.format),void 0!==n.type&&(a.type=n.type),void 0!==n.mipmaps&&(a.mipmaps=n.mipmaps,a.minFilter=en),1===n.mipmapCount&&(a.minFilter=$t),void 0!==n.generateMipmaps&&(a.generateMipmaps=n.generateMipmaps),a.needsUpdate=!0,t&&t(a,n)}),n,i),a}}class km extends Em{constructor(e){super(e)}load(e,t,n,i){const r=new Qr,a=new Lm(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,(function(e){r.image=e,r.needsUpdate=!0,void 0!==t&&t(r)}),n,i),r}}class Dm extends ul{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;super(),this.isLight=!0,this.type="Light",this.color=new Tl(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),void 0!==this.shadow&&(t.object.shadow=this.shadow.toJSON()),void 0!==this.target&&(t.object.target=this.target.uuid),t}}class Um extends Dm{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(ul.DEFAULT_UP),this.updateMatrix(),this.groundColor=new Tl(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const Om=new Oa,Fm=new sa,Bm=new sa;class Hm{constructor(e){this.camera=e,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new Rr(512,512),this.map=null,this.mapPass=null,this.matrix=new Oa,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Wo,this._frameExtents=new Rr(1,1),this._viewportCount=1,this._viewports=[new ea(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;Fm.setFromMatrixPosition(e.matrixWorld),t.position.copy(Fm),Bm.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(Bm),t.updateMatrixWorld(),Om.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Om),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(Om)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.intensity=e.intensity,this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const e={};return 1!==this.intensity&&(e.intensity=this.intensity),0!==this.bias&&(e.bias=this.bias),0!==this.normalBias&&(e.normalBias=this.normalBias),1!==this.radius&&(e.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class Vm extends Hm{constructor(){super(new Io(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,n=2*Sr*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,r=e.distance||t.far;n===t.fov&&i===t.aspect&&r===t.far||(t.fov=n,t.aspect=i,t.far=r,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class Gm extends Dm{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Math.PI/3,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:2;super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(ul.DEFAULT_UP),this.updateMatrix(),this.target=new ul,this.distance=n,this.angle=i,this.penumbra=r,this.decay=a,this.map=null,this.shadow=new Vm}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const Wm=new Oa,jm=new sa,Xm=new sa;class qm extends Hm{constructor(){super(new Io(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new Rr(4,2),this._viewportCount=6,this._viewports=[new ea(2,1,1,1),new ea(0,1,1,1),new ea(3,1,1,1),new ea(1,1,1,1),new ea(3,0,1,1),new ea(1,0,1,1)],this._cubeDirections=[new sa(1,0,0),new sa(-1,0,0),new sa(0,0,1),new sa(0,0,-1),new sa(0,1,0),new sa(0,-1,0)],this._cubeUps=[new sa(0,1,0),new sa(0,1,0),new sa(0,1,0),new sa(0,1,0),new sa(0,0,1),new sa(0,0,-1)]}updateMatrices(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=this.camera,i=this.matrix,r=e.distance||n.far;r!==n.far&&(n.far=r,n.updateProjectionMatrix()),jm.setFromMatrixPosition(e.matrixWorld),n.position.copy(jm),Xm.copy(n.position),Xm.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(Xm),n.updateMatrixWorld(),i.makeTranslation(-jm.x,-jm.y,-jm.z),Wm.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Wm)}}class Ym extends Dm{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:2;super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new qm}get power(){return 4*this.intensity*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class Zm extends Hm{constructor(){super(new ls(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class Km extends Dm{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(ul.DEFAULT_UP),this.updateMatrix(),this.target=new ul,this.shadow=new Zm}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class $m extends Dm{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class Jm extends Dm{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:10,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:10;super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class Qm{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new sa)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,r=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.282095),t.addScaledVector(a[1],.488603*i),t.addScaledVector(a[2],.488603*r),t.addScaledVector(a[3],.488603*n),t.addScaledVector(a[4],n*i*1.092548),t.addScaledVector(a[5],i*r*1.092548),t.addScaledVector(a[6],.315392*(3*r*r-1)),t.addScaledVector(a[7],n*r*1.092548),t.addScaledVector(a[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,r=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.886227),t.addScaledVector(a[1],1.023328*i),t.addScaledVector(a[2],1.023328*r),t.addScaledVector(a[3],1.023328*n),t.addScaledVector(a[4],.858086*n*i),t.addScaledVector(a[5],.858086*i*r),t.addScaledVector(a[6],.743125*r*r-.247708),t.addScaledVector(a[7],.858086*n*r),t.addScaledVector(a[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+3*i);return this}toArray(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+3*i);return e}static getBasisAt(e,t){const n=e.x,i=e.y,r=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*r,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*r,t[6]=.315392*(3*r*r-1),t[7]=1.092548*n*r,t[8]=.546274*(n*n-i*i)}}class ef extends Dm{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Qm;super(void 0,arguments.length>1&&void 0!==arguments[1]?arguments[1]:1),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class tf extends Em{constructor(e){super(e),this.textures={}}load(e,t,n,i){const r=this,a=new Cm(r.manager);a.setPath(r.path),a.setRequestHeader(r.requestHeader),a.setWithCredentials(r.withCredentials),a.load(e,(function(n){try{t(r.parse(JSON.parse(n)))}catch(VS){i?i(VS):console.error(VS),r.manager.itemError(e)}}),n,i)}parse(e){const t=this.textures;function n(e){return void 0===t[e]&&console.warn("THREE.MaterialLoader: Undefined texture",e),t[e]}const i=tf.createMaterialFromType(e.type);if(void 0!==e.uuid&&(i.uuid=e.uuid),void 0!==e.name&&(i.name=e.name),void 0!==e.color&&void 0!==i.color&&i.color.setHex(e.color),void 0!==e.roughness&&(i.roughness=e.roughness),void 0!==e.metalness&&(i.metalness=e.metalness),void 0!==e.sheen&&(i.sheen=e.sheen),void 0!==e.sheenColor&&(i.sheenColor=(new Tl).setHex(e.sheenColor)),void 0!==e.sheenRoughness&&(i.sheenRoughness=e.sheenRoughness),void 0!==e.emissive&&void 0!==i.emissive&&i.emissive.setHex(e.emissive),void 0!==e.specular&&void 0!==i.specular&&i.specular.setHex(e.specular),void 0!==e.specularIntensity&&(i.specularIntensity=e.specularIntensity),void 0!==e.specularColor&&void 0!==i.specularColor&&i.specularColor.setHex(e.specularColor),void 0!==e.shininess&&(i.shininess=e.shininess),void 0!==e.clearcoat&&(i.clearcoat=e.clearcoat),void 0!==e.clearcoatRoughness&&(i.clearcoatRoughness=e.clearcoatRoughness),void 0!==e.dispersion&&(i.dispersion=e.dispersion),void 0!==e.iridescence&&(i.iridescence=e.iridescence),void 0!==e.iridescenceIOR&&(i.iridescenceIOR=e.iridescenceIOR),void 0!==e.iridescenceThicknessRange&&(i.iridescenceThicknessRange=e.iridescenceThicknessRange),void 0!==e.transmission&&(i.transmission=e.transmission),void 0!==e.thickness&&(i.thickness=e.thickness),void 0!==e.attenuationDistance&&(i.attenuationDistance=e.attenuationDistance),void 0!==e.attenuationColor&&void 0!==i.attenuationColor&&i.attenuationColor.setHex(e.attenuationColor),void 0!==e.anisotropy&&(i.anisotropy=e.anisotropy),void 0!==e.anisotropyRotation&&(i.anisotropyRotation=e.anisotropyRotation),void 0!==e.fog&&(i.fog=e.fog),void 0!==e.flatShading&&(i.flatShading=e.flatShading),void 0!==e.blending&&(i.blending=e.blending),void 0!==e.combine&&(i.combine=e.combine),void 0!==e.side&&(i.side=e.side),void 0!==e.shadowSide&&(i.shadowSide=e.shadowSide),void 0!==e.opacity&&(i.opacity=e.opacity),void 0!==e.transparent&&(i.transparent=e.transparent),void 0!==e.alphaTest&&(i.alphaTest=e.alphaTest),void 0!==e.alphaHash&&(i.alphaHash=e.alphaHash),void 0!==e.depthFunc&&(i.depthFunc=e.depthFunc),void 0!==e.depthTest&&(i.depthTest=e.depthTest),void 0!==e.depthWrite&&(i.depthWrite=e.depthWrite),void 0!==e.colorWrite&&(i.colorWrite=e.colorWrite),void 0!==e.blendSrc&&(i.blendSrc=e.blendSrc),void 0!==e.blendDst&&(i.blendDst=e.blendDst),void 0!==e.blendEquation&&(i.blendEquation=e.blendEquation),void 0!==e.blendSrcAlpha&&(i.blendSrcAlpha=e.blendSrcAlpha),void 0!==e.blendDstAlpha&&(i.blendDstAlpha=e.blendDstAlpha),void 0!==e.blendEquationAlpha&&(i.blendEquationAlpha=e.blendEquationAlpha),void 0!==e.blendColor&&void 0!==i.blendColor&&i.blendColor.setHex(e.blendColor),void 0!==e.blendAlpha&&(i.blendAlpha=e.blendAlpha),void 0!==e.stencilWriteMask&&(i.stencilWriteMask=e.stencilWriteMask),void 0!==e.stencilFunc&&(i.stencilFunc=e.stencilFunc),void 0!==e.stencilRef&&(i.stencilRef=e.stencilRef),void 0!==e.stencilFuncMask&&(i.stencilFuncMask=e.stencilFuncMask),void 0!==e.stencilFail&&(i.stencilFail=e.stencilFail),void 0!==e.stencilZFail&&(i.stencilZFail=e.stencilZFail),void 0!==e.stencilZPass&&(i.stencilZPass=e.stencilZPass),void 0!==e.stencilWrite&&(i.stencilWrite=e.stencilWrite),void 0!==e.wireframe&&(i.wireframe=e.wireframe),void 0!==e.wireframeLinewidth&&(i.wireframeLinewidth=e.wireframeLinewidth),void 0!==e.wireframeLinecap&&(i.wireframeLinecap=e.wireframeLinecap),void 0!==e.wireframeLinejoin&&(i.wireframeLinejoin=e.wireframeLinejoin),void 0!==e.rotation&&(i.rotation=e.rotation),void 0!==e.linewidth&&(i.linewidth=e.linewidth),void 0!==e.dashSize&&(i.dashSize=e.dashSize),void 0!==e.gapSize&&(i.gapSize=e.gapSize),void 0!==e.scale&&(i.scale=e.scale),void 0!==e.polygonOffset&&(i.polygonOffset=e.polygonOffset),void 0!==e.polygonOffsetFactor&&(i.polygonOffsetFactor=e.polygonOffsetFactor),void 0!==e.polygonOffsetUnits&&(i.polygonOffsetUnits=e.polygonOffsetUnits),void 0!==e.dithering&&(i.dithering=e.dithering),void 0!==e.alphaToCoverage&&(i.alphaToCoverage=e.alphaToCoverage),void 0!==e.premultipliedAlpha&&(i.premultipliedAlpha=e.premultipliedAlpha),void 0!==e.forceSinglePass&&(i.forceSinglePass=e.forceSinglePass),void 0!==e.visible&&(i.visible=e.visible),void 0!==e.toneMapped&&(i.toneMapped=e.toneMapped),void 0!==e.userData&&(i.userData=e.userData),void 0!==e.vertexColors&&("number"===typeof e.vertexColors?i.vertexColors=e.vertexColors>0:i.vertexColors=e.vertexColors),void 0!==e.uniforms)for(const r in e.uniforms){const t=e.uniforms[r];switch(i.uniforms[r]={},t.type){case"t":i.uniforms[r].value=n(t.value);break;case"c":i.uniforms[r].value=(new Tl).setHex(t.value);break;case"v2":i.uniforms[r].value=(new Rr).fromArray(t.value);break;case"v3":i.uniforms[r].value=(new sa).fromArray(t.value);break;case"v4":i.uniforms[r].value=(new ea).fromArray(t.value);break;case"m3":i.uniforms[r].value=(new Pr).fromArray(t.value);break;case"m4":i.uniforms[r].value=(new Oa).fromArray(t.value);break;default:i.uniforms[r].value=t.value}}if(void 0!==e.defines&&(i.defines=e.defines),void 0!==e.vertexShader&&(i.vertexShader=e.vertexShader),void 0!==e.fragmentShader&&(i.fragmentShader=e.fragmentShader),void 0!==e.glslVersion&&(i.glslVersion=e.glslVersion),void 0!==e.extensions)for(const r in e.extensions)i.extensions[r]=e.extensions[r];if(void 0!==e.lights&&(i.lights=e.lights),void 0!==e.clipping&&(i.clipping=e.clipping),void 0!==e.size&&(i.size=e.size),void 0!==e.sizeAttenuation&&(i.sizeAttenuation=e.sizeAttenuation),void 0!==e.map&&(i.map=n(e.map)),void 0!==e.matcap&&(i.matcap=n(e.matcap)),void 0!==e.alphaMap&&(i.alphaMap=n(e.alphaMap)),void 0!==e.bumpMap&&(i.bumpMap=n(e.bumpMap)),void 0!==e.bumpScale&&(i.bumpScale=e.bumpScale),void 0!==e.normalMap&&(i.normalMap=n(e.normalMap)),void 0!==e.normalMapType&&(i.normalMapType=e.normalMapType),void 0!==e.normalScale){let t=e.normalScale;!1===Array.isArray(t)&&(t=[t,t]),i.normalScale=(new Rr).fromArray(t)}return void 0!==e.displacementMap&&(i.displacementMap=n(e.displacementMap)),void 0!==e.displacementScale&&(i.displacementScale=e.displacementScale),void 0!==e.displacementBias&&(i.displacementBias=e.displacementBias),void 0!==e.roughnessMap&&(i.roughnessMap=n(e.roughnessMap)),void 0!==e.metalnessMap&&(i.metalnessMap=n(e.metalnessMap)),void 0!==e.emissiveMap&&(i.emissiveMap=n(e.emissiveMap)),void 0!==e.emissiveIntensity&&(i.emissiveIntensity=e.emissiveIntensity),void 0!==e.specularMap&&(i.specularMap=n(e.specularMap)),void 0!==e.specularIntensityMap&&(i.specularIntensityMap=n(e.specularIntensityMap)),void 0!==e.specularColorMap&&(i.specularColorMap=n(e.specularColorMap)),void 0!==e.envMap&&(i.envMap=n(e.envMap)),void 0!==e.envMapRotation&&i.envMapRotation.fromArray(e.envMapRotation),void 0!==e.envMapIntensity&&(i.envMapIntensity=e.envMapIntensity),void 0!==e.reflectivity&&(i.reflectivity=e.reflectivity),void 0!==e.refractionRatio&&(i.refractionRatio=e.refractionRatio),void 0!==e.lightMap&&(i.lightMap=n(e.lightMap)),void 0!==e.lightMapIntensity&&(i.lightMapIntensity=e.lightMapIntensity),void 0!==e.aoMap&&(i.aoMap=n(e.aoMap)),void 0!==e.aoMapIntensity&&(i.aoMapIntensity=e.aoMapIntensity),void 0!==e.gradientMap&&(i.gradientMap=n(e.gradientMap)),void 0!==e.clearcoatMap&&(i.clearcoatMap=n(e.clearcoatMap)),void 0!==e.clearcoatRoughnessMap&&(i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),void 0!==e.clearcoatNormalMap&&(i.clearcoatNormalMap=n(e.clearcoatNormalMap)),void 0!==e.clearcoatNormalScale&&(i.clearcoatNormalScale=(new Rr).fromArray(e.clearcoatNormalScale)),void 0!==e.iridescenceMap&&(i.iridescenceMap=n(e.iridescenceMap)),void 0!==e.iridescenceThicknessMap&&(i.iridescenceThicknessMap=n(e.iridescenceThicknessMap)),void 0!==e.transmissionMap&&(i.transmissionMap=n(e.transmissionMap)),void 0!==e.thicknessMap&&(i.thicknessMap=n(e.thicknessMap)),void 0!==e.anisotropyMap&&(i.anisotropyMap=n(e.anisotropyMap)),void 0!==e.sheenColorMap&&(i.sheenColorMap=n(e.sheenColorMap)),void 0!==e.sheenRoughnessMap&&(i.sheenRoughnessMap=n(e.sheenRoughnessMap)),i}setTextures(e){return this.textures=e,this}static createMaterialFromType(e){return new{ShadowMaterial:qd,SpriteMaterial:Gc,RawShaderMaterial:Yd,ShaderMaterial:Ao,PointsMaterial:uh,MeshPhysicalMaterial:Kd,MeshStandardMaterial:Zd,MeshPhongMaterial:$d,MeshToonMaterial:Jd,MeshNormalMaterial:Qd,MeshLambertMaterial:em,MeshDepthMaterial:xc,MeshDistanceMaterial:vc,MeshBasicMaterial:Pl,MeshMatcapMaterial:tm,LineDashedMaterial:nm,LineBasicMaterial:$u,Material:Rl}[e]}}class nf{static decodeText(e){if(console.warn("THREE.LoaderUtils: decodeText() has been deprecated with r165 and will be removed with r175. Use TextDecoder instead."),"undefined"!==typeof TextDecoder)return(new TextDecoder).decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch(VS){return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return-1===t?"./":e.slice(0,t+1)}static resolveURL(e,t){return"string"!==typeof e||""===e?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class rf extends no{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class af extends Em{constructor(e){super(e)}load(e,t,n,i){const r=this,a=new Cm(r.manager);a.setPath(r.path),a.setRequestHeader(r.requestHeader),a.setWithCredentials(r.withCredentials),a.load(e,(function(n){try{t(r.parse(JSON.parse(n)))}catch(VS){i?i(VS):console.error(VS),r.manager.itemError(e)}}),n,i)}parse(e){const t={},n={};function i(e,i){if(void 0!==t[i])return t[i];const r=e.interleavedBuffers[i],a=function(e,t){if(void 0!==n[t])return n[t];const i=e.arrayBuffers,r=i[t],a=new Uint32Array(r).buffer;return n[t]=a,a}(e,r.buffer),l=kr(r.type,a),o=new Bc(l,r.stride);return o.uuid=r.uuid,t[i]=o,o}const r=e.isInstancedBufferGeometry?new rf:new no,a=e.data.index;if(void 0!==a){const e=kr(a.type,a.array);r.setIndex(new Fl(e,1))}const l=e.data.attributes;for(const c in l){const t=l[c];let n;if(t.isInterleavedBufferAttribute){const r=i(e.data,t.data);n=new Vc(r,t.itemSize,t.offset,t.normalized)}else{const e=kr(t.type,t.array);n=new(t.isInstancedBufferAttribute?Mu:Fl)(e,t.itemSize,t.normalized)}void 0!==t.name&&(n.name=t.name),void 0!==t.usage&&n.setUsage(t.usage),r.setAttribute(c,n)}const o=e.data.morphAttributes;if(o)for(const c in o){const t=o[c],n=[];for(let r=0,a=t.length;r<a;r++){const a=t[r];let l;if(a.isInterleavedBufferAttribute){const t=i(e.data,a.data);l=new Vc(t,a.itemSize,a.offset,a.normalized)}else{const e=kr(a.type,a.array);l=new Fl(e,a.itemSize,a.normalized)}void 0!==a.name&&(l.name=a.name),n.push(l)}r.morphAttributes[c]=n}e.data.morphTargetsRelative&&(r.morphTargetsRelative=!0);const s=e.data.groups||e.data.drawcalls||e.data.offsets;if(void 0!==s)for(let c=0,u=s.length;c!==u;++c){const e=s[c];r.addGroup(e.start,e.count,e.materialIndex)}const b=e.data.boundingSphere;if(void 0!==b){const e=new sa;void 0!==b.center&&e.fromArray(b.center),r.boundingSphere=new Ca(e,b.radius)}return e.name&&(r.name=e.name),e.userData&&(r.userData=e.userData),r}}class lf extends Em{constructor(e){super(e)}load(e,t,n,i){const r=this,a=""===this.path?nf.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||a;const l=new Cm(this.manager);l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(e,(function(n){let a=null;try{a=JSON.parse(n)}catch(Sx){return void 0!==i&&i(Sx),void console.error("THREE:ObjectLoader: Can't parse "+e+".",Sx.message)}const l=a.metadata;if(void 0===l||void 0===l.type||"geometry"===l.type.toLowerCase())return void 0!==i&&i(new Error("THREE.ObjectLoader: Can't load "+e)),void console.error("THREE.ObjectLoader: Can't load "+e);r.parse(a,t)}),n,i)}async loadAsync(e,t){const n=""===this.path?nf.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||n;const i=new Cm(this.manager);i.setPath(this.path),i.setRequestHeader(this.requestHeader),i.setWithCredentials(this.withCredentials);const r=await i.loadAsync(e,t),a=JSON.parse(r),l=a.metadata;if(void 0===l||void 0===l.type||"geometry"===l.type.toLowerCase())throw new Error("THREE.ObjectLoader: Can't load "+e);return await this.parseAsync(a)}parse(e,t){const n=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),r=this.parseGeometries(e.geometries,i),a=this.parseImages(e.images,(function(){void 0!==t&&t(s)})),l=this.parseTextures(e.textures,a),o=this.parseMaterials(e.materials,l),s=this.parseObject(e.object,r,o,l,n),b=this.parseSkeletons(e.skeletons,s);if(this.bindSkeletons(s,b),this.bindLightTargets(s),void 0!==t){let e=!1;for(const t in a)if(a[t].data instanceof HTMLImageElement){e=!0;break}!1===e&&t(s)}return s}async parseAsync(e){const t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,n),r=await this.parseImagesAsync(e.images),a=this.parseTextures(e.textures,r),l=this.parseMaterials(e.materials,a),o=this.parseObject(e.object,i,l,a,t),s=this.parseSkeletons(e.skeletons,o);return this.bindSkeletons(o,s),this.bindLightTargets(o),o}parseShapes(e){const t={};if(void 0!==e)for(let n=0,i=e.length;n<i;n++){const i=(new rd).fromJSON(e[n]);t[i.uuid]=i}return t}parseSkeletons(e,t){const n={},i={};if(t.traverse((function(e){e.isBone&&(i[e.uuid]=e)})),void 0!==e)for(let r=0,a=e.length;r<a;r++){const t=(new Su).fromJSON(e[r],i);n[t.uuid]=t}return n}parseGeometries(e,t){const n={};if(void 0!==e){const i=new af;for(let r=0,a=e.length;r<a;r++){let a;const l=e[r];switch(l.type){case"BufferGeometry":case"InstancedBufferGeometry":a=i.parse(l);break;default:l.type in Xd?a=Xd[l.type].fromJSON(l,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${l.type}"`)}a.uuid=l.uuid,void 0!==l.name&&(a.name=l.name),void 0!==l.userData&&(a.userData=l.userData),n[l.uuid]=a}}return n}parseMaterials(e,t){const n={},i={};if(void 0!==e){const r=new tf;r.setTextures(t);for(let t=0,a=e.length;t<a;t++){const a=e[t];void 0===n[a.uuid]&&(n[a.uuid]=r.parse(a)),i[a.uuid]=n[a.uuid]}}return i}parseAnimations(e){const t={};if(void 0!==e)for(let n=0;n<e.length;n++){const i=e[n],r=ym.parse(i);t[r.uuid]=r}return t}parseImages(e,t){const n=this,i={};let r;function a(e){if("string"===typeof e){const t=e;return function(e){return n.manager.itemStart(e),r.load(e,(function(){n.manager.itemEnd(e)}),void 0,(function(){n.manager.itemError(e),n.manager.itemEnd(e)}))}(/^(\/\/)|([a-z]+:(\/\/)?)/i.test(t)?t:n.resourcePath+t)}return e.data?{data:kr(e.type,e.data),width:e.width,height:e.height}:null}if(void 0!==e&&e.length>0){const n=new wm(t);r=new Lm(n),r.setCrossOrigin(this.crossOrigin);for(let t=0,r=e.length;t<r;t++){const n=e[t],r=n.url;if(Array.isArray(r)){const e=[];for(let t=0,n=r.length;t<n;t++){const n=a(r[t]);null!==n&&(n instanceof HTMLImageElement?e.push(n):e.push(new vu(n.data,n.width,n.height)))}i[n.uuid]=new Kr(e)}else{const e=a(n.url);i[n.uuid]=new Kr(e)}}}return i}async parseImagesAsync(e){const t=this,n={};let i;async function r(e){if("string"===typeof e){const n=e,r=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(n)?n:t.resourcePath+n;return await i.loadAsync(r)}return e.data?{data:kr(e.type,e.data),width:e.width,height:e.height}:null}if(void 0!==e&&e.length>0){i=new Lm(this.manager),i.setCrossOrigin(this.crossOrigin);for(let t=0,i=e.length;t<i;t++){const i=e[t],a=i.url;if(Array.isArray(a)){const e=[];for(let t=0,n=a.length;t<n;t++){const n=a[t],i=await r(n);null!==i&&(i instanceof HTMLImageElement?e.push(i):e.push(new vu(i.data,i.width,i.height)))}n[i.uuid]=new Kr(e)}else{const e=await r(i.url);n[i.uuid]=new Kr(e)}}}return n}parseTextures(e,t){function n(e,t){return"number"===typeof e?e:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",e),t[e])}const i={};if(void 0!==e)for(let r=0,a=e.length;r<a;r++){const a=e[r];void 0===a.image&&console.warn('THREE.ObjectLoader: No "image" specified for',a.uuid),void 0===t[a.image]&&console.warn("THREE.ObjectLoader: Undefined image",a.image);const l=t[a.image],o=l.data;let s;Array.isArray(o)?(s=new Do,6===o.length&&(s.needsUpdate=!0)):(s=o&&o.data?new vu:new Qr,o&&(s.needsUpdate=!0)),s.source=l,s.uuid=a.uuid,void 0!==a.name&&(s.name=a.name),void 0!==a.mapping&&(s.mapping=n(a.mapping,of)),void 0!==a.channel&&(s.channel=a.channel),void 0!==a.offset&&s.offset.fromArray(a.offset),void 0!==a.repeat&&s.repeat.fromArray(a.repeat),void 0!==a.center&&s.center.fromArray(a.center),void 0!==a.rotation&&(s.rotation=a.rotation),void 0!==a.wrap&&(s.wrapS=n(a.wrap[0],sf),s.wrapT=n(a.wrap[1],sf)),void 0!==a.format&&(s.format=a.format),void 0!==a.internalFormat&&(s.internalFormat=a.internalFormat),void 0!==a.type&&(s.type=a.type),void 0!==a.colorSpace&&(s.colorSpace=a.colorSpace),void 0!==a.minFilter&&(s.minFilter=n(a.minFilter,bf)),void 0!==a.magFilter&&(s.magFilter=n(a.magFilter,bf)),void 0!==a.anisotropy&&(s.anisotropy=a.anisotropy),void 0!==a.flipY&&(s.flipY=a.flipY),void 0!==a.generateMipmaps&&(s.generateMipmaps=a.generateMipmaps),void 0!==a.premultiplyAlpha&&(s.premultiplyAlpha=a.premultiplyAlpha),void 0!==a.unpackAlignment&&(s.unpackAlignment=a.unpackAlignment),void 0!==a.compareFunction&&(s.compareFunction=a.compareFunction),void 0!==a.userData&&(s.userData=a.userData),i[a.uuid]=s}return i}parseObject(e,t,n,i,r){let a,l,o;function s(e){return void 0===t[e]&&console.warn("THREE.ObjectLoader: Undefined geometry",e),t[e]}function b(e){if(void 0!==e){if(Array.isArray(e)){const t=[];for(let i=0,r=e.length;i<r;i++){const r=e[i];void 0===n[r]&&console.warn("THREE.ObjectLoader: Undefined material",r),t.push(n[r])}return t}return void 0===n[e]&&console.warn("THREE.ObjectLoader: Undefined material",e),n[e]}}function c(e){return void 0===i[e]&&console.warn("THREE.ObjectLoader: Undefined texture",e),i[e]}switch(e.type){case"Scene":a=new Fc,void 0!==e.background&&(Number.isInteger(e.background)?a.background=new Tl(e.background):a.background=c(e.background)),void 0!==e.environment&&(a.environment=c(e.environment)),void 0!==e.fog&&("Fog"===e.fog.type?a.fog=new Oc(e.fog.color,e.fog.near,e.fog.far):"FogExp2"===e.fog.type&&(a.fog=new Uc(e.fog.color,e.fog.density)),""!==e.fog.name&&(a.fog.name=e.fog.name)),void 0!==e.backgroundBlurriness&&(a.backgroundBlurriness=e.backgroundBlurriness),void 0!==e.backgroundIntensity&&(a.backgroundIntensity=e.backgroundIntensity),void 0!==e.backgroundRotation&&a.backgroundRotation.fromArray(e.backgroundRotation),void 0!==e.environmentIntensity&&(a.environmentIntensity=e.environmentIntensity),void 0!==e.environmentRotation&&a.environmentRotation.fromArray(e.environmentRotation);break;case"PerspectiveCamera":a=new Io(e.fov,e.aspect,e.near,e.far),void 0!==e.focus&&(a.focus=e.focus),void 0!==e.zoom&&(a.zoom=e.zoom),void 0!==e.filmGauge&&(a.filmGauge=e.filmGauge),void 0!==e.filmOffset&&(a.filmOffset=e.filmOffset),void 0!==e.view&&(a.view=Object.assign({},e.view));break;case"OrthographicCamera":a=new ls(e.left,e.right,e.top,e.bottom,e.near,e.far),void 0!==e.zoom&&(a.zoom=e.zoom),void 0!==e.view&&(a.view=Object.assign({},e.view));break;case"AmbientLight":a=new $m(e.color,e.intensity);break;case"DirectionalLight":a=new Km(e.color,e.intensity),a.target=e.target||"";break;case"PointLight":a=new Ym(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":a=new Jm(e.color,e.intensity,e.width,e.height);break;case"SpotLight":a=new Gm(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay),a.target=e.target||"";break;case"HemisphereLight":a=new Um(e.color,e.groundColor,e.intensity);break;case"LightProbe":a=(new ef).fromJSON(e);break;case"SkinnedMesh":l=s(e.geometry),o=b(e.material),a=new gu(l,o),void 0!==e.bindMode&&(a.bindMode=e.bindMode),void 0!==e.bindMatrix&&a.bindMatrix.fromArray(e.bindMatrix),void 0!==e.skeleton&&(a.skeleton=e.skeleton);break;case"Mesh":l=s(e.geometry),o=b(e.material),a=new yo(l,o);break;case"InstancedMesh":l=s(e.geometry),o=b(e.material);const t=e.count,n=e.instanceMatrix,i=e.instanceColor;a=new Pu(l,o,t),a.instanceMatrix=new Mu(new Float32Array(n.array),16),void 0!==i&&(a.instanceColor=new Mu(new Float32Array(i.array),i.itemSize));break;case"BatchedMesh":l=s(e.geometry),o=b(e.material),a=new Ku(e.maxInstanceCount,e.maxVertexCount,e.maxIndexCount,o),a.geometry=l,a.perObjectFrustumCulled=e.perObjectFrustumCulled,a.sortObjects=e.sortObjects,a._drawRanges=e.drawRanges,a._reservedRanges=e.reservedRanges,a._visibility=e.visibility,a._active=e.active,a._bounds=e.bounds.map((e=>{const t=new ua;t.min.fromArray(e.boxMin),t.max.fromArray(e.boxMax);const n=new Ca;return n.radius=e.sphereRadius,n.center.fromArray(e.sphereCenter),{boxInitialized:e.boxInitialized,box:t,sphereInitialized:e.sphereInitialized,sphere:n}})),a._maxInstanceCount=e.maxInstanceCount,a._maxVertexCount=e.maxVertexCount,a._maxIndexCount=e.maxIndexCount,a._geometryInitialized=e.geometryInitialized,a._geometryCount=e.geometryCount,a._matricesTexture=c(e.matricesTexture.uuid),void 0!==e.colorsTexture&&(a._colorsTexture=c(e.colorsTexture.uuid));break;case"LOD":a=new ou;break;case"Line":a=new ah(s(e.geometry),b(e.material));break;case"LineLoop":a=new ch(s(e.geometry),b(e.material));break;case"LineSegments":a=new bh(s(e.geometry),b(e.material));break;case"PointCloud":case"Points":a=new ph(s(e.geometry),b(e.material));break;case"Sprite":a=new iu(b(e.material));break;case"Group":a=new Tc;break;case"Bone":a=new xu;break;default:a=new ul}if(a.uuid=e.uuid,void 0!==e.name&&(a.name=e.name),void 0!==e.matrix?(a.matrix.fromArray(e.matrix),void 0!==e.matrixAutoUpdate&&(a.matrixAutoUpdate=e.matrixAutoUpdate),a.matrixAutoUpdate&&a.matrix.decompose(a.position,a.quaternion,a.scale)):(void 0!==e.position&&a.position.fromArray(e.position),void 0!==e.rotation&&a.rotation.fromArray(e.rotation),void 0!==e.quaternion&&a.quaternion.fromArray(e.quaternion),void 0!==e.scale&&a.scale.fromArray(e.scale)),void 0!==e.up&&a.up.fromArray(e.up),void 0!==e.castShadow&&(a.castShadow=e.castShadow),void 0!==e.receiveShadow&&(a.receiveShadow=e.receiveShadow),e.shadow&&(void 0!==e.shadow.intensity&&(a.shadow.intensity=e.shadow.intensity),void 0!==e.shadow.bias&&(a.shadow.bias=e.shadow.bias),void 0!==e.shadow.normalBias&&(a.shadow.normalBias=e.shadow.normalBias),void 0!==e.shadow.radius&&(a.shadow.radius=e.shadow.radius),void 0!==e.shadow.mapSize&&a.shadow.mapSize.fromArray(e.shadow.mapSize),void 0!==e.shadow.camera&&(a.shadow.camera=this.parseObject(e.shadow.camera))),void 0!==e.visible&&(a.visible=e.visible),void 0!==e.frustumCulled&&(a.frustumCulled=e.frustumCulled),void 0!==e.renderOrder&&(a.renderOrder=e.renderOrder),void 0!==e.userData&&(a.userData=e.userData),void 0!==e.layers&&(a.layers.mask=e.layers),void 0!==e.children){const l=e.children;for(let e=0;e<l.length;e++)a.add(this.parseObject(l[e],t,n,i,r))}if(void 0!==e.animations){const t=e.animations;for(let e=0;e<t.length;e++){const n=t[e];a.animations.push(r[n])}}if("LOD"===e.type){void 0!==e.autoUpdate&&(a.autoUpdate=e.autoUpdate);const t=e.levels;for(let e=0;e<t.length;e++){const n=t[e],i=a.getObjectByProperty("uuid",n.object);void 0!==i&&a.addLevel(i,n.distance,n.hysteresis)}}return a}bindSkeletons(e,t){0!==Object.keys(t).length&&e.traverse((function(e){if(!0===e.isSkinnedMesh&&void 0!==e.skeleton){const n=t[e.skeleton];void 0===n?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",e.skeleton):e.bind(n,e.bindMatrix)}}))}bindLightTargets(e){e.traverse((function(t){if(t.isDirectionalLight||t.isSpotLight){const n=t.target,i=e.getObjectByProperty("uuid",n);t.target=void 0!==i?i:new ul}}))}}const of={UVMapping:Ut,CubeReflectionMapping:Ot,CubeRefractionMapping:Ft,EquirectangularReflectionMapping:Bt,EquirectangularRefractionMapping:Ht,CubeUVReflectionMapping:Vt},sf={RepeatWrapping:Gt,ClampToEdgeWrapping:Wt,MirroredRepeatWrapping:jt},bf={NearestFilter:Xt,NearestMipmapNearestFilter:qt,NearestMipmapLinearFilter:Zt,LinearFilter:$t,LinearMipmapNearestFilter:Jt,LinearMipmapLinearFilter:en};class cf extends Em{constructor(e){super(e),this.isImageBitmapLoader=!0,"undefined"===typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"===typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,a=Mm.get(e);if(void 0!==a)return r.manager.itemStart(e),a.then?void a.then((n=>{t&&t(n),r.manager.itemEnd(e)})).catch((e=>{i&&i(e)})):(setTimeout((function(){t&&t(a),r.manager.itemEnd(e)}),0),a);const l={};l.credentials="anonymous"===this.crossOrigin?"same-origin":"include",l.headers=this.requestHeader;const o=fetch(e,l).then((function(e){return e.blob()})).then((function(e){return createImageBitmap(e,Object.assign(r.options,{colorSpaceConversion:"none"}))})).then((function(n){return Mm.add(e,n),t&&t(n),r.manager.itemEnd(e),n})).catch((function(t){i&&i(t),Mm.remove(e),r.manager.itemError(e),r.manager.itemEnd(e)}));Mm.add(e,o),r.manager.itemStart(e)}}let uf;class hf{static getContext(){return void 0===uf&&(uf=new(window.AudioContext||window.webkitAudioContext)),uf}static setContext(e){uf=e}}class df extends Em{constructor(e){super(e)}load(e,t,n,i){const r=this,a=new Cm(this.manager);function l(t){i?i(t):console.error(t),r.manager.itemError(e)}a.setResponseType("arraybuffer"),a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,(function(e){try{const n=e.slice(0);hf.getContext().decodeAudioData(n,(function(e){t(e)})).catch(l)}catch(VS){l(VS)}}),n,i)}}const mf=new Oa,ff=new Oa,pf=new Oa;class gf{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new Io,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new Io,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,pf.copy(e.projectionMatrix);const n=t.eyeSep/2,i=n*t.near/t.focus,r=t.near*Math.tan(yr*t.fov*.5)/t.zoom;let a,l;ff.elements[12]=-n,mf.elements[12]=n,a=-r*t.aspect+i,l=r*t.aspect+i,pf.elements[0]=2*t.near/(l-a),pf.elements[8]=(l+a)/(l-a),this.cameraL.projectionMatrix.copy(pf),a=-r*t.aspect-i,l=r*t.aspect-i,pf.elements[0]=2*t.near/(l-a),pf.elements[8]=(l+a)/(l-a),this.cameraR.projectionMatrix.copy(pf)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(ff),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(mf)}}class xf{constructor(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=vf(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=vf();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function vf(){return("undefined"===typeof performance?Date:performance).now()}const _f=new sa,yf=new oa,Sf=new sa,Mf=new sa;class wf extends ul{constructor(){super(),this.type="AudioListener",this.context=hf.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new xf}getInput(){return this.gain}removeFilter(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(_f,yf,Sf),Mf.set(0,0,-1).applyQuaternion(yf),t.positionX){const e=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(_f.x,e),t.positionY.linearRampToValueAtTime(_f.y,e),t.positionZ.linearRampToValueAtTime(_f.z,e),t.forwardX.linearRampToValueAtTime(Mf.x,e),t.forwardY.linearRampToValueAtTime(Mf.y,e),t.forwardZ.linearRampToValueAtTime(Mf.z,e),t.upX.linearRampToValueAtTime(n.x,e),t.upY.linearRampToValueAtTime(n.y,e),t.upZ.linearRampToValueAtTime(n.z,e)}else t.setPosition(_f.x,_f.y,_f.z),t.setOrientation(Mf.x,Mf.y,Mf.z,n.x,n.y,n.z)}}class zf extends ul{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;if(!0===this.isPlaying)return void console.warn("THREE.Audio: Audio is already playing.");if(!1===this.hasPlaybackControl)return void console.warn("THREE.Audio: this Audio has no playback control.");this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")}stop(){if(!1!==this.hasPlaybackControl)return this._progress=0,null!==this.source&&(this.source.stop(),this.source.onended=null),this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(!1!==this._connected){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(e){return e||(e=[]),!0===this._connected?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){return this.detune=e,!0===this.isPlaying&&void 0!==this.source.detune&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(!1!==this.hasPlaybackControl)return this.playbackRate=e,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(!1!==this.hasPlaybackControl)return this.loop=e,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const Ef=new sa,Tf=new oa,Af=new sa,Cf=new sa;class Rf extends zf{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){super.connect(),this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),!0===this.hasPlaybackControl&&!1===this.isPlaying)return;this.matrixWorld.decompose(Ef,Tf,Af),Cf.set(0,0,1).applyQuaternion(Tf);const t=this.panner;if(t.positionX){const e=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(Ef.x,e),t.positionY.linearRampToValueAtTime(Ef.y,e),t.positionZ.linearRampToValueAtTime(Ef.z,e),t.orientationX.linearRampToValueAtTime(Cf.x,e),t.orientationY.linearRampToValueAtTime(Cf.y,e),t.orientationZ.linearRampToValueAtTime(Cf.z,e)}else t.setPosition(Ef.x,Ef.y,Ef.z),t.setOrientation(Cf.x,Cf.y,Cf.z)}}class Pf{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2048;this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}class Lf{constructor(e,t,n){let i,r,a;switch(this.binding=e,this.valueSize=n,t){case"quaternion":i=this._slerp,r=this._slerpAdditive,a=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*n),this._workIndex=5;break;case"string":case"bool":i=this._select,r=this._select,a=this._setAdditiveIdentityOther,this.buffer=new Array(5*n);break;default:i=this._lerp,r=this._lerpAdditive,a=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*n)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=r,this._setIdentity=a,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,r=e*i+i;let a=this.cumulativeWeight;if(0===a){for(let e=0;e!==i;++e)n[r+e]=n[e];a=t}else{a+=t;const e=t/a;this._mixBufferRegion(n,r,0,e,i)}this.cumulativeWeight=a}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,r=this.cumulativeWeight,a=this.cumulativeWeightAdditive,l=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){const e=t*this._origIndex;this._mixBufferRegion(n,i,e,1-r,t)}a>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let o=t,s=t+t;o!==s;++o)if(n[o]!==n[o+t]){l.setValue(n,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let r=n,a=i;r!==a;++r)t[r]=t[i+r%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=3*this.valueSize;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,r){if(i>=.5)for(let a=0;a!==r;++a)e[t+a]=e[n+a]}_slerp(e,t,n,i){oa.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,r){const a=this._workIndex*r;oa.multiplyQuaternionsFlat(e,a,e,t,e,n),oa.slerpFlat(e,t,e,t,e,a,i)}_lerp(e,t,n,i,r){const a=1-i;for(let l=0;l!==r;++l){const r=t+l;e[r]=e[r]*a+e[n+l]*i}}_lerpAdditive(e,t,n,i,r){for(let a=0;a!==r;++a){const r=t+a;e[r]=e[r]+e[n+a]*i}}}const If="\\[\\]\\.:\\/",Nf=new RegExp("["+If+"]","g"),kf="[^"+If+"]",Df="[^"+If.replace("\\.","")+"]",Uf=new RegExp("^"+/((?:WC+[\/:])*)/.source.replace("WC",kf)+/(WCOD+)?/.source.replace("WCOD",Df)+/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",kf)+/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",kf)+"$"),Of=["material","materials","bones","map"];class Ff{constructor(e,t,n){this.path=t,this.parsedPath=n||Ff.parseTrackName(t),this.node=Ff.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new Ff.Composite(e,t,n):new Ff(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(Nf,"")}static parseTrackName(e){const t=Uf.exec(e);if(null===t)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==i&&-1!==i){const e=n.nodeName.substring(i+1);-1!==Of.indexOf(e)&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=e)}if(null===n.propertyName||0===n.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(void 0===t||""===t||"."===t||-1===t||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(void 0!==n)return n}if(e.children){const n=function(e){for(let i=0;i<e.length;i++){const r=e[i];if(r.name===t||r.uuid===t)return r;const a=n(r.children);if(a)return a}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let r=t.propertyIndex;if(e||(e=Ff.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e)return void console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");if(n){let i=t.objectIndex;switch(n){case"materials":if(!e.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!e.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);e=e.material.materials;break;case"bones":if(!e.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);e=e.skeleton.bones;for(let t=0;t<e.length;t++)if(e[t].name===i){i=t;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!e.material.map)return void console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);e=e.material.map;break;default:if(void 0===e[n])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);e=e[n]}if(void 0!==i){if(void 0===e[i])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);e=e[i]}}const a=e[i];if(void 0===a){const n=t.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+n+"."+i+" but it wasn't found.",e)}let l=this.Versioning.None;this.targetObject=e,void 0!==e.needsUpdate?l=this.Versioning.NeedsUpdate:void 0!==e.matrixWorldNeedsUpdate&&(l=this.Versioning.MatrixWorldNeedsUpdate);let o=this.BindingType.Direct;if(void 0!==r){if("morphTargetInfluences"===i){if(!e.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!e.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==e.morphTargetDictionary[r]&&(r=e.morphTargetDictionary[r])}o=this.BindingType.ArrayElement,this.resolvedProperty=a,this.propertyIndex=r}else void 0!==a.fromArray&&void 0!==a.toArray?(o=this.BindingType.HasFromToArray,this.resolvedProperty=a):Array.isArray(a)?(o=this.BindingType.EntireArray,this.resolvedProperty=a):this.propertyName=i;this.getValue=this.GetterByBindingType[o],this.setValue=this.SetterByBindingTypeAndVersioning[o][l]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Ff.Composite=class{constructor(e,t,n){const i=n||Ff.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];void 0!==i&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,r=n.length;i!==r;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}},Ff.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Ff.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},Ff.prototype.GetterByBindingType=[Ff.prototype._getValue_direct,Ff.prototype._getValue_array,Ff.prototype._getValue_arrayElement,Ff.prototype._getValue_toArray],Ff.prototype.SetterByBindingTypeAndVersioning=[[Ff.prototype._setValue_direct,Ff.prototype._setValue_direct_setNeedsUpdate,Ff.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Ff.prototype._setValue_array,Ff.prototype._setValue_array_setNeedsUpdate,Ff.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Ff.prototype._setValue_arrayElement,Ff.prototype._setValue_arrayElement_setNeedsUpdate,Ff.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Ff.prototype._setValue_fromArray,Ff.prototype._setValue_fromArray_setNeedsUpdate,Ff.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class Bf{constructor(){this.isAnimationObjectGroup=!0,this.uuid=Mr(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,i=arguments.length;n!==i;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,r=this._bindings,a=r.length;let l,o=e.length,s=this.nCachedObjects_;for(let b=0,c=arguments.length;b!==c;++b){const c=arguments[b],u=c.uuid;let h=t[u];if(void 0===h){h=o++,t[u]=h,e.push(c);for(let e=0,t=a;e!==t;++e)r[e].push(new Ff(c,n[e],i[e]))}else if(h<s){l=e[h];const o=--s,b=e[o];t[b.uuid]=h,e[h]=b,t[u]=o,e[o]=c;for(let e=0,t=a;e!==t;++e){const t=r[e],a=t[o];let l=t[h];t[h]=a,void 0===l&&(l=new Ff(c,n[e],i[e])),t[o]=l}}else e[h]!==l&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=s}remove(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_;for(let a=0,l=arguments.length;a!==l;++a){const l=arguments[a],o=l.uuid,s=t[o];if(void 0!==s&&s>=r){const a=r++,b=e[a];t[b.uuid]=s,e[s]=b,t[o]=a,e[a]=l;for(let e=0,t=i;e!==t;++e){const t=n[e],i=t[a],r=t[s];t[s]=i,t[a]=r}}}this.nCachedObjects_=r}uncache(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_,a=e.length;for(let l=0,o=arguments.length;l!==o;++l){const o=arguments[l].uuid,s=t[o];if(void 0!==s)if(delete t[o],s<r){const l=--r,o=e[l],b=--a,c=e[b];t[o.uuid]=s,e[s]=o,t[c.uuid]=l,e[l]=c,e.pop();for(let e=0,t=i;e!==t;++e){const t=n[e],i=t[l],r=t[b];t[s]=i,t[l]=r,t.pop()}}else{const r=--a,l=e[r];r>0&&(t[l.uuid]=s),e[s]=l,e.pop();for(let e=0,t=i;e!==t;++e){const t=n[e];t[s]=t[r],t.pop()}}}this.nCachedObjects_=r}subscribe_(e,t){const n=this._bindingsIndicesByPath;let i=n[e];const r=this._bindings;if(void 0!==i)return r[i];const a=this._paths,l=this._parsedPaths,o=this._objects,s=o.length,b=this.nCachedObjects_,c=new Array(s);i=r.length,n[e]=i,a.push(e),l.push(t),r.push(c);for(let u=b,h=o.length;u!==h;++u){const n=o[u];c[u]=new Ff(n,e,t)}return c}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(void 0!==n){const i=this._paths,r=this._parsedPaths,a=this._bindings,l=a.length-1,o=a[l];t[e[l]]=n,a[n]=o,a.pop(),r[n]=r[l],r.pop(),i[n]=i[l],i.pop()}}}class Hf{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:t.blendMode;this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const r=t.tracks,a=r.length,l=new Array(a),o={endingStart:hi,endingEnd:hi};for(let s=0;s!==a;++s){const e=r[s].createInterpolant(null);l[s]=e,e.settings=o}this._interpolantSettings=o,this._interpolants=l,this._propertyBindings=new Array(a),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=oi,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const n=this._clip.duration,i=e._clip.duration,r=i/n,a=n/i;e.warp(1,r,t),this.warp(a,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return null!==e&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,r=i.time,a=this.timeScale;let l=this._timeScaleInterpolant;null===l&&(l=i._lendControlInterpolant(),this._timeScaleInterpolant=l);const o=l.parameterPositions,s=l.sampleValues;return o[0]=r,o[1]=r+n,s[0]=e/a,s[1]=t/a,this}stopWarping(){const e=this._timeScaleInterpolant;return null!==e&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled)return void this._updateWeight(e);const r=this._startTime;if(null!==r){const i=(e-r)*n;i<0||0===n?t=0:(this._startTime=null,t=n*i)}t*=this._updateTimeScale(e);const a=this._updateTime(t),l=this._updateWeight(e);if(l>0){const e=this._interpolants,t=this._propertyBindings;if(this.blendMode===pi)for(let n=0,i=e.length;n!==i;++n)e[n].evaluate(a),t[n].accumulateAdditive(l);else for(let n=0,r=e.length;n!==r;++n)e[n].evaluate(a),t[n].accumulate(i,l)}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(null!==n){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),0===i&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;if(null!==n){t*=n.evaluate(e)[0],e>n.parameterPositions[1]&&(this.stopWarping(),0===t?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,r=this._loopCount;const a=n===si;if(0===e)return-1===r?i:a&&1===(1&r)?t-i:i;if(n===li){-1===r&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else{if(!(i<0)){this.time=i;break e}i=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(-1===r&&(e>=0?(r=0,this._setEndings(!0,0===this.repetitions,a)):this._setEndings(0===this.repetitions,!0,a)),i>=t||i<0){const n=Math.floor(i/t);i-=t*n,r+=Math.abs(n);const l=this.repetitions-r;if(l<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(1===l){const t=e<0;this._setEndings(t,!t,a)}else this._setEndings(!1,!1,a);this._loopCount=r,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:n})}}else this.time=i;if(a&&1===(1&r))return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=di,i.endingEnd=di):(i.endingStart=e?this.zeroSlopeAtStart?di:hi:mi,i.endingEnd=t?this.zeroSlopeAtEnd?di:hi:mi)}_scheduleFading(e,t,n){const i=this._mixer,r=i.time;let a=this._weightInterpolant;null===a&&(a=i._lendControlInterpolant(),this._weightInterpolant=a);const l=a.parameterPositions,o=a.sampleValues;return l[0]=r,o[0]=t,l[1]=r+e,o[1]=n,this}}const Vf=new Float32Array(1);class Gf extends xr{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,r=i.length,a=e._propertyBindings,l=e._interpolants,o=n.uuid,s=this._bindingsByRootAndName;let b=s[o];void 0===b&&(b={},s[o]=b);for(let c=0;c!==r;++c){const e=i[c],r=e.name;let s=b[r];if(void 0!==s)++s.referenceCount,a[c]=s;else{if(s=a[c],void 0!==s){null===s._cacheIndex&&(++s.referenceCount,this._addInactiveBinding(s,o,r));continue}const i=t&&t._propertyBindings[c].binding.parsedPath;s=new Lf(Ff.create(n,r,i),e.ValueTypeName,e.getValueSize()),++s.referenceCount,this._addInactiveBinding(s,o,r),a[c]=s}l[c].resultBuffer=s.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(null===e._cacheIndex){const t=(e._localRoot||this._root).uuid,n=e._clip.uuid,i=this._actionsByClip[n];this._bindAction(e,i&&i.knownActions[0]),this._addInactiveAction(e,n,t)}const t=e._propertyBindings;for(let e=0,n=t.length;e!==n;++e){const n=t[e];0===n.useCount++&&(this._lendBinding(n),n.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let e=0,n=t.length;e!==n;++e){const n=t[e];0===--n.useCount&&(n.restoreOriginalState(),this._takeBackBinding(n))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return null!==t&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,r=this._actionsByClip;let a=r[t];if(void 0===a)a={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,r[t]=a;else{const t=a.knownActions;e._byClipCacheIndex=t.length,t.push(e)}e._cacheIndex=i.length,i.push(e),a.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const r=e._clip.uuid,a=this._actionsByClip,l=a[r],o=l.knownActions,s=o[o.length-1],b=e._byClipCacheIndex;s._byClipCacheIndex=b,o[b]=s,o.pop(),e._byClipCacheIndex=null;delete l.actionByRoot[(e._localRoot||this._root).uuid],0===o.length&&delete a[r],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const e=t[n];0===--e.referenceCount&&this._removeInactiveBinding(e)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,r=this._bindings;let a=i[t];void 0===a&&(a={},i[t]=a),a[n]=e,e._cacheIndex=r.length,r.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,r=n.path,a=this._bindingsByRootAndName,l=a[i],o=t[t.length-1],s=e._cacheIndex;o._cacheIndex=s,t[s]=o,t.pop(),delete l[r],0===Object.keys(l).length&&delete a[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return void 0===n&&(n=new um(new Float32Array(2),new Float32Array(2),1,Vf),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,r=t[i];e.__cacheIndex=i,t[i]=e,r.__cacheIndex=n,t[n]=r}clipAction(e,t,n){const i=t||this._root,r=i.uuid;let a="string"===typeof e?ym.findByName(i,e):e;const l=null!==a?a.uuid:e,o=this._actionsByClip[l];let s=null;if(void 0===n&&(n=null!==a?a.blendMode:fi),void 0!==o){const e=o.actionByRoot[r];if(void 0!==e&&e.blendMode===n)return e;s=o.knownActions[0],null===a&&(a=s._clip)}if(null===a)return null;const b=new Hf(this,a,t,n);return this._bindAction(b,s),this._addInactiveAction(b,l,r),b}existingAction(e,t){const n=t||this._root,i=n.uuid,r="string"===typeof e?ym.findByName(n,e):e,a=r?r.uuid:e,l=this._actionsByClip[a];return void 0!==l&&l.actionByRoot[i]||null}stopAllAction(){const e=this._actions;for(let t=this._nActiveActions-1;t>=0;--t)e[t].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,r=Math.sign(e),a=this._accuIndex^=1;for(let s=0;s!==n;++s){t[s]._update(i,e,r,a)}const l=this._bindings,o=this._nActiveBindings;for(let s=0;s!==o;++s)l[s].apply(a);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,r=i[n];if(void 0!==r){const e=r.knownActions;for(let n=0,i=e.length;n!==i;++n){const i=e[n];this._deactivateAction(i);const r=i._cacheIndex,a=t[t.length-1];i._cacheIndex=null,i._byClipCacheIndex=null,a._cacheIndex=r,t[r]=a,t.pop(),this._removeInactiveBindingsForAction(i)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const r in n){const e=n[r].actionByRoot[t];void 0!==e&&(this._deactivateAction(e),this._removeInactiveAction(e))}const i=this._bindingsByRootAndName[t];if(void 0!==i)for(const r in i){const e=i[r];e.restoreOriginalState(),this._removeInactiveBinding(e)}}uncacheAction(e,t){const n=this.existingAction(e,t);null!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class Wf{constructor(e){this.value=e}clone(){return new Wf(void 0===this.value.clone?this.value:this.value.clone())}}let jf=0;class Xf extends xr{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:jf++}),this.name="",this.usage=ar,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return-1!==t&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let n=0,i=t.length;n<i;n++){const e=Array.isArray(t[n])?t[n]:[t[n]];for(let t=0;t<e.length;t++)this.uniforms.push(e[t].clone())}return this}clone(){return(new this.constructor).copy(this)}}class qf extends Bc{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class Yf{constructor(e,t,n,i,r){this.isGLBufferAttribute=!0,this.name="",this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=i,this.count=r,this.version=0}set needsUpdate(e){!0===e&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}const Zf=new Oa;class Kf{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1/0;this.ray=new Ua(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new Za,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}setFromXRController(e){return Zf.identity().extractRotation(e.matrixWorld),this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(Zf),this}intersectObject(e){let t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];return Jf(e,this,t,!(arguments.length>1&&void 0!==arguments[1])||arguments[1]),t.sort($f),t}intersectObjects(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];for(let i=0,r=e.length;i<r;i++)Jf(e[i],this,n,t);return n.sort($f),n}}function $f(e,t){return e.distance-t.distance}function Jf(e,t,n,i){let r=!0;if(e.layers.test(t.layers)){!1===e.raycast(t,n)&&(r=!1)}if(!0===r&&!0===i){const i=e.children;for(let e=0,r=i.length;e<r;e++)Jf(i[e],t,n,!0)}}class Qf{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){const e=1e-6;return this.phi=Math.max(e,Math.min(Math.PI-e,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(wr(t/this.radius,-1,1))),this}clone(){return(new this.constructor).copy(this)}}class ep{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return this.radius=e,this.theta=t,this.y=n,this}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return(new this.constructor).copy(this)}}class tp{constructor(e,t,n,i){tp.prototype.isMatrix2=!0,this.elements=[1,0,0,1],void 0!==e&&this.set(e,t,n,i)}identity(){return this.set(1,0,0,1),this}fromArray(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;for(let n=0;n<4;n++)this.elements[n]=e[n+t];return this}set(e,t,n,i){const r=this.elements;return r[0]=e,r[2]=t,r[1]=n,r[3]=i,this}}const np=new Rr;class ip{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Rr(1/0,1/0),t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Rr(-1/0,-1/0);this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=np.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,np).distanceTo(e)}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const rp=new sa,ap=new sa;class lp{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new sa,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new sa;this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){rp.subVectors(e,this.start),ap.subVectors(this.end,this.start);const n=ap.dot(ap);let i=ap.dot(rp)/n;return t&&(i=wr(i,0,1)),i}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return(new this.constructor).copy(this)}}const op=new sa;class sp extends ul{constructor(e,t){super(),this.light=e,this.matrixAutoUpdate=!1,this.color=t,this.type="SpotLightHelper";const n=new no,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let a=0,l=1,o=32;a<o;a++,l++){const e=a/o*Math.PI*2,t=l/o*Math.PI*2;i.push(Math.cos(e),Math.sin(e),1,Math.cos(t),Math.sin(t),1)}n.setAttribute("position",new Yl(i,3));const r=new $u({fog:!1,toneMapped:!1});this.cone=new bh(n,r),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),this.parent?(this.parent.updateWorldMatrix(!0),this.matrix.copy(this.parent.matrixWorld).invert().multiply(this.light.matrixWorld)):this.matrix.copy(this.light.matrixWorld),this.matrixWorld.copy(this.light.matrixWorld);const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),op.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(op),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const bp=new sa,cp=new Oa,up=new Oa;class hp extends bh{constructor(e){const t=dp(e),n=new no,i=[],r=[],a=new Tl(0,0,1),l=new Tl(0,1,0);for(let o=0;o<t.length;o++){const e=t[o];e.parent&&e.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),r.push(a.r,a.g,a.b),r.push(l.r,l.g,l.b))}n.setAttribute("position",new Yl(i,3)),n.setAttribute("color",new Yl(r,3));super(n,new $u({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0})),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");up.copy(this.root.matrixWorld).invert();for(let r=0,a=0;r<t.length;r++){const e=t[r];e.parent&&e.parent.isBone&&(cp.multiplyMatrices(up,e.matrixWorld),bp.setFromMatrixPosition(cp),i.setXYZ(a,bp.x,bp.y,bp.z),cp.multiplyMatrices(up,e.parent.matrixWorld),bp.setFromMatrixPosition(cp),i.setXYZ(a+1,bp.x,bp.y,bp.z),a+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose()}}function dp(e){const t=[];!0===e.isBone&&t.push(e);for(let n=0;n<e.children.length;n++)t.push.apply(t,dp(e.children[n]));return t}class mp extends yo{constructor(e,t,n){super(new Fd(t,4,2),new Pl({wireframe:!0,fog:!1,toneMapped:!1})),this.light=e,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const fp=new sa,pp=new Tl,gp=new Tl;class xp extends ul{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const i=new Dd(t);i.rotateY(.5*Math.PI),this.material=new Pl({wireframe:!0,fog:!1,toneMapped:!1}),void 0===this.color&&(this.material.vertexColors=!0);const r=i.getAttribute("position"),a=new Float32Array(3*r.count);i.setAttribute("color",new Fl(a,3)),this.add(new yo(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");pp.copy(this.light.color),gp.copy(this.light.groundColor);for(let e=0,n=t.count;e<n;e++){const i=e<n/2?pp:gp;t.setXYZ(e,i.r,i.g,i.b)}t.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),e.lookAt(fp.setFromMatrixPosition(this.light.matrixWorld).negate())}}class vp extends bh{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:10,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:10,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:4473924,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:8947848;n=new Tl(n),i=new Tl(i);const r=t/2,a=e/t,l=e/2,o=[],s=[];for(let c=0,u=0,h=-l;c<=t;c++,h+=a){o.push(-l,0,h,l,0,h),o.push(h,0,-l,h,0,l);const e=c===r?n:i;e.toArray(s,u),u+=3,e.toArray(s,u),u+=3,e.toArray(s,u),u+=3,e.toArray(s,u),u+=3}const b=new no;b.setAttribute("position",new Yl(o,3)),b.setAttribute("color",new Yl(s,3));super(b,new $u({vertexColors:!0,toneMapped:!1})),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class _p extends bh{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:10,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:16,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:8,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:64,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:4473924,a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:8947848;r=new Tl(r),a=new Tl(a);const l=[],o=[];if(t>1)for(let b=0;b<t;b++){const n=b/t*(2*Math.PI),i=Math.sin(n)*e,s=Math.cos(n)*e;l.push(0,0,0),l.push(i,0,s);const c=1&b?r:a;o.push(c.r,c.g,c.b),o.push(c.r,c.g,c.b)}for(let b=0;b<n;b++){const t=1&b?r:a,s=e-e/n*b;for(let e=0;e<i;e++){let n=e/i*(2*Math.PI),r=Math.sin(n)*s,a=Math.cos(n)*s;l.push(r,0,a),o.push(t.r,t.g,t.b),n=(e+1)/i*(2*Math.PI),r=Math.sin(n)*s,a=Math.cos(n)*s,l.push(r,0,a),o.push(t.r,t.g,t.b)}}const s=new no;s.setAttribute("position",new Yl(l,3)),s.setAttribute("color",new Yl(o,3));super(s,new $u({vertexColors:!0,toneMapped:!1})),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const yp=new sa,Sp=new sa,Mp=new sa;class wp extends ul{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",void 0===t&&(t=1);let i=new no;i.setAttribute("position",new Yl([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const r=new $u({fog:!1,toneMapped:!1});this.lightPlane=new ah(i,r),this.add(this.lightPlane),i=new no,i.setAttribute("position",new Yl([0,0,0,0,0,1],3)),this.targetLine=new ah(i,r),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),yp.setFromMatrixPosition(this.light.matrixWorld),Sp.setFromMatrixPosition(this.light.target.matrixWorld),Mp.subVectors(Sp,yp),this.lightPlane.lookAt(Sp),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Sp),this.targetLine.scale.z=Mp.length()}}const zp=new sa,Ep=new Co;class Tp extends bh{constructor(e){const t=new no,n=new $u({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],r=[],a={};function l(e,t){o(e),o(t)}function o(e){i.push(0,0,0),r.push(0,0,0),void 0===a[e]&&(a[e]=[]),a[e].push(i.length/3-1)}l("n1","n2"),l("n2","n4"),l("n4","n3"),l("n3","n1"),l("f1","f2"),l("f2","f4"),l("f4","f3"),l("f3","f1"),l("n1","f1"),l("n2","f2"),l("n3","f3"),l("n4","f4"),l("p","n1"),l("p","n2"),l("p","n3"),l("p","n4"),l("u1","u2"),l("u2","u3"),l("u3","u1"),l("c","t"),l("p","c"),l("cn1","cn2"),l("cn3","cn4"),l("cf1","cf2"),l("cf3","cf4"),t.setAttribute("position",new Yl(i,3)),t.setAttribute("color",new Yl(r,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=a,this.update();const s=new Tl(16755200),b=new Tl(16711680),c=new Tl(43775),u=new Tl(16777215),h=new Tl(3355443);this.setColors(s,b,c,u,h)}setColors(e,t,n,i,r){const a=this.geometry.getAttribute("color");a.setXYZ(0,e.r,e.g,e.b),a.setXYZ(1,e.r,e.g,e.b),a.setXYZ(2,e.r,e.g,e.b),a.setXYZ(3,e.r,e.g,e.b),a.setXYZ(4,e.r,e.g,e.b),a.setXYZ(5,e.r,e.g,e.b),a.setXYZ(6,e.r,e.g,e.b),a.setXYZ(7,e.r,e.g,e.b),a.setXYZ(8,e.r,e.g,e.b),a.setXYZ(9,e.r,e.g,e.b),a.setXYZ(10,e.r,e.g,e.b),a.setXYZ(11,e.r,e.g,e.b),a.setXYZ(12,e.r,e.g,e.b),a.setXYZ(13,e.r,e.g,e.b),a.setXYZ(14,e.r,e.g,e.b),a.setXYZ(15,e.r,e.g,e.b),a.setXYZ(16,e.r,e.g,e.b),a.setXYZ(17,e.r,e.g,e.b),a.setXYZ(18,e.r,e.g,e.b),a.setXYZ(19,e.r,e.g,e.b),a.setXYZ(20,e.r,e.g,e.b),a.setXYZ(21,e.r,e.g,e.b),a.setXYZ(22,e.r,e.g,e.b),a.setXYZ(23,e.r,e.g,e.b),a.setXYZ(24,t.r,t.g,t.b),a.setXYZ(25,t.r,t.g,t.b),a.setXYZ(26,t.r,t.g,t.b),a.setXYZ(27,t.r,t.g,t.b),a.setXYZ(28,t.r,t.g,t.b),a.setXYZ(29,t.r,t.g,t.b),a.setXYZ(30,t.r,t.g,t.b),a.setXYZ(31,t.r,t.g,t.b),a.setXYZ(32,n.r,n.g,n.b),a.setXYZ(33,n.r,n.g,n.b),a.setXYZ(34,n.r,n.g,n.b),a.setXYZ(35,n.r,n.g,n.b),a.setXYZ(36,n.r,n.g,n.b),a.setXYZ(37,n.r,n.g,n.b),a.setXYZ(38,i.r,i.g,i.b),a.setXYZ(39,i.r,i.g,i.b),a.setXYZ(40,r.r,r.g,r.b),a.setXYZ(41,r.r,r.g,r.b),a.setXYZ(42,r.r,r.g,r.b),a.setXYZ(43,r.r,r.g,r.b),a.setXYZ(44,r.r,r.g,r.b),a.setXYZ(45,r.r,r.g,r.b),a.setXYZ(46,r.r,r.g,r.b),a.setXYZ(47,r.r,r.g,r.b),a.setXYZ(48,r.r,r.g,r.b),a.setXYZ(49,r.r,r.g,r.b),a.needsUpdate=!0}update(){const e=this.geometry,t=this.pointMap;Ep.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),Ap("c",t,e,Ep,0,0,-1),Ap("t",t,e,Ep,0,0,1),Ap("n1",t,e,Ep,-1,-1,-1),Ap("n2",t,e,Ep,1,-1,-1),Ap("n3",t,e,Ep,-1,1,-1),Ap("n4",t,e,Ep,1,1,-1),Ap("f1",t,e,Ep,-1,-1,1),Ap("f2",t,e,Ep,1,-1,1),Ap("f3",t,e,Ep,-1,1,1),Ap("f4",t,e,Ep,1,1,1),Ap("u1",t,e,Ep,.7,1.1,-1),Ap("u2",t,e,Ep,-.7,1.1,-1),Ap("u3",t,e,Ep,0,2,-1),Ap("cf1",t,e,Ep,-1,0,1),Ap("cf2",t,e,Ep,1,0,1),Ap("cf3",t,e,Ep,0,-1,1),Ap("cf4",t,e,Ep,0,1,1),Ap("cn1",t,e,Ep,-1,0,-1),Ap("cn2",t,e,Ep,1,0,-1),Ap("cn3",t,e,Ep,0,-1,-1),Ap("cn4",t,e,Ep,0,1,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function Ap(e,t,n,i,r,a,l){zp.set(r,a,l).unproject(i);const o=t[e];if(void 0!==o){const e=n.getAttribute("position");for(let t=0,n=o.length;t<n;t++)e.setXYZ(o[t],zp.x,zp.y,zp.z)}}const Cp=new ua;class Rp extends bh{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:16776960;const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(24),r=new no;r.setIndex(new Fl(n,1)),r.setAttribute("position",new Fl(i,3)),super(r,new $u({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(void 0!==e&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&Cp.setFromObject(this.object),Cp.isEmpty())return;const t=Cp.min,n=Cp.max,i=this.geometry.attributes.position,r=i.array;r[0]=n.x,r[1]=n.y,r[2]=n.z,r[3]=t.x,r[4]=n.y,r[5]=n.z,r[6]=t.x,r[7]=t.y,r[8]=n.z,r[9]=n.x,r[10]=t.y,r[11]=n.z,r[12]=n.x,r[13]=n.y,r[14]=t.z,r[15]=t.x,r[16]=n.y,r[17]=t.z,r[18]=t.x,r[19]=t.y,r[20]=t.z,r[21]=n.x,r[22]=t.y,r[23]=t.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class Pp extends bh{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:16776960;const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new no;i.setIndex(new Fl(n,1)),i.setAttribute("position",new Yl([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),super(i,new $u({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}}class Lp extends ah{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;const n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:16776960,i=new no;i.setAttribute("position",new Yl([1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],3)),i.computeBoundingSphere(),super(i,new $u({color:n,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const r=new no;r.setAttribute("position",new Yl([1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],3)),r.computeBoundingSphere(),this.add(new yo(r,new Pl({color:n,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const Ip=new sa;let Np,kp;class Dp extends ul{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new sa(0,0,1),t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new sa(0,0,0),n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:16776960,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.2*n,a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:.2*r;super(),this.type="ArrowHelper",void 0===Np&&(Np=new no,Np.setAttribute("position",new Yl([0,0,0,0,1,0],3)),kp=new Zh(0,.5,1,5,1),kp.translate(0,-.5,0)),this.position.copy(t),this.line=new ah(Np,new $u({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new yo(kp,new Pl({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,r,a)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{Ip.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(Ip,t)}}setLength(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.2*e,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:.2*t;this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class Up extends bh{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=new no;n.setAttribute("position",new Yl(t,3)),n.setAttribute("color",new Yl([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));super(n,new $u({vertexColors:!0,toneMapped:!1})),this.type="AxesHelper"}setColors(e,t,n){const i=new Tl,r=this.geometry.attributes.color.array;return i.set(e),i.toArray(r,0),i.toArray(r,3),i.set(t),i.toArray(r,6),i.toArray(r,9),i.set(n),i.toArray(r,12),i.toArray(r,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class Op{constructor(){this.type="ShapePath",this.color=new Tl,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new jh,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this}bezierCurveTo(e,t,n,i,r,a){return this.currentPath.bezierCurveTo(e,t,n,i,r,a),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(e,t){const n=t.length;let i=!1;for(let r=n-1,a=0;a<n;r=a++){let n=t[r],l=t[a],o=l.x-n.x,s=l.y-n.y;if(Math.abs(s)>Number.EPSILON){if(s<0&&(n=t[a],o=-o,l=t[r],s=-s),e.y<n.y||e.y>l.y)continue;if(e.y===n.y){if(e.x===n.x)return!0}else{const t=s*(e.x-n.x)-o*(e.y-n.y);if(0===t)return!0;if(t<0)continue;i=!i}}else{if(e.y!==n.y)continue;if(l.x<=e.x&&e.x<=n.x||n.x<=e.x&&e.x<=l.x)return!0}}return i}const n=Rd.isClockWise,i=this.subPaths;if(0===i.length)return[];let r,a,l;const o=[];if(1===i.length)return a=i[0],l=new rd,l.curves=a.curves,o.push(l),o;let s=!n(i[0].getPoints());s=e?!s:s;const b=[],c=[];let u,h,d=[],m=0;c[m]=void 0,d[m]=[];for(let f=0,p=i.length;f<p;f++)a=i[f],u=a.getPoints(),r=n(u),r=e?!r:r,r?(!s&&c[m]&&m++,c[m]={s:new rd,p:u},c[m].s.curves=a.curves,s&&m++,d[m]=[]):d[m].push({h:a,p:u[0]});if(!c[0])return function(e){const t=[];for(let n=0,i=e.length;n<i;n++){const i=e[n],r=new rd;r.curves=i.curves,t.push(r)}return t}(i);if(c.length>1){let e=!1,n=0;for(let t=0,i=c.length;t<i;t++)b[t]=[];for(let i=0,r=c.length;i<r;i++){const r=d[i];for(let a=0;a<r.length;a++){const l=r[a];let o=!0;for(let r=0;r<c.length;r++)t(l.p,c[r].p)&&(i!==r&&n++,o?(o=!1,b[r].push(l)):e=!0);o&&b[i].push(l)}}n>0&&!1===e&&(d=b)}for(let f=0,p=c.length;f<p;f++){l=c[f].s,o.push(l),h=d[f];for(let e=0,t=h.length;e<t;e++)l.holes.push(h[e].h)}return o}}class Fp extends xr{constructor(e,t){super(),this.object=e,this.domElement=t,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(){}disconnect(){}dispose(){}update(){}}class Bp extends na{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};console.warn('THREE.WebGLMultipleRenderTargets has been deprecated and will be removed in r172. Use THREE.WebGLRenderTarget and set the "count" parameter to enable MRT.'),super(e,t,{...i,count:n}),this.isWebGLMultipleRenderTargets=!0}get texture(){return this.textures}}"undefined"!==typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Re}})),"undefined"!==typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Re);var Hp=n(878);function Vp(e){let t;const n=new Set,i=(e,i)=>{const r="function"===typeof e?e(t):e;if(r!==t){const e=t;t=i?r:Object.assign({},t,r),n.forEach((n=>n(t,e)))}},r=()=>t,a={setState:i,getState:r,subscribe:(e,i,a)=>i||a?function(e){let i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:r,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Object.is;console.warn("[DEPRECATED] Please use `subscribeWithSelector` middleware");let l=i(t);function o(){const n=i(t);if(!a(l,n)){const t=l;e(l=n,t)}}return n.add(o),()=>n.delete(o)}(e,i,a):(n.add(e),()=>n.delete(e)),destroy:()=>n.clear()};return t=e(i,r,a),a}const Gp="undefined"===typeof window||!window.navigator||/ServerSideRendering|^Deno\//.test(window.navigator.userAgent)?i.useEffect:i.useLayoutEffect;const Wp=[];function jp(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:(e,t)=>e===t;if(e===t)return!0;if(!e||!t)return!1;const i=e.length;if(t.length!==i)return!1;for(let r=0;r<i;r++)if(!n(e[r],t[r]))return!1;return!0}function Xp(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};null===t&&(t=[e]);for(const l of Wp)if(jp(t,l.keys,l.equal)){if(n)return;if(Object.prototype.hasOwnProperty.call(l,"error"))throw l.error;if(Object.prototype.hasOwnProperty.call(l,"response"))return i.lifespan&&i.lifespan>0&&(l.timeout&&clearTimeout(l.timeout),l.timeout=setTimeout(l.remove,i.lifespan)),l.response;if(!n)throw l.promise}const r={keys:t,equal:i.equal,remove:()=>{const e=Wp.indexOf(r);-1!==e&&Wp.splice(e,1)},promise:(a=e,"object"===typeof a&&"function"===typeof a.then?e:e(...t)).then((e=>{r.response=e,i.lifespan&&i.lifespan>0&&(r.timeout=setTimeout(r.remove,i.lifespan))})).catch((e=>r.error=e))};var a;if(Wp.push(r),!n)throw r.promise}const qp=(e,t,n)=>Xp(e,t,!1,n),Yp=(e,t,n)=>{Xp(e,t,!0,n)},Zp=e=>{if(void 0===e||0===e.length)Wp.splice(0,Wp.length);else{const t=Wp.find((t=>jp(e,t.keys,t.equal)));t&&t.remove()}};var Kp=n(414),$p=n(235),Jp=n.n($p),Qp=n(773);const eg={},tg=e=>{Object.assign(eg,e)};var ng,ig;const rg=e=>"colorSpace"in e||"outputColorSpace"in e,ag=()=>{var e;return null!=(e=eg.ColorManagement)?e:null},lg=e=>e&&e.isOrthographicCamera,og="undefined"!==typeof window&&(null!=(ng=window.document)&&ng.createElement||"ReactNative"===(null==(ig=window.navigator)?void 0:ig.product))?i.useLayoutEffect:i.useEffect;function sg(e){const t=i.useRef(e);return og((()=>{t.current=e}),[e]),t}function bg(e){let{set:t}=e;return og((()=>(t(new Promise((()=>null))),()=>t(!1))),[t]),null}class cg extends i.Component{constructor(){super(...arguments),this.state={error:!1}}componentDidCatch(e){this.props.set(e)}render(){return this.state.error?null:this.props.children}}cg.getDerivedStateFromError=()=>({error:!0});const ug="__default",hg=new Map,dg=e=>e&&!!e.memoized&&!!e.changes;function mg(e){var t;const n="undefined"!==typeof window?null!=(t=window.devicePixelRatio)?t:2:1;return Array.isArray(e)?Math.min(Math.max(e[0],n),e[1]):e}const fg=e=>{var t;return null==(t=e.__r3f)?void 0:t.root.getState()};function pg(e){let t=e.__r3f.root;for(;t.getState().previousRoot;)t=t.getState().previousRoot;return t}const gg={obj:e=>e===Object(e)&&!gg.arr(e)&&"function"!==typeof e,fun:e=>"function"===typeof e,str:e=>"string"===typeof e,num:e=>"number"===typeof e,boo:e=>"boolean"===typeof e,und:e=>void 0===e,arr:e=>Array.isArray(e),equ(e,t){let{arrays:n="shallow",objects:i="reference",strict:r=!0}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(typeof e!==typeof t||!!e!==!!t)return!1;if(gg.str(e)||gg.num(e)||gg.boo(e))return e===t;const a=gg.obj(e);if(a&&"reference"===i)return e===t;const l=gg.arr(e);if(l&&"reference"===n)return e===t;if((l||a)&&e===t)return!0;let o;for(o in e)if(!(o in t))return!1;if(a&&"shallow"===n&&"shallow"===i){for(o in r?t:e)if(!gg.equ(e[o],t[o],{strict:r,objects:"reference"}))return!1}else for(o in r?t:e)if(e[o]!==t[o])return!1;if(gg.und(o)){if(l&&0===e.length&&0===t.length)return!0;if(a&&0===Object.keys(e).length&&0===Object.keys(t).length)return!0;if(e!==t)return!1}return!0}};function xg(e){const t={nodes:{},materials:{}};return e&&e.traverse((e=>{e.name&&(t.nodes[e.name]=e),e.material&&!t.materials[e.material.name]&&(t.materials[e.material.name]=e.material)})),t}function vg(e,t){return e.__r3f={type:"",root:null,previousAttach:null,memoizedProps:{},eventCount:0,handlers:{},objects:[],parent:null,...t},e}function _g(e,t){let n=e;if(t.includes("-")){const i=t.split("-"),r=i.pop();return n=i.reduce(((e,t)=>e[t]),e),{target:n,key:r}}return{target:n,key:t}}const yg=/-\d+$/;function Sg(e,t,n){if(gg.str(n)){if(yg.test(n)){const t=n.replace(yg,""),{target:i,key:r}=_g(e,t);Array.isArray(i[r])||(i[r]=[])}const{target:i,key:r}=_g(e,n);t.__r3f.previousAttach=i[r],i[r]=t}else t.__r3f.previousAttach=n(e,t)}function Mg(e,t,n){var i,r;if(gg.str(n)){const{target:i,key:r}=_g(e,n),a=t.__r3f.previousAttach;void 0===a?delete i[r]:i[r]=a}else null==(i=t.__r3f)||null==i.previousAttach||i.previousAttach(e,t);null==(r=t.__r3f)||delete r.previousAttach}function wg(e,t){let{children:n,key:i,ref:r,...a}=t,{children:l,key:o,ref:s,...b}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},c=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const u=e.__r3f,h=Object.entries(a),d=[];if(c){const e=Object.keys(b);for(let t=0;t<e.length;t++)a.hasOwnProperty(e[t])||h.unshift([e[t],ug+"remove"])}h.forEach((t=>{let[n,i]=t;var r;if(null!=(r=e.__r3f)&&r.primitive&&"object"===n)return;if(gg.equ(i,b[n]))return;if(/^on(Pointer|Click|DoubleClick|ContextMenu|Wheel)/.test(n))return d.push([n,i,!0,[]]);let l=[];n.includes("-")&&(l=n.split("-")),d.push([n,i,!1,l]);for(const e in a){const t=a[e];e.startsWith(`${n}-`)&&d.push([e,t,!1,e.split("-")])}}));const m={...a};return null!=u&&u.memoizedProps&&null!=u&&u.memoizedProps.args&&(m.args=u.memoizedProps.args),null!=u&&u.memoizedProps&&null!=u&&u.memoizedProps.attach&&(m.attach=u.memoizedProps.attach),{memoized:m,changes:d}}const zg="undefined"!==typeof process&&!1;function Eg(e,t){var n;const i=e.__r3f,r=null==i?void 0:i.root,a=null==r||null==r.getState?void 0:r.getState(),{memoized:l,changes:o}=dg(t)?t:wg(e,t),s=null==i?void 0:i.eventCount;e.__r3f&&(e.__r3f.memoizedProps=l);for(let b=0;b<o.length;b++){let[t,n,r,l]=o[b];if(rg(e)){const e=3001,i="srgb",r="srgb-linear";"encoding"===t?(t="colorSpace",n=n===e?i:r):"outputEncoding"===t&&(t="outputColorSpace",n=n===e?i:r)}let s=e,c=s[t];if(l.length&&(c=l.reduce(((e,t)=>e[t]),e),!c||!c.set)){const[n,...i]=l.reverse();s=i.reverse().reduce(((e,t)=>e[t]),e),t=n}if(n===ug+"remove")if(s.constructor){let e=hg.get(s.constructor);e||(e=new s.constructor,hg.set(s.constructor,e)),n=e[t]}else n=0;if(r&&i)n?i.handlers[t]=n:delete i.handlers[t],i.eventCount=Object.keys(i.handlers).length;else if(c&&c.set&&(c.copy||c instanceof Za)){if(Array.isArray(n))c.fromArray?c.fromArray(n):c.set(...n);else if(c.copy&&n&&n.constructor&&(zg?c.constructor.name===n.constructor.name:c.constructor===n.constructor))c.copy(n);else if(void 0!==n){const e=c instanceof Tl;!e&&c.setScalar?c.setScalar(n):c instanceof Za&&n instanceof Za?c.mask=n.mask:c.set(n),!ag()&&a&&!a.linear&&e&&c.convertSRGBToLinear()}}else if(s[t]=n,s[t]instanceof Qr&&s[t].format===gn&&s[t].type===nn&&a){const e=s[t];rg(e)&&rg(a.gl)?e.colorSpace=a.gl.outputColorSpace:e.encoding=a.gl.outputEncoding}Tg(e)}if(i&&i.parent&&e.raycast&&s!==i.eventCount){const t=pg(e).getState().internal,n=t.interaction.indexOf(e);n>-1&&t.interaction.splice(n,1),i.eventCount&&t.interaction.push(e)}return!(1===o.length&&"onUpdate"===o[0][0])&&o.length&&null!=(n=e.__r3f)&&n.parent&&Ag(e),e}function Tg(e){var t,n;const i=null==(t=e.__r3f)||null==(n=t.root)||null==n.getState?void 0:n.getState();i&&0===i.internal.frames&&i.invalidate()}function Ag(e){null==e.onUpdate||e.onUpdate(e)}function Cg(e,t){e.manual||(lg(e)?(e.left=t.width/-2,e.right=t.width/2,e.top=t.height/2,e.bottom=t.height/-2):e.aspect=t.width/t.height,e.updateProjectionMatrix(),e.updateMatrixWorld())}function Rg(e){return(e.eventObject||e.object).uuid+"/"+e.index+e.instanceId}function Pg(e,t,n,i){const r=n.get(t);r&&(n.delete(t),0===n.size&&(e.delete(i),r.target.releasePointerCapture(i)))}function Lg(e){function t(e){return e.filter((e=>["Move","Over","Enter","Out","Leave"].some((t=>{var n;return null==(n=e.__r3f)?void 0:n.handlers["onPointer"+t]}))))}function n(t){const{internal:n}=e.getState();for(const e of n.hovered.values())if(!t.length||!t.find((t=>t.object===e.object&&t.index===e.index&&t.instanceId===e.instanceId))){const i=e.eventObject.__r3f,r=null==i?void 0:i.handlers;if(n.hovered.delete(Rg(e)),null!=i&&i.eventCount){const n={...e,intersections:t};null==r.onPointerOut||r.onPointerOut(n),null==r.onPointerLeave||r.onPointerLeave(n)}}}function i(e,t){for(let n=0;n<t.length;n++){const i=t[n].__r3f;null==i||null==i.handlers.onPointerMissed||i.handlers.onPointerMissed(e)}}return{handlePointer:function(r){switch(r){case"onPointerLeave":case"onPointerCancel":return()=>n([]);case"onLostPointerCapture":return t=>{const{internal:i}=e.getState();"pointerId"in t&&i.capturedMap.has(t.pointerId)&&requestAnimationFrame((()=>{i.capturedMap.has(t.pointerId)&&(i.capturedMap.delete(t.pointerId),n([]))}))}}return function(a){const{onPointerMissed:l,internal:o}=e.getState();o.lastEvent.current=a;const s="onPointerMove"===r,b="onClick"===r||"onContextMenu"===r||"onDoubleClick"===r,c=function(t,n){const i=e.getState(),r=new Set,a=[],l=n?n(i.internal.interaction):i.internal.interaction;for(let e=0;e<l.length;e++){const t=fg(l[e]);t&&(t.raycaster.camera=void 0)}i.previousRoot||null==i.events.compute||i.events.compute(t,i);let o=l.flatMap((function(e){const n=fg(e);return n&&n.events.enabled&&null!==n.raycaster.camera?(void 0===n.raycaster.camera&&(null==n.events.compute||n.events.compute(t,n,null==(i=n.previousRoot)?void 0:i.getState()),void 0===n.raycaster.camera&&(n.raycaster.camera=null)),n.raycaster.camera?n.raycaster.intersectObject(e,!0):[]):[];var i})).sort(((e,t)=>{const n=fg(e.object),i=fg(t.object);return n&&i&&i.events.priority-n.events.priority||e.distance-t.distance})).filter((e=>{const t=Rg(e);return!r.has(t)&&(r.add(t),!0)}));i.events.filter&&(o=i.events.filter(o,i));for(const e of o){let t=e.object;for(;t;){var s;null!=(s=t.__r3f)&&s.eventCount&&a.push({...e,eventObject:t}),t=t.parent}}if("pointerId"in t&&i.internal.capturedMap.has(t.pointerId))for(let e of i.internal.capturedMap.get(t.pointerId).values())r.has(Rg(e.intersection))||a.push(e.intersection);return a}(a,s?t:void 0),u=b?function(t){const{internal:n}=e.getState(),i=t.offsetX-n.initialClick[0],r=t.offsetY-n.initialClick[1];return Math.round(Math.sqrt(i*i+r*r))}(a):0;"onPointerDown"===r&&(o.initialClick=[a.offsetX,a.offsetY],o.initialHits=c.map((e=>e.eventObject))),b&&!c.length&&u<=2&&(i(a,o.interaction),l&&l(a)),s&&n(c),function(t,i,r,a){const l=e.getState();if(t.length){const e={stopped:!1};for(const o of t){const s=fg(o.object)||l,{raycaster:b,pointer:c,camera:u,internal:h}=s,d=new sa(c.x,c.y,0).unproject(u),m=e=>{var t,n;return null!=(t=null==(n=h.capturedMap.get(e))?void 0:n.has(o.eventObject))&&t},f=e=>{const t={intersection:o,target:i.target};h.capturedMap.has(e)?h.capturedMap.get(e).set(o.eventObject,t):h.capturedMap.set(e,new Map([[o.eventObject,t]])),i.target.setPointerCapture(e)},p=e=>{const t=h.capturedMap.get(e);t&&Pg(h.capturedMap,o.eventObject,t,e)};let g={};for(let e in i){let t=i[e];"function"!==typeof t&&(g[e]=t)}let x={...o,...g,pointer:c,intersections:t,stopped:e.stopped,delta:r,unprojectedPoint:d,ray:b.ray,camera:u,stopPropagation(){const r="pointerId"in i&&h.capturedMap.get(i.pointerId);(!r||r.has(o.eventObject))&&(x.stopped=e.stopped=!0,h.hovered.size&&Array.from(h.hovered.values()).find((e=>e.eventObject===o.eventObject)))&&n([...t.slice(0,t.indexOf(o)),o])},target:{hasPointerCapture:m,setPointerCapture:f,releasePointerCapture:p},currentTarget:{hasPointerCapture:m,setPointerCapture:f,releasePointerCapture:p},nativeEvent:i};if(a(x),!0===e.stopped)break}}}(c,a,u,(function(e){const t=e.eventObject,n=t.__r3f,l=null==n?void 0:n.handlers;if(null!=n&&n.eventCount)if(s){if(l.onPointerOver||l.onPointerEnter||l.onPointerOut||l.onPointerLeave){const t=Rg(e),n=o.hovered.get(t);n?n.stopped&&e.stopPropagation():(o.hovered.set(t,e),null==l.onPointerOver||l.onPointerOver(e),null==l.onPointerEnter||l.onPointerEnter(e))}null==l.onPointerMove||l.onPointerMove(e)}else{const n=l[r];n?b&&!o.initialHits.includes(t)||(i(a,o.interaction.filter((e=>!o.initialHits.includes(e)))),n(e)):b&&o.initialHits.includes(t)&&i(a,o.interaction.filter((e=>!o.initialHits.includes(e))))}}))}}}}const Ig=e=>!(null==e||!e.render),Ng=i.createContext(null),kg=(e,t)=>{const n=function(e){const t="function"===typeof e?Vp(e):e,n=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:t.getState,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Object.is;const[,r]=(0,i.useReducer)((e=>e+1),0),a=t.getState(),l=(0,i.useRef)(a),o=(0,i.useRef)(e),s=(0,i.useRef)(n),b=(0,i.useRef)(!1),c=(0,i.useRef)();let u;void 0===c.current&&(c.current=e(a));let h=!1;(l.current!==a||o.current!==e||s.current!==n||b.current)&&(u=e(a),h=!n(c.current,u)),Gp((()=>{h&&(c.current=u),l.current=a,o.current=e,s.current=n,b.current=!1}));const d=(0,i.useRef)(a);Gp((()=>{const e=()=>{try{const e=t.getState(),n=o.current(e);s.current(c.current,n)||(l.current=e,c.current=n,r())}catch(Sx){b.current=!0,r()}},n=t.subscribe(e);return t.getState()!==d.current&&e(),n}),[]);const m=h?u:c.current;return(0,i.useDebugValue)(m),m};return Object.assign(n,t),n[Symbol.iterator]=function(){console.warn("[useStore, api] = create() is deprecated and will be removed in v4");const e=[n,t];return{next(){const t=e.length<=0;return{value:e.shift(),done:t}}}},n}(((n,r)=>{const a=new sa,l=new sa,o=new sa;function s(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:r().camera,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:l,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:r().size;const{width:i,height:s,top:b,left:c}=n,u=i/s;t instanceof sa?o.copy(t):o.set(...t);const h=e.getWorldPosition(a).distanceTo(o);if(lg(e))return{width:i/e.zoom,height:s/e.zoom,top:b,left:c,factor:1,distance:h,aspect:u};{const t=e.fov*Math.PI/180,n=2*Math.tan(t/2)*h,r=n*(i/s);return{width:r,height:n,top:b,left:c,factor:i/r,distance:h,aspect:u}}}let b;const c=e=>n((t=>({performance:{...t.performance,current:e}}))),u=new Rr,h={set:n,get:r,gl:null,camera:null,raycaster:null,events:{priority:1,enabled:!0,connected:!1},xr:null,scene:null,invalidate:function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;return e(r(),t)},advance:(e,n)=>t(e,n,r()),legacy:!1,linear:!1,flat:!1,controls:null,clock:new xf,pointer:u,mouse:u,frameloop:"always",onPointerMissed:void 0,performance:{current:1,min:.5,max:1,debounce:200,regress:()=>{const e=r();b&&clearTimeout(b),e.performance.current!==e.performance.min&&c(e.performance.min),b=setTimeout((()=>c(r().performance.max)),e.performance.debounce)}},size:{width:0,height:0,top:0,left:0,updateStyle:!1},viewport:{initialDpr:0,dpr:0,width:0,height:0,top:0,left:0,aspect:0,distance:0,factor:0,getCurrentViewport:s},setEvents:e=>n((t=>({...t,events:{...t.events,...e}}))),setSize:(e,t,i,a,o)=>{const b=r().camera,c={width:e,height:t,top:a||0,left:o||0,updateStyle:i};n((e=>({size:c,viewport:{...e.viewport,...s(b,l,c)}})))},setDpr:e=>n((t=>{const n=mg(e);return{viewport:{...t.viewport,dpr:n,initialDpr:t.viewport.initialDpr||n}}})),setFrameloop:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"always";const t=r().clock;t.stop(),t.elapsedTime=0,"never"!==e&&(t.start(),t.elapsedTime=0),n((()=>({frameloop:e})))},previousRoot:void 0,internal:{active:!1,priority:0,frames:0,lastEvent:i.createRef(),interaction:[],hovered:new Map,subscribers:[],initialClick:[0,0],initialHits:[],capturedMap:new Map,subscribe:(e,t,n)=>{const i=r().internal;return i.priority=i.priority+(t>0?1:0),i.subscribers.push({ref:e,priority:t,store:n}),i.subscribers=i.subscribers.sort(((e,t)=>e.priority-t.priority)),()=>{const n=r().internal;null!=n&&n.subscribers&&(n.priority=n.priority-(t>0?1:0),n.subscribers=n.subscribers.filter((t=>t.ref!==e)))}}}};return h})),r=n.getState();let a=r.size,l=r.viewport.dpr,o=r.camera;return n.subscribe((()=>{const{camera:e,size:t,viewport:i,gl:r,set:s}=n.getState();if(t.width!==a.width||t.height!==a.height||i.dpr!==l){var b;a=t,l=i.dpr,Cg(e,t),r.setPixelRatio(i.dpr);const n=null!=(b=t.updateStyle)?b:"undefined"!==typeof HTMLCanvasElement&&r.domElement instanceof HTMLCanvasElement;r.setSize(t.width,t.height,n)}e!==o&&(o=e,s((t=>({viewport:{...t.viewport,...t.viewport.getCurrentViewport(e)}}))))})),n.subscribe((t=>e(t))),n};let Dg,Ug=new Set,Og=new Set,Fg=new Set;function Bg(e,t){if(e.size)for(const{callback:n}of e.values())n(t)}function Hg(e,t){switch(e){case"before":return Bg(Ug,t);case"after":return Bg(Og,t);case"tail":return Bg(Fg,t)}}let Vg,Gg;function Wg(e,t,n){let i=t.clock.getDelta();for("never"===t.frameloop&&"number"===typeof e&&(i=e-t.clock.elapsedTime,t.clock.oldTime=t.clock.elapsedTime,t.clock.elapsedTime=e),Vg=t.internal.subscribers,Dg=0;Dg<Vg.length;Dg++)Gg=Vg[Dg],Gg.ref.current(Gg.store.getState(),i,n);return!t.internal.priority&&t.gl.render&&t.gl.render(t.scene,t.camera),t.internal.frames=Math.max(0,t.internal.frames-1),"always"===t.frameloop?1:t.internal.frames}function jg(){const e=i.useContext(Ng);if(!e)throw new Error("R3F: Hooks can only be used within the Canvas component!");return e}function Xg(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:e=>e,t=arguments.length>1?arguments[1]:void 0;return jg()(e,t)}const qg=new WeakMap;function Yg(e,t){return function(n){let i=qg.get(n);i||(i=new n,qg.set(n,i)),e&&e(i);for(var r=arguments.length,a=new Array(r>1?r-1:0),l=1;l<r;l++)a[l-1]=arguments[l];return Promise.all(a.map((e=>new Promise(((n,r)=>i.load(e,(e=>{e.scene&&Object.assign(e,xg(e.scene)),n(e)}),t,(t=>r(new Error(`Could not load ${e}: ${null==t?void 0:t.message}`)))))))))}}function Zg(e,t,n,i){const r=Array.isArray(t)?t:[t],a=qp(Yg(n,i),[e,...r],{equal:gg.equ});return Array.isArray(t)?a:a[0]}Zg.preload=function(e,t,n){const i=Array.isArray(t)?t:[t];return Yp(Yg(n),[e,...i])},Zg.clear=function(e,t){const n=Array.isArray(t)?t:[t];return Zp([e,...n])};const Kg=new Map,{invalidate:$g,advance:Jg}=function(e){let t,n,i,r=!1,a=!1;function l(o){n=requestAnimationFrame(l),r=!0,t=0,Hg("before",o),a=!0;for(const n of e.values()){var s;i=n.store.getState(),!i.internal.active||!("always"===i.frameloop||i.internal.frames>0)||null!=(s=i.gl.xr)&&s.isPresenting||(t+=Wg(o,i))}if(a=!1,Hg("after",o),0===t)return Hg("tail",o),r=!1,cancelAnimationFrame(n)}return{loop:l,invalidate:function t(n){let i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;var o;if(!n)return e.forEach((e=>t(e.store.getState(),i)));null!=(o=n.gl.xr)&&o.isPresenting||!n.internal.active||"never"===n.frameloop||(n.internal.frames=i>1?Math.min(60,n.internal.frames+i):a?2:1,r||(r=!0,requestAnimationFrame(l)))},advance:function(t){let n=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],i=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;if(n&&Hg("before",t),i)Wg(t,i,r);else for(const a of e.values())Wg(t,a.store.getState());n&&Hg("after",t)}}}(Kg),{reconciler:Qg,applyProps:ex}=function(e,t){function n(e,t,n){let i,{args:r=[],attach:a,...l}=t,o=`${e[0].toUpperCase()}${e.slice(1)}`;if("primitive"===e){if(void 0===l.object)throw new Error("R3F: Primitives without 'object' are invalid!");i=vg(l.object,{type:e,root:n,attach:a,primitive:!0})}else{const t=eg[o];if(!t)throw new Error(`R3F: ${o} is not part of the THREE namespace! Did you forget to extend? See: https://docs.pmnd.rs/react-three-fiber/api/objects#using-3rd-party-objects-declaratively`);if(!Array.isArray(r))throw new Error("R3F: The args prop must be an array!");i=vg(new t(...r),{type:e,root:n,attach:a,memoizedProps:{args:r}})}return void 0===i.__r3f.attach&&(i instanceof no?i.__r3f.attach="geometry":i instanceof Rl&&(i.__r3f.attach="material")),"inject"!==o&&Eg(i,l),i}function i(e,t){let n=!1;var i,r;t&&(null!=(i=t.__r3f)&&i.attach?Sg(e,t,t.__r3f.attach):t.isObject3D&&e.isObject3D&&(e.add(t),n=!0),n||null==(r=e.__r3f)||r.objects.push(t),t.__r3f||vg(t,{}),t.__r3f.parent=e,Ag(t),Tg(t))}function r(e,t,n){let i=!1;if(t){var r,a;if(null!=(r=t.__r3f)&&r.attach)Sg(e,t,t.__r3f.attach);else if(t.isObject3D&&e.isObject3D){t.parent=e,t.dispatchEvent({type:"added"}),e.dispatchEvent({type:"childadded",child:t});const r=e.children.filter((e=>e!==t)),a=r.indexOf(n);e.children=[...r.slice(0,a),t,...r.slice(a)],i=!0}i||null==(a=e.__r3f)||a.objects.push(t),t.__r3f||vg(t,{}),t.__r3f.parent=e,Ag(t),Tg(t)}}function a(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];e&&[...e].forEach((e=>l(t,e,n)))}function l(e,t,n){if(t){var i,r,l;if(t.__r3f&&(t.__r3f.parent=null),null!=(i=e.__r3f)&&i.objects&&(e.__r3f.objects=e.__r3f.objects.filter((e=>e!==t))),null!=(r=t.__r3f)&&r.attach)Mg(e,t,t.__r3f.attach);else if(t.isObject3D&&e.isObject3D){var o;e.remove(t),null!=(o=t.__r3f)&&o.root&&function(e,t){const{internal:n}=e.getState();n.interaction=n.interaction.filter((e=>e!==t)),n.initialHits=n.initialHits.filter((e=>e!==t)),n.hovered.forEach(((e,i)=>{e.eventObject!==t&&e.object!==t||n.hovered.delete(i)})),n.capturedMap.forEach(((e,i)=>{Pg(n.capturedMap,t,e,i)}))}(pg(t),t)}const b=null==(l=t.__r3f)?void 0:l.primitive,c=!b&&(void 0===n?null!==t.dispose:n);var s;if(!b)a(null==(s=t.__r3f)?void 0:s.objects,t,c),a(t.children,t,c);if(delete t.__r3f,c&&t.dispose&&"Scene"!==t.type){const e=()=>{try{t.dispose()}catch(VS){}};"undefined"===typeof IS_REACT_ACT_ENVIRONMENT?(0,Qp.unstable_scheduleCallback)(Qp.unstable_IdlePriority,e):e()}Tg(e)}}const o=()=>console.warn("Text is not allowed in the R3F tree! This could be stray whitespace or characters.");return{reconciler:Jp()({createInstance:n,removeChild:l,appendChild:i,appendInitialChild:i,insertBefore:r,supportsMutation:!0,isPrimaryRenderer:!1,supportsPersistence:!1,supportsHydration:!1,noTimeout:-1,appendChildToContainer:(e,t)=>{if(!t)return;const n=e.getState().scene;n.__r3f&&(n.__r3f.root=e,i(n,t))},removeChildFromContainer:(e,t)=>{t&&l(e.getState().scene,t)},insertInContainerBefore:(e,t,n)=>{if(!t||!n)return;const i=e.getState().scene;i.__r3f&&r(i,t,n)},getRootHostContext:()=>null,getChildHostContext:e=>e,finalizeInitialChildren(e){var t;const n=null!=(t=null==e?void 0:e.__r3f)?t:{};return Boolean(n.handlers)},prepareUpdate(e,t,n,i){var r;if((null!=(r=null==e?void 0:e.__r3f)?r:{}).primitive&&i.object&&i.object!==e)return[!0];{const{args:t=[],children:r,...a}=i,{args:l=[],children:o,...s}=n;if(!Array.isArray(t))throw new Error("R3F: the args prop must be an array!");if(t.some(((e,t)=>e!==l[t])))return[!0];const b=wg(e,a,s,!0);return b.changes.length?[!1,b]:null}},commitUpdate(e,t,r,a,o,s){let[b,c]=t;b?function(e,t,r,a){var o;const s=null==(o=e.__r3f)?void 0:o.parent;if(!s)return;const b=n(t,r,e.__r3f.root);if(e.children){for(const t of e.children)t.__r3f&&i(b,t);e.children=e.children.filter((e=>!e.__r3f))}e.__r3f.objects.forEach((e=>i(b,e))),e.__r3f.objects=[],e.__r3f.autoRemovedBeforeAppend||l(s,e),b.parent&&(b.__r3f.autoRemovedBeforeAppend=!0),i(s,b),b.raycast&&b.__r3f.eventCount&&pg(b).getState().internal.interaction.push(b);[a,a.alternate].forEach((e=>{null!==e&&(e.stateNode=b,e.ref&&("function"===typeof e.ref?e.ref(b):e.ref.current=b))}))}(e,r,o,s):Eg(e,c)},commitMount(e,t,n,i){var r;const a=null!=(r=e.__r3f)?r:{};e.raycast&&a.handlers&&a.eventCount&&pg(e).getState().internal.interaction.push(e)},getPublicInstance:e=>e,prepareForCommit:()=>null,preparePortalMount:e=>vg(e.getState().scene),resetAfterCommit:()=>{},shouldSetTextContent:()=>!1,clearContainer:()=>!1,hideInstance(e){var t;const{attach:n,parent:i}=null!=(t=e.__r3f)?t:{};n&&i&&Mg(i,e,n),e.isObject3D&&(e.visible=!1),Tg(e)},unhideInstance(e,t){var n;const{attach:i,parent:r}=null!=(n=e.__r3f)?n:{};i&&r&&Sg(r,e,i),(e.isObject3D&&null==t.visible||t.visible)&&(e.visible=!0),Tg(e)},createTextInstance:o,hideTextInstance:o,unhideTextInstance:o,getCurrentEventPriority:()=>t?t():Hp.DefaultEventPriority,beforeActiveInstanceBlur:()=>{},afterActiveInstanceBlur:()=>{},detachDeletedInstance:()=>{},now:"undefined"!==typeof performance&&gg.fun(performance.now)?performance.now:gg.fun(Date.now)?Date.now:()=>0,scheduleTimeout:gg.fun(setTimeout)?setTimeout:void 0,cancelTimeout:gg.fun(clearTimeout)?clearTimeout:void 0}),applyProps:Eg}}(0,(function(){var e;const t="undefined"!==typeof self&&self||"undefined"!==typeof window&&window;if(!t)return Hp.DefaultEventPriority;switch(null==(e=t.event)?void 0:e.type){case"click":case"contextmenu":case"dblclick":case"pointercancel":case"pointerdown":case"pointerup":return Hp.DiscreteEventPriority;case"pointermove":case"pointerout":case"pointerover":case"pointerenter":case"pointerleave":case"wheel":return Hp.ContinuousEventPriority;default:return Hp.DefaultEventPriority}})),tx={objects:"shallow",strict:!1},nx=(e,t)=>{const n="function"===typeof e?e(t):e;return Ig(n)?n:new Dc({powerPreference:"high-performance",canvas:t,antialias:!0,alpha:!0,...e})};function ix(e){const t=Kg.get(e),n=null==t?void 0:t.fiber,i=null==t?void 0:t.store;t&&console.warn("R3F.createRoot should only be called once!");const r="function"===typeof reportError?reportError:console.error,a=i||kg($g,Jg),l=n||Qg.createContainer(a,Hp.ConcurrentRoot,null,!1,null,"",r,null);let o;t||Kg.set(e,{fiber:l,store:a});let s,b=!1;return{configure(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{gl:n,size:i,scene:r,events:l,onCreated:c,shadows:u=!1,linear:h=!1,flat:d=!1,legacy:m=!1,orthographic:f=!1,frameloop:p="always",dpr:g=[1,2],performance:x,raycaster:v,camera:_,onPointerMissed:y}=t,S=a.getState(),M=S.gl;S.gl||S.set({gl:M=nx(n,e)});let w=S.raycaster;w||S.set({raycaster:w=new Kf});const{params:z,...E}=v||{};if(gg.equ(E,w,tx)||ex(w,{...E}),gg.equ(z,w.params,tx)||ex(w,{params:{...w.params,...z}}),!S.camera||S.camera===s&&!gg.equ(s,_,tx)){s=_;const e=_ instanceof Co,t=e?_:f?new ls(0,0,0,0,.1,1e3):new Io(75,0,.1,1e3);e||(t.position.z=5,_&&(ex(t,_),("aspect"in _||"left"in _||"right"in _||"bottom"in _||"top"in _)&&(t.manual=!0,t.updateProjectionMatrix())),S.camera||null!=_&&_.rotation||t.lookAt(0,0,0)),S.set({camera:t}),w.camera=t}if(!S.scene){let e;r instanceof Fc?e=r:(e=new Fc,r&&ex(e,r)),S.set({scene:vg(e)})}if(!S.xr){var T;const e=(e,t)=>{const n=a.getState();"never"!==n.frameloop&&Jg(e,!0,n,t)},t=()=>{const t=a.getState();t.gl.xr.enabled=t.gl.xr.isPresenting,t.gl.xr.setAnimationLoop(t.gl.xr.isPresenting?e:null),t.gl.xr.isPresenting||$g(t)},n={connect(){const e=a.getState().gl;e.xr.addEventListener("sessionstart",t),e.xr.addEventListener("sessionend",t)},disconnect(){const e=a.getState().gl;e.xr.removeEventListener("sessionstart",t),e.xr.removeEventListener("sessionend",t)}};"function"===typeof(null==(T=M.xr)?void 0:T.addEventListener)&&n.connect(),S.set({xr:n})}if(M.shadowMap){const e=M.shadowMap.enabled,t=M.shadowMap.type;if(M.shadowMap.enabled=!!u,gg.boo(u))M.shadowMap.type=Fe;else if(gg.str(u)){var A;const e={basic:Ue,percentage:Oe,soft:Fe,variance:Be};M.shadowMap.type=null!=(A=e[u])?A:Fe}else gg.obj(u)&&Object.assign(M.shadowMap,u);e===M.shadowMap.enabled&&t===M.shadowMap.type||(M.shadowMap.needsUpdate=!0)}const C=ag();if(C&&("enabled"in C?C.enabled=!m:"legacyMode"in C&&(C.legacyMode=m)),!b){ex(M,{outputEncoding:h?3e3:3001,toneMapping:d?Tt:Pt})}S.legacy!==m&&S.set((()=>({legacy:m}))),S.linear!==h&&S.set((()=>({linear:h}))),S.flat!==d&&S.set((()=>({flat:d}))),!n||gg.fun(n)||Ig(n)||gg.equ(n,M,tx)||ex(M,n),l&&!S.events.handlers&&S.set({events:l(a)});const R=function(e,t){const n="undefined"!==typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement;if(t){const{width:e,height:i,top:r,left:a,updateStyle:l=n}=t;return{width:e,height:i,top:r,left:a,updateStyle:l}}if("undefined"!==typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement&&e.parentElement){const{width:t,height:i,top:r,left:a}=e.parentElement.getBoundingClientRect();return{width:t,height:i,top:r,left:a,updateStyle:n}}return"undefined"!==typeof OffscreenCanvas&&e instanceof OffscreenCanvas?{width:e.width,height:e.height,top:0,left:0,updateStyle:n}:{width:0,height:0,top:0,left:0}}(e,i);return gg.equ(R,S.size,tx)||S.setSize(R.width,R.height,R.updateStyle,R.top,R.left),g&&S.viewport.dpr!==mg(g)&&S.setDpr(g),S.frameloop!==p&&S.setFrameloop(p),S.onPointerMissed||S.set({onPointerMissed:y}),x&&!gg.equ(x,S.performance,tx)&&S.set((e=>({performance:{...e.performance,...x}}))),o=c,b=!0,this},render(t){return b||this.configure(),Qg.updateContainer((0,Kp.jsx)(rx,{store:a,children:t,onCreated:o,rootElement:e}),l,null,(()=>{})),a},unmount(){ax(e)}}}function rx(e){let{store:t,children:n,onCreated:i,rootElement:r}=e;return og((()=>{const e=t.getState();e.set((e=>({internal:{...e.internal,active:!0}}))),i&&i(e),t.getState().events.connected||null==e.events.connect||e.events.connect(r)}),[]),(0,Kp.jsx)(Ng.Provider,{value:t,children:n})}function ax(e,t){const n=Kg.get(e),i=null==n?void 0:n.fiber;if(i){const r=null==n?void 0:n.store.getState();r&&(r.internal.active=!1),Qg.updateContainer(null,i,null,(()=>{r&&setTimeout((()=>{try{var n,i,a,l;null==r.events.disconnect||r.events.disconnect(),null==(n=r.gl)||null==(i=n.renderLists)||null==i.dispose||i.dispose(),null==(a=r.gl)||null==a.forceContextLoss||a.forceContextLoss(),null!=(l=r.gl)&&l.xr&&r.xr.disconnect(),function(e){e.dispose&&"Scene"!==e.type&&e.dispose();for(const t in e)null==t.dispose||t.dispose(),delete e[t]}(r),Kg.delete(e),t&&t(e)}catch(VS){}}),500)}))}}Qg.injectIntoDevTools({bundleType:0,rendererPackageName:"@react-three/fiber",version:i.version});i.unstable_act;const lx={onClick:["click",!1],onContextMenu:["contextmenu",!1],onDoubleClick:["dblclick",!1],onWheel:["wheel",!0],onPointerDown:["pointerdown",!0],onPointerUp:["pointerup",!0],onPointerLeave:["pointerleave",!0],onPointerMove:["pointermove",!0],onPointerCancel:["pointercancel",!0],onLostPointerCapture:["lostpointercapture",!0]};function ox(e){const{handlePointer:t}=Lg(e);return{priority:1,enabled:!0,compute(e,t,n){t.pointer.set(e.offsetX/t.size.width*2-1,-e.offsetY/t.size.height*2+1),t.raycaster.setFromCamera(t.pointer,t.camera)},connected:void 0,handlers:Object.keys(lx).reduce(((e,n)=>({...e,[n]:t(n)})),{}),update:()=>{var t;const{events:n,internal:i}=e.getState();null!=(t=i.lastEvent)&&t.current&&n.handlers&&n.handlers.onPointerMove(i.lastEvent.current)},connect:t=>{var n;const{set:i,events:r}=e.getState();null==r.disconnect||r.disconnect(),i((e=>({events:{...e.events,connected:t}}))),Object.entries(null!=(n=r.handlers)?n:[]).forEach((e=>{let[n,i]=e;const[r,a]=lx[n];t.addEventListener(r,i,{passive:a})}))},disconnect:()=>{const{set:t,events:n}=e.getState();var i;n.connected&&(Object.entries(null!=(i=n.handlers)?i:[]).forEach((e=>{let[t,i]=e;if(n&&n.connected instanceof HTMLElement){const[e]=lx[t];n.connected.removeEventListener(e,i)}})),t((e=>({events:{...e.events,connected:void 0}}))))}}}var sx,bx,cx=n(356),ux=n.n(cx),hx=Object.defineProperty,dx=Object.defineProperties,mx=Object.getOwnPropertyDescriptors,fx=Object.getOwnPropertySymbols,px=Object.prototype.hasOwnProperty,gx=Object.prototype.propertyIsEnumerable,xx=(e,t,n)=>t in e?hx(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,vx=(e,t)=>{for(var n in t||(t={}))px.call(t,n)&&xx(e,n,t[n]);if(fx)for(var n of fx(t))gx.call(t,n)&&xx(e,n,t[n]);return e};"undefined"===typeof window||!(null==(sx=window.document)?void 0:sx.createElement)&&"ReactNative"!==(null==(bx=window.navigator)?void 0:bx.product)?i.useEffect:i.useLayoutEffect;function _x(e,t,n){if(!e)return;if(!0===n(e))return e;let i=t?e.return:e.child;for(;i;){const e=_x(i,t,n);if(e)return e;i=t?null:i.sibling}}function yx(e){try{return Object.defineProperties(e,{_currentRenderer:{get:()=>null,set(){}},_currentRenderer2:{get:()=>null,set(){}}})}catch(t){return e}}const Sx=console.error;console.error=function(){const e=[...arguments].join("");if(!(null==e?void 0:e.startsWith("Warning:"))||!e.includes("useContext"))return Sx.apply(this,arguments);console.error=Sx};const Mx=yx(i.createContext(null));class wx extends i.Component{render(){return i.createElement(Mx.Provider,{value:this._reactInternals},this.props.children)}}function zx(){const e=i.useContext(Mx);if(null===e)throw new Error("its-fine: useFiber must be called within a <FiberProvider />!");const t=i.useId();return i.useMemo((()=>{for(const n of[e,null==e?void 0:e.alternate]){if(!n)continue;const e=_x(n,!1,(e=>{let n=e.memoizedState;for(;n;){if(n.memoizedState===t)return!0;n=n.next}}));if(e)return e}}),[e,t])}function Ex(){const e=function(){const e=zx(),[t]=i.useState((()=>new Map));t.clear();let n=e;for(;n;){if(n.type&&"object"===typeof n.type){const e=void 0===n.type._context&&n.type.Provider===n.type?n.type:n.type._context;e&&e!==Mx&&!t.has(e)&&t.set(e,i.useContext(yx(e)))}n=n.return}return t}();return i.useMemo((()=>Array.from(e.keys()).reduce(((t,n)=>r=>i.createElement(t,null,i.createElement(n.Provider,((e,t)=>dx(e,mx(t)))(vx({},r),{value:e.get(n)})))),(e=>i.createElement(wx,vx({},e))))),[e])}function Tx(){let{debounce:e,scroll:t,polyfill:n,offsetSize:r}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{debounce:0,scroll:!1,offsetSize:!1};const a=n||"undefined"!==typeof window&&window.ResizeObserver,[l,o]=(0,i.useState)({left:0,top:0,width:0,height:0,bottom:0,right:0,x:0,y:0});if(!a)return l.width=1280,l.height=800,[()=>{},l,()=>{}];const s=(0,i.useRef)({element:null,scrollContainers:null,resizeObserver:null,lastBounds:l}),b=e?"number"===typeof e?e:e.scroll:null,c=e?"number"===typeof e?e:e.resize:null,u=(0,i.useRef)(!1);(0,i.useEffect)((()=>(u.current=!0,()=>{u.current=!1})));const[h,d,m]=(0,i.useMemo)((()=>{const e=()=>{if(!s.current.element)return;const{left:e,top:t,width:n,height:i,bottom:a,right:l,x:b,y:c}=s.current.element.getBoundingClientRect(),h={left:e,top:t,width:n,height:i,bottom:a,right:l,x:b,y:c};s.current.element instanceof HTMLElement&&r&&(h.height=s.current.element.offsetHeight,h.width=s.current.element.offsetWidth),Object.freeze(h),u.current&&!Rx(s.current.lastBounds,h)&&o(s.current.lastBounds=h)};return[e,c?ux()(e,c):e,b?ux()(e,b):e]}),[o,r,b,c]);function f(){s.current.scrollContainers&&(s.current.scrollContainers.forEach((e=>e.removeEventListener("scroll",m,!0))),s.current.scrollContainers=null),s.current.resizeObserver&&(s.current.resizeObserver.disconnect(),s.current.resizeObserver=null)}function p(){s.current.element&&(s.current.resizeObserver=new a(m),s.current.resizeObserver.observe(s.current.element),t&&s.current.scrollContainers&&s.current.scrollContainers.forEach((e=>e.addEventListener("scroll",m,{capture:!0,passive:!0}))))}var g,x,v;return g=m,x=Boolean(t),(0,i.useEffect)((()=>{if(x){const e=g;return window.addEventListener("scroll",e,{capture:!0,passive:!0}),()=>{window.removeEventListener("scroll",e,!0)}}}),[g,x]),v=d,(0,i.useEffect)((()=>{const e=v;return window.addEventListener("resize",e),()=>{window.removeEventListener("resize",e)}}),[v]),(0,i.useEffect)((()=>{f(),p()}),[t,m,d]),(0,i.useEffect)((()=>f),[]),[e=>{e&&e!==s.current.element&&(f(),s.current.element=e,s.current.scrollContainers=Ax(e),p())},l,h]}function Ax(e){const t=[];if(!e||e===document.body)return t;const{overflow:n,overflowX:i,overflowY:r}=window.getComputedStyle(e);return[n,i,r].some((e=>"auto"===e||"scroll"===e))&&t.push(e),[...t,...Ax(e.parentElement)]}const Cx=["x","y","top","bottom","left","right","width","height"],Rx=(e,t)=>Cx.every((n=>e[n]===t[n])),Px=i.forwardRef((function(t,n){let{children:r,fallback:a,resize:l,style:o,gl:s,events:b=ox,eventSource:c,eventPrefix:u,shadows:h,linear:d,flat:m,legacy:f,orthographic:p,frameloop:g,dpr:x,performance:v,raycaster:_,camera:y,scene:S,onPointerMissed:M,onCreated:w,...z}=t;i.useMemo((()=>tg(e)),[]);const E=Ex(),[T,A]=Tx({scroll:!0,debounce:{scroll:50,resize:0},...l}),C=i.useRef(null),R=i.useRef(null);i.useImperativeHandle(n,(()=>C.current));const P=sg(M),[L,I]=i.useState(!1),[N,k]=i.useState(!1);if(L)throw L;if(N)throw N;const D=i.useRef(null);og((()=>{const e=C.current;A.width>0&&A.height>0&&e&&(D.current||(D.current=ix(e)),D.current.configure({gl:s,events:b,shadows:h,linear:d,flat:m,legacy:f,orthographic:p,frameloop:g,dpr:x,performance:v,raycaster:_,camera:y,scene:S,size:A,onPointerMissed:function(){return null==P.current?void 0:P.current(...arguments)},onCreated:e=>{var t;null==e.events.connect||e.events.connect(c?(t=c)&&t.hasOwnProperty("current")?c.current:c:R.current),u&&e.setEvents({compute:(e,t)=>{const n=e[u+"X"],i=e[u+"Y"];t.pointer.set(n/t.size.width*2-1,-i/t.size.height*2+1),t.raycaster.setFromCamera(t.pointer,t.camera)}}),null==w||w(e)}}),D.current.render((0,Kp.jsx)(E,{children:(0,Kp.jsx)(cg,{set:k,children:(0,Kp.jsx)(i.Suspense,{fallback:(0,Kp.jsx)(bg,{set:I}),children:r})})})))})),i.useEffect((()=>{const e=C.current;if(e)return()=>ax(e)}),[]);const U=c?"none":"auto";return(0,Kp.jsx)("div",{ref:R,style:{position:"relative",width:"100%",height:"100%",overflow:"hidden",pointerEvents:U,...o},...z,children:(0,Kp.jsx)("div",{ref:T,style:{width:"100%",height:"100%"},children:(0,Kp.jsx)("canvas",{ref:C,style:{display:"block"},children:a})})})})),Lx=i.forwardRef((function(e,t){return(0,Kp.jsx)(wx,{children:(0,Kp.jsx)(Px,{...e,ref:t})})}));function Ix(){return Ix=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)({}).hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e},Ix.apply(null,arguments)}class Nx extends Id{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{bevelEnabled:n=!1,bevelSize:i=8,bevelThickness:r=10,font:a,height:l=50,size:o=100,lineHeight:s=1,letterSpacing:b=0,...c}=t;if(void 0===a)super();else{super(a.generateShapes(e,o,{lineHeight:s,letterSpacing:b}),{...c,bevelEnabled:n,bevelSize:i,bevelThickness:r,depth:l})}this.type="TextGeometry"}}var kx=Object.defineProperty,Dx=(e,t,n)=>(((e,t,n)=>{t in e?kx(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n})(e,"symbol"!==typeof t?t+"":t,n),n);class Ux extends Em{constructor(e){super(e)}load(e,t,n,i){const r=new Cm(this.manager);r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials),r.load(e,(e=>{if("string"!==typeof e)throw new Error("unsupported data type");const n=JSON.parse(e),i=this.parse(n);t&&t(i)}),n,i)}loadAsync(e,t){return super.loadAsync(e,t)}parse(e){return new Ox(e)}}class Ox{constructor(e){Dx(this,"data"),this.data=e}generateShapes(e){const t=[],n={letterSpacing:0,lineHeight:1,...arguments.length>2?arguments[2]:void 0},i=function(e,t,n,i){const r=Array.from(e),a=t/n.resolution,l=(n.boundingBox.yMax-n.boundingBox.yMin+n.underlineThickness)*a,o=[];let s=0,b=0;for(let c=0;c<r.length;c++){const e=r[c];if("\n"===e)s=0,b-=l*i.lineHeight;else{const t=Fx(e,a,s,b,n);t&&(s+=t.offsetX+i.letterSpacing,o.push(t.path))}}return o}(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:100,this.data,n);for(let r=0,a=i.length;r<a;r++)Array.prototype.push.apply(t,i[r].toShapes(!1));return t}}function Fx(e,t,n,i,r){const a=r.glyphs[e]||r.glyphs["?"];if(!a)return void console.error('THREE.Font: character "'+e+'" does not exists in font family '+r.familyName+".");const l=new Op;let o,s,b,c,u,h,d,m;if(a.o){const e=a._cachedOutline||(a._cachedOutline=a.o.split(" "));for(let r=0,a=e.length;r<a;){switch(e[r++]){case"m":o=parseInt(e[r++])*t+n,s=parseInt(e[r++])*t+i,l.moveTo(o,s);break;case"l":o=parseInt(e[r++])*t+n,s=parseInt(e[r++])*t+i,l.lineTo(o,s);break;case"q":b=parseInt(e[r++])*t+n,c=parseInt(e[r++])*t+i,u=parseInt(e[r++])*t+n,h=parseInt(e[r++])*t+i,l.quadraticCurveTo(u,h,b,c);break;case"b":b=parseInt(e[r++])*t+n,c=parseInt(e[r++])*t+i,u=parseInt(e[r++])*t+n,h=parseInt(e[r++])*t+i,d=parseInt(e[r++])*t+n,m=parseInt(e[r++])*t+i,l.bezierCurveTo(u,h,d,m,b,c)}}}return{offsetX:a.ha*t,path:l}}Dx(Ox,"isFont"),Dx(Ox,"type");let Bx=null;async function Hx(e){const t=await async function(e){return"string"===typeof e?await(await fetch(e)).json():e}(e);return n=t,Bx||(Bx=new Ux),Bx.parse(n);var n}function Vx(e){return qp(Hx,[e])}Vx.preload=e=>Yp(Hx,[e]),Vx.clear=e=>Zp([e]);const Gx=["string","number"],Wx=i.forwardRef(((e,t)=>{let{font:n,letterSpacing:r=0,lineHeight:a=1,size:l=1,height:o=.2,bevelThickness:s=.1,bevelSize:b=.01,bevelEnabled:c=!1,bevelOffset:u=0,bevelSegments:h=4,curveSegments:d=8,smooth:m,children:f,...p}=e;i.useMemo((()=>tg({RenamedTextGeometry:Nx})),[]);const g=i.useRef(null),x=Vx(n),v=(0,i.useMemo)((()=>({font:x,size:l,height:o,bevelThickness:s,bevelSize:b,bevelEnabled:c,bevelSegments:h,bevelOffset:u,curveSegments:d,letterSpacing:r,lineHeight:a})),[x,l,o,s,b,c,h,u,d,r,a]),[_,...y]=(0,i.useMemo)((()=>(e=>{let t="";const n=[];return i.Children.forEach(e,(e=>{Gx.includes(typeof e)?t+=e+"":n.push(e)})),[t,...n]})(f)),[f]),S=i.useMemo((()=>[_,v]),[_,v]);return i.useLayoutEffect((()=>{m&&(g.current.geometry=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e-4;t=Math.max(t,Number.EPSILON);const n={},i=e.getIndex(),r=e.getAttribute("position"),a=i?i.count:r.count;let l=0;const o=Object.keys(e.attributes),s={},b={},c=[],u=["getX","getY","getZ","getW"];for(let f=0,p=o.length;f<p;f++){const t=o[f];s[t]=[];const n=e.morphAttributes[t];n&&(b[t]=new Array(n.length).fill(0).map((()=>[])))}const h=Math.log10(1/t),d=Math.pow(10,h);for(let f=0;f<a;f++){const t=i?i.getX(f):f;let r="";for(let n=0,i=o.length;n<i;n++){const i=o[n],a=e.getAttribute(i),l=a.itemSize;for(let e=0;e<l;e++)r+=~~(a[u[e]](t)*d)+","}if(r in n)c.push(n[r]);else{for(let n=0,i=o.length;n<i;n++){const i=o[n],r=e.getAttribute(i),a=e.morphAttributes[i],l=r.itemSize,c=s[i],h=b[i];for(let e=0;e<l;e++){const n=u[e];if(c.push(r[n](t)),a)for(let e=0,i=a.length;e<i;e++)h[e].push(a[e][n](t))}}n[r]=l,c.push(l),l++}}const m=e.clone();for(let f=0,p=o.length;f<p;f++){const t=o[f],n=e.getAttribute(t),i=new n.array.constructor(s[t]),r=new Fl(i,n.itemSize,n.normalized);if(m.setAttribute(t,r),t in b)for(let a=0;a<b[t].length;a++){const n=e.morphAttributes[t][a],i=new n.array.constructor(b[t][a]),r=new Fl(i,n.itemSize,n.normalized);m.morphAttributes[t][a]=r}}return m.setIndex(c),m}(g.current.geometry,m),g.current.geometry.computeVertexNormals())}),[S,m]),i.useImperativeHandle(t,(()=>g.current),[]),i.createElement("mesh",Ix({},p,{ref:g}),i.createElement("renamedTextGeometry",{args:S}),y)}));var jx=Object.defineProperty,Xx=(e,t,n)=>(((e,t,n)=>{t in e?jx(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n})(e,"symbol"!==typeof t?t+"":t,n),n);const qx=new Ua,Yx=new Ho,Zx=Math.cos(Math.PI/180*70),Kx=(e,t)=>(e%t+t)%t;class $x extends xr{constructor(e,t){super(),Xx(this,"object"),Xx(this,"domElement"),Xx(this,"enabled",!0),Xx(this,"target",new sa),Xx(this,"minDistance",0),Xx(this,"maxDistance",1/0),Xx(this,"minZoom",0),Xx(this,"maxZoom",1/0),Xx(this,"minPolarAngle",0),Xx(this,"maxPolarAngle",Math.PI),Xx(this,"minAzimuthAngle",-1/0),Xx(this,"maxAzimuthAngle",1/0),Xx(this,"enableDamping",!1),Xx(this,"dampingFactor",.05),Xx(this,"enableZoom",!0),Xx(this,"zoomSpeed",1),Xx(this,"enableRotate",!0),Xx(this,"rotateSpeed",1),Xx(this,"enablePan",!0),Xx(this,"panSpeed",1),Xx(this,"screenSpacePanning",!0),Xx(this,"keyPanSpeed",7),Xx(this,"zoomToCursor",!1),Xx(this,"autoRotate",!1),Xx(this,"autoRotateSpeed",2),Xx(this,"reverseOrbit",!1),Xx(this,"reverseHorizontalOrbit",!1),Xx(this,"reverseVerticalOrbit",!1),Xx(this,"keys",{LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"}),Xx(this,"mouseButtons",{LEFT:Pe.ROTATE,MIDDLE:Pe.DOLLY,RIGHT:Pe.PAN}),Xx(this,"touches",{ONE:Le.ROTATE,TWO:Le.DOLLY_PAN}),Xx(this,"target0"),Xx(this,"position0"),Xx(this,"zoom0"),Xx(this,"_domElementKeyEvents",null),Xx(this,"getPolarAngle"),Xx(this,"getAzimuthalAngle"),Xx(this,"setPolarAngle"),Xx(this,"setAzimuthalAngle"),Xx(this,"getDistance"),Xx(this,"listenToKeyEvents"),Xx(this,"stopListenToKeyEvents"),Xx(this,"saveState"),Xx(this,"reset"),Xx(this,"update"),Xx(this,"connect"),Xx(this,"dispose"),this.object=e,this.domElement=t,this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this.getPolarAngle=()=>b.phi,this.getAzimuthalAngle=()=>b.theta,this.setPolarAngle=e=>{let t=Kx(e,2*Math.PI),i=b.phi;i<0&&(i+=2*Math.PI),t<0&&(t+=2*Math.PI);let r=Math.abs(t-i);2*Math.PI-r<r&&(t<i?t+=2*Math.PI:i+=2*Math.PI),c.phi=t-i,n.update()},this.setAzimuthalAngle=e=>{let t=Kx(e,2*Math.PI),i=b.theta;i<0&&(i+=2*Math.PI),t<0&&(t+=2*Math.PI);let r=Math.abs(t-i);2*Math.PI-r<r&&(t<i?t+=2*Math.PI:i+=2*Math.PI),c.theta=t-i,n.update()},this.getDistance=()=>n.object.position.distanceTo(n.target),this.listenToKeyEvents=e=>{e.addEventListener("keydown",Z),this._domElementKeyEvents=e},this.stopListenToKeyEvents=()=>{this._domElementKeyEvents.removeEventListener("keydown",Z),this._domElementKeyEvents=null},this.saveState=()=>{n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=()=>{n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(i),n.update(),o=l.NONE},this.update=(()=>{const t=new sa,r=new sa(0,1,0),a=(new oa).setFromUnitVectors(e.up,r),d=a.clone().invert(),m=new sa,f=new oa,p=2*Math.PI;return function(){const g=n.object.position;a.setFromUnitVectors(e.up,r),d.copy(a).invert(),t.copy(g).sub(n.target),t.applyQuaternion(a),b.setFromVector3(t),n.autoRotate&&o===l.NONE&&A(2*Math.PI/60/60*n.autoRotateSpeed),n.enableDamping?(b.theta+=c.theta*n.dampingFactor,b.phi+=c.phi*n.dampingFactor):(b.theta+=c.theta,b.phi+=c.phi);let x=n.minAzimuthAngle,v=n.maxAzimuthAngle;isFinite(x)&&isFinite(v)&&(x<-Math.PI?x+=p:x>Math.PI&&(x-=p),v<-Math.PI?v+=p:v>Math.PI&&(v-=p),b.theta=x<=v?Math.max(x,Math.min(v,b.theta)):b.theta>(x+v)/2?Math.max(x,b.theta):Math.min(v,b.theta)),b.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,b.phi)),b.makeSafe(),!0===n.enableDamping?n.target.addScaledVector(h,n.dampingFactor):n.target.add(h),n.zoomToCursor&&w||n.object.isOrthographicCamera?b.radius=D(b.radius):b.radius=D(b.radius*u),t.setFromSpherical(b),t.applyQuaternion(d),g.copy(n.target).add(t),n.object.matrixAutoUpdate||n.object.updateMatrix(),n.object.lookAt(n.target),!0===n.enableDamping?(c.theta*=1-n.dampingFactor,c.phi*=1-n.dampingFactor,h.multiplyScalar(1-n.dampingFactor)):(c.set(0,0,0),h.set(0,0,0));let _=!1;if(n.zoomToCursor&&w){let i=null;if(n.object instanceof Io&&n.object.isPerspectiveCamera){const e=t.length();i=D(e*u);const r=e-i;n.object.position.addScaledVector(S,r),n.object.updateMatrixWorld()}else if(n.object.isOrthographicCamera){const e=new sa(M.x,M.y,0);e.unproject(n.object),n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/u)),n.object.updateProjectionMatrix(),_=!0;const r=new sa(M.x,M.y,0);r.unproject(n.object),n.object.position.sub(r).add(e),n.object.updateMatrixWorld(),i=t.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),n.zoomToCursor=!1;null!==i&&(n.screenSpacePanning?n.target.set(0,0,-1).transformDirection(n.object.matrix).multiplyScalar(i).add(n.object.position):(qx.origin.copy(n.object.position),qx.direction.set(0,0,-1).transformDirection(n.object.matrix),Math.abs(n.object.up.dot(qx.direction))<Zx?e.lookAt(n.target):(Yx.setFromNormalAndCoplanarPoint(n.object.up,n.target),qx.intersectPlane(Yx,n.target))))}else n.object instanceof ls&&n.object.isOrthographicCamera&&(_=1!==u,_&&(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/u)),n.object.updateProjectionMatrix()));return u=1,w=!1,!!(_||m.distanceToSquared(n.object.position)>s||8*(1-f.dot(n.object.quaternion))>s)&&(n.dispatchEvent(i),m.copy(n.object.position),f.copy(n.object.quaternion),_=!1,!0)}})(),this.connect=e=>{n.domElement=e,n.domElement.style.touchAction="none",n.domElement.addEventListener("contextmenu",K),n.domElement.addEventListener("pointerdown",j),n.domElement.addEventListener("pointercancel",q),n.domElement.addEventListener("wheel",Y)},this.dispose=()=>{var e,t,i,r,a,l;n.domElement&&(n.domElement.style.touchAction="auto"),null==(e=n.domElement)||e.removeEventListener("contextmenu",K),null==(t=n.domElement)||t.removeEventListener("pointerdown",j),null==(i=n.domElement)||i.removeEventListener("pointercancel",q),null==(r=n.domElement)||r.removeEventListener("wheel",Y),null==(a=n.domElement)||a.ownerDocument.removeEventListener("pointermove",X),null==(l=n.domElement)||l.ownerDocument.removeEventListener("pointerup",q),null!==n._domElementKeyEvents&&n._domElementKeyEvents.removeEventListener("keydown",Z)};const n=this,i={type:"change"},r={type:"start"},a={type:"end"},l={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let o=l.NONE;const s=1e-6,b=new Qf,c=new Qf;let u=1;const h=new sa,d=new Rr,m=new Rr,f=new Rr,p=new Rr,g=new Rr,x=new Rr,v=new Rr,_=new Rr,y=new Rr,S=new sa,M=new Rr;let w=!1;const z=[],E={};function T(){return Math.pow(.95,n.zoomSpeed)}function A(e){n.reverseOrbit||n.reverseHorizontalOrbit?c.theta+=e:c.theta-=e}function C(e){n.reverseOrbit||n.reverseVerticalOrbit?c.phi+=e:c.phi-=e}const R=(()=>{const e=new sa;return function(t,n){e.setFromMatrixColumn(n,0),e.multiplyScalar(-t),h.add(e)}})(),P=(()=>{const e=new sa;return function(t,i){!0===n.screenSpacePanning?e.setFromMatrixColumn(i,1):(e.setFromMatrixColumn(i,0),e.crossVectors(n.object.up,e)),e.multiplyScalar(t),h.add(e)}})(),L=(()=>{const e=new sa;return function(t,i){const r=n.domElement;if(r&&n.object instanceof Io&&n.object.isPerspectiveCamera){const a=n.object.position;e.copy(a).sub(n.target);let l=e.length();l*=Math.tan(n.object.fov/2*Math.PI/180),R(2*t*l/r.clientHeight,n.object.matrix),P(2*i*l/r.clientHeight,n.object.matrix)}else r&&n.object instanceof ls&&n.object.isOrthographicCamera?(R(t*(n.object.right-n.object.left)/n.object.zoom/r.clientWidth,n.object.matrix),P(i*(n.object.top-n.object.bottom)/n.object.zoom/r.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}})();function I(e){n.object instanceof Io&&n.object.isPerspectiveCamera||n.object instanceof ls&&n.object.isOrthographicCamera?u/=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function N(e){n.object instanceof Io&&n.object.isPerspectiveCamera||n.object instanceof ls&&n.object.isOrthographicCamera?u*=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function k(e){if(!n.zoomToCursor||!n.domElement)return;w=!0;const t=n.domElement.getBoundingClientRect(),i=e.clientX-t.left,r=e.clientY-t.top,a=t.width,l=t.height;M.x=i/a*2-1,M.y=-r/l*2+1,S.set(M.x,M.y,1).unproject(n.object).sub(n.object.position).normalize()}function D(e){return Math.max(n.minDistance,Math.min(n.maxDistance,e))}function U(e){d.set(e.clientX,e.clientY)}function O(e){p.set(e.clientX,e.clientY)}function F(){if(1==z.length)d.set(z[0].pageX,z[0].pageY);else{const e=.5*(z[0].pageX+z[1].pageX),t=.5*(z[0].pageY+z[1].pageY);d.set(e,t)}}function B(){if(1==z.length)p.set(z[0].pageX,z[0].pageY);else{const e=.5*(z[0].pageX+z[1].pageX),t=.5*(z[0].pageY+z[1].pageY);p.set(e,t)}}function H(){const e=z[0].pageX-z[1].pageX,t=z[0].pageY-z[1].pageY,n=Math.sqrt(e*e+t*t);v.set(0,n)}function V(e){if(1==z.length)m.set(e.pageX,e.pageY);else{const t=J(e),n=.5*(e.pageX+t.x),i=.5*(e.pageY+t.y);m.set(n,i)}f.subVectors(m,d).multiplyScalar(n.rotateSpeed);const t=n.domElement;t&&(A(2*Math.PI*f.x/t.clientHeight),C(2*Math.PI*f.y/t.clientHeight)),d.copy(m)}function G(e){if(1==z.length)g.set(e.pageX,e.pageY);else{const t=J(e),n=.5*(e.pageX+t.x),i=.5*(e.pageY+t.y);g.set(n,i)}x.subVectors(g,p).multiplyScalar(n.panSpeed),L(x.x,x.y),p.copy(g)}function W(e){const t=J(e),i=e.pageX-t.x,r=e.pageY-t.y,a=Math.sqrt(i*i+r*r);_.set(0,a),y.set(0,Math.pow(_.y/v.y,n.zoomSpeed)),I(y.y),v.copy(_)}function j(e){var t,i;!1!==n.enabled&&(0===z.length&&(null==(t=n.domElement)||t.ownerDocument.addEventListener("pointermove",X),null==(i=n.domElement)||i.ownerDocument.addEventListener("pointerup",q)),function(e){z.push(e)}(e),"touch"===e.pointerType?function(e){switch($(e),z.length){case 1:switch(n.touches.ONE){case Le.ROTATE:if(!1===n.enableRotate)return;F(),o=l.TOUCH_ROTATE;break;case Le.PAN:if(!1===n.enablePan)return;B(),o=l.TOUCH_PAN;break;default:o=l.NONE}break;case 2:switch(n.touches.TWO){case Le.DOLLY_PAN:if(!1===n.enableZoom&&!1===n.enablePan)return;n.enableZoom&&H(),n.enablePan&&B(),o=l.TOUCH_DOLLY_PAN;break;case Le.DOLLY_ROTATE:if(!1===n.enableZoom&&!1===n.enableRotate)return;n.enableZoom&&H(),n.enableRotate&&F(),o=l.TOUCH_DOLLY_ROTATE;break;default:o=l.NONE}break;default:o=l.NONE}o!==l.NONE&&n.dispatchEvent(r)}(e):function(e){let t;switch(e.button){case 0:t=n.mouseButtons.LEFT;break;case 1:t=n.mouseButtons.MIDDLE;break;case 2:t=n.mouseButtons.RIGHT;break;default:t=-1}switch(t){case Pe.DOLLY:if(!1===n.enableZoom)return;!function(e){k(e),v.set(e.clientX,e.clientY)}(e),o=l.DOLLY;break;case Pe.ROTATE:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===n.enablePan)return;O(e),o=l.PAN}else{if(!1===n.enableRotate)return;U(e),o=l.ROTATE}break;case Pe.PAN:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===n.enableRotate)return;U(e),o=l.ROTATE}else{if(!1===n.enablePan)return;O(e),o=l.PAN}break;default:o=l.NONE}o!==l.NONE&&n.dispatchEvent(r)}(e))}function X(e){!1!==n.enabled&&("touch"===e.pointerType?function(e){switch($(e),o){case l.TOUCH_ROTATE:if(!1===n.enableRotate)return;V(e),n.update();break;case l.TOUCH_PAN:if(!1===n.enablePan)return;G(e),n.update();break;case l.TOUCH_DOLLY_PAN:if(!1===n.enableZoom&&!1===n.enablePan)return;!function(e){n.enableZoom&&W(e),n.enablePan&&G(e)}(e),n.update();break;case l.TOUCH_DOLLY_ROTATE:if(!1===n.enableZoom&&!1===n.enableRotate)return;!function(e){n.enableZoom&&W(e),n.enableRotate&&V(e)}(e),n.update();break;default:o=l.NONE}}(e):function(e){if(!1===n.enabled)return;switch(o){case l.ROTATE:if(!1===n.enableRotate)return;!function(e){m.set(e.clientX,e.clientY),f.subVectors(m,d).multiplyScalar(n.rotateSpeed);const t=n.domElement;t&&(A(2*Math.PI*f.x/t.clientHeight),C(2*Math.PI*f.y/t.clientHeight)),d.copy(m),n.update()}(e);break;case l.DOLLY:if(!1===n.enableZoom)return;!function(e){_.set(e.clientX,e.clientY),y.subVectors(_,v),y.y>0?I(T()):y.y<0&&N(T()),v.copy(_),n.update()}(e);break;case l.PAN:if(!1===n.enablePan)return;!function(e){g.set(e.clientX,e.clientY),x.subVectors(g,p).multiplyScalar(n.panSpeed),L(x.x,x.y),p.copy(g),n.update()}(e)}}(e))}function q(e){var t,i,r;!function(e){delete E[e.pointerId];for(let t=0;t<z.length;t++)if(z[t].pointerId==e.pointerId)return void z.splice(t,1)}(e),0===z.length&&(null==(t=n.domElement)||t.releasePointerCapture(e.pointerId),null==(i=n.domElement)||i.ownerDocument.removeEventListener("pointermove",X),null==(r=n.domElement)||r.ownerDocument.removeEventListener("pointerup",q)),n.dispatchEvent(a),o=l.NONE}function Y(e){!1===n.enabled||!1===n.enableZoom||o!==l.NONE&&o!==l.ROTATE||(e.preventDefault(),n.dispatchEvent(r),function(e){k(e),e.deltaY<0?N(T()):e.deltaY>0&&I(T()),n.update()}(e),n.dispatchEvent(a))}function Z(e){!1!==n.enabled&&!1!==n.enablePan&&function(e){let t=!1;switch(e.code){case n.keys.UP:L(0,n.keyPanSpeed),t=!0;break;case n.keys.BOTTOM:L(0,-n.keyPanSpeed),t=!0;break;case n.keys.LEFT:L(n.keyPanSpeed,0),t=!0;break;case n.keys.RIGHT:L(-n.keyPanSpeed,0),t=!0}t&&(e.preventDefault(),n.update())}(e)}function K(e){!1!==n.enabled&&e.preventDefault()}function $(e){let t=E[e.pointerId];void 0===t&&(t=new Rr,E[e.pointerId]=t),t.set(e.pageX,e.pageY)}function J(e){const t=e.pointerId===z[0].pointerId?z[1]:z[0];return E[t.pointerId]}void 0!==t&&this.connect(t),this.update()}}const Jx=i.forwardRef(((e,t)=>{let{makeDefault:n,camera:r,regress:a,domElement:l,enableDamping:o=!0,keyEvents:s=!1,onChange:b,onStart:c,onEnd:u,...h}=e;const d=Xg((e=>e.invalidate)),m=Xg((e=>e.camera)),f=Xg((e=>e.gl)),p=Xg((e=>e.events)),g=Xg((e=>e.setEvents)),x=Xg((e=>e.set)),v=Xg((e=>e.get)),_=Xg((e=>e.performance)),y=r||m,S=l||p.connected||f.domElement,M=i.useMemo((()=>new $x(y)),[y]);return function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=jg(),i=n.getState().internal.subscribe,r=sg(e);og((()=>i(r,t,n)),[t,i,n])}((()=>{M.enabled&&M.update()}),-1),i.useEffect((()=>(s&&M.connect(!0===s?S:s),M.connect(S),()=>{M.dispose()})),[s,S,a,M,d]),i.useEffect((()=>{const e=e=>{d(),a&&_.regress(),b&&b(e)},t=e=>{c&&c(e)},n=e=>{u&&u(e)};return M.addEventListener("change",e),M.addEventListener("start",t),M.addEventListener("end",n),()=>{M.removeEventListener("start",t),M.removeEventListener("end",n),M.removeEventListener("change",e)}}),[b,c,u,M,d,g]),i.useEffect((()=>{if(n){const e=v().controls;return x({controls:M}),()=>x({controls:e})}}),[n,M]),i.createElement("primitive",Ix({ref:t,object:M,enableDamping:o},h))})),Qx=JSON.parse('{"glyphs":{"0":{"ha":772,"x_min":0,"x_max":0,"o":"m 383 981 b 135 853 274 981 191 938 b 50 479 78 768 50 643 b 389 -19 50 147 163 -19 b 638 107 498 -19 581 23 b 722 476 694 191 722 314 b 383 981 722 813 609 981 z m 385 847 b 460 830 413 847 438 841 b 510 778 481 818 498 801 b 541 711 523 755 533 732 b 557 627 549 690 554 662 b 562 549 560 592 561 566 b 563 476 562 532 563 508 b 562 417 563 452 562 433 b 558 352 561 402 560 380 b 548 281 555 324 552 300 b 529 218 544 262 538 241 b 499 163 521 195 511 176 b 452 127 487 149 471 137 b 388 113 433 117 412 113 b 252 197 325 113 280 141 b 210 469 224 254 210 344 b 211 552 210 503 210 530 b 217 635 212 574 214 601 b 233 717 221 668 226 696 b 263 783 241 739 251 761 b 313 831 276 804 292 821 b 385 847 333 842 357 847 z "},"1":{"ha":772,"x_min":0,"x_max":0,"o":"m 524 978 l 396 978 b 113 789 375 852 281 789 l 113 672 l 354 672 l 354 0 l 524 0 z "},"2":{"ha":772,"x_min":0,"x_max":0,"o":"m 696 140 l 222 140 b 431 336 245 196 315 261 b 513 392 470 363 498 381 b 581 446 527 402 550 420 b 645 514 611 472 633 494 b 681 590 658 533 669 559 b 697 690 692 622 697 655 b 611 902 697 778 669 849 b 383 982 554 955 478 982 b 145 890 283 982 204 951 b 57 640 86 828 57 745 l 57 615 l 211 615 b 216 683 212 641 214 664 b 231 745 218 703 223 723 b 259 799 238 767 247 785 b 307 833 271 813 287 824 b 379 846 327 841 351 846 b 494 802 427 846 466 831 b 536 682 522 773 536 733 b 531 630 536 663 534 646 b 509 582 527 614 520 598 b 484 544 498 566 490 554 b 446 508 478 535 465 523 b 408 478 426 492 414 483 b 363 448 403 474 388 464 b 322 421 339 432 325 423 b 228 355 282 394 251 372 b 152 290 206 338 180 316 b 88 212 124 263 103 237 b 50 119 74 186 61 156 b 32 0 39 83 33 44 l 696 0 z "},"3":{"ha":772,"x_min":0,"x_max":0,"o":"m 61 660 l 213 660 b 375 851 217 788 271 851 b 483 813 420 851 456 838 b 524 710 510 787 524 752 b 507 635 524 680 518 655 b 459 592 496 616 480 601 b 397 574 438 584 418 578 b 324 569 377 571 352 569 l 310 569 l 310 450 b 360 451 325 451 342 451 b 500 413 417 451 464 438 b 554 289 536 387 554 345 b 507 162 554 235 538 193 b 379 115 475 131 433 115 b 190 319 258 115 195 183 l 38 319 l 38 299 b 131 67 38 202 69 125 b 375 -21 193 8 274 -21 b 624 67 477 -21 560 8 b 719 293 688 125 719 200 b 672 441 719 351 704 401 b 543 522 641 481 598 508 b 642 597 585 536 618 561 b 679 721 667 632 679 674 b 596 910 679 799 651 862 b 378 982 540 958 468 982 b 150 896 282 982 206 953 b 61 660 94 838 64 760 z "},"4":{"ha":772,"x_min":0,"x_max":0,"o":"m 725 364 l 601 364 l 601 981 l 451 981 l 35 388 l 35 231 l 447 231 l 449 0 l 601 0 l 601 231 l 725 231 z m 450 364 l 165 364 l 450 785 z "},"5":{"ha":772,"x_min":0,"x_max":0,"o":"m 663 967 l 161 967 l 68 443 l 207 439 b 369 526 246 497 300 526 b 504 473 427 526 472 509 b 553 322 537 437 553 387 b 506 167 553 256 537 204 b 372 113 474 131 430 113 b 250 157 323 113 282 127 b 196 276 218 187 200 226 l 39 276 b 134 62 43 187 74 115 b 368 -18 194 9 272 -18 b 618 79 470 -18 553 14 b 715 331 683 144 715 228 b 632 561 715 426 688 503 b 414 649 576 619 504 649 b 231 579 335 649 274 625 l 275 829 l 663 829 z "},"6":{"ha":772,"x_min":0,"x_max":0,"o":"m 704 725 b 613 915 695 806 664 870 b 411 983 561 961 494 983 b 146 847 298 983 210 938 b 50 468 82 756 50 630 b 140 107 50 312 80 191 b 399 -19 200 23 287 -19 b 634 76 494 -19 572 13 b 726 321 696 140 726 222 b 644 553 726 416 699 494 b 426 642 589 612 516 642 b 204 522 332 642 258 602 b 210 578 207 548 209 567 b 219 638 211 589 214 609 b 234 703 224 666 229 688 b 257 760 239 719 247 738 b 292 813 267 783 279 800 b 340 844 305 825 321 835 b 404 858 360 854 381 858 b 551 725 486 858 535 814 z m 394 515 b 521 460 447 515 489 497 b 568 315 552 424 568 375 b 522 168 568 254 553 205 b 399 113 491 131 450 113 b 273 169 347 113 305 131 b 225 319 241 207 225 257 b 271 462 225 379 240 426 b 394 515 301 497 343 515 z "},"7":{"ha":772,"x_min":0,"x_max":0,"o":"m 714 967 l 51 967 l 51 821 l 557 821 b 301 441 460 730 375 603 b 186 0 228 278 190 131 l 360 0 b 465 451 365 146 400 297 b 714 833 530 605 613 732 z "},"8":{"ha":772,"x_min":0,"x_max":0,"o":"m 222 524 b 91 434 166 506 122 476 b 44 281 60 392 44 341 b 138 65 44 192 76 120 b 385 -17 201 11 283 -17 b 633 67 488 -17 570 11 b 728 289 696 123 728 197 b 683 438 728 351 713 400 b 550 524 654 475 609 503 b 688 731 642 563 688 631 b 604 913 688 805 660 866 b 390 985 549 961 477 985 b 169 913 300 985 226 961 b 83 726 112 864 83 802 b 120 601 83 678 96 636 b 222 524 145 565 179 539 z m 389 857 b 499 819 435 857 472 844 b 540 717 527 793 540 759 b 499 613 540 673 526 639 b 388 575 471 588 434 575 b 275 614 341 575 304 588 b 232 717 246 640 232 674 b 274 819 232 759 246 793 b 389 857 303 844 341 857 z m 385 461 b 518 413 440 461 485 445 b 568 285 551 381 568 338 b 521 155 568 229 552 186 b 390 108 489 124 446 108 b 254 157 333 108 288 125 b 204 289 221 189 204 233 b 254 413 204 340 221 381 b 385 461 288 445 331 461 z "},"9":{"ha":772,"x_min":0,"x_max":0,"o":"m 61 242 b 151 54 65 166 95 103 b 358 -19 207 5 276 -19 b 532 28 425 -19 483 -3 b 644 156 581 60 618 103 b 699 323 669 209 688 265 b 717 506 711 381 717 442 b 708 640 717 553 714 598 b 674 769 702 683 691 726 b 613 880 658 812 638 849 b 513 956 588 911 554 936 b 372 985 472 975 425 985 b 135 888 276 985 197 953 b 42 643 73 824 42 742 b 126 413 42 550 70 473 b 342 324 183 353 255 324 b 558 447 433 324 506 365 b 367 107 548 220 484 107 b 260 144 322 107 287 119 b 214 242 233 169 218 202 z m 367 851 b 493 796 419 851 462 833 b 540 647 525 759 540 709 b 493 506 540 589 525 542 b 369 451 462 469 420 451 b 247 504 319 451 278 469 b 201 647 217 539 201 587 b 247 795 201 708 216 758 b 367 851 277 833 317 851 z "},"\\r":{"ha":0,"x_min":0,"x_max":0,"o":""}," ":{"ha":386,"x_min":0,"x_max":0,"o":""},"!":{"ha":386,"x_min":0,"x_max":0,"o":"m 278 989 l 108 989 l 108 704 l 151 274 l 233 274 l 278 706 z m 283 176 l 103 176 l 103 0 l 283 0 z "},"\\"":{"ha":617,"x_min":0,"x_max":0,"o":"m 233 563 l 258 967 l 118 967 l 143 563 z m 475 563 l 499 967 l 360 967 l 383 563 z "},"#":{"ha":772,"x_min":0,"x_max":0,"o":"m 226 0 l 276 271 l 429 271 l 379 0 l 510 0 l 560 271 l 704 271 l 704 382 l 581 382 l 618 583 l 763 583 l 763 694 l 639 694 l 689 967 l 558 967 l 508 694 l 356 694 l 406 967 l 275 967 l 224 694 l 79 694 l 79 583 l 203 583 l 165 382 l 21 382 l 21 271 l 146 271 l 96 0 z m 450 382 l 297 382 l 335 583 l 488 583 z "},"$":{"ha":772,"x_min":0,"x_max":0,"o":"m 418 1094 l 349 1094 l 349 994 b 127 913 258 986 184 959 b 42 714 70 867 42 801 b 128 526 42 632 71 570 b 349 440 186 482 260 453 l 349 101 b 175 288 233 112 175 174 b 176 303 175 293 175 298 l 18 303 l 18 290 b 110 61 18 191 49 115 b 349 -19 172 7 251 -19 l 349 -139 l 418 -139 l 418 -19 b 656 63 516 -19 596 8 b 747 275 717 117 747 188 b 418 569 747 435 638 533 l 418 875 b 531 833 468 869 506 855 b 569 726 557 810 569 775 l 569 717 l 719 717 l 719 738 b 638 922 719 814 692 876 b 418 994 584 969 511 993 z m 349 585 b 233 633 299 597 260 613 b 192 729 205 654 192 686 b 233 830 192 771 206 804 b 349 874 261 855 300 870 z m 418 425 b 590 267 533 402 590 349 b 543 149 590 219 575 179 b 418 100 512 118 470 102 z "},"%":{"ha":1389,"x_min":0,"x_max":0,"o":"m 1015 1007 l 910 1007 l 360 -43 l 468 -43 z m 351 983 b 181 913 278 983 222 960 b 121 711 141 865 121 798 b 179 506 121 621 140 553 b 349 436 218 459 275 436 b 517 508 423 436 479 460 b 575 719 556 556 575 627 b 518 916 575 806 556 871 b 351 983 480 961 425 983 z m 349 893 b 453 718 418 893 453 835 b 347 525 453 589 418 525 b 243 704 278 525 243 585 b 349 893 243 830 278 893 z m 1051 528 b 881 457 978 528 922 504 b 821 256 841 410 821 343 b 879 51 821 166 840 97 b 1049 -19 918 4 975 -19 b 1217 53 1123 -19 1179 5 b 1275 264 1256 101 1275 171 b 1218 460 1275 350 1256 416 b 1051 528 1180 505 1125 528 z m 1049 438 b 1153 263 1118 438 1153 379 b 1047 69 1153 134 1118 69 b 943 249 978 69 943 129 b 1049 438 943 375 978 438 z "},"&":{"ha":900,"x_min":0,"x_max":0,"o":"m 806 472 l 667 472 b 632 338 660 418 649 373 l 481 525 b 656 778 597 587 656 671 b 588 935 656 842 633 894 b 417 997 543 977 486 997 b 241 935 345 997 287 977 b 172 778 195 894 172 842 b 271 560 172 713 205 640 b 108 438 204 529 150 489 b 46 265 67 388 46 330 b 135 56 46 177 75 108 b 356 -21 194 5 268 -21 b 633 111 467 -21 559 23 l 725 0 l 919 0 l 725 229 b 806 472 770 293 797 374 z m 401 621 l 396 628 b 314 782 341 696 314 748 b 343 851 314 810 324 833 b 417 879 363 870 387 879 b 488 849 445 879 469 869 b 517 774 507 829 517 804 b 401 621 517 717 478 666 z m 353 458 l 549 218 b 364 111 495 147 433 111 b 249 158 319 111 280 127 b 201 269 217 189 201 226 b 242 376 201 312 215 347 b 353 458 269 404 306 431 z "},"\'":{"ha":386,"x_min":0,"x_max":0,"o":"m 236 563 l 263 967 l 124 967 l 150 563 z "},"(":{"ha":386,"x_min":0,"x_max":0,"o":"m 396 996 l 269 996 b 69 357 136 805 69 592 b 119 40 69 239 86 134 b 269 -265 152 -53 202 -155 l 397 -265 b 228 360 284 -62 228 146 b 269 688 228 481 242 591 b 396 996 297 786 339 888 z "},")":{"ha":386,"x_min":0,"x_max":0,"o":"m 315 357 b 115 996 315 592 249 805 l -11 996 b 115 688 45 888 88 786 b 157 360 143 591 157 481 b -12 -265 157 146 100 -62 l 115 -265 b 266 40 183 -155 233 -53 b 315 357 299 134 315 239 z "},"*":{"ha":514,"x_min":0,"x_max":0,"o":"m 489 808 l 456 897 l 301 839 l 304 1003 l 208 1003 l 210 839 l 56 897 l 25 808 l 179 756 l 83 625 l 160 569 l 256 707 l 354 569 l 428 625 l 332 756 z "},"+":{"ha":833,"x_min":0,"x_max":0,"o":"m 346 0 l 488 0 l 488 292 l 776 292 l 776 424 l 488 424 l 488 715 l 346 715 l 346 424 l 58 424 l 58 292 l 346 292 z "},",":{"ha":386,"x_min":0,"x_max":0,"o":"m 288 188 l 99 188 l 99 0 l 189 0 b 99 -135 186 -72 156 -117 l 99 -218 b 246 -128 169 -202 218 -172 b 288 46 274 -84 288 -26 z "},"-":{"ha":540,"x_min":0,"x_max":0,"o":"m 474 456 l 67 456 l 67 308 l 474 308 z "},".":{"ha":386,"x_min":0,"x_max":0,"o":"m 288 188 l 99 188 l 99 0 l 288 0 z "},"/":{"ha":489,"x_min":0,"x_max":0,"o":"m 514 1013 l 376 1013 l -25 -24 l 115 -24 z "},":":{"ha":386,"x_min":0,"x_max":0,"o":"m 288 188 l 99 188 l 99 0 l 288 0 z m 288 710 l 99 710 l 99 522 l 288 522 z "},";":{"ha":386,"x_min":0,"x_max":0,"o":"m 288 710 l 99 710 l 99 522 l 288 522 z m 288 188 l 99 188 l 99 0 l 189 0 b 99 -135 186 -72 156 -117 l 99 -218 b 246 -128 169 -202 218 -172 b 288 46 274 -84 288 -26 z "},"<":{"ha":833,"x_min":0,"x_max":0,"o":"m 58 289 l 776 10 l 776 160 l 238 358 l 776 557 l 776 704 l 58 428 z "},"=":{"ha":833,"x_min":0,"x_max":0,"o":"m 58 440 l 776 440 l 776 574 l 58 574 z m 58 142 l 776 142 l 776 275 l 58 275 z "},">":{"ha":833,"x_min":0,"x_max":0,"o":"m 776 289 l 776 428 l 58 704 l 58 557 l 597 358 l 58 160 l 58 10 z "},"?":{"ha":772,"x_min":0,"x_max":0,"o":"m 289 0 l 468 0 l 468 176 l 289 176 z m 304 274 l 454 274 b 468 390 454 333 459 372 b 551 476 477 408 505 437 b 614 532 580 500 601 519 b 658 583 627 545 642 562 b 693 651 675 605 687 627 b 703 733 700 675 703 703 b 617 933 703 816 674 882 b 392 1008 560 983 485 1008 b 151 919 287 1008 207 978 b 61 675 96 859 66 778 l 221 675 b 389 872 225 806 281 872 b 493 833 431 872 466 859 b 533 733 520 807 533 774 b 530 697 533 720 532 708 b 517 662 528 685 523 673 b 502 633 511 650 506 641 b 479 605 498 626 490 616 b 456 581 468 593 460 585 b 427 555 451 576 441 567 b 400 531 413 542 404 534 b 323 420 361 494 335 458 b 304 274 310 383 304 334 z "},"@":{"ha":1111,"x_min":0,"x_max":0,"o":"m 965 179 b 583 44 843 89 716 44 b 247 166 446 44 334 85 b 115 478 159 247 115 351 b 254 811 115 611 162 722 b 601 944 347 900 463 944 b 886 850 718 944 813 913 b 996 604 959 787 996 705 b 939 403 996 530 977 463 b 813 314 901 344 859 314 b 769 328 794 314 780 319 b 754 369 759 338 754 352 b 771 454 754 389 760 417 l 861 758 l 747 758 l 726 682 b 568 781 700 748 647 781 b 373 680 494 781 429 747 b 289 444 317 613 289 534 b 341 291 289 381 306 330 b 478 232 376 252 421 232 b 671 364 560 232 625 276 b 667 333 668 351 667 341 b 699 260 667 303 677 278 b 782 232 720 241 748 232 b 984 342 859 232 926 269 b 1071 597 1042 415 1071 500 b 939 897 1071 719 1027 819 b 600 1013 851 974 738 1013 b 202 860 443 1013 310 962 b 40 481 94 758 40 631 b 197 116 40 331 92 209 b 579 -24 301 23 428 -24 b 796 12 657 -24 729 -12 b 1004 126 863 35 932 74 z m 685 606 b 665 492 685 574 678 536 b 604 370 652 448 632 408 b 513 314 576 333 546 314 b 445 347 484 314 461 325 b 421 438 429 369 421 400 b 441 544 421 470 428 506 b 503 651 454 583 475 619 b 596 699 531 683 562 699 b 660 672 622 699 643 690 b 685 606 676 655 685 632 z "},"A":{"ha":926,"x_min":0,"x_max":0,"o":"m 556 990 l 371 990 l -11 0 l 168 0 l 265 263 l 657 263 l 751 0 l 938 0 z m 611 393 l 310 393 l 464 810 z "},"B":{"ha":978,"x_min":0,"x_max":0,"o":"m 103 989 l 103 0 l 607 0 b 833 81 700 0 775 27 b 919 292 891 134 919 205 b 869 449 919 355 903 407 b 733 532 836 490 791 518 b 836 613 776 549 810 576 b 875 740 862 651 875 693 b 792 922 875 816 847 877 b 554 989 737 966 658 989 z m 272 849 l 514 849 b 653 822 574 849 621 840 b 703 713 686 805 703 768 b 656 608 703 663 687 628 b 508 576 624 587 575 576 l 272 576 z m 272 451 l 529 451 b 611 446 561 451 588 450 b 678 425 634 442 657 435 b 728 377 700 415 717 399 b 746 296 740 355 746 328 b 689 175 746 238 727 197 b 532 142 651 153 599 142 l 272 142 z "},"C":{"ha":1003,"x_min":0,"x_max":0,"o":"m 951 376 l 778 376 b 525 124 756 208 672 124 b 391 156 474 124 429 134 b 300 241 353 177 322 205 b 250 358 278 277 261 316 b 233 494 239 401 233 446 b 262 672 233 558 243 617 b 359 808 281 726 313 771 b 526 864 405 845 461 864 b 688 813 590 864 644 847 b 771 674 731 779 759 733 l 943 674 b 803 924 927 783 881 866 b 529 1011 725 982 634 1011 b 275 940 432 1011 347 987 b 113 752 203 892 149 829 b 58 494 76 675 58 589 b 185 118 58 338 100 213 b 521 -24 269 24 381 -24 b 822 85 644 -24 744 13 b 951 376 899 158 942 255 z "},"D":{"ha":1003,"x_min":0,"x_max":0,"o":"m 104 989 l 104 0 l 490 0 b 678 24 568 0 631 8 b 811 110 726 41 770 69 b 950 511 904 202 950 336 b 804 888 950 675 901 800 b 661 967 761 926 713 953 b 481 989 609 982 549 989 z m 276 842 l 469 842 b 701 752 574 842 651 812 b 776 503 751 692 776 609 b 710 240 776 391 754 303 b 481 146 665 177 589 146 l 276 146 z "},"E":{"ha":875,"x_min":0,"x_max":0,"o":"m 815 989 l 103 989 l 103 0 l 824 0 l 824 149 l 275 149 l 275 440 l 776 440 l 776 581 l 275 581 l 275 843 l 815 843 z "},"F":{"ha":824,"x_min":0,"x_max":0,"o":"m 789 989 l 104 989 l 104 0 l 279 0 l 279 432 l 726 432 l 726 572 l 279 572 l 279 842 l 789 842 z "},"G":{"ha":1054,"x_min":0,"x_max":0,"o":"m 972 529 l 549 529 l 549 396 l 815 396 b 745 197 815 317 792 251 b 546 117 698 144 632 117 b 316 216 448 117 371 150 b 233 490 261 282 233 374 b 315 764 233 606 261 697 b 540 864 370 831 445 864 b 709 813 608 864 664 847 b 792 674 754 779 781 733 l 960 674 b 823 919 949 777 903 859 b 542 1010 743 980 649 1010 b 189 860 394 1010 276 960 b 58 488 102 761 58 637 b 188 118 58 336 102 213 b 526 -24 275 24 388 -24 b 835 118 653 -24 756 24 l 861 0 l 972 0 z "},"H":{"ha":1003,"x_min":0,"x_max":0,"o":"m 901 989 l 728 989 l 728 596 l 275 596 l 275 989 l 101 989 l 101 0 l 275 0 l 275 444 l 728 444 l 728 0 l 901 0 z "},"I":{"ha":386,"x_min":0,"x_max":0,"o":"m 281 989 l 106 989 l 106 0 l 281 0 z "},"J":{"ha":746,"x_min":0,"x_max":0,"o":"m 653 989 l 479 989 l 479 317 b 478 255 479 291 479 270 b 469 203 477 240 474 222 b 447 158 464 183 456 168 b 407 130 438 147 425 138 b 343 118 389 122 368 118 b 231 163 288 118 251 133 b 200 293 210 193 200 237 l 200 347 l 35 347 l 35 310 b 108 61 35 200 59 118 b 349 -24 156 5 237 -24 b 576 57 449 -24 524 3 b 653 293 627 111 653 189 z "},"K":{"ha":951,"x_min":0,"x_max":0,"o":"m 932 989 l 713 989 l 275 540 l 275 989 l 103 989 l 103 0 l 275 0 l 275 332 l 417 474 l 742 0 l 957 0 l 536 594 z "},"L":{"ha":797,"x_min":0,"x_max":0,"o":"m 781 150 l 278 150 l 278 989 l 103 989 l 103 0 l 781 0 z "},"M":{"ha":1235,"x_min":0,"x_max":0,"o":"m 1132 989 l 890 989 l 624 215 l 347 989 l 104 989 l 104 0 l 268 0 l 268 763 l 550 0 l 692 0 l 967 763 l 967 0 l 1132 0 z "},"N":{"ha":1003,"x_min":0,"x_max":0,"o":"m 906 989 l 739 989 l 739 260 l 283 989 l 101 989 l 101 0 l 265 0 l 265 728 l 726 0 l 906 0 z "},"O":{"ha":1056,"x_min":0,"x_max":0,"o":"m 531 1013 b 181 866 383 1013 267 964 b 53 494 96 768 53 644 b 184 119 53 340 97 215 b 528 -24 272 24 386 -24 b 871 120 669 -24 783 24 b 1003 494 959 216 1003 341 b 872 869 1003 648 959 773 b 531 1013 784 965 670 1013 z m 528 867 b 747 766 619 867 692 833 b 828 496 801 699 828 609 b 747 224 828 383 801 292 b 531 122 692 156 620 122 b 309 224 437 122 363 156 b 228 497 255 291 228 382 b 310 766 228 609 255 699 b 528 867 364 833 437 867 z "},"P":{"ha":926,"x_min":0,"x_max":0,"o":"m 107 989 l 107 0 l 281 0 l 281 381 l 560 381 b 794 463 659 381 737 408 b 881 688 852 518 881 593 b 788 913 881 788 850 863 b 536 989 727 964 643 989 z m 281 844 l 507 844 b 711 683 643 844 711 791 b 522 521 711 575 648 521 l 281 521 z "},"Q":{"ha":1056,"x_min":0,"x_max":0,"o":"m 990 3 l 861 114 b 965 278 906 156 940 211 b 1001 496 989 344 1001 417 b 869 866 1001 647 957 770 b 529 1010 781 962 668 1010 b 185 865 388 1010 274 962 b 53 492 97 769 53 644 b 183 119 53 338 96 214 b 524 -24 270 24 384 -24 b 758 33 620 -24 698 -5 l 906 -92 z m 739 221 l 622 322 l 539 228 l 640 142 b 529 118 605 126 568 118 b 310 220 438 118 364 152 b 228 494 255 288 228 380 b 309 763 228 606 255 696 b 526 864 363 830 436 864 b 746 763 618 864 691 830 b 828 494 800 696 828 606 b 739 221 828 387 798 296 z "},"R":{"ha":978,"x_min":0,"x_max":0,"o":"m 103 989 l 103 0 l 275 0 l 275 408 l 506 408 b 672 363 587 408 642 393 b 722 197 701 333 718 278 b 724 168 722 192 723 182 b 725 139 725 154 725 144 l 728 114 l 731 89 b 733 67 731 83 731 76 b 736 47 734 59 735 52 b 740 30 737 41 738 36 b 747 13 742 24 744 18 b 754 0 749 8 751 4 l 940 0 b 928 15 936 5 931 10 b 918 35 924 21 921 28 b 911 56 915 43 913 50 b 905 83 909 62 907 71 b 900 109 903 94 901 103 b 897 140 899 115 898 125 b 894 172 895 155 894 166 b 891 208 893 178 892 190 b 888 246 890 227 888 239 b 881 306 886 271 884 291 b 868 360 879 322 875 339 b 844 410 862 380 853 397 b 803 446 834 423 820 435 b 740 471 785 457 764 465 b 861 562 792 489 832 520 b 904 714 890 604 904 655 b 811 923 904 809 873 879 b 571 989 749 967 669 989 z m 275 847 l 526 847 b 603 842 556 847 582 845 b 667 821 625 838 647 831 b 715 774 688 811 704 795 b 732 696 726 753 732 727 b 713 611 732 662 726 633 b 659 563 701 589 683 573 b 589 543 635 553 612 547 b 504 538 566 539 538 538 l 275 538 z "},"S":{"ha":900,"x_min":0,"x_max":0,"o":"m 815 697 b 708 932 812 803 776 881 b 446 1008 641 983 553 1008 b 180 930 335 1008 246 982 b 81 719 114 878 81 807 l 81 700 b 210 507 86 613 129 549 b 453 429 249 487 330 461 b 468 425 456 428 462 427 b 589 390 525 410 566 399 b 653 348 612 382 634 368 b 683 271 673 328 683 302 b 627 156 683 222 665 184 b 471 115 590 129 538 115 b 286 167 395 115 333 133 b 215 328 239 202 215 256 l 44 328 b 160 67 44 213 83 126 b 461 -22 237 7 337 -22 b 576 -12 501 -22 539 -19 b 683 22 613 -5 649 6 b 772 81 718 38 747 58 b 832 169 797 105 817 134 b 854 288 847 205 854 244 b 722 508 854 388 810 461 b 497 583 682 531 607 556 b 446 597 485 586 468 591 b 283 651 362 619 307 637 b 246 733 258 666 246 694 b 296 834 246 776 263 809 b 435 871 329 859 375 871 b 650 697 568 871 640 813 z "},"T":{"ha":824,"x_min":0,"x_max":0,"o":"m 814 989 l 10 989 l 10 839 l 325 839 l 325 0 l 499 0 l 499 839 l 814 839 z "},"U":{"ha":1003,"x_min":0,"x_max":0,"o":"m 907 989 l 733 989 l 733 406 b 725 290 733 359 731 321 b 694 203 719 259 709 230 b 626 143 680 176 657 156 b 507 124 595 130 555 124 b 269 351 349 124 269 200 l 269 989 l 96 989 l 96 386 b 195 81 96 249 129 147 b 504 -19 261 14 364 -19 b 907 383 773 -19 907 115 z "},"V":{"ha":849,"x_min":0,"x_max":0,"o":"m -7 989 l 325 0 l 518 0 l 857 989 l 681 989 l 425 207 l 175 989 z "},"W":{"ha":1311,"x_min":0,"x_max":0,"o":"m 11 989 l 272 0 l 451 0 l 656 760 l 856 0 l 1032 0 l 1306 989 l 1129 989 l 943 236 l 747 989 l 571 989 l 368 236 l 188 989 z "},"X":{"ha":900,"x_min":0,"x_max":0,"o":"m -8 0 l 192 0 l 443 378 l 690 0 l 901 0 l 550 513 l 878 989 l 683 989 l 449 639 l 224 989 l 17 989 l 344 513 z "},"Y":{"ha":900,"x_min":0,"x_max":0,"o":"m 910 989 l 715 989 l 456 551 l 193 989 l -7 989 l 367 393 l 367 0 l 538 0 l 538 393 z "},"Z":{"ha":875,"x_min":0,"x_max":0,"o":"m 822 989 l 68 989 l 68 839 l 599 839 l 26 143 l 26 0 l 839 0 l 839 150 l 246 150 l 822 851 z "},"[":{"ha":411,"x_min":0,"x_max":0,"o":"m 410 1000 l 99 1000 l 99 -250 l 410 -250 l 410 -126 l 246 -126 l 246 876 l 410 876 z "},"\\\\":{"ha":489,"x_min":0,"x_max":0,"o":"m 360 -24 l 488 -24 l 132 1013 l 4 1013 z "},"]":{"ha":411,"x_min":0,"x_max":0,"o":"m 1 1000 l 1 876 l 165 876 l 165 -126 l 1 -126 l 1 -250 l 313 -250 l 313 1000 z "},"^":{"ha":833,"x_min":0,"x_max":0,"o":"m 111 376 l 254 376 l 414 790 l 579 376 l 722 376 l 479 967 l 354 967 z "},"_":{"ha":694,"x_min":0,"x_max":0,"o":"m 0 -174 l 694 -174 l 694 -104 l 0 -104 z "},"`":{"ha":335,"x_min":0,"x_max":0,"o":"m 136 1010 l -50 1010 l 147 811 l 263 811 z "},"a":{"ha":772,"x_min":0,"x_max":0,"o":"m 76 496 l 226 496 b 272 594 233 542 248 575 b 386 624 296 614 334 624 b 533 515 484 624 533 588 b 524 464 533 488 530 471 b 482 441 516 454 502 446 b 367 422 462 436 423 430 b 317 416 342 419 325 417 b 269 408 309 415 294 412 b 219 398 245 405 228 401 b 174 383 209 395 194 390 b 131 363 154 377 140 370 b 98 335 122 355 111 346 b 69 299 84 324 75 312 b 53 253 63 286 57 270 b 46 196 48 235 46 216 b 111 40 46 130 68 78 b 288 -18 155 1 213 -18 b 539 68 395 -18 479 11 b 656 -18 549 11 588 -18 b 758 -3 683 -18 718 -13 l 758 108 b 722 106 745 106 733 106 b 692 117 707 106 697 109 b 685 158 687 124 685 138 l 685 522 b 605 686 685 596 658 651 b 390 739 552 721 480 739 b 76 496 198 739 93 658 z m 532 360 l 532 275 b 500 151 532 214 521 173 b 338 94 462 113 408 94 b 242 122 297 94 265 104 b 208 201 220 141 208 167 b 218 249 208 220 212 236 b 241 281 225 263 232 273 b 278 301 250 289 262 296 b 319 313 295 307 308 311 b 365 321 331 316 346 318 b 406 326 372 322 385 324 b 452 333 427 329 442 331 b 490 342 462 334 475 337 b 532 360 506 347 520 353 z "},"b":{"ha":849,"x_min":0,"x_max":0,"o":"m 242 989 l 85 989 l 85 0 l 233 0 l 233 97 b 468 -19 281 19 360 -19 b 704 85 566 -19 645 16 b 793 364 763 155 793 248 b 706 633 793 476 764 566 b 476 735 648 701 572 735 b 242 624 373 735 294 698 z m 436 608 b 580 542 496 608 544 586 b 633 361 616 497 633 437 b 579 177 633 284 615 223 b 436 108 543 131 495 108 b 290 175 374 108 325 131 b 236 357 254 219 236 280 b 290 542 236 436 254 497 b 436 608 325 587 374 609 z "},"c":{"ha":772,"x_min":0,"x_max":0,"o":"m 733 271 l 578 271 b 520 149 569 218 550 178 b 404 107 490 121 451 107 b 263 174 344 107 297 129 b 213 360 229 218 213 280 b 265 548 213 439 230 502 b 410 617 300 594 349 617 b 515 581 452 617 488 605 b 571 476 543 556 562 522 l 728 476 b 630 669 719 559 686 623 b 408 739 574 716 500 739 b 148 634 299 739 212 704 b 51 351 84 564 51 470 b 147 84 51 241 83 152 b 404 -18 211 16 297 -18 b 628 60 494 -18 569 8 b 733 271 687 113 722 183 z "},"d":{"ha":849,"x_min":0,"x_max":0,"o":"m 763 989 l 607 989 l 607 624 b 379 736 556 699 480 736 b 142 634 280 736 201 702 b 54 360 84 566 54 475 b 144 83 54 244 84 152 b 385 -19 203 15 284 -19 b 614 99 492 -19 569 20 l 614 0 l 763 0 z m 408 608 b 558 543 472 608 522 587 b 611 360 593 500 611 438 b 559 175 611 281 594 219 b 414 108 524 131 476 108 b 267 176 352 108 303 131 b 214 363 232 222 214 284 b 266 542 214 438 231 498 b 408 608 301 586 348 608 z "},"e":{"ha":772,"x_min":0,"x_max":0,"o":"m 725 224 l 574 224 b 509 124 558 178 536 145 b 403 93 482 103 446 93 b 260 152 342 93 294 113 b 206 319 225 191 207 247 l 735 319 l 735 336 b 643 630 735 460 704 558 b 394 738 582 702 499 738 b 145 628 294 738 210 701 b 47 350 80 555 47 462 b 142 81 47 241 79 151 b 400 -24 206 11 292 -24 b 610 42 481 -24 552 -2 b 725 224 669 85 707 146 z m 576 425 l 208 425 b 267 569 216 488 235 536 b 393 619 299 603 341 619 b 520 567 445 619 487 602 b 576 425 553 533 572 485 z "},"f":{"ha":438,"x_min":0,"x_max":0,"o":"m 439 990 b 344 994 407 993 376 994 b 181 940 268 994 213 976 b 132 774 148 904 132 849 l 132 717 l 14 717 l 14 601 l 132 601 l 132 0 l 289 0 l 289 601 l 424 601 l 424 717 l 288 717 l 288 786 b 304 855 288 820 293 843 b 369 872 315 866 337 872 b 439 868 385 872 408 871 z "},"g":{"ha":824,"x_min":0,"x_max":0,"o":"m 740 717 l 593 717 l 593 617 b 497 708 563 658 531 689 b 369 736 463 727 420 736 b 138 634 273 736 196 702 b 50 364 79 566 50 476 b 134 103 50 255 78 168 b 361 7 190 39 266 7 b 589 128 461 7 537 47 l 589 43 b 544 -118 589 -31 574 -85 b 400 -168 514 -151 466 -168 b 233 -61 304 -168 248 -132 l 75 -61 b 396 -279 93 -206 200 -279 b 662 -190 521 -279 609 -250 b 740 83 714 -131 740 -40 z m 397 608 b 538 547 457 608 504 588 b 589 375 572 505 589 448 b 538 197 589 300 572 241 b 397 131 503 153 456 131 b 259 194 340 131 294 152 b 207 367 224 237 207 294 b 258 544 207 443 224 502 b 397 608 291 587 338 608 z "},"h":{"ha":797,"x_min":0,"x_max":0,"o":"m 242 989 l 85 989 l 85 0 l 242 0 l 242 385 b 283 543 242 450 256 503 b 417 603 311 583 356 603 b 527 560 471 603 508 588 b 556 435 546 531 556 489 l 556 0 l 715 0 l 715 486 b 650 672 715 568 694 629 b 468 735 606 714 546 735 b 242 618 370 735 294 696 z "},"i":{"ha":335,"x_min":0,"x_max":0,"o":"m 246 993 l 88 993 l 88 838 l 246 838 z m 246 717 l 88 717 l 88 0 l 246 0 z "},"j":{"ha":335,"x_min":0,"x_max":0,"o":"m 251 717 l 93 717 l 93 -79 b 74 -132 93 -106 87 -124 b 11 -144 62 -140 41 -144 b -26 -142 10 -144 -2 -144 l -26 -271 b 40 -275 4 -274 26 -275 b 205 -219 119 -275 174 -256 b 251 -37 236 -182 251 -122 z m 251 994 l 93 994 l 93 838 l 251 838 z "},"k":{"ha":746,"x_min":0,"x_max":0,"o":"m 719 717 l 525 717 l 239 432 l 239 989 l 85 989 l 85 0 l 239 0 l 239 257 l 333 346 l 551 0 l 744 0 l 444 454 z "},"l":{"ha":335,"x_min":0,"x_max":0,"o":"m 246 989 l 89 989 l 89 0 l 246 0 z "},"m":{"ha":1208,"x_min":0,"x_max":0,"o":"m 235 717 l 85 717 l 85 0 l 243 0 l 243 413 b 285 551 243 470 257 516 b 407 603 313 585 353 603 b 502 564 455 603 487 590 b 525 449 517 538 525 500 l 525 0 l 683 0 l 683 421 b 724 555 683 478 697 523 b 840 603 750 587 789 603 b 942 560 890 603 924 588 b 968 440 959 531 968 491 l 968 0 l 1126 0 l 1126 508 b 1060 676 1126 580 1104 635 b 892 736 1015 716 959 736 b 660 614 794 736 717 695 b 583 704 643 653 617 683 b 460 736 548 725 507 736 b 235 615 369 736 294 696 z "},"n":{"ha":797,"x_min":0,"x_max":0,"o":"m 235 717 l 85 717 l 85 0 l 243 0 l 243 386 b 418 604 243 531 301 604 b 493 590 449 604 474 599 b 535 546 513 580 527 565 b 553 488 544 526 550 507 b 557 417 556 469 557 445 l 557 0 l 715 0 l 715 478 b 655 669 715 561 695 625 b 472 736 615 714 554 736 b 235 611 371 736 292 694 z "},"o":{"ha":824,"x_min":0,"x_max":0,"o":"m 415 738 b 149 635 304 738 216 703 b 50 358 83 566 50 474 b 149 81 50 242 83 149 b 415 -22 214 12 303 -22 b 677 81 525 -22 613 12 b 774 358 741 149 774 242 b 676 635 774 474 741 566 b 415 738 612 703 525 738 z m 413 613 b 560 545 475 613 525 590 b 614 360 596 500 614 438 b 560 170 614 279 596 216 b 414 101 525 124 476 101 b 264 169 350 101 300 124 b 210 358 228 215 210 278 b 264 544 210 437 228 499 b 413 613 300 590 350 613 z "},"p":{"ha":849,"x_min":0,"x_max":0,"o":"m 235 717 l 86 717 l 86 -265 l 243 -265 l 243 94 b 476 -18 297 19 375 -18 b 708 84 573 -18 650 16 b 794 356 766 152 794 243 b 706 633 794 471 765 564 b 468 738 646 703 567 738 b 235 621 361 738 283 699 z m 436 610 b 581 541 497 610 546 587 b 635 356 617 495 635 433 b 582 175 635 280 617 219 b 439 108 547 131 499 108 b 291 175 376 108 327 131 b 238 358 255 219 238 281 b 290 543 238 437 255 499 b 436 610 325 588 374 610 z "},"q":{"ha":849,"x_min":0,"x_max":0,"o":"m 763 717 l 614 717 l 614 622 b 382 738 565 699 488 738 b 142 635 281 738 201 703 b 54 356 84 566 54 473 b 140 83 54 241 83 150 b 372 -18 198 16 275 -18 b 607 96 472 -18 550 20 l 607 -265 l 763 -265 z m 408 610 b 558 544 472 610 522 588 b 611 363 593 501 611 440 b 558 176 611 283 594 221 b 411 108 523 131 474 108 b 267 174 350 108 302 130 b 214 354 231 218 214 278 b 267 541 214 433 231 495 b 408 610 302 587 349 610 z "},"r":{"ha":489,"x_min":0,"x_max":0,"o":"m 489 731 l 458 733 b 218 574 349 733 269 680 l 218 717 l 69 717 l 69 0 l 226 0 l 226 315 b 433 583 226 494 295 583 b 489 579 443 583 461 582 z "},"s":{"ha":721,"x_min":0,"x_max":0,"o":"m 651 508 b 567 681 651 585 623 643 b 351 738 511 719 439 738 b 136 680 260 738 188 718 b 58 521 84 641 58 588 b 157 364 58 448 91 395 b 351 306 185 350 250 331 b 360 303 354 305 357 304 b 367 301 363 303 365 302 l 375 300 b 433 285 399 294 418 290 b 478 267 447 281 462 275 b 512 239 494 259 505 250 b 522 199 519 228 522 214 b 480 123 522 167 508 142 b 368 94 452 104 414 94 b 194 229 261 94 203 139 l 43 229 b 131 43 47 148 76 86 b 365 -21 185 0 263 -21 b 593 43 461 -21 537 0 b 678 215 650 86 678 143 b 659 297 678 246 672 273 b 618 352 647 320 633 339 b 549 391 603 366 580 378 b 478 416 518 403 495 412 b 400 435 462 420 436 426 b 364 442 392 437 380 439 b 330 450 348 446 337 448 b 301 458 323 452 313 454 b 276 466 289 461 281 464 b 256 475 271 468 264 471 b 238 486 247 479 241 482 b 227 499 235 490 231 494 b 219 517 223 504 220 510 b 217 539 217 523 217 531 b 250 600 217 565 228 585 b 344 622 272 615 304 622 b 500 508 439 622 491 584 z "},"t":{"ha":463,"x_min":0,"x_max":0,"o":"m 433 717 l 289 717 l 289 932 l 131 932 l 131 717 l 11 717 l 11 601 l 131 601 l 131 260 l 131 250 l 131 242 l 131 233 l 131 172 b 134 122 131 161 132 144 b 145 76 136 100 140 84 b 167 42 150 67 157 56 b 201 14 176 29 188 19 b 253 -1 215 8 233 3 b 326 -7 274 -5 299 -7 b 433 -1 366 -7 402 -5 l 433 124 b 371 121 418 122 397 121 b 323 126 350 121 334 123 b 299 148 311 130 303 137 b 290 177 294 159 291 168 b 289 224 289 186 289 201 l 289 601 l 433 601 z "},"u":{"ha":797,"x_min":0,"x_max":0,"o":"m 713 717 l 554 717 l 554 338 b 513 177 554 273 540 219 b 382 114 485 135 441 114 b 316 125 356 114 334 118 b 274 151 298 132 284 141 b 252 195 265 162 257 176 b 243 247 247 214 244 231 b 242 307 242 262 242 282 l 242 717 l 83 717 l 83 242 b 147 48 83 157 104 93 b 328 -19 189 3 249 -19 b 564 107 425 -19 504 23 l 564 0 l 713 0 z "},"v":{"ha":721,"x_min":0,"x_max":0,"o":"m 11 717 l 272 -1 l 450 -1 l 707 717 l 543 717 l 367 165 l 183 717 z "},"w":{"ha":1081,"x_min":0,"x_max":0,"o":"m 17 717 l 239 0 l 406 0 l 539 532 l 674 0 l 836 0 l 1063 717 l 901 717 l 753 179 l 621 717 l 461 717 l 326 179 l 185 717 z "},"x":{"ha":746,"x_min":0,"x_max":0,"o":"m 275 376 l 4 0 l 190 0 l 367 264 l 549 0 l 739 0 l 465 385 l 708 717 l 525 717 l 368 496 l 218 717 l 26 717 z "},"y":{"ha":721,"x_min":0,"x_max":0,"o":"m 715 717 l 550 717 l 369 189 l 178 717 l 4 717 l 279 21 b 271 -7 278 17 275 8 b 260 -40 266 -22 263 -33 b 248 -69 257 -47 253 -56 b 232 -98 243 -81 238 -91 b 213 -120 226 -105 220 -112 b 188 -137 205 -128 197 -134 b 157 -142 178 -140 168 -142 b 74 -132 135 -142 107 -138 l 74 -265 b 183 -274 117 -271 154 -274 b 233 -269 201 -274 217 -272 b 274 -258 248 -266 262 -262 b 309 -237 286 -253 297 -247 b 338 -212 321 -227 330 -219 b 364 -181 346 -206 355 -195 l 385 -147 b 403 -108 389 -140 396 -127 b 419 -69 411 -90 417 -77 b 435 -27 422 -62 427 -48 b 450 14 442 -6 447 7 z "},"z":{"ha":694,"x_min":0,"x_max":0,"o":"m 642 717 l 58 717 l 58 592 l 431 592 l 31 121 l 31 0 l 663 0 l 663 128 l 236 128 l 642 606 z "},"{":{"ha":411,"x_min":0,"x_max":0,"o":"m -33 417 l -33 332 b 110 272 39 320 87 300 b 144 128 133 244 144 196 l 144 46 b 215 -179 144 -62 168 -137 b 444 -250 261 -221 338 -244 l 444 -165 b 318 -110 385 -161 343 -142 b 281 28 293 -78 281 -32 l 281 111 b 243 296 281 194 268 255 b 88 375 218 337 166 363 b 241 453 163 384 215 410 b 281 638 267 495 281 557 l 281 718 b 319 861 281 783 293 831 b 444 915 344 892 386 910 l 444 1000 b 217 928 342 995 266 971 b 144 701 169 884 144 809 l 144 596 b 103 472 144 539 131 498 b -33 417 76 445 31 427 z "},"|":{"ha":308,"x_min":0,"x_max":0,"o":"m 85 -297 l 224 -297 l 224 1092 l 85 1092 z "},"}":{"ha":411,"x_min":0,"x_max":0,"o":"m 444 332 l 444 417 b 308 472 381 427 335 445 b 267 596 280 498 267 539 l 267 701 b 194 928 267 809 242 884 b -33 1000 145 971 69 995 l -33 915 b 92 861 25 910 67 892 b 131 718 118 831 131 783 l 131 638 b 170 453 131 557 144 495 b 324 375 197 410 248 384 b 168 296 245 363 193 337 b 131 111 143 255 131 194 l 131 28 b 93 -110 131 -32 118 -78 b -33 -165 68 -142 26 -161 l -33 -250 b 197 -179 73 -244 150 -221 b 267 46 243 -137 267 -62 l 267 128 b 301 272 267 196 278 244 b 444 332 325 300 372 320 z "},"~":{"ha":833,"x_min":0,"x_max":0,"o":"m 788 472 l 697 472 b 607 378 686 409 656 378 b 581 379 599 378 590 378 b 558 383 572 380 565 381 b 531 390 551 384 542 387 l 503 400 b 469 411 496 402 485 406 b 431 424 453 417 440 421 b 243 471 333 455 271 471 b 104 406 183 471 137 449 b 46 243 72 362 52 308 l 136 243 b 167 315 140 273 150 297 b 229 342 184 333 205 342 b 269 335 239 342 253 340 b 313 322 285 331 300 327 b 363 305 325 318 342 312 b 403 290 383 298 396 293 b 589 246 496 261 558 246 b 725 304 645 246 691 265 b 788 472 759 343 780 399 z "},"\x7f":{"ha":0,"x_min":0,"x_max":0,"o":""},"\xa0":{"ha":386,"x_min":0,"x_max":0,"o":""},"\xa1":{"ha":386,"x_min":0,"x_max":0,"o":"m 286 738 l 100 738 l 100 564 l 286 564 z m 281 29 l 235 461 l 153 461 l 107 29 l 107 -254 l 281 -254 z "},"\xa2":{"ha":772,"x_min":0,"x_max":0,"o":"m 372 -144 l 432 -144 l 432 -19 b 633 57 515 -19 582 6 b 733 269 683 108 717 179 l 575 269 b 432 106 564 175 516 120 l 432 613 b 524 575 468 613 499 600 b 569 478 550 550 565 518 l 728 478 b 635 667 722 556 691 619 b 432 738 578 714 511 738 l 432 863 l 372 863 l 372 738 b 141 631 278 738 201 702 b 51 351 81 560 51 467 b 139 88 51 248 81 160 b 372 -19 197 16 275 -19 z m 372 106 b 250 188 318 114 277 141 b 210 351 223 235 210 289 b 249 528 210 418 223 477 b 372 613 275 579 316 607 z "},"\xa3":{"ha":772,"x_min":0,"x_max":0,"o":"m 303 532 b 292 551 302 533 298 539 b 280 574 285 563 281 571 b 269 594 278 576 275 583 b 258 617 264 604 260 612 b 250 638 256 621 254 628 b 242 663 246 648 244 656 b 238 685 241 669 240 676 b 236 708 237 693 236 701 b 283 821 236 754 252 791 b 401 865 314 850 353 865 b 581 669 516 865 576 800 l 738 669 b 649 914 738 774 708 856 b 401 1001 591 972 508 1001 b 160 922 302 1001 222 975 b 68 717 99 869 68 801 b 86 620 68 692 74 659 b 126 532 98 581 112 551 l 46 532 l 46 444 l 169 444 b 201 329 191 400 201 362 b 50 96 201 242 151 164 l 125 -17 b 268 38 181 19 229 38 b 400 14 303 38 347 30 b 560 -19 477 -8 530 -19 b 769 57 649 -19 719 6 l 699 175 b 568 121 663 139 619 121 b 465 142 547 121 513 128 b 360 158 425 153 390 158 b 219 124 317 158 270 147 b 326 237 269 164 305 202 b 358 347 348 272 358 308 b 342 443 358 378 353 410 l 342 444 l 506 444 l 506 532 z "},"\xa4":{"ha":772,"x_min":0,"x_max":0,"o":"m 47 222 l 128 142 l 219 233 b 388 182 269 199 325 182 b 553 233 451 182 506 199 l 644 142 l 725 222 l 633 314 b 685 479 668 368 685 423 b 633 647 685 546 668 602 l 725 739 l 644 819 l 554 728 b 386 779 500 762 444 779 b 219 728 320 779 265 762 l 128 819 l 47 739 l 139 647 b 88 481 105 597 88 542 b 139 314 88 425 105 369 z m 386 658 b 512 606 435 658 477 641 b 564 481 547 572 564 530 b 512 355 564 431 547 390 b 386 303 477 320 435 303 b 260 355 337 303 295 320 b 208 481 226 390 208 431 b 260 606 208 530 226 572 b 386 658 295 641 337 658 z "},"\xa5":{"ha":772,"x_min":0,"x_max":0,"o":"m 307 0 l 465 0 l 465 229 l 656 229 l 656 319 l 465 319 l 465 414 l 656 414 l 656 504 l 518 504 l 779 992 l 607 992 l 386 547 l 169 992 l -7 992 l 253 504 l 117 504 l 117 414 l 307 414 l 307 319 l 117 319 l 117 229 l 307 229 z "},"\xa6":{"ha":308,"x_min":0,"x_max":0,"o":"m 85 -124 l 224 -124 l 224 224 l 85 224 z m 85 571 l 224 571 l 224 918 l 85 918 z "},"\xa7":{"ha":772,"x_min":0,"x_max":0,"o":"m 665 751 b 591 936 665 828 641 890 b 393 1006 541 982 475 1006 b 196 942 313 1006 247 984 b 119 779 145 900 119 846 b 181 638 119 726 140 679 b 74 564 136 625 101 600 b 35 439 48 528 35 486 b 67 324 35 396 46 358 b 139 246 89 291 113 264 b 243 185 165 227 200 207 b 464 56 356 125 430 82 b 515 -35 498 31 515 0 b 481 -109 515 -65 504 -90 b 393 -137 459 -128 429 -137 b 247 1 306 -137 257 -91 l 99 1 b 179 -193 100 -81 127 -146 b 392 -264 231 -240 302 -264 b 592 -199 473 -264 540 -242 b 671 -31 645 -155 671 -99 b 594 129 671 35 645 88 b 700 211 640 148 675 175 b 738 333 725 247 738 288 b 654 499 738 396 710 451 b 496 597 629 520 576 553 b 443 626 482 605 464 614 b 396 651 422 637 406 646 b 358 673 386 657 373 664 b 326 694 344 682 333 689 b 304 713 320 699 313 705 b 287 735 296 721 290 728 b 278 757 284 741 281 749 b 274 783 275 765 274 774 b 306 855 274 813 284 837 b 390 882 327 873 355 882 b 482 849 429 882 460 871 b 519 751 504 826 517 794 z m 263 563 l 517 417 b 594 311 569 387 594 352 b 570 245 594 288 586 266 b 508 201 554 224 533 210 l 257 343 b 175 451 202 373 175 409 b 199 520 175 476 183 499 b 263 563 216 541 237 555 z "},"\xa8":{"ha":335,"x_min":0,"x_max":0,"o":"m 126 836 l 126 986 l -32 986 l -32 836 z m 207 986 l 207 836 l 365 836 l 365 986 z "},"\xa9":{"ha":1111,"x_min":0,"x_max":0,"o":"m 556 1013 b 190 860 413 1013 291 962 b 38 494 88 759 38 637 b 190 128 38 352 88 230 b 556 -24 291 27 413 -24 b 922 128 698 -24 820 27 b 1074 494 1023 230 1074 352 b 922 860 1074 637 1023 759 b 556 1013 820 962 698 1013 z m 556 944 b 874 813 680 944 786 900 b 1006 494 962 725 1006 619 b 874 176 1006 370 962 264 b 556 44 786 88 680 44 b 238 176 431 44 325 88 b 106 494 150 264 106 370 b 238 813 106 619 150 725 b 556 944 325 900 431 944 z m 813 400 l 707 400 b 567 282 689 321 643 282 b 443 341 515 282 474 302 b 397 500 413 380 397 433 b 442 653 397 563 412 614 b 560 711 471 692 511 711 b 655 678 598 711 629 700 b 704 586 680 656 697 625 l 810 586 b 732 740 806 648 780 700 b 557 801 684 781 625 801 b 360 715 477 801 412 773 b 283 496 309 658 283 585 b 365 278 283 409 310 336 b 569 192 419 221 487 192 b 734 251 633 192 688 211 b 813 400 780 290 806 340 z "},"\xaa":{"ha":528,"x_min":0,"x_max":0,"o":"m 460 863 b 401 959 460 905 440 937 b 263 992 363 981 316 992 b 110 957 202 992 152 980 b 40 843 69 934 46 896 l 158 843 b 256 901 162 882 194 901 b 317 890 281 901 302 898 b 339 839 331 883 339 866 b 325 814 339 829 334 820 b 210 786 313 806 275 796 b 141 772 180 781 157 777 b 85 751 125 768 106 760 b 38 710 63 741 48 728 b 22 647 27 693 22 672 b 72 552 22 606 39 575 b 192 518 104 529 144 518 b 285 538 221 518 253 525 b 354 586 318 550 341 567 b 440 518 363 541 391 518 b 506 529 463 518 485 522 l 506 624 b 493 622 503 623 499 622 l 483 622 b 464 628 473 621 467 623 b 460 653 461 634 460 642 z m 339 682 b 221 608 339 633 300 608 b 143 654 169 608 143 624 b 167 698 143 673 151 687 b 220 718 182 709 200 715 b 287 728 240 721 262 724 b 339 743 311 733 329 738 z "},"\xab":{"ha":643,"x_min":0,"x_max":0,"o":"m 558 613 l 343 443 l 343 290 l 558 122 l 558 265 l 426 368 l 558 468 z m 288 613 l 69 443 l 69 293 l 288 121 l 288 265 l 153 369 l 288 471 z "},"\xac":{"ha":833,"x_min":0,"x_max":0,"o":"m 58 440 l 640 440 l 640 142 l 776 142 l 776 574 l 58 574 z "},"\xad":{"ha":540,"x_min":0,"x_max":0,"o":"m 68 303 l 472 303 l 472 453 l 68 453 z "},"\xae":{"ha":556,"x_min":0,"x_max":0,"o":"m 276 1013 b 94 937 205 1013 144 987 b 18 754 43 886 18 825 b 94 571 18 683 43 622 b 276 494 144 520 205 494 b 460 571 348 494 409 520 b 536 754 512 622 537 683 b 460 937 536 825 511 886 b 276 1013 409 987 348 1013 z m 276 968 b 428 906 336 968 386 947 b 490 754 469 864 490 813 b 428 602 490 695 469 644 b 276 539 386 560 336 539 b 125 602 217 539 167 560 b 63 754 83 644 63 695 b 125 906 63 813 83 864 b 276 968 167 947 217 968 z m 169 897 l 169 613 l 233 613 l 233 719 l 264 719 b 317 707 291 719 308 715 b 331 651 325 699 330 680 b 336 613 331 637 332 624 l 400 613 b 393 651 395 625 393 638 b 382 716 392 681 388 703 b 346 746 375 729 363 739 b 397 814 380 758 397 781 b 271 897 397 869 355 897 z m 233 769 l 233 846 l 268 846 b 332 808 311 846 332 833 b 268 769 332 782 311 769 z "},"\xaf":{"ha":335,"x_min":0,"x_max":0,"o":"m 368 867 l 368 957 l -32 957 l -32 867 z "},"\xb0":{"ha":556,"x_min":0,"x_max":0,"o":"m 278 981 b 119 915 216 981 163 959 b 54 757 76 872 54 819 b 119 599 54 695 76 642 b 278 533 163 555 216 533 b 436 599 340 533 393 555 b 501 757 480 642 501 695 b 436 915 501 819 480 872 b 278 981 393 959 340 981 z m 278 867 b 356 835 308 867 334 856 b 388 757 377 813 388 788 b 356 680 388 727 377 702 b 278 647 334 658 308 647 b 200 680 247 647 221 658 b 168 757 179 702 168 727 b 200 835 168 788 179 813 b 278 867 221 856 247 867 z "},"\xb1":{"ha":833,"x_min":0,"x_max":0,"o":"m 346 160 l 488 160 l 488 379 l 776 379 l 776 513 l 488 513 l 488 738 l 346 738 l 346 513 l 58 513 l 58 379 l 346 379 z m 58 -22 l 776 -22 l 776 110 l 58 110 z "},"\xb2":{"ha":500,"x_min":0,"x_max":0,"o":"m 467 476 l 171 476 b 197 516 175 489 184 503 b 232 547 209 529 221 540 b 286 582 243 555 261 566 b 339 615 311 598 329 609 b 481 811 433 675 481 741 b 419 947 481 871 460 916 b 264 992 379 977 327 992 b 97 931 194 992 138 972 b 36 765 56 891 36 836 l 157 765 b 258 894 163 851 196 894 b 331 873 287 894 311 887 b 360 808 350 859 360 837 b 337 747 359 787 351 766 b 297 702 322 727 309 712 b 229 656 285 692 263 677 b 168 617 196 635 175 622 b 29 379 76 558 30 479 l 467 379 z "},"\xb3":{"ha":500,"x_min":0,"x_max":0,"o":"m 203 660 b 368 563 313 665 368 633 b 334 491 368 533 357 509 b 250 464 311 473 283 464 b 162 498 212 464 183 475 b 133 582 141 521 131 549 l 22 582 b 250 367 27 438 103 367 b 414 417 316 367 370 384 b 479 557 457 451 479 498 b 449 654 479 596 469 628 b 365 703 428 680 400 696 l 365 706 b 454 831 425 726 454 768 b 395 952 454 885 434 926 b 249 992 356 978 307 992 b 96 938 185 992 134 974 b 35 789 58 903 38 853 l 146 789 b 172 865 144 819 153 845 b 247 894 192 884 217 894 b 314 876 272 894 294 888 b 343 825 333 864 343 847 b 302 758 343 794 329 772 b 203 740 275 744 242 738 z "},"\xb4":{"ha":335,"x_min":0,"x_max":0,"o":"m 63 818 l 178 818 l 375 1017 l 188 1017 z "},"\xb5":{"ha":797,"x_min":0,"x_max":0,"o":"m 78 -265 l 236 -265 l 236 63 b 288 11 245 46 263 29 b 388 -15 314 -6 347 -15 b 501 13 433 -15 471 -6 b 586 99 531 31 559 60 l 586 0 l 721 0 l 721 717 l 563 717 l 563 399 b 560 319 563 369 562 343 b 547 242 558 296 554 271 b 519 172 541 214 531 191 b 469 125 507 154 491 138 b 390 106 447 112 421 106 b 257 197 324 106 279 136 b 236 399 243 233 236 300 l 236 717 l 78 717 z "},"\xb6":{"ha":833,"x_min":0,"x_max":0,"o":"m 790 882 l 790 989 l 385 989 b 121 899 274 989 186 959 b 24 654 56 838 24 757 b 97 438 24 565 48 493 b 301 346 146 383 214 352 l 301 -253 l 432 -253 l 432 882 l 586 882 l 586 -253 l 715 -253 l 715 882 z "},"\xb7":{"ha":386,"x_min":0,"x_max":0,"o":"m 288 497 l 99 497 l 99 310 l 288 310 z "},"\xb8":{"ha":335,"x_min":0,"x_max":0,"o":"m 13 -278 b 156 -310 51 -299 99 -310 b 274 -278 201 -310 240 -299 b 324 -182 307 -256 324 -225 b 288 -105 324 -149 312 -123 b 206 -78 263 -87 236 -78 b 160 -83 185 -78 170 -80 l 158 -82 l 222 0 l 156 0 l 64 -122 l 94 -149 b 149 -135 109 -139 127 -135 b 194 -149 166 -135 181 -139 b 213 -187 206 -158 213 -171 b 128 -244 213 -225 184 -244 b 38 -222 100 -244 70 -237 z "},"\xb9":{"ha":500,"x_min":0,"x_max":0,"o":"m 50 801 l 218 801 l 218 379 l 339 379 l 339 979 l 242 979 b 50 882 225 914 161 882 z "},"\xba":{"ha":528,"x_min":0,"x_max":0,"o":"m 515 754 b 451 928 515 827 494 885 b 268 992 409 970 348 992 b 85 928 188 992 127 970 b 21 754 42 885 21 827 b 85 581 21 681 42 623 b 268 518 127 539 188 518 b 451 581 348 518 409 539 b 515 754 494 623 515 681 z m 394 754 b 360 651 392 714 380 680 b 268 608 339 623 309 608 b 175 652 228 608 197 623 b 142 754 153 681 142 715 b 174 857 142 793 153 827 b 268 901 196 887 227 901 b 361 857 308 901 339 887 b 394 754 383 827 394 793 z "},"\xbb":{"ha":643,"x_min":0,"x_max":0,"o":"m 356 614 l 356 469 l 489 364 l 356 264 l 356 122 l 574 290 l 574 440 z m 85 613 l 85 468 l 217 365 l 85 265 l 85 125 l 299 292 l 299 443 z "},"\xbc":{"ha":1158,"x_min":0,"x_max":0,"o":"m 196 -33 l 306 -33 l 886 1006 l 778 1006 z m 51 801 l 219 801 l 219 379 l 340 379 l 340 979 l 243 979 b 51 882 226 914 163 882 z m 878 239 l 713 239 l 875 458 l 878 458 z m 999 135 l 1064 135 l 1064 239 l 999 239 l 999 594 l 864 594 l 607 247 l 607 135 l 878 135 l 878 0 l 999 0 z "},"\xbd":{"ha":1158,"x_min":0,"x_max":0,"o":"m 1094 97 l 799 97 b 809 119 801 105 805 112 b 827 142 813 127 819 134 b 849 161 835 149 842 156 b 876 181 855 167 864 173 b 904 199 888 189 898 195 b 936 217 911 202 921 209 b 967 236 951 226 961 232 b 1072 325 1012 267 1047 296 b 1108 432 1096 354 1108 389 b 1047 572 1108 493 1088 540 b 892 619 1006 603 955 619 b 724 558 819 619 763 599 b 664 386 684 516 664 459 l 785 386 b 886 522 790 477 824 522 b 959 497 916 522 940 514 b 988 429 978 481 988 458 b 963 356 988 402 979 378 b 902 303 947 334 927 317 b 822 254 878 289 851 273 b 742 197 794 236 767 217 b 681 117 718 178 697 151 b 657 0 665 82 657 44 l 1094 0 z m 50 801 l 218 801 l 218 379 l 339 379 l 339 979 l 242 979 b 50 882 225 914 161 882 z m 190 -33 l 300 -33 l 881 1006 l 772 1006 z "},"\xbe":{"ha":1158,"x_min":0,"x_max":0,"o":"m 203 658 b 368 563 313 664 368 632 b 334 491 368 533 357 509 b 250 464 311 473 283 464 b 162 498 212 464 183 475 b 133 582 141 521 131 549 l 22 582 b 250 367 27 438 103 367 b 414 417 316 367 370 384 b 479 557 457 451 479 498 b 449 654 479 596 469 628 b 365 703 428 680 400 696 l 365 706 b 454 831 425 726 454 768 b 395 952 454 885 434 926 b 249 992 356 978 307 992 b 96 938 185 992 134 974 b 35 789 58 903 38 853 l 146 789 b 172 865 144 819 153 845 b 247 894 192 884 217 894 b 314 876 272 894 294 888 b 343 825 333 864 343 847 b 301 758 343 794 329 772 b 203 739 274 743 241 737 z m 272 -33 l 382 -33 l 963 1006 l 854 1006 z m 929 239 l 764 239 l 926 458 l 929 458 z m 1050 135 l 1115 135 l 1115 239 l 1050 239 l 1050 594 l 913 594 l 658 247 l 658 135 l 929 135 l 929 0 l 1050 0 z "},"\xbf":{"ha":772,"x_min":0,"x_max":0,"o":"m 292 738 l 292 564 l 478 564 l 478 738 z m 546 54 b 503 -92 546 -7 532 -56 b 378 -146 475 -128 433 -146 b 286 -108 346 -146 316 -133 b 242 1 256 -82 242 -46 b 244 34 242 13 243 23 b 251 61 246 45 248 54 b 262 85 253 69 257 77 b 275 106 267 94 271 101 b 293 125 279 110 285 117 b 311 142 301 133 307 139 b 333 160 315 146 322 152 b 354 179 343 169 350 175 b 438 288 394 213 422 249 b 463 461 454 326 463 384 l 313 461 b 294 353 313 419 306 383 b 256 286 282 322 270 300 b 190 226 243 272 221 252 b 128 171 163 203 142 185 b 88 103 115 157 102 134 b 68 -4 75 72 68 37 b 154 -204 68 -88 97 -155 b 371 -278 212 -253 284 -278 b 614 -186 473 -278 554 -247 b 704 54 674 -125 704 -45 z "},"\xc0":{"ha":926,"x_min":0,"x_max":0,"o":"m 556 990 l 371 990 l -11 0 l 168 0 l 265 263 l 657 263 l 751 0 l 938 0 z m 611 393 l 310 393 l 464 810 z m 414 1279 l 228 1279 l 425 1081 l 540 1081 z "},"\xc1":{"ha":926,"x_min":0,"x_max":0,"o":"m 556 990 l 371 990 l -11 0 l 168 0 l 265 263 l 657 263 l 751 0 l 938 0 z m 611 393 l 310 393 l 464 810 z m 381 1088 l 496 1088 l 693 1286 l 506 1286 z "},"\xc2":{"ha":926,"x_min":0,"x_max":0,"o":"m 556 990 l 371 990 l -11 0 l 168 0 l 265 263 l 657 263 l 751 0 l 938 0 z m 611 393 l 310 393 l 464 810 z m 461 1213 l 560 1088 l 689 1088 l 539 1286 l 385 1286 l 236 1088 l 364 1088 z "},"\xc3":{"ha":926,"x_min":0,"x_max":0,"o":"m 556 990 l 371 990 l -11 0 l 168 0 l 265 263 l 657 263 l 751 0 l 938 0 z m 611 393 l 310 393 l 464 810 z m 632 1269 b 563 1208 622 1229 599 1208 b 476 1233 544 1208 515 1217 b 364 1261 432 1252 394 1261 b 267 1213 325 1261 293 1245 b 219 1104 242 1181 226 1145 l 299 1104 b 358 1161 306 1142 326 1161 b 453 1136 381 1161 413 1153 b 556 1110 493 1119 527 1110 b 664 1157 602 1110 638 1125 b 710 1269 686 1181 701 1219 z "},"\xc4":{"ha":926,"x_min":0,"x_max":0,"o":"m 556 990 l 371 990 l -11 0 l 168 0 l 265 263 l 657 263 l 751 0 l 938 0 z m 611 393 l 310 393 l 464 810 z m 422 1106 l 422 1256 l 264 1256 l 264 1106 z m 503 1256 l 503 1106 l 661 1106 l 661 1256 z "},"\xc5":{"ha":926,"x_min":0,"x_max":0,"o":"m 556 990 l 371 990 l -11 0 l 168 0 l 265 263 l 657 263 l 751 0 l 938 0 z m 611 393 l 310 393 l 464 810 z m 378 1186 b 402 1247 378 1211 386 1231 b 461 1271 418 1263 438 1271 b 521 1247 485 1271 505 1263 b 544 1186 537 1231 544 1211 b 521 1126 544 1162 537 1142 b 461 1101 505 1109 485 1101 b 402 1126 438 1101 418 1109 b 378 1186 386 1142 378 1162 z m 461 1043 b 563 1083 501 1043 535 1056 b 606 1186 591 1110 606 1144 b 563 1289 606 1228 591 1262 b 461 1329 535 1316 501 1329 b 359 1289 421 1329 387 1316 b 317 1186 331 1262 317 1228 b 358 1083 317 1144 331 1110 b 461 1043 386 1056 420 1043 z "},"\xc6":{"ha":1338,"x_min":0,"x_max":0,"o":"m -10 0 l 183 0 l 303 254 l 635 254 l 635 0 l 1292 0 l 1292 150 l 800 150 l 800 440 l 1253 440 l 1253 582 l 800 582 l 800 842 l 1283 842 l 1283 992 l 483 992 z m 585 842 l 635 842 l 635 386 l 367 386 z "},"\xc7":{"ha":1003,"x_min":0,"x_max":0,"o":"m 781 378 b 703 190 772 301 747 238 b 528 118 660 142 602 118 b 303 228 429 118 354 155 b 226 496 252 302 226 391 b 303 763 226 600 252 690 b 528 874 354 837 429 874 b 775 676 659 874 742 808 l 949 676 b 816 924 938 781 893 864 b 528 1015 739 985 643 1015 b 183 865 384 1015 269 965 b 53 496 96 765 53 642 b 167 145 53 360 91 243 b 474 -21 243 47 345 -8 l 397 -122 l 428 -149 b 482 -135 443 -139 461 -135 b 527 -149 500 -135 515 -139 b 546 -187 540 -158 546 -171 b 461 -244 546 -225 518 -244 b 371 -222 445 -244 415 -237 l 346 -278 b 489 -307 381 -297 429 -307 b 608 -277 535 -307 575 -297 b 657 -182 641 -257 657 -225 b 621 -106 657 -150 645 -124 b 539 -79 597 -88 569 -79 b 493 -83 516 -79 500 -81 l 493 -81 l 538 -22 b 826 90 654 -20 750 17 b 950 378 901 163 943 259 z "},"\xc8":{"ha":875,"x_min":0,"x_max":0,"o":"m 815 989 l 103 989 l 103 0 l 824 0 l 824 149 l 275 149 l 275 440 l 776 440 l 776 581 l 275 581 l 275 843 l 815 843 z m 439 1279 l 253 1279 l 450 1081 l 565 1081 z "},"\xc9":{"ha":875,"x_min":0,"x_max":0,"o":"m 815 989 l 103 989 l 103 0 l 824 0 l 824 149 l 275 149 l 275 440 l 776 440 l 776 581 l 275 581 l 275 843 l 815 843 z m 385 1088 l 500 1088 l 697 1286 l 510 1286 z "},"\xca":{"ha":875,"x_min":0,"x_max":0,"o":"m 815 989 l 103 989 l 103 0 l 824 0 l 824 149 l 275 149 l 275 440 l 776 440 l 776 581 l 275 581 l 275 843 l 815 843 z m 463 1213 l 561 1088 l 690 1088 l 540 1286 l 386 1286 l 238 1088 l 365 1088 z "},"\xcb":{"ha":875,"x_min":0,"x_max":0,"o":"m 815 989 l 103 989 l 103 0 l 824 0 l 824 149 l 275 149 l 275 440 l 776 440 l 776 581 l 275 581 l 275 843 l 815 843 z m 426 1106 l 426 1256 l 268 1256 l 268 1106 z m 507 1256 l 507 1106 l 665 1106 l 665 1256 z "},"\xcc":{"ha":386,"x_min":0,"x_max":0,"o":"m 281 989 l 106 989 l 106 0 l 281 0 z m 143 1279 l -43 1279 l 154 1081 l 269 1081 z "},"\xcd":{"ha":386,"x_min":0,"x_max":0,"o":"m 281 989 l 106 989 l 106 0 l 281 0 z m 107 1088 l 222 1088 l 419 1286 l 232 1286 z "},"\xce":{"ha":386,"x_min":0,"x_max":0,"o":"m 281 989 l 106 989 l 106 0 l 281 0 z m 192 1213 l 290 1088 l 419 1088 l 269 1286 l 115 1286 l -33 1088 l 94 1088 z "},"\xcf":{"ha":386,"x_min":0,"x_max":0,"o":"m 281 989 l 106 989 l 106 0 l 281 0 z m 153 1106 l 153 1256 l -6 1256 l -6 1106 z m 233 1256 l 233 1106 l 392 1106 l 392 1256 z "},"\xd0":{"ha":1003,"x_min":0,"x_max":0,"o":"m 279 850 l 450 850 b 616 824 516 850 571 841 b 718 747 661 806 695 780 b 767 636 741 713 757 676 b 781 496 776 596 781 550 b 767 356 781 442 776 395 b 718 245 757 316 741 279 b 616 168 695 211 661 186 b 450 142 571 150 516 142 l 279 142 l 279 440 l 550 440 l 550 582 l 279 582 z m 106 0 l 517 0 b 844 138 662 0 771 46 b 954 496 918 230 954 350 b 844 853 954 642 918 761 b 517 992 771 946 662 992 l 106 992 l 106 582 l 13 582 l 13 440 l 106 440 z "},"\xd1":{"ha":1003,"x_min":0,"x_max":0,"o":"m 906 989 l 739 989 l 739 260 l 283 989 l 101 989 l 101 0 l 265 0 l 265 728 l 726 0 l 906 0 z m 669 1269 b 600 1208 659 1229 636 1208 b 514 1233 581 1208 553 1217 b 401 1261 469 1252 432 1261 b 305 1213 363 1261 330 1245 b 257 1104 279 1181 263 1145 l 336 1104 b 396 1161 344 1142 363 1161 b 490 1136 419 1161 450 1153 b 593 1110 530 1119 564 1110 b 701 1157 639 1110 675 1125 b 747 1269 724 1181 739 1219 z "},"\xd2":{"ha":1056,"x_min":0,"x_max":0,"o":"m 531 1013 b 181 866 383 1013 267 964 b 53 494 96 768 53 644 b 184 119 53 340 97 215 b 528 -24 272 24 386 -24 b 871 120 669 -24 783 24 b 1003 494 959 216 1003 341 b 872 869 1003 648 959 773 b 531 1013 784 965 670 1013 z m 528 867 b 747 766 619 867 692 833 b 828 496 801 699 828 609 b 747 224 828 383 801 292 b 531 122 692 156 620 122 b 309 224 437 122 363 156 b 228 497 255 291 228 382 b 310 766 228 609 255 699 b 528 867 364 833 437 867 z m 439 1279 l 253 1279 l 450 1081 l 565 1081 z "},"\xd3":{"ha":1056,"x_min":0,"x_max":0,"o":"m 531 1013 b 181 866 383 1013 267 964 b 53 494 96 768 53 644 b 184 119 53 340 97 215 b 528 -24 272 24 386 -24 b 871 120 669 -24 783 24 b 1003 494 959 216 1003 341 b 872 869 1003 648 959 773 b 531 1013 784 965 670 1013 z m 528 867 b 747 766 619 867 692 833 b 828 496 801 699 828 609 b 747 224 828 383 801 292 b 531 122 692 156 620 122 b 309 224 437 122 363 156 b 228 497 255 291 228 382 b 310 766 228 609 255 699 b 528 867 364 833 437 867 z m 463 1088 l 578 1088 l 775 1286 l 588 1286 z "},"\xd4":{"ha":1056,"x_min":0,"x_max":0,"o":"m 531 1013 b 181 866 383 1013 267 964 b 53 494 96 768 53 644 b 184 119 53 340 97 215 b 528 -24 272 24 386 -24 b 871 120 669 -24 783 24 b 1003 494 959 216 1003 341 b 872 869 1003 648 959 773 b 531 1013 784 965 670 1013 z m 528 867 b 747 766 619 867 692 833 b 828 496 801 699 828 609 b 747 224 828 383 801 292 b 531 122 692 156 620 122 b 309 224 437 122 363 156 b 228 497 255 291 228 382 b 310 766 228 609 255 699 b 528 867 364 833 437 867 z m 531 1213 l 629 1088 l 758 1088 l 608 1286 l 454 1286 l 306 1088 l 433 1088 z "},"\xd5":{"ha":1056,"x_min":0,"x_max":0,"o":"m 531 1013 b 181 866 383 1013 267 964 b 53 494 96 768 53 644 b 184 119 53 340 97 215 b 528 -24 272 24 386 -24 b 871 120 669 -24 783 24 b 1003 494 959 216 1003 341 b 872 869 1003 648 959 773 b 531 1013 784 965 670 1013 z m 528 867 b 747 766 619 867 692 833 b 828 496 801 699 828 609 b 747 224 828 383 801 292 b 531 122 692 156 620 122 b 309 224 437 122 363 156 b 228 497 255 291 228 382 b 310 766 228 609 255 699 b 528 867 364 833 437 867 z m 701 1269 b 632 1208 691 1229 668 1208 b 546 1233 613 1208 585 1217 b 433 1261 501 1252 464 1261 b 337 1213 394 1261 362 1245 b 289 1104 311 1181 295 1145 l 368 1104 b 428 1161 375 1142 395 1161 b 522 1136 451 1161 482 1153 b 625 1110 562 1119 596 1110 b 733 1157 671 1110 707 1125 b 779 1269 756 1181 771 1219 z "},"\xd6":{"ha":1056,"x_min":0,"x_max":0,"o":"m 531 1013 b 181 866 383 1013 267 964 b 53 494 96 768 53 644 b 184 119 53 340 97 215 b 528 -24 272 24 386 -24 b 871 120 669 -24 783 24 b 1003 494 959 216 1003 341 b 872 869 1003 648 959 773 b 531 1013 784 965 670 1013 z m 528 867 b 747 766 619 867 692 833 b 828 496 801 699 828 609 b 747 224 828 383 801 292 b 531 122 692 156 620 122 b 309 224 437 122 363 156 b 228 497 255 291 228 382 b 310 766 228 609 255 699 b 528 867 364 833 437 867 z m 489 1106 l 489 1256 l 331 1256 l 331 1106 z m 569 1256 l 569 1106 l 728 1106 l 728 1256 z "},"\xd7":{"ha":833,"x_min":0,"x_max":0,"o":"m 318 351 l 76 110 l 196 32 l 415 254 l 638 32 l 757 110 l 514 351 l 757 593 l 638 671 l 415 450 l 196 671 l 76 593 z "},"\xd8":{"ha":1056,"x_min":0,"x_max":0,"o":"m 940 1019 l 836 903 b 528 1015 754 978 651 1015 b 183 865 384 1015 269 965 b 53 496 96 765 53 642 b 165 147 53 360 90 244 l 56 22 l 114 -28 l 219 90 b 528 -24 303 14 406 -24 b 873 126 671 -24 786 26 b 1003 496 959 225 1003 349 b 890 846 1003 631 965 748 l 1000 969 z m 778 719 b 829 496 812 660 829 586 b 753 228 829 391 804 302 b 528 118 702 155 627 118 b 322 206 444 118 376 147 z m 276 272 b 226 496 243 335 226 410 b 303 763 226 600 252 690 b 528 874 354 837 429 874 b 733 786 616 874 684 844 z "},"\xd9":{"ha":1003,"x_min":0,"x_max":0,"o":"m 907 989 l 733 989 l 733 406 b 725 290 733 359 731 321 b 694 203 719 259 709 230 b 626 143 680 176 657 156 b 507 124 595 130 555 124 b 269 351 349 124 269 200 l 269 989 l 96 989 l 96 386 b 195 81 96 249 129 147 b 504 -19 261 14 364 -19 b 907 383 773 -19 907 115 z m 440 1279 l 254 1279 l 451 1081 l 567 1081 z "},"\xda":{"ha":1003,"x_min":0,"x_max":0,"o":"m 907 989 l 733 989 l 733 406 b 725 290 733 359 731 321 b 694 203 719 259 709 230 b 626 143 680 176 657 156 b 507 124 595 130 555 124 b 269 351 349 124 269 200 l 269 989 l 96 989 l 96 386 b 195 81 96 249 129 147 b 504 -19 261 14 364 -19 b 907 383 773 -19 907 115 z m 428 1088 l 543 1088 l 740 1286 l 553 1286 z "},"\xdb":{"ha":1003,"x_min":0,"x_max":0,"o":"m 907 989 l 733 989 l 733 406 b 725 290 733 359 731 321 b 694 203 719 259 709 230 b 626 143 680 176 657 156 b 507 124 595 130 555 124 b 269 351 349 124 269 200 l 269 989 l 96 989 l 96 386 b 195 81 96 249 129 147 b 504 -19 261 14 364 -19 b 907 383 773 -19 907 115 z m 503 1213 l 601 1088 l 731 1088 l 581 1286 l 426 1286 l 278 1088 l 406 1088 z "},"\xdc":{"ha":1003,"x_min":0,"x_max":0,"o":"m 907 989 l 733 989 l 733 406 b 725 290 733 359 731 321 b 694 203 719 259 709 230 b 626 143 680 176 657 156 b 507 124 595 130 555 124 b 269 351 349 124 269 200 l 269 989 l 96 989 l 96 386 b 195 81 96 249 129 147 b 504 -19 261 14 364 -19 b 907 383 773 -19 907 115 z m 460 1106 l 460 1256 l 301 1256 l 301 1106 z m 540 1256 l 540 1106 l 699 1106 l 699 1256 z "},"\xdd":{"ha":900,"x_min":0,"x_max":0,"o":"m 910 989 l 715 989 l 456 551 l 193 989 l -7 989 l 367 393 l 367 0 l 538 0 l 538 393 z m 393 1088 l 508 1088 l 706 1286 l 518 1286 z "},"\xde":{"ha":926,"x_min":0,"x_max":0,"o":"m 279 700 l 536 700 b 707 536 650 700 707 645 b 655 411 707 479 690 437 b 533 372 620 385 580 372 l 279 372 z m 106 0 l 279 0 l 279 231 l 543 231 b 714 260 610 231 667 240 b 819 338 761 279 796 305 b 867 434 841 370 857 402 b 881 535 876 466 881 500 b 867 635 881 570 876 603 b 819 733 857 667 841 700 b 714 813 796 767 761 793 b 543 842 667 832 610 842 l 279 842 l 279 992 l 106 992 z "},"\xdf":{"ha":797,"x_min":0,"x_max":0,"o":"m 88 0 l 246 0 l 246 710 b 288 850 246 776 260 823 b 389 890 315 877 349 890 b 529 750 482 890 529 844 b 475 633 529 701 511 662 b 338 597 448 609 402 597 l 338 493 b 497 458 408 493 461 481 b 574 322 548 429 574 383 b 567 248 574 294 572 270 b 544 180 563 226 555 203 b 488 125 532 156 513 138 b 390 106 462 112 429 106 b 336 110 364 106 346 107 l 336 -15 b 414 -19 362 -18 388 -19 b 645 74 510 -19 587 12 b 732 315 703 137 732 217 b 681 473 732 375 715 427 b 546 553 647 519 602 545 l 546 556 b 651 634 592 569 627 596 b 688 765 675 672 688 716 b 599 947 688 841 658 902 b 392 1015 541 993 471 1015 b 172 938 302 1015 229 989 b 88 726 116 886 88 815 z "},"\xe0":{"ha":772,"x_min":0,"x_max":0,"o":"m 76 496 l 226 496 b 272 594 233 542 248 575 b 386 624 296 614 334 624 b 533 515 484 624 533 588 b 524 464 533 488 530 471 b 482 441 516 454 502 446 b 367 422 462 436 423 430 b 317 416 342 419 325 417 b 269 408 309 415 294 412 b 219 398 245 405 228 401 b 174 383 209 395 194 390 b 131 363 154 377 140 370 b 98 335 122 355 111 346 b 69 299 84 324 75 312 b 53 253 63 286 57 270 b 46 196 48 235 46 216 b 111 40 46 130 68 78 b 288 -18 155 1 213 -18 b 539 68 395 -18 479 11 b 656 -18 549 11 588 -18 b 758 -3 683 -18 718 -13 l 758 108 b 722 106 745 106 733 106 b 692 117 707 106 697 109 b 685 158 687 124 685 138 l 685 522 b 605 686 685 596 658 651 b 390 739 552 721 480 739 b 76 496 198 739 93 658 z m 532 360 l 532 275 b 500 151 532 214 521 173 b 338 94 462 113 408 94 b 242 122 297 94 265 104 b 208 201 220 141 208 167 b 218 249 208 220 212 236 b 241 281 225 263 232 273 b 278 301 250 289 262 296 b 319 313 295 307 308 311 b 365 321 331 316 346 318 b 406 326 372 322 385 324 b 452 333 427 329 442 331 b 490 342 462 334 475 337 b 532 360 506 347 520 353 z m 356 1010 l 169 1010 l 367 811 l 482 811 z "},"\xe1":{"ha":772,"x_min":0,"x_max":0,"o":"m 76 496 l 226 496 b 272 594 233 542 248 575 b 386 624 296 614 334 624 b 533 515 484 624 533 588 b 524 464 533 488 530 471 b 482 441 516 454 502 446 b 367 422 462 436 423 430 b 317 416 342 419 325 417 b 269 408 309 415 294 412 b 219 398 245 405 228 401 b 174 383 209 395 194 390 b 131 363 154 377 140 370 b 98 335 122 355 111 346 b 69 299 84 324 75 312 b 53 253 63 286 57 270 b 46 196 48 235 46 216 b 111 40 46 130 68 78 b 288 -18 155 1 213 -18 b 539 68 395 -18 479 11 b 656 -18 549 11 588 -18 b 758 -3 683 -18 718 -13 l 758 108 b 722 106 745 106 733 106 b 692 117 707 106 697 109 b 685 158 687 124 685 138 l 685 522 b 605 686 685 596 658 651 b 390 739 552 721 480 739 b 76 496 198 739 93 658 z m 532 360 l 532 275 b 500 151 532 214 521 173 b 338 94 462 113 408 94 b 242 122 297 94 265 104 b 208 201 220 141 208 167 b 218 249 208 220 212 236 b 241 281 225 263 232 273 b 278 301 250 289 262 296 b 319 313 295 307 308 311 b 365 321 331 316 346 318 b 406 326 372 322 385 324 b 452 333 427 329 442 331 b 490 342 462 334 475 337 b 532 360 506 347 520 353 z m 311 818 l 426 818 l 624 1017 l 436 1017 z "},"\xe2":{"ha":772,"x_min":0,"x_max":0,"o":"m 76 496 l 226 496 b 272 594 233 542 248 575 b 386 624 296 614 334 624 b 533 515 484 624 533 588 b 524 464 533 488 530 471 b 482 441 516 454 502 446 b 367 422 462 436 423 430 b 317 416 342 419 325 417 b 269 408 309 415 294 412 b 219 398 245 405 228 401 b 174 383 209 395 194 390 b 131 363 154 377 140 370 b 98 335 122 355 111 346 b 69 299 84 324 75 312 b 53 253 63 286 57 270 b 46 196 48 235 46 216 b 111 40 46 130 68 78 b 288 -18 155 1 213 -18 b 539 68 395 -18 479 11 b 656 -18 549 11 588 -18 b 758 -3 683 -18 718 -13 l 758 108 b 722 106 745 106 733 106 b 692 117 707 106 697 109 b 685 158 687 124 685 138 l 685 522 b 605 686 685 596 658 651 b 390 739 552 721 480 739 b 76 496 198 739 93 658 z m 532 360 l 532 275 b 500 151 532 214 521 173 b 338 94 462 113 408 94 b 242 122 297 94 265 104 b 208 201 220 141 208 167 b 218 249 208 220 212 236 b 241 281 225 263 232 273 b 278 301 250 289 262 296 b 319 313 295 307 308 311 b 365 321 331 316 346 318 b 406 326 372 322 385 324 b 452 333 427 329 442 331 b 490 342 462 334 475 337 b 532 360 506 347 520 353 z m 394 943 l 493 818 l 622 818 l 472 1017 l 318 1017 l 169 818 l 297 818 z "},"\xe3":{"ha":772,"x_min":0,"x_max":0,"o":"m 76 496 l 226 496 b 272 594 233 542 248 575 b 386 624 296 614 334 624 b 533 515 484 624 533 588 b 524 464 533 488 530 471 b 482 441 516 454 502 446 b 367 422 462 436 423 430 b 317 416 342 419 325 417 b 269 408 309 415 294 412 b 219 398 245 405 228 401 b 174 383 209 395 194 390 b 131 363 154 377 140 370 b 98 335 122 355 111 346 b 69 299 84 324 75 312 b 53 253 63 286 57 270 b 46 196 48 235 46 216 b 111 40 46 130 68 78 b 288 -18 155 1 213 -18 b 539 68 395 -18 479 11 b 656 -18 549 11 588 -18 b 758 -3 683 -18 718 -13 l 758 108 b 722 106 745 106 733 106 b 692 117 707 106 697 109 b 685 158 687 124 685 138 l 685 522 b 605 686 685 596 658 651 b 390 739 552 721 480 739 b 76 496 198 739 93 658 z m 532 360 l 532 275 b 500 151 532 214 521 173 b 338 94 462 113 408 94 b 242 122 297 94 265 104 b 208 201 220 141 208 167 b 218 249 208 220 212 236 b 241 281 225 263 232 273 b 278 301 250 289 262 296 b 319 313 295 307 308 311 b 365 321 331 316 346 318 b 406 326 372 322 385 324 b 452 333 427 329 442 331 b 490 342 462 334 475 337 b 532 360 506 347 520 353 z m 563 1000 b 493 939 552 959 529 939 b 407 964 475 939 446 947 b 294 992 363 982 325 992 b 198 944 256 992 223 976 b 150 835 172 912 156 875 l 229 835 b 289 892 237 873 256 892 b 383 867 312 892 344 883 b 486 840 423 849 457 840 b 594 888 532 840 569 856 b 640 1000 617 912 632 949 z "},"\xe4":{"ha":772,"x_min":0,"x_max":0,"o":"m 76 496 l 226 496 b 272 594 233 542 248 575 b 386 624 296 614 334 624 b 533 515 484 624 533 588 b 524 464 533 488 530 471 b 482 441 516 454 502 446 b 367 422 462 436 423 430 b 317 416 342 419 325 417 b 269 408 309 415 294 412 b 219 398 245 405 228 401 b 174 383 209 395 194 390 b 131 363 154 377 140 370 b 98 335 122 355 111 346 b 69 299 84 324 75 312 b 53 253 63 286 57 270 b 46 196 48 235 46 216 b 111 40 46 130 68 78 b 288 -18 155 1 213 -18 b 539 68 395 -18 479 11 b 656 -18 549 11 588 -18 b 758 -3 683 -18 718 -13 l 758 108 b 722 106 745 106 733 106 b 692 117 707 106 697 109 b 685 158 687 124 685 138 l 685 522 b 605 686 685 596 658 651 b 390 739 552 721 480 739 b 76 496 198 739 93 658 z m 532 360 l 532 275 b 500 151 532 214 521 173 b 338 94 462 113 408 94 b 242 122 297 94 265 104 b 208 201 220 141 208 167 b 218 249 208 220 212 236 b 241 281 225 263 232 273 b 278 301 250 289 262 296 b 319 313 295 307 308 311 b 365 321 331 316 346 318 b 406 326 372 322 385 324 b 452 333 427 329 442 331 b 490 342 462 334 475 337 b 532 360 506 347 520 353 z m 351 836 l 351 986 l 193 986 l 193 836 z m 432 986 l 432 836 l 590 836 l 590 986 z "},"\xe5":{"ha":772,"x_min":0,"x_max":0,"o":"m 76 496 l 226 496 b 272 594 233 542 248 575 b 386 624 296 614 334 624 b 533 515 484 624 533 588 b 524 464 533 488 530 471 b 482 441 516 454 502 446 b 367 422 462 436 423 430 b 317 416 342 419 325 417 b 269 408 309 415 294 412 b 219 398 245 405 228 401 b 174 383 209 395 194 390 b 131 363 154 377 140 370 b 98 335 122 355 111 346 b 69 299 84 324 75 312 b 53 253 63 286 57 270 b 46 196 48 235 46 216 b 111 40 46 130 68 78 b 288 -18 155 1 213 -18 b 539 68 395 -18 479 11 b 656 -18 549 11 588 -18 b 758 -3 683 -18 718 -13 l 758 108 b 722 106 745 106 733 106 b 692 117 707 106 697 109 b 685 158 687 124 685 138 l 685 522 b 605 686 685 596 658 651 b 390 739 552 721 480 739 b 76 496 198 739 93 658 z m 532 360 l 532 275 b 500 151 532 214 521 173 b 338 94 462 113 408 94 b 242 122 297 94 265 104 b 208 201 220 141 208 167 b 218 249 208 220 212 236 b 241 281 225 263 232 273 b 278 301 250 289 262 296 b 319 313 295 307 308 311 b 365 321 331 316 346 318 b 406 326 372 322 385 324 b 452 333 427 329 442 331 b 490 342 462 334 475 337 b 532 360 506 347 520 353 z m 308 936 b 333 997 308 961 316 981 b 392 1021 349 1013 369 1021 b 451 997 416 1021 436 1013 b 475 936 467 981 475 961 b 451 876 475 912 467 892 b 392 851 436 859 416 851 b 333 876 369 851 349 859 b 308 936 316 892 308 912 z m 392 793 b 494 833 431 793 466 806 b 536 936 522 860 536 894 b 494 1039 536 978 522 1012 b 392 1079 466 1066 431 1079 b 290 1039 352 1079 318 1066 b 247 936 261 1012 247 978 b 289 833 247 894 261 860 b 392 793 317 806 351 793 z "},"\xe6":{"ha":1235,"x_min":0,"x_max":0,"o":"m 1033 226 b 864 106 1006 146 949 106 b 724 167 802 106 755 126 b 676 318 692 207 676 258 l 1197 318 b 1126 622 1206 443 1182 544 b 864 738 1070 699 982 738 b 636 640 762 738 686 705 b 393 738 591 705 510 738 b 169 682 304 738 230 719 b 71 499 109 645 76 584 l 229 499 b 276 584 233 537 249 565 b 388 613 304 603 341 613 b 528 515 481 613 528 580 b 519 477 528 500 525 488 b 500 453 514 466 507 458 b 467 438 493 447 481 442 b 426 429 452 434 438 431 b 375 422 413 427 396 425 b 321 414 354 419 336 417 b 219 397 280 409 246 404 b 135 365 193 391 164 380 b 67 298 105 349 83 327 b 44 190 52 269 44 233 b 117 35 44 123 69 71 b 304 -19 166 -1 228 -19 b 603 113 445 -19 544 25 b 867 -19 653 25 741 -19 b 1074 46 947 -19 1016 2 b 1192 226 1132 89 1171 150 z m 526 250 b 472 144 526 206 508 170 b 347 106 436 119 394 106 b 245 126 307 106 273 113 b 203 197 217 140 203 164 b 238 281 203 235 214 263 b 333 317 261 298 293 310 b 403 324 345 319 369 321 b 484 336 438 328 465 331 b 526 357 503 341 517 348 z m 676 422 b 729 558 680 477 698 522 b 857 613 761 594 803 613 b 992 561 914 613 959 595 b 1039 422 1024 527 1040 481 z "},"\xe7":{"ha":772,"x_min":0,"x_max":0,"o":"m 240 -278 b 383 -310 279 -299 327 -310 b 501 -278 429 -310 468 -299 b 551 -182 535 -256 551 -225 b 515 -105 551 -149 539 -123 b 433 -78 491 -87 464 -78 b 388 -83 413 -78 398 -80 l 386 -82 l 436 -18 b 619 54 512 -11 573 13 b 726 269 675 103 711 175 l 568 269 b 512 149 561 218 542 177 b 397 106 482 120 444 106 b 254 178 333 106 286 130 b 207 351 223 226 207 284 b 226 483 207 402 213 446 b 276 564 238 519 255 546 b 338 601 297 581 317 594 b 404 613 359 609 381 613 b 515 578 450 613 487 601 b 568 478 544 555 562 521 l 726 478 b 625 671 719 562 685 626 b 403 738 565 715 491 738 b 140 630 289 738 201 702 b 49 351 79 558 49 465 b 100 141 49 271 66 201 b 247 8 134 81 183 37 b 369 -18 282 -6 323 -15 l 292 -122 l 322 -149 b 376 -135 337 -139 355 -135 b 422 -149 394 -135 409 -139 b 440 -187 434 -158 440 -171 b 356 -244 440 -225 412 -244 b 265 -222 328 -244 298 -237 z "},"\xe8":{"ha":772,"x_min":0,"x_max":0,"o":"m 725 224 l 574 224 b 509 124 558 178 536 145 b 403 93 482 103 446 93 b 260 152 342 93 294 113 b 206 319 225 191 207 247 l 735 319 l 735 336 b 643 630 735 460 704 558 b 394 738 582 702 499 738 b 145 628 294 738 210 701 b 47 350 80 555 47 462 b 142 81 47 241 79 151 b 400 -24 206 11 292 -24 b 610 42 481 -24 552 -2 b 725 224 669 85 707 146 z m 576 425 l 208 425 b 267 569 216 488 235 536 b 393 619 299 603 341 619 b 520 567 445 619 487 602 b 576 425 553 533 572 485 z m 339 1010 l 153 1010 l 350 811 l 465 811 z "},"\xe9":{"ha":772,"x_min":0,"x_max":0,"o":"m 725 224 l 574 224 b 509 124 558 178 536 145 b 403 93 482 103 446 93 b 260 152 342 93 294 113 b 206 319 225 191 207 247 l 735 319 l 735 336 b 643 630 735 460 704 558 b 394 738 582 702 499 738 b 145 628 294 738 210 701 b 47 350 80 555 47 462 b 142 81 47 241 79 151 b 400 -24 206 11 292 -24 b 610 42 481 -24 552 -2 b 725 224 669 85 707 146 z m 576 425 l 208 425 b 267 569 216 488 235 536 b 393 619 299 603 341 619 b 520 567 445 619 487 602 b 576 425 553 533 572 485 z m 332 818 l 447 818 l 644 1017 l 457 1017 z "},"\xea":{"ha":772,"x_min":0,"x_max":0,"o":"m 725 224 l 574 224 b 509 124 558 178 536 145 b 403 93 482 103 446 93 b 260 152 342 93 294 113 b 206 319 225 191 207 247 l 735 319 l 735 336 b 643 630 735 460 704 558 b 394 738 582 702 499 738 b 145 628 294 738 210 701 b 47 350 80 555 47 462 b 142 81 47 241 79 151 b 400 -24 206 11 292 -24 b 610 42 481 -24 552 -2 b 725 224 669 85 707 146 z m 576 425 l 208 425 b 267 569 216 488 235 536 b 393 619 299 603 341 619 b 520 567 445 619 487 602 b 576 425 553 533 572 485 z m 397 943 l 496 818 l 625 818 l 475 1017 l 321 1017 l 172 818 l 300 818 z "},"\xeb":{"ha":772,"x_min":0,"x_max":0,"o":"m 725 224 l 574 224 b 509 124 558 178 536 145 b 403 93 482 103 446 93 b 260 152 342 93 294 113 b 206 319 225 191 207 247 l 735 319 l 735 336 b 643 630 735 460 704 558 b 394 738 582 702 499 738 b 145 628 294 738 210 701 b 47 350 80 555 47 462 b 142 81 47 241 79 151 b 400 -24 206 11 292 -24 b 610 42 481 -24 552 -2 b 725 224 669 85 707 146 z m 576 425 l 208 425 b 267 569 216 488 235 536 b 393 619 299 603 341 619 b 520 567 445 619 487 602 b 576 425 553 533 572 485 z m 356 836 l 356 986 l 197 986 l 197 836 z m 436 986 l 436 836 l 594 836 l 594 986 z "},"\xec":{"ha":335,"x_min":0,"x_max":0,"o":"m 246 0 l 246 718 l 88 718 l 88 0 z m 110 1010 l -76 1010 l 121 811 l 236 811 z "},"\xed":{"ha":335,"x_min":0,"x_max":0,"o":"m 246 0 l 246 718 l 88 718 l 88 0 z m 88 818 l 203 818 l 400 1017 l 213 1017 z "},"\xee":{"ha":335,"x_min":0,"x_max":0,"o":"m 246 0 l 246 718 l 88 718 l 88 0 z m 167 943 l 265 818 l 394 818 l 244 1017 l 90 1017 l -58 818 l 69 818 z "},"\xef":{"ha":335,"x_min":0,"x_max":0,"o":"m 246 0 l 246 718 l 88 718 l 88 0 z m 128 836 l 128 986 l -31 986 l -31 836 z m 208 986 l 208 836 l 367 836 l 367 986 z "},"\xf0":{"ha":824,"x_min":0,"x_max":0,"o":"m 269 751 l 419 824 b 569 642 493 762 543 701 l 567 642 b 368 703 509 682 443 703 b 144 598 275 703 201 668 b 58 350 87 528 58 445 b 147 83 58 240 88 151 b 390 -19 205 15 287 -19 b 673 105 518 -19 612 22 b 764 429 734 188 764 296 b 549 885 764 613 692 765 l 679 947 l 611 1015 l 465 946 b 321 1015 417 976 369 1000 l 215 931 b 333 883 227 927 267 911 l 200 819 z m 415 578 b 557 508 477 578 525 555 b 606 340 589 462 606 406 b 549 176 606 278 587 224 b 400 106 511 129 461 106 b 263 172 340 106 294 128 b 217 340 232 217 217 273 b 264 512 217 411 232 468 b 415 578 295 556 346 578 z "},"\xf1":{"ha":797,"x_min":0,"x_max":0,"o":"m 235 717 l 85 717 l 85 0 l 243 0 l 243 386 b 418 604 243 531 301 604 b 493 590 449 604 474 599 b 535 546 513 580 527 565 b 553 488 544 526 550 507 b 557 417 556 469 557 445 l 557 0 l 715 0 l 715 478 b 655 669 715 561 695 625 b 472 736 615 714 554 736 b 235 611 371 736 292 694 z m 565 1000 b 496 939 555 959 532 939 b 410 964 477 939 449 947 b 297 992 365 982 328 992 b 201 944 258 992 226 976 b 153 835 175 912 159 875 l 232 835 b 292 892 239 873 259 892 b 386 867 315 892 346 883 b 489 840 426 849 460 840 b 597 888 535 840 571 856 b 643 1000 619 912 635 949 z "},"\xf2":{"ha":824,"x_min":0,"x_max":0,"o":"m 415 738 b 149 635 304 738 216 703 b 50 358 83 566 50 474 b 149 81 50 242 83 149 b 415 -22 214 12 303 -22 b 677 81 525 -22 613 12 b 774 358 741 149 774 242 b 676 635 774 474 741 566 b 415 738 612 703 525 738 z m 413 613 b 560 545 475 613 525 590 b 614 360 596 500 614 438 b 560 170 614 279 596 216 b 414 101 525 124 476 101 b 264 169 350 101 300 124 b 210 358 228 215 210 278 b 264 544 210 437 228 499 b 413 613 300 590 350 613 z m 349 1010 l 163 1010 l 360 811 l 475 811 z "},"\xf3":{"ha":824,"x_min":0,"x_max":0,"o":"m 415 738 b 149 635 304 738 216 703 b 50 358 83 566 50 474 b 149 81 50 242 83 149 b 415 -22 214 12 303 -22 b 677 81 525 -22 613 12 b 774 358 741 149 774 242 b 676 635 774 474 741 566 b 415 738 612 703 525 738 z m 413 613 b 560 545 475 613 525 590 b 614 360 596 500 614 438 b 560 170 614 279 596 216 b 414 101 525 124 476 101 b 264 169 350 101 300 124 b 210 358 228 215 210 278 b 264 544 210 437 228 499 b 413 613 300 590 350 613 z m 333 818 l 449 818 l 646 1017 l 458 1017 z "},"\xf4":{"ha":824,"x_min":0,"x_max":0,"o":"m 415 738 b 149 635 304 738 216 703 b 50 358 83 566 50 474 b 149 81 50 242 83 149 b 415 -22 214 12 303 -22 b 677 81 525 -22 613 12 b 774 358 741 149 774 242 b 676 635 774 474 741 566 b 415 738 612 703 525 738 z m 413 613 b 560 545 475 613 525 590 b 614 360 596 500 614 438 b 560 170 614 279 596 216 b 414 101 525 124 476 101 b 264 169 350 101 300 124 b 210 358 228 215 210 278 b 264 544 210 437 228 499 b 413 613 300 590 350 613 z m 414 943 l 513 818 l 642 818 l 492 1017 l 338 1017 l 189 818 l 317 818 z "},"\xf5":{"ha":824,"x_min":0,"x_max":0,"o":"m 415 738 b 149 635 304 738 216 703 b 50 358 83 566 50 474 b 149 81 50 242 83 149 b 415 -22 214 12 303 -22 b 677 81 525 -22 613 12 b 774 358 741 149 774 242 b 676 635 774 474 741 566 b 415 738 612 703 525 738 z m 413 613 b 560 545 475 613 525 590 b 614 360 596 500 614 438 b 560 170 614 279 596 216 b 414 101 525 124 476 101 b 264 169 350 101 300 124 b 210 358 228 215 210 278 b 264 544 210 437 228 499 b 413 613 300 590 350 613 z m 583 1000 b 514 939 573 959 550 939 b 428 964 495 939 467 947 b 315 992 383 982 346 992 b 219 944 276 992 244 976 b 171 835 193 912 177 875 l 250 835 b 310 892 257 873 277 892 b 404 867 333 892 364 883 b 507 840 444 849 478 840 b 615 888 553 840 589 856 b 661 1000 638 912 653 949 z "},"\xf6":{"ha":824,"x_min":0,"x_max":0,"o":"m 415 738 b 149 635 304 738 216 703 b 50 358 83 566 50 474 b 149 81 50 242 83 149 b 415 -22 214 12 303 -22 b 677 81 525 -22 613 12 b 774 358 741 149 774 242 b 676 635 774 474 741 566 b 415 738 612 703 525 738 z m 413 613 b 560 545 475 613 525 590 b 614 360 596 500 614 438 b 560 170 614 279 596 216 b 414 101 525 124 476 101 b 264 169 350 101 300 124 b 210 358 228 215 210 278 b 264 544 210 437 228 499 b 413 613 300 590 350 613 z m 375 836 l 375 986 l 217 986 l 217 836 z m 456 986 l 456 836 l 614 836 l 614 986 z "},"\xf7":{"ha":833,"x_min":0,"x_max":0,"o":"m 58 292 l 776 292 l 776 424 l 58 424 z m 335 13 l 499 13 l 499 193 l 335 193 z m 335 522 l 499 522 l 499 703 l 335 703 z "},"\xf8":{"ha":824,"x_min":0,"x_max":0,"o":"m 240 215 b 208 360 219 257 208 305 b 260 538 208 428 226 488 b 413 613 295 588 346 613 b 550 554 470 613 516 593 z m 89 -39 l 178 58 b 413 -19 240 6 318 -19 b 678 85 525 -19 613 16 b 775 360 743 155 775 247 b 690 619 775 464 747 551 l 781 718 l 736 757 l 649 661 b 413 738 586 712 507 738 b 147 632 300 738 212 702 b 50 360 82 562 50 471 b 135 100 50 254 78 168 l 44 0 z m 585 503 b 617 360 606 461 617 413 b 565 181 617 290 599 231 b 413 106 530 131 479 106 b 275 164 355 106 309 125 z "},"\xf9":{"ha":797,"x_min":0,"x_max":0,"o":"m 713 717 l 554 717 l 554 338 b 513 177 554 273 540 219 b 382 114 485 135 441 114 b 316 125 356 114 334 118 b 274 151 298 132 284 141 b 252 195 265 162 257 176 b 243 247 247 214 244 231 b 242 307 242 262 242 282 l 242 717 l 83 717 l 83 242 b 147 48 83 157 104 93 b 328 -19 189 3 249 -19 b 564 107 425 -19 504 23 l 564 0 l 713 0 z m 333 1010 l 147 1010 l 344 811 l 460 811 z "},"\xfa":{"ha":797,"x_min":0,"x_max":0,"o":"m 713 717 l 554 717 l 554 338 b 513 177 554 273 540 219 b 382 114 485 135 441 114 b 316 125 356 114 334 118 b 274 151 298 132 284 141 b 252 195 265 162 257 176 b 243 247 247 214 244 231 b 242 307 242 262 242 282 l 242 717 l 83 717 l 83 242 b 147 48 83 157 104 93 b 328 -19 189 3 249 -19 b 564 107 425 -19 504 23 l 564 0 l 713 0 z m 335 818 l 450 818 l 647 1017 l 460 1017 z "},"\xfb":{"ha":797,"x_min":0,"x_max":0,"o":"m 713 717 l 554 717 l 554 338 b 513 177 554 273 540 219 b 382 114 485 135 441 114 b 316 125 356 114 334 118 b 274 151 298 132 284 141 b 252 195 265 162 257 176 b 243 247 247 214 244 231 b 242 307 242 262 242 282 l 242 717 l 83 717 l 83 242 b 147 48 83 157 104 93 b 328 -19 189 3 249 -19 b 564 107 425 -19 504 23 l 564 0 l 713 0 z m 399 943 l 497 818 l 626 818 l 476 1017 l 322 1017 l 174 818 l 301 818 z "},"\xfc":{"ha":797,"x_min":0,"x_max":0,"o":"m 713 717 l 554 717 l 554 338 b 513 177 554 273 540 219 b 382 114 485 135 441 114 b 316 125 356 114 334 118 b 274 151 298 132 284 141 b 252 195 265 162 257 176 b 243 247 247 214 244 231 b 242 307 242 262 242 282 l 242 717 l 83 717 l 83 242 b 147 48 83 157 104 93 b 328 -19 189 3 249 -19 b 564 107 425 -19 504 23 l 564 0 l 713 0 z m 357 836 l 357 986 l 199 986 l 199 836 z m 438 986 l 438 836 l 596 836 l 596 986 z "},"\xfd":{"ha":721,"x_min":0,"x_max":0,"o":"m 715 717 l 550 717 l 369 189 l 178 717 l 4 717 l 279 21 b 271 -7 278 17 275 8 b 260 -40 266 -22 263 -33 b 248 -69 257 -47 253 -56 b 232 -98 243 -81 238 -91 b 213 -120 226 -105 220 -112 b 188 -137 205 -128 197 -134 b 157 -142 178 -140 168 -142 b 74 -132 135 -142 107 -138 l 74 -265 b 183 -274 117 -271 154 -274 b 233 -269 201 -274 217 -272 b 274 -258 248 -266 262 -262 b 309 -237 286 -253 297 -247 b 338 -212 321 -227 330 -219 b 364 -181 346 -206 355 -195 l 385 -147 b 403 -108 389 -140 396 -127 b 419 -69 411 -90 417 -77 b 435 -27 422 -62 427 -48 b 450 14 442 -6 447 7 z m 307 818 l 422 818 l 619 1017 l 432 1017 z "},"\xfe":{"ha":849,"x_min":0,"x_max":0,"o":"m 640 358 b 591 179 640 288 624 228 b 442 106 558 130 508 106 b 294 176 380 106 331 129 b 240 358 258 224 240 284 b 292 544 240 437 257 499 b 442 613 326 590 376 613 b 588 538 504 613 552 588 b 640 358 623 488 640 428 z m 88 -265 l 246 -265 l 246 93 l 249 93 b 349 8 271 55 304 27 b 489 -19 393 -10 440 -19 b 719 90 589 -19 666 17 b 799 356 772 162 799 251 b 712 630 799 467 770 558 b 463 738 654 702 571 738 b 341 707 421 738 380 727 b 249 625 302 687 271 659 l 246 625 l 246 992 l 88 992 z "},"\xff":{"ha":721,"x_min":0,"x_max":0,"o":"m 715 717 l 550 717 l 369 189 l 178 717 l 4 717 l 279 21 b 271 -7 278 17 275 8 b 260 -40 266 -22 263 -33 b 248 -69 257 -47 253 -56 b 232 -98 243 -81 238 -91 b 213 -120 226 -105 220 -112 b 188 -137 205 -128 197 -134 b 157 -142 178 -140 168 -142 b 74 -132 135 -142 107 -138 l 74 -265 b 183 -274 117 -271 154 -274 b 233 -269 201 -274 217 -272 b 274 -258 248 -266 262 -262 b 309 -237 286 -253 297 -247 b 338 -212 321 -227 330 -219 b 364 -181 346 -206 355 -195 l 385 -147 b 403 -108 389 -140 396 -127 b 419 -69 411 -90 417 -77 b 435 -27 422 -62 427 -48 b 450 14 442 -6 447 7 z m 328 836 l 328 986 l 169 986 l 169 836 z m 408 986 l 408 836 l 567 836 l 567 986 z "},"\u0100":{"ha":926,"x_min":0,"x_max":0,"o":"m 556 990 l 371 990 l -11 0 l 168 0 l 265 263 l 657 263 l 751 0 l 938 0 z m 611 393 l 310 393 l 464 810 z m 663 1136 l 663 1226 l 263 1226 l 263 1136 z "},"\u0101":{"ha":772,"x_min":0,"x_max":0,"o":"m 76 496 l 226 496 b 272 594 233 542 248 575 b 386 624 296 614 334 624 b 533 515 484 624 533 588 b 524 464 533 488 530 471 b 482 441 516 454 502 446 b 367 422 462 436 423 430 b 317 416 342 419 325 417 b 269 408 309 415 294 412 b 219 398 245 405 228 401 b 174 383 209 395 194 390 b 131 363 154 377 140 370 b 98 335 122 355 111 346 b 69 299 84 324 75 312 b 53 253 63 286 57 270 b 46 196 48 235 46 216 b 111 40 46 130 68 78 b 288 -18 155 1 213 -18 b 539 68 395 -18 479 11 b 656 -18 549 11 588 -18 b 758 -3 683 -18 718 -13 l 758 108 b 722 106 745 106 733 106 b 692 117 707 106 697 109 b 685 158 687 124 685 138 l 685 522 b 605 686 685 596 658 651 b 390 739 552 721 480 739 b 76 496 198 739 93 658 z m 532 360 l 532 275 b 500 151 532 214 521 173 b 338 94 462 113 408 94 b 242 122 297 94 265 104 b 208 201 220 141 208 167 b 218 249 208 220 212 236 b 241 281 225 263 232 273 b 278 301 250 289 262 296 b 319 313 295 307 308 311 b 365 321 331 316 346 318 b 406 326 372 322 385 324 b 452 333 427 329 442 331 b 490 342 462 334 475 337 b 532 360 506 347 520 353 z m 590 867 l 590 957 l 190 957 l 190 867 z "},"\u0102":{"ha":926,"x_min":0,"x_max":0,"o":"m 556 990 l 371 990 l -11 0 l 168 0 l 265 263 l 657 263 l 751 0 l 938 0 z m 611 393 l 310 393 l 464 810 z m 239 1285 b 304 1139 244 1221 266 1172 b 457 1089 342 1106 393 1089 b 616 1138 523 1089 576 1105 b 688 1285 656 1171 680 1220 l 608 1285 b 560 1206 601 1250 585 1224 b 468 1179 535 1188 504 1179 b 319 1285 383 1179 333 1214 z "},"\u0103":{"ha":772,"x_min":0,"x_max":0,"o":"m 76 496 l 226 496 b 272 594 233 542 248 575 b 386 624 296 614 334 624 b 533 515 484 624 533 588 b 524 464 533 488 530 471 b 482 441 516 454 502 446 b 367 422 462 436 423 430 b 317 416 342 419 325 417 b 269 408 309 415 294 412 b 219 398 245 405 228 401 b 174 383 209 395 194 390 b 131 363 154 377 140 370 b 98 335 122 355 111 346 b 69 299 84 324 75 312 b 53 253 63 286 57 270 b 46 196 48 235 46 216 b 111 40 46 130 68 78 b 288 -18 155 1 213 -18 b 539 68 395 -18 479 11 b 656 -18 549 11 588 -18 b 758 -3 683 -18 718 -13 l 758 108 b 722 106 745 106 733 106 b 692 117 707 106 697 109 b 685 158 687 124 685 138 l 685 522 b 605 686 685 596 658 651 b 390 739 552 721 480 739 b 76 496 198 739 93 658 z m 532 360 l 532 275 b 500 151 532 214 521 173 b 338 94 462 113 408 94 b 242 122 297 94 265 104 b 208 201 220 141 208 167 b 218 249 208 220 212 236 b 241 281 225 263 232 273 b 278 301 250 289 262 296 b 319 313 295 307 308 311 b 365 321 331 316 346 318 b 406 326 372 322 385 324 b 452 333 427 329 442 331 b 490 342 462 334 475 337 b 532 360 506 347 520 353 z m 165 1015 b 231 869 171 951 193 903 b 383 819 269 836 319 819 b 542 869 449 819 502 836 b 614 1015 583 902 606 950 l 535 1015 b 486 937 527 981 511 955 b 394 910 461 919 431 910 b 246 1015 309 910 260 945 z "},"\u0104":{"ha":926,"x_min":0,"x_max":0,"o":"m 938 0 l 556 992 l 371 992 l -10 0 l 169 0 l 263 263 l 658 263 l 751 0 b 593 -185 646 -63 593 -125 b 610 -254 593 -212 599 -236 b 655 -292 622 -273 637 -285 b 699 -306 673 -299 688 -304 b 733 -310 711 -309 722 -310 b 879 -206 812 -310 861 -275 l 822 -193 b 750 -240 803 -225 779 -240 b 712 -224 735 -240 722 -235 b 696 -179 701 -212 696 -198 b 724 -99 696 -151 705 -125 b 826 0 742 -73 776 -40 z m 460 821 l 464 821 l 613 394 l 310 394 z "},"\u0105":{"ha":772,"x_min":0,"x_max":0,"o":"m 685 529 b 600 686 685 600 656 652 b 397 738 544 720 476 738 b 170 682 306 738 231 719 b 71 499 109 645 76 584 l 229 499 b 276 584 233 537 249 565 b 388 613 304 603 341 613 b 536 515 487 613 536 580 b 526 471 536 497 533 482 b 492 445 519 460 508 451 b 448 432 477 439 462 435 b 386 424 434 429 413 426 b 321 414 359 421 338 418 b 219 397 280 409 246 404 b 135 365 193 391 164 380 b 67 298 105 349 83 327 b 44 190 52 269 44 233 b 115 35 44 124 68 72 b 290 -19 163 -1 221 -19 b 426 3 336 -19 381 -12 b 539 68 472 18 509 39 b 581 0 546 35 560 12 b 596 -8 583 -2 588 -5 b 519 -64 561 -30 535 -48 b 451 -185 474 -105 451 -145 b 469 -254 451 -212 457 -236 b 513 -292 480 -273 495 -285 b 558 -306 531 -299 546 -304 b 592 -310 569 -309 581 -310 b 738 -206 670 -310 719 -275 l 681 -193 b 608 -240 661 -225 637 -240 b 570 -224 594 -240 581 -235 b 554 -179 559 -212 554 -198 b 619 -54 554 -139 576 -98 b 640 -37 624 -50 631 -45 b 660 -19 648 -29 655 -23 l 661 -19 b 761 -1 694 -19 727 -13 l 761 108 b 739 106 750 106 743 106 l 722 106 b 693 118 708 106 699 110 b 685 160 688 126 685 140 z m 526 242 b 469 140 526 196 507 162 b 349 106 431 117 391 106 b 249 127 313 106 279 113 b 203 197 218 141 203 165 b 238 281 203 235 214 263 b 332 317 261 298 292 310 b 398 325 344 319 366 321 b 475 338 430 329 456 333 b 526 360 494 343 512 350 z "},"\u0106":{"ha":1003,"x_min":0,"x_max":0,"o":"m 951 376 l 778 376 b 525 124 756 208 672 124 b 391 156 474 124 429 134 b 300 241 353 177 322 205 b 250 358 278 277 261 316 b 233 494 239 401 233 446 b 262 672 233 558 243 617 b 359 808 281 726 313 771 b 526 864 405 845 461 864 b 688 813 590 864 644 847 b 771 674 731 779 759 733 l 943 674 b 803 924 927 783 881 866 b 529 1011 725 982 634 1011 b 275 940 432 1011 347 987 b 113 752 203 892 149 829 b 58 494 76 675 58 589 b 185 118 58 338 100 213 b 521 -24 269 24 381 -24 b 822 85 644 -24 744 13 b 951 376 899 158 942 255 z m 457 1088 l 572 1088 l 769 1286 l 582 1286 z "},"\u0107":{"ha":772,"x_min":0,"x_max":0,"o":"m 733 271 l 578 271 b 520 149 569 218 550 178 b 404 107 490 121 451 107 b 263 174 344 107 297 129 b 213 360 229 218 213 280 b 265 548 213 439 230 502 b 410 617 300 594 349 617 b 515 581 452 617 488 605 b 571 476 543 556 562 522 l 728 476 b 630 669 719 559 686 623 b 408 739 574 716 500 739 b 148 634 299 739 212 704 b 51 351 84 564 51 470 b 147 84 51 241 83 152 b 404 -18 211 16 297 -18 b 628 60 494 -18 569 8 b 733 271 687 113 722 183 z m 335 818 l 450 818 l 647 1017 l 460 1017 z "},"\u0108":{"ha":1003,"x_min":0,"x_max":0,"o":"m 951 376 l 778 376 b 525 124 756 208 672 124 b 391 156 474 124 429 134 b 300 241 353 177 322 205 b 250 358 278 277 261 316 b 233 494 239 401 233 446 b 262 672 233 558 243 617 b 359 808 281 726 313 771 b 526 864 405 845 461 864 b 688 813 590 864 644 847 b 771 674 731 779 759 733 l 943 674 b 803 924 927 783 881 866 b 529 1011 725 982 634 1011 b 275 940 432 1011 347 987 b 113 752 203 892 149 829 b 58 494 76 675 58 589 b 185 118 58 338 100 213 b 521 -24 269 24 381 -24 b 822 85 644 -24 744 13 b 951 376 899 158 942 255 z m 529 1213 l 628 1088 l 757 1088 l 607 1286 l 453 1286 l 304 1088 l 432 1088 z "},"\u0109":{"ha":772,"x_min":0,"x_max":0,"o":"m 733 271 l 578 271 b 520 149 569 218 550 178 b 404 107 490 121 451 107 b 263 174 344 107 297 129 b 213 360 229 218 213 280 b 265 548 213 439 230 502 b 410 617 300 594 349 617 b 515 581 452 617 488 605 b 571 476 543 556 562 522 l 728 476 b 630 669 719 559 686 623 b 408 739 574 716 500 739 b 148 634 299 739 212 704 b 51 351 84 564 51 470 b 147 84 51 241 83 152 b 404 -18 211 16 297 -18 b 628 60 494 -18 569 8 b 733 271 687 113 722 183 z m 404 943 l 503 818 l 632 818 l 482 1017 l 328 1017 l 179 818 l 307 818 z "},"\u010a":{"ha":1003,"x_min":0,"x_max":0,"o":"m 951 376 l 778 376 b 525 124 756 208 672 124 b 391 156 474 124 429 134 b 300 241 353 177 322 205 b 250 358 278 277 261 316 b 233 494 239 401 233 446 b 262 672 233 558 243 617 b 359 808 281 726 313 771 b 526 864 405 845 461 864 b 688 813 590 864 644 847 b 771 674 731 779 759 733 l 943 674 b 803 924 927 783 881 866 b 529 1011 725 982 634 1011 b 275 940 432 1011 347 987 b 113 752 203 892 149 829 b 58 494 76 675 58 589 b 185 118 58 338 100 213 b 521 -24 269 24 381 -24 b 822 85 644 -24 744 13 b 951 376 899 158 942 255 z m 606 1106 l 606 1256 l 447 1256 l 447 1106 z "},"\u010b":{"ha":772,"x_min":0,"x_max":0,"o":"m 733 271 l 578 271 b 520 149 569 218 550 178 b 404 107 490 121 451 107 b 263 174 344 107 297 129 b 213 360 229 218 213 280 b 265 548 213 439 230 502 b 410 617 300 594 349 617 b 515 581 452 617 488 605 b 571 476 543 556 562 522 l 728 476 b 630 669 719 559 686 623 b 408 739 574 716 500 739 b 148 634 299 739 212 704 b 51 351 84 564 51 470 b 147 84 51 241 83 152 b 404 -18 211 16 297 -18 b 628 60 494 -18 569 8 b 733 271 687 113 722 183 z m 479 836 l 479 986 l 321 986 l 321 836 z "},"\u010c":{"ha":1003,"x_min":0,"x_max":0,"o":"m 951 376 l 778 376 b 525 124 756 208 672 124 b 391 156 474 124 429 134 b 300 241 353 177 322 205 b 250 358 278 277 261 316 b 233 494 239 401 233 446 b 262 672 233 558 243 617 b 359 808 281 726 313 771 b 526 864 405 845 461 864 b 688 813 590 864 644 847 b 771 674 731 779 759 733 l 943 674 b 803 924 927 783 881 866 b 529 1011 725 982 634 1011 b 275 940 432 1011 347 987 b 113 752 203 892 149 829 b 58 494 76 675 58 589 b 185 118 58 338 100 213 b 521 -24 269 24 381 -24 b 822 85 644 -24 744 13 b 951 376 899 158 942 255 z m 751 1286 l 622 1286 l 524 1163 l 426 1286 l 299 1286 l 447 1088 l 601 1088 z "},"\u010d":{"ha":772,"x_min":0,"x_max":0,"o":"m 733 271 l 578 271 b 520 149 569 218 550 178 b 404 107 490 121 451 107 b 263 174 344 107 297 129 b 213 360 229 218 213 280 b 265 548 213 439 230 502 b 410 617 300 594 349 617 b 515 581 452 617 488 605 b 571 476 543 556 562 522 l 728 476 b 630 669 719 559 686 623 b 408 739 574 716 500 739 b 148 634 299 739 212 704 b 51 351 84 564 51 470 b 147 84 51 241 83 152 b 404 -18 211 16 297 -18 b 628 60 494 -18 569 8 b 733 271 687 113 722 183 z m 629 1017 l 500 1017 l 401 893 l 304 1017 l 176 1017 l 325 818 l 479 818 z "},"\u010e":{"ha":1003,"x_min":0,"x_max":0,"o":"m 104 989 l 104 0 l 490 0 b 678 24 568 0 631 8 b 811 110 726 41 770 69 b 950 511 904 202 950 336 b 804 888 950 675 901 800 b 661 967 761 926 713 953 b 481 989 609 982 549 989 z m 276 842 l 469 842 b 701 752 574 842 651 812 b 776 503 751 692 776 609 b 710 240 776 391 754 303 b 481 146 665 177 589 146 l 276 146 z m 681 1286 l 551 1286 l 453 1163 l 356 1286 l 228 1286 l 376 1088 l 531 1088 z "},"\u010f":{"ha":954,"x_min":0,"x_max":0,"o":"m 760 992 l 601 992 l 601 625 l 599 625 b 498 709 575 662 542 690 b 360 738 454 728 408 738 b 140 642 274 738 200 706 b 49 364 79 579 49 486 b 135 88 49 251 77 159 b 385 -19 192 16 275 -19 b 607 97 493 -19 567 19 l 610 97 l 610 0 l 760 0 z m 207 351 b 256 536 207 424 223 485 b 408 613 289 587 340 613 b 553 546 469 613 518 590 b 607 360 589 501 607 439 b 556 181 607 290 590 231 b 406 106 521 131 471 106 b 258 178 341 106 291 130 b 207 351 224 226 207 284 z m 828 793 l 933 793 l 1046 992 l 872 992 z "},"\u0110":{"ha":1003,"x_min":0,"x_max":0,"o":"m 279 850 l 450 850 b 616 824 516 850 571 841 b 718 747 661 806 695 780 b 767 636 741 713 757 676 b 781 496 776 596 781 550 b 767 356 781 442 776 395 b 718 245 757 316 741 279 b 616 168 695 211 661 186 b 450 142 571 150 516 142 l 279 142 l 279 440 l 550 440 l 550 582 l 279 582 z m 106 0 l 517 0 b 844 138 662 0 771 46 b 954 496 918 230 954 350 b 844 853 954 642 918 761 b 517 992 771 946 662 992 l 106 992 l 106 582 l 13 582 l 13 440 l 106 440 z "},"\u0111":{"ha":861,"x_min":0,"x_max":0,"o":"m 760 811 l 869 811 l 869 901 l 760 901 l 760 992 l 601 992 l 601 901 l 389 901 l 389 811 l 601 811 l 601 625 l 599 625 b 498 709 575 662 542 690 b 360 738 454 728 408 738 b 140 642 274 738 200 706 b 49 364 79 579 49 486 b 135 88 49 251 77 159 b 385 -19 192 16 275 -19 b 607 97 493 -19 567 19 l 610 97 l 610 0 l 760 0 z m 207 351 b 256 536 207 424 223 485 b 408 613 289 587 340 613 b 553 546 469 613 518 590 b 607 360 589 501 607 439 b 556 181 607 290 590 231 b 406 106 521 131 471 106 b 258 178 341 106 291 130 b 207 351 224 226 207 284 z "},"\u0112":{"ha":875,"x_min":0,"x_max":0,"o":"m 815 989 l 103 989 l 103 0 l 824 0 l 824 149 l 275 149 l 275 440 l 776 440 l 776 581 l 275 581 l 275 843 l 815 843 z m 664 1136 l 664 1226 l 264 1226 l 264 1136 z "},"\u0113":{"ha":772,"x_min":0,"x_max":0,"o":"m 725 224 l 574 224 b 509 124 558 178 536 145 b 403 93 482 103 446 93 b 260 152 342 93 294 113 b 206 319 225 191 207 247 l 735 319 l 735 336 b 643 630 735 460 704 558 b 394 738 582 702 499 738 b 145 628 294 738 210 701 b 47 350 80 555 47 462 b 142 81 47 241 79 151 b 400 -24 206 11 292 -24 b 610 42 481 -24 552 -2 b 725 224 669 85 707 146 z m 576 425 l 208 425 b 267 569 216 488 235 536 b 393 619 299 603 341 619 b 520 567 445 619 487 602 b 576 425 553 533 572 485 z m 596 867 l 596 957 l 196 957 l 196 867 z "},"\u0114":{"ha":875,"x_min":0,"x_max":0,"o":"m 815 989 l 103 989 l 103 0 l 824 0 l 824 149 l 275 149 l 275 440 l 776 440 l 776 581 l 275 581 l 275 843 l 815 843 z m 235 1285 b 300 1139 240 1221 262 1172 b 453 1089 338 1106 389 1089 b 612 1138 519 1089 572 1105 b 683 1285 652 1171 676 1220 l 604 1285 b 556 1206 597 1250 581 1224 b 464 1179 531 1188 500 1179 b 315 1285 379 1179 329 1214 z "},"\u0115":{"ha":772,"x_min":0,"x_max":0,"o":"m 725 224 l 574 224 b 509 124 558 178 536 145 b 403 93 482 103 446 93 b 260 152 342 93 294 113 b 206 319 225 191 207 247 l 735 319 l 735 336 b 643 630 735 460 704 558 b 394 738 582 702 499 738 b 145 628 294 738 210 701 b 47 350 80 555 47 462 b 142 81 47 241 79 151 b 400 -24 206 11 292 -24 b 610 42 481 -24 552 -2 b 725 224 669 85 707 146 z m 576 425 l 208 425 b 267 569 216 488 235 536 b 393 619 299 603 341 619 b 520 567 445 619 487 602 b 576 425 553 533 572 485 z m 169 1015 b 235 869 175 951 197 903 b 388 819 273 836 324 819 b 547 869 453 819 506 836 b 618 1015 587 902 611 950 l 539 1015 b 490 937 531 981 515 955 b 399 910 465 919 435 910 b 250 1015 313 910 264 945 z "},"\u0116":{"ha":875,"x_min":0,"x_max":0,"o":"m 815 989 l 103 989 l 103 0 l 824 0 l 824 149 l 275 149 l 275 440 l 776 440 l 776 581 l 275 581 l 275 843 l 815 843 z m 542 1106 l 542 1256 l 383 1256 l 383 1106 z "},"\u0117":{"ha":772,"x_min":0,"x_max":0,"o":"m 725 224 l 574 224 b 509 124 558 178 536 145 b 403 93 482 103 446 93 b 260 152 342 93 294 113 b 206 319 225 191 207 247 l 735 319 l 735 336 b 643 630 735 460 704 558 b 394 738 582 702 499 738 b 145 628 294 738 210 701 b 47 350 80 555 47 462 b 142 81 47 241 79 151 b 400 -24 206 11 292 -24 b 610 42 481 -24 552 -2 b 725 224 669 85 707 146 z m 576 425 l 208 425 b 267 569 216 488 235 536 b 393 619 299 603 341 619 b 520 567 445 619 487 602 b 576 425 553 533 572 485 z m 478 836 l 478 986 l 319 986 l 319 836 z "},"\u0118":{"ha":875,"x_min":0,"x_max":0,"o":"m 829 0 l 829 150 l 279 150 l 279 440 l 779 440 l 779 582 l 279 582 l 279 842 l 819 842 l 819 992 l 106 992 l 106 0 l 701 0 b 543 -185 596 -63 543 -125 b 560 -254 543 -212 549 -236 b 605 -292 572 -273 587 -285 b 649 -306 623 -299 638 -304 b 683 -310 661 -309 672 -310 b 829 -206 762 -310 811 -275 l 772 -193 b 700 -240 753 -225 729 -240 b 662 -224 685 -240 672 -235 b 646 -179 651 -212 646 -198 b 674 -99 646 -151 655 -125 b 776 0 692 -73 726 -40 z "},"\u0119":{"ha":772,"x_min":0,"x_max":0,"o":"m 735 318 b 658 611 749 429 723 527 b 396 738 594 695 506 738 b 144 627 292 738 208 701 b 49 358 81 553 49 464 b 101 141 49 274 66 202 b 250 8 135 80 185 36 b 375 -18 290 -8 331 -17 b 317 -64 351 -35 331 -50 b 249 -185 271 -105 249 -145 b 266 -254 249 -212 254 -236 b 310 -292 278 -273 292 -285 b 355 -306 328 -299 343 -304 b 389 -310 366 -309 378 -310 b 535 -206 468 -310 516 -275 l 478 -193 b 406 -240 458 -225 434 -240 b 367 -224 391 -240 378 -235 b 351 -179 357 -212 351 -198 b 417 -54 351 -139 373 -98 b 463 -14 423 -48 438 -34 b 511 -3 476 -12 493 -8 b 650 80 566 13 612 41 b 725 225 688 119 713 168 l 575 225 b 400 106 547 145 489 106 b 256 167 337 106 289 126 b 207 318 223 207 207 258 z m 207 422 b 263 558 209 477 227 522 b 396 613 298 594 342 613 b 522 557 448 613 490 594 b 576 422 555 520 573 475 z "},"\u011a":{"ha":875,"x_min":0,"x_max":0,"o":"m 815 989 l 103 989 l 103 0 l 824 0 l 824 149 l 275 149 l 275 440 l 776 440 l 776 581 l 275 581 l 275 843 l 815 843 z m 688 1286 l 558 1286 l 460 1163 l 363 1286 l 235 1286 l 383 1088 l 538 1088 z "},"\u011b":{"ha":772,"x_min":0,"x_max":0,"o":"m 725 224 l 574 224 b 509 124 558 178 536 145 b 403 93 482 103 446 93 b 260 152 342 93 294 113 b 206 319 225 191 207 247 l 735 319 l 735 336 b 643 630 735 460 704 558 b 394 738 582 702 499 738 b 145 628 294 738 210 701 b 47 350 80 555 47 462 b 142 81 47 241 79 151 b 400 -24 206 11 292 -24 b 610 42 481 -24 552 -2 b 725 224 669 85 707 146 z m 576 425 l 208 425 b 267 569 216 488 235 536 b 393 619 299 603 341 619 b 520 567 445 619 487 602 b 576 425 553 533 572 485 z m 619 1017 l 490 1017 l 392 893 l 294 1017 l 167 1017 l 315 818 l 469 818 z "},"\u011c":{"ha":1054,"x_min":0,"x_max":0,"o":"m 972 529 l 549 529 l 549 396 l 815 396 b 745 197 815 317 792 251 b 546 117 698 144 632 117 b 316 216 448 117 371 150 b 233 490 261 282 233 374 b 315 764 233 606 261 697 b 540 864 370 831 445 864 b 709 813 608 864 664 847 b 792 674 754 779 781 733 l 960 674 b 823 919 949 777 903 859 b 542 1010 743 980 649 1010 b 189 860 394 1010 276 960 b 58 488 102 761 58 637 b 188 118 58 336 102 213 b 526 -24 275 24 388 -24 b 835 118 653 -24 756 24 l 861 0 l 972 0 z m 539 1213 l 638 1088 l 767 1088 l 617 1286 l 463 1286 l 314 1088 l 442 1088 z "},"\u011d":{"ha":824,"x_min":0,"x_max":0,"o":"m 740 717 l 593 717 l 593 617 b 497 708 563 658 531 689 b 369 736 463 727 420 736 b 138 634 273 736 196 702 b 50 364 79 566 50 476 b 134 103 50 255 78 168 b 361 7 190 39 266 7 b 589 128 461 7 537 47 l 589 43 b 544 -118 589 -31 574 -85 b 400 -168 514 -151 466 -168 b 233 -61 304 -168 248 -132 l 75 -61 b 396 -279 93 -206 200 -279 b 662 -190 521 -279 609 -250 b 740 83 714 -131 740 -40 z m 397 608 b 538 547 457 608 504 588 b 589 375 572 505 589 448 b 538 197 589 300 572 241 b 397 131 503 153 456 131 b 259 194 340 131 294 152 b 207 367 224 237 207 294 b 258 544 207 443 224 502 b 397 608 291 587 338 608 z m 421 943 l 519 818 l 649 818 l 499 1017 l 344 1017 l 196 818 l 324 818 z "},"\u011e":{"ha":1054,"x_min":0,"x_max":0,"o":"m 972 529 l 549 529 l 549 396 l 815 396 b 745 197 815 317 792 251 b 546 117 698 144 632 117 b 316 216 448 117 371 150 b 233 490 261 282 233 374 b 315 764 233 606 261 697 b 540 864 370 831 445 864 b 709 813 608 864 664 847 b 792 674 754 779 781 733 l 960 674 b 823 919 949 777 903 859 b 542 1010 743 980 649 1010 b 189 860 394 1010 276 960 b 58 488 102 761 58 637 b 188 118 58 336 102 213 b 526 -24 275 24 388 -24 b 835 118 653 -24 756 24 l 861 0 l 972 0 z m 317 1285 b 382 1139 322 1221 344 1172 b 535 1089 420 1106 471 1089 b 694 1138 600 1089 653 1105 b 765 1285 734 1171 758 1220 l 686 1285 b 638 1206 679 1250 663 1224 b 546 1179 613 1188 582 1179 b 397 1285 461 1179 411 1214 z "},"\u011f":{"ha":824,"x_min":0,"x_max":0,"o":"m 740 717 l 593 717 l 593 617 b 497 708 563 658 531 689 b 369 736 463 727 420 736 b 138 634 273 736 196 702 b 50 364 79 566 50 476 b 134 103 50 255 78 168 b 361 7 190 39 266 7 b 589 128 461 7 537 47 l 589 43 b 544 -118 589 -31 574 -85 b 400 -168 514 -151 466 -168 b 233 -61 304 -168 248 -132 l 75 -61 b 396 -279 93 -206 200 -279 b 662 -190 521 -279 609 -250 b 740 83 714 -131 740 -40 z m 397 608 b 538 547 457 608 504 588 b 589 375 572 505 589 448 b 538 197 589 300 572 241 b 397 131 503 153 456 131 b 259 194 340 131 294 152 b 207 367 224 237 207 294 b 258 544 207 443 224 502 b 397 608 291 587 338 608 z m 183 1015 b 249 869 189 951 211 903 b 401 819 287 836 338 819 b 560 869 467 819 520 836 b 632 1015 601 902 625 950 l 553 1015 b 504 937 545 981 529 955 b 413 910 479 919 449 910 b 264 1015 327 910 278 945 z "},"\u0120":{"ha":1054,"x_min":0,"x_max":0,"o":"m 972 529 l 549 529 l 549 396 l 815 396 b 745 197 815 317 792 251 b 546 117 698 144 632 117 b 316 216 448 117 371 150 b 233 490 261 282 233 374 b 315 764 233 606 261 697 b 540 864 370 831 445 864 b 709 813 608 864 664 847 b 792 674 754 779 781 733 l 960 674 b 823 919 949 777 903 859 b 542 1010 743 980 649 1010 b 189 860 394 1010 276 960 b 58 488 102 761 58 637 b 188 118 58 336 102 213 b 526 -24 275 24 388 -24 b 835 118 653 -24 756 24 l 861 0 l 972 0 z m 615 1106 l 615 1256 l 457 1256 l 457 1106 z "},"\u0121":{"ha":824,"x_min":0,"x_max":0,"o":"m 740 717 l 593 717 l 593 617 b 497 708 563 658 531 689 b 369 736 463 727 420 736 b 138 634 273 736 196 702 b 50 364 79 566 50 476 b 134 103 50 255 78 168 b 361 7 190 39 266 7 b 589 128 461 7 537 47 l 589 43 b 544 -118 589 -31 574 -85 b 400 -168 514 -151 466 -168 b 233 -61 304 -168 248 -132 l 75 -61 b 396 -279 93 -206 200 -279 b 662 -190 521 -279 609 -250 b 740 83 714 -131 740 -40 z m 397 608 b 538 547 457 608 504 588 b 589 375 572 505 589 448 b 538 197 589 300 572 241 b 397 131 503 153 456 131 b 259 194 340 131 294 152 b 207 367 224 237 207 294 b 258 544 207 443 224 502 b 397 608 291 587 338 608 z m 488 836 l 488 986 l 329 986 l 329 836 z "},"\u0122":{"ha":1054,"x_min":0,"x_max":0,"o":"m 971 522 l 549 522 l 549 390 l 813 390 b 738 188 811 304 786 237 b 535 118 691 140 623 116 b 310 228 436 118 361 155 b 233 496 259 302 233 391 b 310 763 233 600 259 690 b 535 874 361 837 436 874 b 706 822 600 874 657 856 b 790 676 754 787 782 738 l 960 676 b 822 926 947 784 901 867 b 535 1015 742 986 647 1015 b 190 865 391 1015 276 965 b 60 496 103 765 60 642 b 190 126 60 349 103 225 b 535 -24 276 26 391 -24 b 697 8 597 -24 651 -13 b 833 117 742 28 788 65 l 860 0 l 971 0 z m 444 -207 l 528 -207 b 465 -257 523 -235 502 -251 l 465 -310 b 626 -193 573 -305 626 -266 l 626 -69 l 444 -69 z "},"\u0123":{"ha":824,"x_min":0,"x_max":0,"o":"m 747 718 l 589 718 l 589 619 l 586 619 b 374 738 547 698 476 738 b 137 633 275 738 196 703 b 49 378 78 564 49 479 b 81 188 49 306 59 243 b 187 53 102 133 137 88 b 371 0 236 18 298 0 b 495 33 415 0 457 11 b 586 126 534 56 564 87 l 589 126 l 589 17 b 404 -167 589 -106 527 -167 b 290 -145 357 -167 319 -159 b 232 -61 260 -131 241 -103 l 74 -61 b 132 -193 78 -114 98 -158 b 249 -265 166 -228 205 -252 b 394 -285 293 -278 342 -285 b 657 -204 509 -285 597 -258 b 747 38 717 -150 747 -70 z m 396 125 b 255 195 334 125 287 148 b 207 363 223 242 207 298 b 253 539 207 431 222 490 b 396 613 283 588 331 613 b 541 544 461 613 509 590 b 589 375 573 499 589 443 b 541 198 589 306 573 247 b 396 125 509 149 461 125 z m 501 992 l 418 992 b 481 1042 423 1019 444 1036 l 481 1094 b 319 978 373 1090 319 1051 l 319 854 l 501 854 z "},"\u0124":{"ha":1003,"x_min":0,"x_max":0,"o":"m 901 989 l 728 989 l 728 596 l 275 596 l 275 989 l 101 989 l 101 0 l 275 0 l 275 444 l 728 444 l 728 0 l 901 0 z m 503 1213 l 601 1088 l 731 1088 l 581 1286 l 426 1286 l 278 1088 l 406 1088 z "},"\u0125":{"ha":797,"x_min":0,"x_max":0,"o":"m 242 989 l 85 989 l 85 0 l 242 0 l 242 385 b 283 543 242 450 256 503 b 417 603 311 583 356 603 b 527 560 471 603 508 588 b 556 435 546 531 556 489 l 556 0 l 715 0 l 715 486 b 650 672 715 568 694 629 b 468 735 606 714 546 735 b 242 618 370 735 294 696 z m 397 1213 l 496 1088 l 625 1088 l 475 1286 l 321 1286 l 172 1088 l 300 1088 z "},"\u0126":{"ha":1003,"x_min":0,"x_max":0,"o":"m 101 0 l 275 0 l 275 413 l 726 413 l 726 0 l 900 0 l 900 992 l 726 992 l 726 753 l 275 753 l 275 992 l 101 992 z m 275 563 l 275 663 l 726 663 l 726 563 z "},"\u0127":{"ha":811,"x_min":0,"x_max":0,"o":"m 97 901 l -8 901 l -8 811 l 97 811 l 97 0 l 256 0 l 256 424 b 303 558 256 477 272 522 b 429 613 335 594 377 613 b 533 574 476 613 511 600 b 569 451 556 549 568 508 l 569 0 l 728 0 l 728 493 b 660 675 728 573 705 633 b 474 738 616 717 553 738 b 347 706 427 738 385 727 b 258 624 308 684 279 657 l 256 624 l 256 811 l 431 811 l 431 901 l 256 901 l 256 992 l 97 992 z "},"\u0128":{"ha":386,"x_min":0,"x_max":0,"o":"m 281 989 l 106 989 l 106 0 l 281 0 z m 361 1269 b 292 1208 351 1229 328 1208 b 206 1233 273 1208 244 1217 b 93 1261 161 1252 124 1261 b -3 1213 54 1261 22 1245 b -51 1104 -29 1181 -45 1145 l 28 1104 b 88 1161 35 1142 55 1161 b 182 1136 111 1161 142 1153 b 285 1110 222 1119 256 1110 b 393 1157 331 1110 367 1125 b 439 1269 415 1181 431 1219 z "},"\u0129":{"ha":335,"x_min":0,"x_max":0,"o":"m 246 0 l 246 718 l 88 718 l 88 0 z m 336 1000 b 267 939 326 959 303 939 b 181 964 248 939 219 947 b 68 992 136 982 99 992 b -28 944 29 992 -3 976 b -76 835 -54 912 -70 875 l 3 835 b 63 892 10 873 30 892 b 157 867 86 892 117 883 b 260 840 197 849 231 840 b 368 888 306 840 342 856 b 414 1000 390 912 406 949 z "},"\u012a":{"ha":386,"x_min":0,"x_max":0,"o":"m 281 989 l 106 989 l 106 0 l 281 0 z m 392 1136 l 392 1226 l -8 1226 l -8 1136 z "},"\u012b":{"ha":335,"x_min":0,"x_max":0,"o":"m 246 0 l 246 718 l 88 718 l 88 0 z m 365 867 l 365 957 l -35 957 l -35 867 z "},"\u012c":{"ha":386,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 279 0 l 279 992 z m 49 1257 l -32 1257 b 33 1111 -26 1193 -5 1144 b 186 1061 71 1078 122 1061 b 344 1110 250 1061 303 1077 b 417 1257 385 1142 409 1191 l 338 1257 b 288 1178 330 1222 314 1195 b 197 1151 263 1160 232 1151 b 101 1175 160 1151 128 1159 b 49 1257 73 1191 56 1218 z "},"\u012d":{"ha":335,"x_min":0,"x_max":0,"o":"m 88 0 l 246 0 l 246 718 l 88 718 z m 24 983 l -57 983 b 8 838 -51 919 -30 871 b 161 788 46 804 97 788 b 319 836 225 788 278 804 b 392 983 360 869 384 918 l 313 983 b 263 904 305 948 289 922 b 172 878 238 887 207 878 b 76 901 135 878 103 886 b 24 983 48 917 31 944 z "},"\u012e":{"ha":386,"x_min":0,"x_max":0,"o":"m 279 992 l 106 992 l 106 0 l 213 0 b 69 -185 117 -63 69 -125 b 85 -254 69 -212 75 -236 b 126 -292 96 -273 109 -285 b 166 -306 142 -299 155 -304 b 196 -310 177 -309 187 -310 b 328 -206 265 -310 309 -275 l 276 -193 b 211 -240 258 -225 236 -240 b 176 -224 197 -240 186 -235 b 163 -179 167 -212 163 -198 b 187 -99 163 -151 171 -125 b 279 0 203 -73 234 -40 z "},"\u012f":{"ha":335,"x_min":0,"x_max":0,"o":"m 246 0 l 246 718 l 88 718 l 88 0 l 176 0 b 33 -185 81 -63 33 -125 b 44 -243 33 -207 37 -226 b 71 -280 52 -260 61 -272 b 106 -299 81 -288 93 -294 b 138 -308 120 -304 130 -307 b 161 -310 146 -309 154 -310 b 242 -285 191 -310 218 -302 b 292 -206 267 -269 283 -243 l 240 -193 b 175 -240 223 -225 201 -240 b 141 -223 162 -240 151 -234 b 126 -179 131 -211 126 -197 b 151 -99 126 -151 135 -125 b 244 0 168 -74 199 -41 z m 88 842 l 246 842 l 246 992 l 88 992 z "},"\u0130":{"ha":386,"x_min":0,"x_max":0,"o":"m 281 989 l 106 989 l 106 0 l 281 0 z m 272 1106 l 272 1256 l 114 1256 l 114 1106 z "},"\u0131":{"ha":335,"x_min":0,"x_max":0,"o":"m 246 0 l 246 718 l 88 718 l 88 0 z "},"\u0132":{"ha":1140,"x_min":0,"x_max":0,"o":"m 106 0 l 279 0 l 279 992 l 106 992 z m 1035 992 l 861 992 l 861 310 b 832 164 861 243 851 194 b 722 118 813 133 776 118 b 617 163 672 118 637 133 b 586 296 596 192 586 237 l 586 347 l 413 347 l 413 294 b 485 63 413 198 437 121 b 708 -24 534 5 608 -24 b 851 -3 763 -24 811 -17 b 947 47 892 10 924 27 b 1001 125 969 68 988 94 b 1028 217 1015 156 1024 187 b 1035 319 1033 246 1035 281 z "},"\u0133":{"ha":658,"x_min":0,"x_max":0,"o":"m 88 842 l 246 842 l 246 992 l 88 992 z m 88 0 l 246 0 l 246 718 l 88 718 z m 411 842 l 569 842 l 569 992 l 411 992 z m 411 -54 b 399 -136 411 -93 407 -120 b 347 -160 391 -152 374 -160 b 293 -154 330 -160 312 -158 l 293 -279 b 364 -285 312 -283 335 -285 b 521 -228 436 -285 488 -266 b 569 -61 553 -191 569 -135 l 569 718 l 411 718 z "},"\u0134":{"ha":746,"x_min":0,"x_max":0,"o":"m 653 989 l 479 989 l 479 317 b 478 255 479 291 479 270 b 469 203 477 240 474 222 b 447 158 464 183 456 168 b 407 130 438 147 425 138 b 343 118 389 122 368 118 b 231 163 288 118 251 133 b 200 293 210 193 200 237 l 200 347 l 35 347 l 35 310 b 108 61 35 200 59 118 b 349 -24 156 5 237 -24 b 576 57 449 -24 524 3 b 653 293 627 111 653 189 z m 546 1213 l 644 1088 l 774 1088 l 624 1286 l 469 1286 l 321 1088 l 449 1088 z "},"\u0135":{"ha":335,"x_min":0,"x_max":0,"o":"m 88 -54 b 76 -136 88 -93 84 -120 b 24 -160 68 -152 50 -160 b -31 -154 6 -160 -12 -158 l -31 -279 b 40 -285 -12 -283 12 -285 b 197 -228 113 -285 165 -266 b 246 -61 230 -191 246 -135 l 246 718 l 88 718 z m 165 943 l 264 818 l 393 818 l 243 1017 l 89 1017 l -60 818 l 68 818 z "},"\u0136":{"ha":951,"x_min":0,"x_max":0,"o":"m 106 0 l 279 0 l 279 333 l 421 474 l 746 0 l 963 0 l 539 596 l 935 992 l 721 992 l 279 540 l 279 992 l 106 992 z m 383 -207 l 467 -207 b 404 -257 462 -235 441 -251 l 404 -310 b 565 -193 512 -305 565 -266 l 565 -69 l 383 -69 z "},"\u0137":{"ha":746,"x_min":0,"x_max":0,"o":"m 88 0 l 246 0 l 246 257 l 340 349 l 560 0 l 753 0 l 451 454 l 726 718 l 532 718 l 246 428 l 246 992 l 88 992 z m 297 -207 l 381 -207 b 318 -257 376 -235 355 -251 l 318 -310 b 479 -193 425 -305 479 -266 l 479 -69 l 297 -69 z "},"\u0138":{"ha":746,"x_min":0,"x_max":0,"o":"m 88 718 l 88 0 l 246 0 l 246 257 l 340 349 l 560 0 l 753 0 l 451 454 l 726 718 l 532 718 l 246 428 l 246 718 z "},"\u0139":{"ha":797,"x_min":0,"x_max":0,"o":"m 781 150 l 278 150 l 278 989 l 103 989 l 103 0 l 781 0 z m 133 1088 l 249 1088 l 446 1286 l 258 1286 z "},"\u013a":{"ha":335,"x_min":0,"x_max":0,"o":"m 246 989 l 89 989 l 89 0 l 246 0 z m 88 1088 l 203 1088 l 400 1286 l 213 1286 z "},"\u013b":{"ha":797,"x_min":0,"x_max":0,"o":"m 106 0 l 783 0 l 783 150 l 279 150 l 279 992 l 106 992 z m 356 -207 l 439 -207 b 376 -257 434 -235 413 -251 l 376 -310 b 538 -193 484 -305 538 -266 l 538 -69 l 356 -69 z "},"\u013c":{"ha":335,"x_min":0,"x_max":0,"o":"m 88 0 l 246 0 l 246 992 l 88 992 z m 75 -207 l 158 -207 b 96 -257 154 -235 133 -251 l 96 -310 b 257 -193 203 -305 257 -266 l 257 -69 l 75 -69 z "},"\u013d":{"ha":797,"x_min":0,"x_max":0,"o":"m 106 0 l 783 0 l 783 150 l 279 150 l 279 992 l 106 992 z m 411 793 l 517 793 l 629 992 l 456 992 z "},"\u013e":{"ha":443,"x_min":0,"x_max":0,"o":"m 88 0 l 246 0 l 246 992 l 88 992 z m 317 793 l 422 793 l 535 992 l 361 992 z "},"\u013f":{"ha":797,"x_min":0,"x_max":0,"o":"m 781 150 l 278 150 l 278 989 l 103 989 l 103 0 l 781 0 z m 606 568 l 606 718 l 447 718 l 447 568 z "},"\u0140":{"ha":504,"x_min":0,"x_max":0,"o":"m 88 0 l 246 0 l 246 992 l 88 992 z m 479 568 l 479 718 l 321 718 l 321 568 z "},"\u0141":{"ha":797,"x_min":0,"x_max":0,"o":"m 106 440 l 0 365 l 0 240 l 106 315 l 106 0 l 783 0 l 783 150 l 279 150 l 279 438 l 557 635 l 557 764 l 279 567 l 279 992 l 106 992 z "},"\u0142":{"ha":335,"x_min":0,"x_max":0,"o":"m 88 0 l 246 0 l 246 565 l 340 640 l 340 740 l 246 665 l 246 992 l 88 992 l 88 542 l -7 468 l -7 369 l 88 443 z "},"\u0143":{"ha":1003,"x_min":0,"x_max":0,"o":"m 906 989 l 739 989 l 739 260 l 283 989 l 101 989 l 101 0 l 265 0 l 265 728 l 726 0 l 906 0 z m 429 1088 l 544 1088 l 742 1286 l 554 1286 z "},"\u0144":{"ha":797,"x_min":0,"x_max":0,"o":"m 235 717 l 85 717 l 85 0 l 243 0 l 243 386 b 418 604 243 531 301 604 b 493 590 449 604 474 599 b 535 546 513 580 527 565 b 553 488 544 526 550 507 b 557 417 556 469 557 445 l 557 0 l 715 0 l 715 478 b 655 669 715 561 695 625 b 472 736 615 714 554 736 b 235 611 371 736 292 694 z m 319 818 l 435 818 l 632 1017 l 444 1017 z "},"\u0145":{"ha":1003,"x_min":0,"x_max":0,"o":"m 99 0 l 264 0 l 264 729 l 268 729 l 719 0 l 903 0 l 903 992 l 738 992 l 738 261 l 735 261 l 282 992 l 99 992 z m 396 -207 l 479 -207 b 417 -257 475 -235 454 -251 l 417 -310 b 578 -193 524 -305 578 -266 l 578 -69 l 396 -69 z "},"\u0146":{"ha":797,"x_min":0,"x_max":0,"o":"m 83 0 l 242 0 l 242 424 b 290 558 242 477 258 522 b 415 613 322 594 363 613 b 519 574 463 613 497 600 b 556 451 542 549 554 508 l 556 0 l 714 0 l 714 493 b 647 675 714 573 691 633 b 460 738 602 717 539 738 b 332 703 413 738 371 726 b 236 610 293 681 261 650 l 233 613 l 233 718 l 83 718 z m 306 -207 l 389 -207 b 326 -257 384 -235 363 -251 l 326 -310 b 488 -193 434 -305 488 -266 l 488 -69 l 306 -69 z "},"\u0147":{"ha":1003,"x_min":0,"x_max":0,"o":"m 906 989 l 739 989 l 739 260 l 283 989 l 101 989 l 101 0 l 265 0 l 265 728 l 726 0 l 906 0 z m 724 1286 l 594 1286 l 496 1163 l 399 1286 l 271 1286 l 419 1088 l 574 1088 z "},"\u0148":{"ha":797,"x_min":0,"x_max":0,"o":"m 235 717 l 85 717 l 85 0 l 243 0 l 243 386 b 418 604 243 531 301 604 b 493 590 449 604 474 599 b 535 546 513 580 527 565 b 553 488 544 526 550 507 b 557 417 556 469 557 445 l 557 0 l 715 0 l 715 478 b 655 669 715 561 695 625 b 472 736 615 714 554 736 b 235 611 371 736 292 694 z m 628 1017 l 499 1017 l 400 893 l 303 1017 l 175 1017 l 324 818 l 478 818 z "},"\u0149":{"ha":797,"x_min":0,"x_max":0,"o":"m 83 0 l 242 0 l 242 424 b 290 558 242 477 258 522 b 415 613 322 594 363 613 b 519 574 463 613 497 600 b 556 451 542 549 554 508 l 556 0 l 714 0 l 714 493 b 647 675 714 573 691 633 b 460 738 602 717 539 738 b 332 703 413 738 371 726 b 236 610 293 681 261 650 l 233 613 l 233 718 l 83 718 z m -26 992 l 57 992 b -6 942 52 964 31 947 l -6 889 b 156 1006 102 894 156 932 l 156 1129 l -26 1129 z "},"\u014a":{"ha":1003,"x_min":0,"x_max":0,"o":"m 99 992 l 99 0 l 264 0 l 264 729 l 268 729 l 738 -25 l 738 -54 b 724 -133 738 -89 733 -116 b 668 -160 716 -151 697 -160 b 640 -158 661 -160 651 -159 b 608 -154 629 -157 619 -156 l 608 -279 b 685 -285 627 -283 652 -285 b 850 -227 760 -285 815 -266 b 903 -61 885 -189 903 -133 l 903 992 l 738 992 l 738 261 l 735 261 l 282 992 z "},"\u014b":{"ha":797,"x_min":0,"x_max":0,"o":"m 83 718 l 83 0 l 242 0 l 242 424 b 254 497 242 450 246 474 b 289 558 263 520 274 541 b 343 598 304 575 322 588 b 415 613 364 608 388 613 b 521 574 463 613 498 600 b 556 451 544 549 556 508 l 556 -54 b 545 -133 556 -89 552 -116 b 492 -160 538 -151 520 -160 b 438 -154 474 -160 456 -158 l 438 -279 b 469 -283 448 -281 458 -282 b 508 -285 479 -284 493 -285 b 667 -226 582 -285 635 -265 b 714 -61 698 -187 714 -132 l 714 493 b 646 676 714 575 691 636 b 460 738 600 717 538 738 b 331 703 413 738 369 726 b 236 610 292 681 260 650 l 233 613 l 233 718 z "},"\u014c":{"ha":1056,"x_min":0,"x_max":0,"o":"m 531 1013 b 181 866 383 1013 267 964 b 53 494 96 768 53 644 b 184 119 53 340 97 215 b 528 -24 272 24 386 -24 b 871 120 669 -24 783 24 b 1003 494 959 216 1003 341 b 872 869 1003 648 959 773 b 531 1013 784 965 670 1013 z m 528 867 b 747 766 619 867 692 833 b 828 496 801 699 828 609 b 747 224 828 383 801 292 b 531 122 692 156 620 122 b 309 224 437 122 363 156 b 228 497 255 291 228 382 b 310 766 228 609 255 699 b 528 867 364 833 437 867 z m 732 1136 l 732 1226 l 332 1226 l 332 1136 z "},"\u014d":{"ha":824,"x_min":0,"x_max":0,"o":"m 415 738 b 149 635 304 738 216 703 b 50 358 83 566 50 474 b 149 81 50 242 83 149 b 415 -22 214 12 303 -22 b 677 81 525 -22 613 12 b 774 358 741 149 774 242 b 676 635 774 474 741 566 b 415 738 612 703 525 738 z m 413 613 b 560 545 475 613 525 590 b 614 360 596 500 614 438 b 560 170 614 279 596 216 b 414 101 525 124 476 101 b 264 169 350 101 300 124 b 210 358 228 215 210 278 b 264 544 210 437 228 499 b 413 613 300 590 350 613 z m 617 867 l 617 957 l 217 957 l 217 867 z "},"\u014e":{"ha":1056,"x_min":0,"x_max":0,"o":"m 531 1013 b 181 866 383 1013 267 964 b 53 494 96 768 53 644 b 184 119 53 340 97 215 b 528 -24 272 24 386 -24 b 871 120 669 -24 783 24 b 1003 494 959 216 1003 341 b 872 869 1003 648 959 773 b 531 1013 784 965 670 1013 z m 528 867 b 747 766 619 867 692 833 b 828 496 801 699 828 609 b 747 224 828 383 801 292 b 531 122 692 156 620 122 b 309 224 437 122 363 156 b 228 497 255 291 228 382 b 310 766 228 609 255 699 b 528 867 364 833 437 867 z m 301 1285 b 367 1139 307 1221 329 1172 b 519 1089 405 1106 456 1089 b 678 1138 585 1089 638 1105 b 750 1285 719 1171 743 1220 l 671 1285 b 622 1206 663 1250 647 1224 b 531 1179 597 1188 567 1179 b 382 1285 445 1179 396 1214 z "},"\u014f":{"ha":824,"x_min":0,"x_max":0,"o":"m 415 738 b 149 635 304 738 216 703 b 50 358 83 566 50 474 b 149 81 50 242 83 149 b 415 -22 214 12 303 -22 b 677 81 525 -22 613 12 b 774 358 741 149 774 242 b 676 635 774 474 741 566 b 415 738 612 703 525 738 z m 413 613 b 560 545 475 613 525 590 b 614 360 596 500 614 438 b 560 170 614 279 596 216 b 414 101 525 124 476 101 b 264 169 350 101 300 124 b 210 358 228 215 210 278 b 264 544 210 437 228 499 b 413 613 300 590 350 613 z m 190 1015 b 256 869 196 951 218 903 b 408 819 294 836 344 819 b 567 869 474 819 527 836 b 639 1015 608 902 631 950 l 560 1015 b 511 937 552 981 536 955 b 419 910 486 919 456 910 b 271 1015 334 910 285 945 z "},"\u0150":{"ha":1056,"x_min":0,"x_max":0,"o":"m 531 1013 b 181 866 383 1013 267 964 b 53 494 96 768 53 644 b 184 119 53 340 97 215 b 528 -24 272 24 386 -24 b 871 120 669 -24 783 24 b 1003 494 959 216 1003 341 b 872 869 1003 648 959 773 b 531 1013 784 965 670 1013 z m 528 867 b 747 766 619 867 692 833 b 828 496 801 699 828 609 b 747 224 828 383 801 292 b 531 122 692 156 620 122 b 309 224 437 122 363 156 b 228 497 255 291 228 382 b 310 766 228 609 255 699 b 528 867 364 833 437 867 z m 604 1088 l 718 1088 l 918 1286 l 729 1286 z m 328 1088 l 442 1088 l 642 1286 l 453 1286 z "},"\u0151":{"ha":824,"x_min":0,"x_max":0,"o":"m 415 738 b 149 635 304 738 216 703 b 50 358 83 566 50 474 b 149 81 50 242 83 149 b 415 -22 214 12 303 -22 b 677 81 525 -22 613 12 b 774 358 741 149 774 242 b 676 635 774 474 741 566 b 415 738 612 703 525 738 z m 413 613 b 560 545 475 613 525 590 b 614 360 596 500 614 438 b 560 170 614 279 596 216 b 414 101 525 124 476 101 b 264 169 350 101 300 124 b 210 358 228 215 210 278 b 264 544 210 437 228 499 b 413 613 300 590 350 613 z m 483 818 l 597 818 l 797 1017 l 608 1017 z m 207 818 l 321 818 l 521 1017 l 332 1017 z "},"\u0152":{"ha":1518,"x_min":0,"x_max":0,"o":"m 932 842 l 1451 842 l 1451 992 l 774 992 l 774 913 b 524 1015 713 981 630 1015 b 183 863 381 1015 268 965 b 57 492 99 762 57 638 b 108 236 57 398 74 313 b 265 49 143 159 195 97 b 513 -24 336 0 418 -24 b 774 89 623 -24 710 14 l 774 0 l 1461 0 l 1461 150 l 932 150 l 932 440 l 1408 440 l 1408 582 l 932 582 z m 767 304 b 701 176 767 258 745 215 b 529 118 658 138 600 118 b 360 175 463 118 406 137 b 260 315 313 213 280 259 b 231 494 241 370 231 430 b 260 675 231 559 241 619 b 360 816 280 731 313 778 b 529 874 406 854 463 874 b 705 815 605 874 664 854 b 767 674 746 776 767 729 z "},"\u0153":{"ha":1260,"x_min":0,"x_max":0,"o":"m 390 613 b 528 538 452 613 498 588 b 574 364 559 489 574 431 b 531 180 574 291 559 229 b 390 106 503 130 456 106 b 249 180 325 106 278 130 b 207 364 221 229 207 291 b 252 538 207 431 222 489 b 390 613 282 588 328 613 z m 882 613 b 1068 422 999 613 1061 549 l 701 422 b 754 557 703 475 721 520 b 882 613 788 594 830 613 z m 1226 318 b 1209 478 1226 376 1221 430 b 1155 611 1197 527 1179 571 b 1051 704 1130 651 1096 682 b 894 738 1007 726 955 738 b 643 617 779 738 695 697 b 392 738 598 697 514 738 b 141 629 286 738 203 701 b 49 361 79 557 49 468 b 134 89 49 252 77 161 b 379 -19 191 17 273 -19 b 635 113 502 -19 588 25 b 892 -19 678 25 764 -19 b 1103 44 976 -19 1047 2 b 1218 228 1160 86 1199 147 l 1060 228 b 1000 138 1052 189 1032 159 b 889 106 968 116 931 106 b 750 165 829 106 782 125 b 701 318 718 205 701 256 z "},"\u0154":{"ha":978,"x_min":0,"x_max":0,"o":"m 103 989 l 103 0 l 275 0 l 275 408 l 506 408 b 672 363 587 408 642 393 b 722 197 701 333 718 278 b 724 168 722 192 723 182 b 725 139 725 154 725 144 l 728 114 l 731 89 b 733 67 731 83 731 76 b 736 47 734 59 735 52 b 740 30 737 41 738 36 b 747 13 742 24 744 18 b 754 0 749 8 751 4 l 940 0 b 928 15 936 5 931 10 b 918 35 924 21 921 28 b 911 56 915 43 913 50 b 905 83 909 62 907 71 b 900 109 903 94 901 103 b 897 140 899 115 898 125 b 894 172 895 155 894 166 b 891 208 893 178 892 190 b 888 246 890 227 888 239 b 881 306 886 271 884 291 b 868 360 879 322 875 339 b 844 410 862 380 853 397 b 803 446 834 423 820 435 b 740 471 785 457 764 465 b 861 562 792 489 832 520 b 904 714 890 604 904 655 b 811 923 904 809 873 879 b 571 989 749 967 669 989 z m 275 847 l 526 847 b 603 842 556 847 582 845 b 667 821 625 838 647 831 b 715 774 688 811 704 795 b 732 696 726 753 732 727 b 713 611 732 662 726 633 b 659 563 701 589 683 573 b 589 543 635 553 612 547 b 504 538 566 539 538 538 l 275 538 z m 397 1088 l 513 1088 l 710 1286 l 522 1286 z "},"\u0155":{"ha":489,"x_min":0,"x_max":0,"o":"m 489 731 l 458 733 b 218 574 349 733 269 680 l 218 717 l 69 717 l 69 0 l 226 0 l 226 315 b 433 583 226 494 295 583 b 489 579 443 583 461 582 z m 114 818 l 229 818 l 426 1017 l 239 1017 z "},"\u0156":{"ha":978,"x_min":0,"x_max":0,"o":"m 106 0 l 279 0 l 279 408 l 535 408 b 691 349 612 408 664 388 b 732 146 718 309 732 241 b 758 0 732 77 741 29 l 944 0 b 890 261 908 39 890 126 b 845 415 890 331 875 382 b 743 471 815 447 781 466 l 743 474 b 784 492 757 478 771 484 b 836 530 797 499 815 512 b 888 607 857 548 875 574 b 907 724 900 640 907 679 b 824 922 907 809 879 875 b 579 992 768 968 687 992 l 106 992 z m 279 850 l 561 850 b 687 818 614 850 656 839 b 733 699 718 797 733 757 b 564 540 733 593 677 540 l 279 540 z m 401 -207 l 485 -207 b 422 -257 480 -235 459 -251 l 422 -310 b 583 -193 530 -305 583 -266 l 583 -69 l 401 -69 z "},"\u0157":{"ha":489,"x_min":0,"x_max":0,"o":"m 83 0 l 242 0 l 242 342 b 297 522 242 419 260 479 b 436 588 334 566 381 588 b 504 581 456 588 479 585 l 504 733 b 444 738 474 736 454 738 b 312 688 398 738 354 721 b 235 579 270 655 244 619 l 232 579 l 232 718 l 83 718 z m 71 -207 l 154 -207 b 92 -257 150 -235 129 -251 l 92 -310 b 253 -193 199 -305 253 -266 l 253 -69 l 71 -69 z "},"\u0158":{"ha":978,"x_min":0,"x_max":0,"o":"m 103 989 l 103 0 l 275 0 l 275 408 l 506 408 b 672 363 587 408 642 393 b 722 197 701 333 718 278 b 724 168 722 192 723 182 b 725 139 725 154 725 144 l 728 114 l 731 89 b 733 67 731 83 731 76 b 736 47 734 59 735 52 b 740 30 737 41 738 36 b 747 13 742 24 744 18 b 754 0 749 8 751 4 l 940 0 b 928 15 936 5 931 10 b 918 35 924 21 921 28 b 911 56 915 43 913 50 b 905 83 909 62 907 71 b 900 109 903 94 901 103 b 897 140 899 115 898 125 b 894 172 895 155 894 166 b 891 208 893 178 892 190 b 888 246 890 227 888 239 b 881 306 886 271 884 291 b 868 360 879 322 875 339 b 844 410 862 380 853 397 b 803 446 834 423 820 435 b 740 471 785 457 764 465 b 861 562 792 489 832 520 b 904 714 890 604 904 655 b 811 923 904 809 873 879 b 571 989 749 967 669 989 z m 275 847 l 526 847 b 603 842 556 847 582 845 b 667 821 625 838 647 831 b 715 774 688 811 704 795 b 732 696 726 753 732 727 b 713 611 732 662 726 633 b 659 563 701 589 683 573 b 589 543 635 553 612 547 b 504 538 566 539 538 538 l 275 538 z m 693 1286 l 564 1286 l 465 1163 l 368 1286 l 240 1286 l 389 1088 l 543 1088 z "},"\u0159":{"ha":489,"x_min":0,"x_max":0,"o":"m 489 731 l 458 733 b 218 574 349 733 269 680 l 218 717 l 69 717 l 69 0 l 226 0 l 226 315 b 433 583 226 494 295 583 b 489 579 443 583 461 582 z m 519 1017 l 390 1017 l 292 893 l 194 1017 l 67 1017 l 215 818 l 369 818 z "},"\u015a":{"ha":900,"x_min":0,"x_max":0,"o":"m 815 697 b 708 932 812 803 776 881 b 446 1008 641 983 553 1008 b 180 930 335 1008 246 982 b 81 719 114 878 81 807 l 81 700 b 210 507 86 613 129 549 b 453 429 249 487 330 461 b 468 425 456 428 462 427 b 589 390 525 410 566 399 b 653 348 612 382 634 368 b 683 271 673 328 683 302 b 627 156 683 222 665 184 b 471 115 590 129 538 115 b 286 167 395 115 333 133 b 215 328 239 202 215 256 l 44 328 b 160 67 44 213 83 126 b 461 -22 237 7 337 -22 b 576 -12 501 -22 539 -19 b 683 22 613 -5 649 6 b 772 81 718 38 747 58 b 832 169 797 105 817 134 b 854 288 847 205 854 244 b 722 508 854 388 810 461 b 497 583 682 531 607 556 b 446 597 485 586 468 591 b 283 651 362 619 307 637 b 246 733 258 666 246 694 b 296 834 246 776 263 809 b 435 871 329 859 375 871 b 650 697 568 871 640 813 z m 383 1088 l 499 1088 l 696 1286 l 508 1286 z "},"\u015b":{"ha":721,"x_min":0,"x_max":0,"o":"m 651 508 b 567 681 651 585 623 643 b 351 738 511 719 439 738 b 136 680 260 738 188 718 b 58 521 84 641 58 588 b 157 364 58 448 91 395 b 351 306 185 350 250 331 b 360 303 354 305 357 304 b 367 301 363 303 365 302 l 375 300 b 433 285 399 294 418 290 b 478 267 447 281 462 275 b 512 239 494 259 505 250 b 522 199 519 228 522 214 b 480 123 522 167 508 142 b 368 94 452 104 414 94 b 194 229 261 94 203 139 l 43 229 b 131 43 47 148 76 86 b 365 -21 185 0 263 -21 b 593 43 461 -21 537 0 b 678 215 650 86 678 143 b 659 297 678 246 672 273 b 618 352 647 320 633 339 b 549 391 603 366 580 378 b 478 416 518 403 495 412 b 400 435 462 420 436 426 b 364 442 392 437 380 439 b 330 450 348 446 337 448 b 301 458 323 452 313 454 b 276 466 289 461 281 464 b 256 475 271 468 264 471 b 238 486 247 479 241 482 b 227 499 235 490 231 494 b 219 517 223 504 220 510 b 217 539 217 523 217 531 b 250 600 217 565 228 585 b 344 622 272 615 304 622 b 500 508 439 622 491 584 z m 267 818 l 382 818 l 579 1017 l 392 1017 z "},"\u015c":{"ha":900,"x_min":0,"x_max":0,"o":"m 815 697 b 708 932 812 803 776 881 b 446 1008 641 983 553 1008 b 180 930 335 1008 246 982 b 81 719 114 878 81 807 l 81 700 b 210 507 86 613 129 549 b 453 429 249 487 330 461 b 468 425 456 428 462 427 b 589 390 525 410 566 399 b 653 348 612 382 634 368 b 683 271 673 328 683 302 b 627 156 683 222 665 184 b 471 115 590 129 538 115 b 286 167 395 115 333 133 b 215 328 239 202 215 256 l 44 328 b 160 67 44 213 83 126 b 461 -22 237 7 337 -22 b 576 -12 501 -22 539 -19 b 683 22 613 -5 649 6 b 772 81 718 38 747 58 b 832 169 797 105 817 134 b 854 288 847 205 854 244 b 722 508 854 388 810 461 b 497 583 682 531 607 556 b 446 597 485 586 468 591 b 283 651 362 619 307 637 b 246 733 258 666 246 694 b 296 834 246 776 263 809 b 435 871 329 859 375 871 b 650 697 568 871 640 813 z m 458 1213 l 557 1088 l 686 1088 l 536 1286 l 382 1286 l 233 1088 l 361 1088 z "},"\u015d":{"ha":721,"x_min":0,"x_max":0,"o":"m 651 508 b 567 681 651 585 623 643 b 351 738 511 719 439 738 b 136 680 260 738 188 718 b 58 521 84 641 58 588 b 157 364 58 448 91 395 b 351 306 185 350 250 331 b 360 303 354 305 357 304 b 367 301 363 303 365 302 l 375 300 b 433 285 399 294 418 290 b 478 267 447 281 462 275 b 512 239 494 259 505 250 b 522 199 519 228 522 214 b 480 123 522 167 508 142 b 368 94 452 104 414 94 b 194 229 261 94 203 139 l 43 229 b 131 43 47 148 76 86 b 365 -21 185 0 263 -21 b 593 43 461 -21 537 0 b 678 215 650 86 678 143 b 659 297 678 246 672 273 b 618 352 647 320 633 339 b 549 391 603 366 580 378 b 478 416 518 403 495 412 b 400 435 462 420 436 426 b 364 442 392 437 380 439 b 330 450 348 446 337 448 b 301 458 323 452 313 454 b 276 466 289 461 281 464 b 256 475 271 468 264 471 b 238 486 247 479 241 482 b 227 499 235 490 231 494 b 219 517 223 504 220 510 b 217 539 217 523 217 531 b 250 600 217 565 228 585 b 344 622 272 615 304 622 b 500 508 439 622 491 584 z m 369 943 l 468 818 l 597 818 l 447 1017 l 293 1017 l 144 818 l 272 818 z "},"\u015e":{"ha":900,"x_min":0,"x_max":0,"o":"m 278 -278 b 421 -310 317 -299 364 -310 b 539 -278 466 -310 506 -299 b 589 -182 572 -256 589 -225 b 553 -105 589 -149 577 -123 b 471 -78 529 -87 501 -78 b 425 -83 450 -78 435 -80 l 424 -82 l 468 -24 b 604 -6 516 -22 562 -16 b 785 94 678 11 738 44 b 854 288 831 144 854 209 b 804 441 854 343 838 394 b 661 540 771 488 723 521 b 572 565 646 545 616 553 b 440 600 527 577 483 589 b 375 617 398 611 376 617 b 257 744 296 640 257 682 b 312 843 257 790 275 823 b 439 874 348 863 391 874 b 653 699 572 874 644 815 l 826 699 b 717 931 826 798 790 875 b 446 1015 645 987 554 1015 b 191 940 348 1015 263 990 b 83 724 119 889 83 817 b 303 472 83 594 156 510 b 419 442 334 464 373 454 b 527 414 465 431 501 421 b 599 390 553 406 577 399 b 681 268 653 370 681 329 b 629 162 681 226 663 191 b 471 118 595 133 542 118 b 289 170 396 118 335 135 b 219 331 243 205 219 258 l 46 331 b 116 113 47 242 70 169 b 300 -3 162 57 223 19 b 404 -21 331 -12 366 -18 l 329 -122 l 360 -149 b 414 -135 375 -139 393 -135 b 459 -149 431 -135 447 -139 b 478 -187 472 -158 478 -171 b 393 -244 478 -225 450 -244 b 303 -222 365 -244 335 -237 z "},"\u015f":{"ha":721,"x_min":0,"x_max":0,"o":"m 192 -278 b 335 -310 231 -299 278 -310 b 453 -278 380 -310 419 -299 b 503 -182 486 -256 503 -225 b 467 -105 503 -149 491 -123 b 385 -78 443 -87 415 -78 b 339 -83 364 -78 349 -80 l 338 -82 l 386 -18 b 475 -7 421 -16 451 -12 b 625 69 536 7 586 32 b 683 214 664 106 683 155 b 665 302 683 248 677 278 b 610 363 652 327 634 347 b 538 399 586 378 562 391 b 451 424 515 408 486 416 l 403 433 b 353 444 380 438 363 441 b 312 455 344 446 330 450 b 272 469 294 460 281 465 b 244 486 264 474 255 480 b 224 509 234 493 227 500 b 218 539 220 518 218 528 b 242 585 218 558 226 574 b 293 608 259 597 275 604 b 349 613 311 611 329 613 b 494 517 433 613 481 581 l 660 517 b 564 684 651 593 619 648 b 360 738 508 720 440 738 b 257 727 325 738 290 734 b 161 694 224 720 192 709 b 88 630 131 680 106 658 b 60 532 69 602 60 569 b 78 441 60 497 66 466 b 133 380 91 416 109 395 b 204 344 156 365 180 353 b 290 319 228 335 257 327 b 339 309 301 317 318 313 b 388 299 360 305 376 301 b 429 288 399 296 413 292 b 468 274 446 283 459 278 b 497 256 477 269 487 263 b 517 232 506 249 513 241 b 525 200 522 223 524 212 b 511 151 526 181 521 164 b 469 122 501 137 487 128 b 417 109 451 116 434 111 b 365 106 401 107 384 106 b 203 231 265 106 211 147 l 44 231 b 97 79 45 169 63 119 b 236 -4 130 39 177 12 b 321 -18 259 -11 288 -15 l 243 -122 l 274 -149 b 328 -135 288 -139 306 -135 b 373 -149 345 -135 360 -139 b 392 -187 385 -158 392 -171 b 307 -244 392 -225 363 -244 b 217 -222 279 -244 249 -237 z "},"\u0160":{"ha":900,"x_min":0,"x_max":0,"o":"m 815 697 b 708 932 812 803 776 881 b 446 1008 641 983 553 1008 b 180 930 335 1008 246 982 b 81 719 114 878 81 807 l 81 700 b 210 507 86 613 129 549 b 453 429 249 487 330 461 b 468 425 456 428 462 427 b 589 390 525 410 566 399 b 653 348 612 382 634 368 b 683 271 673 328 683 302 b 627 156 683 222 665 184 b 471 115 590 129 538 115 b 286 167 395 115 333 133 b 215 328 239 202 215 256 l 44 328 b 160 67 44 213 83 126 b 461 -22 237 7 337 -22 b 576 -12 501 -22 539 -19 b 683 22 613 -5 649 6 b 772 81 718 38 747 58 b 832 169 797 105 817 134 b 854 288 847 205 854 244 b 722 508 854 388 810 461 b 497 583 682 531 607 556 b 446 597 485 586 468 591 b 283 651 362 619 307 637 b 246 733 258 666 246 694 b 296 834 246 776 263 809 b 435 871 329 859 375 871 b 650 697 568 871 640 813 z m 682 1286 l 553 1286 l 454 1163 l 357 1286 l 229 1286 l 378 1088 l 532 1088 z "},"\u0161":{"ha":721,"x_min":0,"x_max":0,"o":"m 651 508 b 567 681 651 585 623 643 b 351 738 511 719 439 738 b 136 680 260 738 188 718 b 58 521 84 641 58 588 b 157 364 58 448 91 395 b 351 306 185 350 250 331 b 360 303 354 305 357 304 b 367 301 363 303 365 302 l 375 300 b 433 285 399 294 418 290 b 478 267 447 281 462 275 b 512 239 494 259 505 250 b 522 199 519 228 522 214 b 480 123 522 167 508 142 b 368 94 452 104 414 94 b 194 229 261 94 203 139 l 43 229 b 131 43 47 148 76 86 b 365 -21 185 0 263 -21 b 593 43 461 -21 537 0 b 678 215 650 86 678 143 b 659 297 678 246 672 273 b 618 352 647 320 633 339 b 549 391 603 366 580 378 b 478 416 518 403 495 412 b 400 435 462 420 436 426 b 364 442 392 437 380 439 b 330 450 348 446 337 448 b 301 458 323 452 313 454 b 276 466 289 461 281 464 b 256 475 271 468 264 471 b 238 486 247 479 241 482 b 227 499 235 490 231 494 b 219 517 223 504 220 510 b 217 539 217 523 217 531 b 250 600 217 565 228 585 b 344 622 272 615 304 622 b 500 508 439 622 491 584 z m 593 1017 l 464 1017 l 365 893 l 268 1017 l 140 1017 l 289 818 l 443 818 z "},"\u0162":{"ha":824,"x_min":0,"x_max":0,"o":"m 11 842 l 325 842 l 325 0 l 499 0 l 499 842 l 814 842 l 814 992 l 11 992 z m 319 -207 l 403 -207 b 340 -257 398 -235 377 -251 l 340 -310 b 501 -193 448 -305 501 -266 l 501 -69 l 319 -69 z "},"\u0163":{"ha":463,"x_min":0,"x_max":0,"o":"m 11 600 l 131 600 l 131 176 b 173 35 132 111 147 64 b 329 -7 199 7 251 -7 b 432 1 351 -7 386 -4 l 432 124 b 365 118 417 120 395 118 b 302 140 332 118 311 125 b 289 217 293 154 289 180 l 289 600 l 432 600 l 432 718 l 289 718 l 289 933 l 131 933 l 131 718 l 11 718 z m 193 -207 l 276 -207 b 214 -257 272 -235 251 -251 l 214 -310 b 375 -193 321 -305 375 -266 l 375 -69 l 193 -69 z "},"\u0164":{"ha":824,"x_min":0,"x_max":0,"o":"m 814 989 l 10 989 l 10 839 l 325 839 l 325 0 l 499 0 l 499 839 l 814 839 z m 640 1286 l 511 1286 l 413 1163 l 315 1286 l 188 1286 l 336 1088 l 490 1088 z "},"\u0165":{"ha":543,"x_min":0,"x_max":0,"o":"m 417 793 l 522 793 l 635 992 l 461 992 z m 11 600 l 131 600 l 131 176 b 173 35 132 111 147 64 b 329 -7 199 7 251 -7 b 432 1 351 -7 386 -4 l 432 124 b 365 118 417 120 395 118 b 302 140 332 118 311 125 b 289 217 293 154 289 180 l 289 600 l 432 600 l 432 718 l 289 718 l 289 933 l 131 933 l 131 718 l 11 718 z "},"\u0166":{"ha":824,"x_min":0,"x_max":0,"o":"m 11 842 l 325 842 l 325 650 l 104 650 l 104 560 l 325 560 l 325 0 l 499 0 l 499 560 l 726 560 l 726 650 l 499 650 l 499 842 l 814 842 l 814 992 l 11 992 z "},"\u0167":{"ha":463,"x_min":0,"x_max":0,"o":"m 11 600 l 131 600 l 131 481 l 0 481 l 0 390 l 131 390 l 131 176 b 173 35 132 111 147 64 b 329 -7 199 7 251 -7 b 432 1 351 -7 386 -4 l 432 124 b 365 118 417 120 395 118 b 302 140 332 118 311 125 b 289 217 293 154 289 180 l 289 390 l 444 390 l 444 481 l 289 481 l 289 600 l 432 600 l 432 718 l 289 718 l 289 933 l 131 933 l 131 718 l 11 718 z "},"\u0168":{"ha":1003,"x_min":0,"x_max":0,"o":"m 907 989 l 733 989 l 733 406 b 725 290 733 359 731 321 b 694 203 719 259 709 230 b 626 143 680 176 657 156 b 507 124 595 130 555 124 b 269 351 349 124 269 200 l 269 989 l 96 989 l 96 386 b 195 81 96 249 129 147 b 504 -19 261 14 364 -19 b 907 383 773 -19 907 115 z m 672 1269 b 603 1208 662 1229 639 1208 b 517 1233 584 1208 556 1217 b 404 1261 472 1252 435 1261 b 308 1213 365 1261 333 1245 b 260 1104 282 1181 266 1145 l 339 1104 b 399 1161 346 1142 366 1161 b 493 1136 422 1161 453 1153 b 596 1110 533 1119 567 1110 b 704 1157 642 1110 678 1125 b 750 1269 726 1181 742 1219 z "},"\u0169":{"ha":797,"x_min":0,"x_max":0,"o":"m 713 717 l 554 717 l 554 338 b 513 177 554 273 540 219 b 382 114 485 135 441 114 b 316 125 356 114 334 118 b 274 151 298 132 284 141 b 252 195 265 162 257 176 b 243 247 247 214 244 231 b 242 307 242 262 242 282 l 242 717 l 83 717 l 83 242 b 147 48 83 157 104 93 b 328 -19 189 3 249 -19 b 564 107 425 -19 504 23 l 564 0 l 713 0 z m 568 1000 b 499 939 558 959 535 939 b 413 964 480 939 451 947 b 300 992 368 982 331 992 b 203 944 261 992 229 976 b 156 835 178 912 162 875 l 235 835 b 294 892 242 873 262 892 b 389 867 318 892 349 883 b 492 840 429 849 463 840 b 600 888 538 840 574 856 b 646 1000 622 912 638 949 z "},"\u016a":{"ha":1003,"x_min":0,"x_max":0,"o":"m 907 989 l 733 989 l 733 406 b 725 290 733 359 731 321 b 694 203 719 259 709 230 b 626 143 680 176 657 156 b 507 124 595 130 555 124 b 269 351 349 124 269 200 l 269 989 l 96 989 l 96 386 b 195 81 96 249 129 147 b 504 -19 261 14 364 -19 b 907 383 773 -19 907 115 z m 703 1136 l 703 1226 l 303 1226 l 303 1136 z "},"\u016b":{"ha":797,"x_min":0,"x_max":0,"o":"m 713 717 l 554 717 l 554 338 b 513 177 554 273 540 219 b 382 114 485 135 441 114 b 316 125 356 114 334 118 b 274 151 298 132 284 141 b 252 195 265 162 257 176 b 243 247 247 214 244 231 b 242 307 242 262 242 282 l 242 717 l 83 717 l 83 242 b 147 48 83 157 104 93 b 328 -19 189 3 249 -19 b 564 107 425 -19 504 23 l 564 0 l 713 0 z m 606 867 l 606 957 l 206 957 l 206 867 z "},"\u016c":{"ha":1003,"x_min":0,"x_max":0,"o":"m 907 989 l 733 989 l 733 406 b 725 290 733 359 731 321 b 694 203 719 259 709 230 b 626 143 680 176 657 156 b 507 124 595 130 555 124 b 269 351 349 124 269 200 l 269 989 l 96 989 l 96 386 b 195 81 96 249 129 147 b 504 -19 261 14 364 -19 b 907 383 773 -19 907 115 z m 279 1285 b 344 1139 285 1221 306 1172 b 497 1089 382 1106 433 1089 b 656 1138 563 1089 616 1105 b 728 1285 697 1171 720 1220 l 649 1285 b 600 1206 641 1250 625 1224 b 508 1179 575 1188 544 1179 b 360 1285 423 1179 374 1214 z "},"\u016d":{"ha":797,"x_min":0,"x_max":0,"o":"m 713 717 l 554 717 l 554 338 b 513 177 554 273 540 219 b 382 114 485 135 441 114 b 316 125 356 114 334 118 b 274 151 298 132 284 141 b 252 195 265 162 257 176 b 243 247 247 214 244 231 b 242 307 242 262 242 282 l 242 717 l 83 717 l 83 242 b 147 48 83 157 104 93 b 328 -19 189 3 249 -19 b 564 107 425 -19 504 23 l 564 0 l 713 0 z m 182 1015 b 247 869 188 951 209 903 b 400 819 285 836 336 819 b 559 869 466 819 519 836 b 631 1015 599 902 623 950 l 551 1015 b 503 937 544 981 528 955 b 411 910 478 919 447 910 b 263 1015 326 910 276 945 z "},"\u016e":{"ha":1003,"x_min":0,"x_max":0,"o":"m 907 989 l 733 989 l 733 406 b 725 290 733 359 731 321 b 694 203 719 259 709 230 b 626 143 680 176 657 156 b 507 124 595 130 555 124 b 269 351 349 124 269 200 l 269 989 l 96 989 l 96 386 b 195 81 96 249 129 147 b 504 -19 261 14 364 -19 b 907 383 773 -19 907 115 z m 421 1186 b 445 1247 421 1211 429 1231 b 504 1271 461 1263 481 1271 b 564 1247 528 1271 548 1263 b 588 1186 580 1231 588 1211 b 564 1126 588 1162 580 1142 b 504 1101 548 1109 528 1101 b 445 1126 481 1101 461 1109 b 421 1186 429 1142 421 1162 z m 504 1043 b 606 1083 544 1043 578 1056 b 649 1186 634 1110 649 1144 b 606 1289 649 1228 634 1262 b 504 1329 578 1316 544 1329 b 402 1289 464 1329 430 1316 b 360 1186 374 1262 360 1228 b 401 1083 360 1144 374 1110 b 504 1043 429 1056 463 1043 z "},"\u016f":{"ha":797,"x_min":0,"x_max":0,"o":"m 713 717 l 554 717 l 554 338 b 513 177 554 273 540 219 b 382 114 485 135 441 114 b 316 125 356 114 334 118 b 274 151 298 132 284 141 b 252 195 265 162 257 176 b 243 247 247 214 244 231 b 242 307 242 262 242 282 l 242 717 l 83 717 l 83 242 b 147 48 83 157 104 93 b 328 -19 189 3 249 -19 b 564 107 425 -19 504 23 l 564 0 l 713 0 z m 322 936 b 347 997 322 961 330 981 b 406 1021 363 1013 382 1021 b 465 997 430 1021 450 1013 b 489 936 481 981 489 961 b 465 876 489 912 481 892 b 406 851 450 859 430 851 b 347 876 382 851 363 859 b 322 936 330 892 322 912 z m 406 793 b 508 833 445 793 479 806 b 550 936 536 860 550 894 b 508 1039 550 978 536 1012 b 406 1079 479 1066 445 1079 b 303 1039 366 1079 332 1066 b 261 936 275 1012 261 978 b 303 833 261 894 275 860 b 406 793 331 806 365 793 z "},"\u0170":{"ha":1003,"x_min":0,"x_max":0,"o":"m 907 989 l 733 989 l 733 406 b 725 290 733 359 731 321 b 694 203 719 259 709 230 b 626 143 680 176 657 156 b 507 124 595 130 555 124 b 269 351 349 124 269 200 l 269 989 l 96 989 l 96 386 b 195 81 96 249 129 147 b 504 -19 261 14 364 -19 b 907 383 773 -19 907 115 z m 582 1088 l 696 1088 l 896 1286 l 707 1286 z m 306 1088 l 419 1088 l 619 1286 l 431 1286 z "},"\u0171":{"ha":797,"x_min":0,"x_max":0,"o":"m 713 717 l 554 717 l 554 338 b 513 177 554 273 540 219 b 382 114 485 135 441 114 b 316 125 356 114 334 118 b 274 151 298 132 284 141 b 252 195 265 162 257 176 b 243 247 247 214 244 231 b 242 307 242 262 242 282 l 242 717 l 83 717 l 83 242 b 147 48 83 157 104 93 b 328 -19 189 3 249 -19 b 564 107 425 -19 504 23 l 564 0 l 713 0 z m 478 818 l 592 818 l 792 1017 l 603 1017 z m 201 818 l 315 818 l 515 1017 l 326 1017 z "},"\u0172":{"ha":1003,"x_min":0,"x_max":0,"o":"m 94 357 b 158 126 94 263 116 187 b 335 0 200 66 259 24 b 471 -22 380 -14 425 -21 b 418 -64 448 -39 430 -53 b 350 -185 373 -105 350 -145 b 367 -254 350 -212 356 -236 b 412 -292 379 -273 394 -285 b 456 -306 430 -299 445 -304 b 490 -310 468 -309 479 -310 b 636 -206 569 -310 618 -275 l 579 -193 b 507 -240 560 -225 536 -240 b 469 -224 492 -240 479 -235 b 453 -179 458 -212 453 -198 b 518 -54 453 -139 475 -98 b 556 -21 529 -44 542 -33 b 668 0 596 -18 634 -11 b 845 126 744 24 803 66 b 908 357 887 187 908 263 l 908 992 l 735 992 l 735 414 b 732 332 735 381 734 353 b 717 256 730 311 725 285 b 681 188 708 227 696 204 b 612 144 665 171 642 156 b 501 126 582 132 545 126 b 391 144 458 126 421 132 b 322 188 361 156 338 171 b 286 256 306 204 294 227 b 271 332 278 285 273 311 b 268 414 269 353 268 381 l 268 992 l 94 992 z "},"\u0173":{"ha":797,"x_min":0,"x_max":0,"o":"m 714 0 l 714 718 l 556 718 l 556 301 b 379 106 556 171 497 106 b 276 146 334 106 300 119 b 242 278 253 173 242 217 l 242 718 l 83 718 l 83 263 b 147 50 83 167 105 96 b 351 -19 190 4 258 -19 b 469 14 391 -19 430 -8 b 556 100 507 36 536 65 l 558 100 l 558 0 b 408 -185 458 -63 408 -125 b 425 -254 408 -212 414 -236 b 467 -292 436 -273 450 -285 b 509 -306 483 -299 497 -304 b 542 -310 521 -309 531 -310 b 627 -285 572 -310 601 -302 b 679 -206 653 -269 671 -243 l 625 -193 b 557 -240 606 -225 584 -240 b 521 -224 543 -240 531 -235 b 506 -179 511 -212 506 -198 b 531 -99 506 -151 514 -125 b 629 0 548 -74 581 -41 z "},"\u0174":{"ha":1311,"x_min":0,"x_max":0,"o":"m 11 989 l 272 0 l 451 0 l 656 760 l 856 0 l 1032 0 l 1306 989 l 1129 989 l 943 236 l 747 989 l 571 989 l 368 236 l 188 989 z m 656 1213 l 754 1088 l 883 1088 l 733 1286 l 579 1286 l 431 1088 l 558 1088 z "},"\u0175":{"ha":1081,"x_min":0,"x_max":0,"o":"m 17 717 l 239 0 l 406 0 l 539 532 l 674 0 l 836 0 l 1063 717 l 901 717 l 753 179 l 621 717 l 461 717 l 326 179 l 185 717 z m 547 943 l 646 818 l 775 818 l 625 1017 l 471 1017 l 322 818 l 450 818 z "},"\u0176":{"ha":900,"x_min":0,"x_max":0,"o":"m 910 989 l 715 989 l 456 551 l 193 989 l -7 989 l 367 393 l 367 0 l 538 0 l 538 393 z m 458 1213 l 557 1088 l 686 1088 l 536 1286 l 382 1286 l 233 1088 l 361 1088 z "},"\u0177":{"ha":721,"x_min":0,"x_max":0,"o":"m 715 717 l 550 717 l 369 189 l 178 717 l 4 717 l 279 21 b 271 -7 278 17 275 8 b 260 -40 266 -22 263 -33 b 248 -69 257 -47 253 -56 b 232 -98 243 -81 238 -91 b 213 -120 226 -105 220 -112 b 188 -137 205 -128 197 -134 b 157 -142 178 -140 168 -142 b 74 -132 135 -142 107 -138 l 74 -265 b 183 -274 117 -271 154 -274 b 233 -269 201 -274 217 -272 b 274 -258 248 -266 262 -262 b 309 -237 286 -253 297 -247 b 338 -212 321 -227 330 -219 b 364 -181 346 -206 355 -195 l 385 -147 b 403 -108 389 -140 396 -127 b 419 -69 411 -90 417 -77 b 435 -27 422 -62 427 -48 b 450 14 442 -6 447 7 z m 365 943 l 464 818 l 593 818 l 443 1017 l 289 1017 l 140 818 l 268 818 z "},"\u0178":{"ha":900,"x_min":0,"x_max":0,"o":"m 910 989 l 715 989 l 456 551 l 193 989 l -7 989 l 367 393 l 367 0 l 538 0 l 538 393 z m 417 1106 l 417 1256 l 258 1256 l 258 1106 z m 497 1256 l 497 1106 l 656 1106 l 656 1256 z "},"\u0179":{"ha":875,"x_min":0,"x_max":0,"o":"m 822 989 l 68 989 l 68 839 l 599 839 l 26 143 l 26 0 l 839 0 l 839 150 l 246 150 l 822 851 z m 375 1088 l 490 1088 l 688 1286 l 500 1286 z "},"\u017a":{"ha":694,"x_min":0,"x_max":0,"o":"m 642 717 l 58 717 l 58 592 l 431 592 l 31 121 l 31 0 l 663 0 l 663 128 l 236 128 l 642 606 z m 285 818 l 400 818 l 597 1017 l 410 1017 z "},"\u017b":{"ha":875,"x_min":0,"x_max":0,"o":"m 822 989 l 68 989 l 68 839 l 599 839 l 26 143 l 26 0 l 839 0 l 839 150 l 246 150 l 822 851 z m 528 1106 l 528 1256 l 369 1256 l 369 1106 z "},"\u017c":{"ha":694,"x_min":0,"x_max":0,"o":"m 642 717 l 58 717 l 58 592 l 431 592 l 31 121 l 31 0 l 663 0 l 663 128 l 236 128 l 642 606 z m 429 836 l 429 986 l 271 986 l 271 836 z "},"\u017d":{"ha":875,"x_min":0,"x_max":0,"o":"m 822 989 l 68 989 l 68 839 l 599 839 l 26 143 l 26 0 l 839 0 l 839 150 l 246 150 l 822 851 z m 675 1286 l 546 1286 l 447 1163 l 350 1286 l 222 1286 l 371 1088 l 525 1088 z "},"\u017e":{"ha":694,"x_min":0,"x_max":0,"o":"m 642 717 l 58 717 l 58 592 l 431 592 l 31 121 l 31 0 l 663 0 l 663 128 l 236 128 l 642 606 z m 578 1017 l 449 1017 l 350 893 l 253 1017 l 125 1017 l 274 818 l 428 818 z "},"\u017f":{"ha":438,"x_min":0,"x_max":0,"o":"m 13 718 l 13 600 l 131 600 l 131 0 l 289 0 l 289 792 b 312 851 289 821 297 841 b 367 867 327 862 345 867 b 408 865 382 867 396 866 b 440 858 419 863 430 861 l 440 982 b 329 992 418 988 381 992 b 255 984 303 992 278 989 b 192 953 231 979 210 969 b 147 888 173 938 158 916 b 131 778 136 860 131 823 l 131 718 z "},"\u018f":{"ha":1056,"x_min":0,"x_max":0,"o":"m 528 1015 b 373 991 472 1015 421 1007 b 245 924 325 975 283 952 b 148 822 208 895 175 861 b 83 692 121 782 99 739 l 263 692 b 360 822 284 744 316 788 b 528 874 403 856 459 874 b 651 848 575 874 616 865 b 740 779 685 831 715 808 b 797 680 764 750 783 717 b 825 561 811 642 820 603 l 56 561 b 53 529 55 551 54 540 b 53 496 53 518 53 507 b 85 294 53 425 64 357 b 179 129 107 231 138 176 b 328 17 220 82 270 45 b 528 -24 387 -10 454 -24 b 727 17 602 -24 668 -10 b 876 129 786 45 836 82 b 970 294 917 176 948 231 b 1003 496 992 357 1003 425 b 970 696 1003 566 992 633 b 876 861 948 759 917 814 b 727 974 836 908 786 946 b 528 1015 668 1001 602 1015 z m 528 118 b 408 142 482 118 443 126 b 321 206 374 157 345 179 b 263 299 297 232 277 263 b 232 411 248 334 238 371 l 822 411 b 792 299 817 371 806 334 b 733 206 777 263 757 232 b 647 142 709 179 680 157 b 528 118 613 126 573 118 z "},"\u0192":{"ha":772,"x_min":0,"x_max":0,"o":"m 611 608 l 469 608 l 497 746 b 538 842 507 793 521 825 b 617 868 554 859 581 868 b 672 865 634 868 653 867 l 696 989 b 606 993 661 992 631 993 b 422 939 524 993 463 975 b 338 758 381 903 353 843 l 310 608 l 182 608 l 161 497 l 289 497 l 203 50 b 197 19 202 46 200 36 b 191 -11 194 3 192 -7 b 183 -36 190 -15 187 -23 b 173 -61 180 -49 176 -57 b 158 -79 170 -65 165 -71 b 138 -96 152 -87 145 -93 b 111 -104 131 -99 122 -101 b 75 -108 100 -107 88 -108 b 21 -107 54 -108 36 -108 l 0 -231 b 82 -235 42 -233 69 -235 b 281 -174 178 -235 245 -215 b 364 39 318 -134 345 -63 l 450 497 l 590 497 z "},"\u01a0":{"ha":1186,"x_min":0,"x_max":0,"o":"m 1136 982 l 1017 914 l 1063 836 b 1001 808 1038 823 1018 814 b 956 799 984 802 969 799 b 914 811 937 799 923 803 b 756 960 873 873 820 923 b 528 1015 691 997 615 1015 b 328 974 454 1015 387 1001 b 179 861 270 946 220 908 b 85 696 138 814 107 759 b 53 496 64 633 53 566 b 85 294 53 425 64 357 b 179 129 107 231 138 176 b 328 17 220 82 270 45 b 528 -24 387 -10 454 -24 b 727 17 602 -24 668 -10 b 876 129 786 45 836 82 b 970 294 917 176 948 231 b 1003 496 992 357 1003 425 b 960 721 1003 575 988 650 b 972 719 964 720 969 719 l 985 719 b 1051 732 1006 719 1028 724 b 1119 764 1075 740 1097 751 l 1226 825 z m 528 874 b 665 842 581 874 626 863 b 758 756 703 820 734 792 b 812 635 782 721 800 680 b 829 496 823 589 829 543 b 812 357 829 449 823 402 b 758 235 800 312 782 271 b 665 150 734 200 703 171 b 528 118 626 129 581 118 b 391 150 475 118 429 129 b 297 235 353 171 321 200 b 244 357 273 271 255 312 b 226 496 232 402 226 449 b 244 635 226 543 232 589 b 297 756 255 680 273 721 b 391 842 321 792 353 820 b 528 874 429 863 475 874 z "},"\u01a1":{"ha":951,"x_min":0,"x_max":0,"o":"m 901 774 l 782 706 l 828 628 b 765 599 804 615 783 605 b 710 590 747 593 728 590 b 590 699 680 637 640 673 b 413 738 539 725 480 738 b 259 709 355 738 304 728 b 145 631 214 690 176 664 b 74 511 114 597 91 557 b 50 360 58 465 50 414 b 74 207 50 304 58 253 b 145 88 91 161 114 121 b 259 9 176 54 214 28 b 413 -19 304 -10 355 -19 b 566 9 470 -19 521 -10 b 680 88 611 28 649 54 b 751 207 711 121 734 161 b 775 360 767 253 775 304 b 750 511 775 414 767 465 b 817 524 771 511 794 515 b 885 556 840 532 863 543 l 992 617 z m 413 106 b 321 128 377 106 347 113 b 257 186 295 143 274 162 b 220 267 240 210 228 237 b 208 360 212 297 208 328 b 220 451 208 390 212 421 b 257 533 228 482 240 509 b 321 590 274 556 295 575 b 413 613 347 605 377 613 b 504 590 448 613 478 605 b 568 533 530 575 551 556 b 605 451 585 509 597 482 b 617 360 613 421 617 390 b 605 267 617 328 613 297 b 568 186 597 237 585 210 b 504 128 551 162 530 143 b 413 106 478 113 448 106 z "},"\u01a2":{"ha":1188,"x_min":0,"x_max":0,"o":"m 1088 -265 l 1088 992 l 490 992 b 292 953 413 992 347 979 b 157 847 237 927 192 891 b 78 689 122 802 96 749 b 53 496 61 629 53 564 b 78 303 53 427 61 363 b 157 145 96 243 122 190 b 292 39 192 100 237 65 b 490 0 347 13 413 0 l 781 0 l 781 850 l 914 850 l 914 -265 z m 607 850 l 607 142 l 557 142 b 390 169 488 142 433 151 b 290 244 348 187 314 212 b 240 356 265 276 248 313 b 226 496 231 399 226 446 b 240 635 226 546 231 592 b 290 748 248 678 265 716 b 390 823 314 780 348 805 b 557 850 433 841 488 850 z "},"\u01a3":{"ha":974,"x_min":0,"x_max":0,"o":"m 401 0 l 628 0 l 628 615 l 726 615 l 726 -265 l 885 -265 l 885 718 l 401 718 b 243 690 340 718 288 709 b 134 613 199 671 162 645 b 71 499 106 580 85 542 b 50 358 57 455 50 408 b 71 219 50 309 57 263 b 134 106 85 176 106 138 b 243 28 162 73 199 47 b 401 0 288 9 340 0 z m 210 358 b 220 460 210 394 213 428 b 258 542 227 491 240 519 b 333 596 276 565 301 583 b 457 615 365 609 406 615 l 469 615 l 469 103 l 457 103 b 333 122 406 103 365 109 b 258 176 301 135 276 153 b 220 258 240 200 227 227 b 210 358 213 289 210 322 z "},"\u01af":{"ha":1147,"x_min":0,"x_max":0,"o":"m 1097 982 l 978 914 l 1024 836 b 960 808 1000 823 978 814 b 908 799 942 802 925 799 l 908 992 l 735 992 l 735 414 b 730 313 735 381 733 347 b 702 220 727 278 717 247 b 633 153 687 193 664 170 b 501 126 602 135 558 126 b 370 153 445 126 401 135 b 301 220 339 170 316 193 b 273 313 285 247 276 278 b 268 414 270 347 268 381 l 268 992 l 94 992 l 94 357 b 124 190 94 293 104 238 b 206 72 143 143 171 103 b 335 0 242 40 285 16 b 501 -24 385 -16 440 -24 b 668 0 563 -24 618 -16 b 797 72 718 16 761 40 b 879 190 832 103 860 143 b 908 357 899 238 908 293 l 908 724 b 944 719 919 721 931 719 b 1015 733 969 719 992 724 b 1081 764 1037 741 1059 752 l 1188 825 z "},"\u01b0":{"ha":942,"x_min":0,"x_max":0,"o":"m 892 774 l 772 706 l 818 628 b 758 599 795 615 775 605 b 714 590 742 593 727 590 l 714 718 l 556 718 l 556 301 b 547 224 556 274 553 248 b 517 162 541 200 531 179 b 463 121 503 145 485 131 b 379 106 440 111 413 106 b 278 144 336 106 302 119 b 242 278 254 170 242 215 l 242 718 l 83 718 l 83 263 b 147 51 83 168 104 97 b 351 -19 189 4 257 -19 b 469 13 391 -19 430 -9 b 556 100 507 35 536 64 l 558 100 l 558 0 l 714 0 l 714 514 b 727 512 719 513 723 512 b 740 511 731 511 736 511 b 807 524 762 511 784 515 b 875 556 830 532 853 543 l 982 617 z "},"\u01b5":{"ha":875,"x_min":0,"x_max":0,"o":"m 90 569 l 90 419 l 261 419 l 32 142 l 32 0 l 844 0 l 844 150 l 253 150 l 472 419 l 757 419 l 757 569 l 594 569 l 831 860 l 831 992 l 76 992 l 76 842 l 610 842 l 385 569 z "},"\u01b6":{"ha":694,"x_min":0,"x_max":0,"o":"m 71 431 l 71 303 l 188 303 l 31 111 l 31 0 l 663 0 l 663 125 l 231 125 l 382 303 l 618 303 l 618 431 l 490 431 l 642 607 l 642 718 l 58 718 l 58 593 l 428 593 l 293 431 z "},"\u01c0":{"ha":308,"x_min":0,"x_max":0,"o":"m 83 1092 l 83 -297 l 225 -297 l 225 1092 z "},"\u01c1":{"ha":617,"x_min":0,"x_max":0,"o":"m 83 1092 l 83 -297 l 225 -297 l 225 1092 z m 392 1092 l 392 -297 l 533 -297 l 533 1092 z "},"\u01c3":{"ha":386,"x_min":0,"x_max":0,"o":"m 100 174 l 100 0 l 286 0 l 286 174 z m 107 992 l 107 706 l 153 276 l 235 276 l 281 706 l 281 992 z "},"\u01c4":{"ha":1878,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 517 0 b 714 39 593 0 658 13 b 850 145 769 65 815 100 b 928 303 885 190 911 243 b 954 496 946 363 954 427 b 928 689 954 564 946 629 b 850 847 911 749 885 802 b 714 953 815 891 769 927 b 517 992 658 979 593 992 z m 279 142 l 279 850 l 450 850 b 616 823 518 850 573 841 b 717 748 659 805 693 780 b 767 635 742 716 759 678 b 781 496 776 592 781 546 b 767 356 781 446 776 399 b 717 244 759 313 742 276 b 616 169 693 212 659 187 b 450 142 573 151 518 142 z m 1079 992 l 1079 842 l 1613 842 l 1035 142 l 1035 0 l 1847 0 l 1847 150 l 1256 150 l 1833 860 l 1833 992 z m 1517 1061 l 1667 1260 l 1538 1260 l 1439 1136 l 1342 1260 l 1214 1260 l 1363 1061 z "},"\u01c5":{"ha":1697,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 517 0 b 714 39 593 0 658 13 b 850 145 769 65 815 100 b 928 303 885 190 911 243 b 954 496 946 363 954 427 b 928 689 954 564 946 629 b 850 847 911 749 885 802 b 714 953 815 891 769 927 b 517 992 658 979 593 992 z m 279 142 l 279 850 l 450 850 b 616 823 518 850 573 841 b 717 748 659 805 693 780 b 767 635 742 716 759 678 b 781 496 776 592 781 546 b 767 356 781 446 776 399 b 717 244 759 313 742 276 b 616 169 693 212 659 187 b 450 142 573 151 518 142 z m 1061 718 l 1061 593 l 1431 593 l 1033 111 l 1033 0 l 1665 0 l 1665 125 l 1233 125 l 1644 607 l 1644 718 z m 1425 788 l 1575 986 l 1446 986 l 1347 863 l 1250 986 l 1122 986 l 1271 788 z "},"\u01c6":{"ha":1543,"x_min":0,"x_max":0,"o":"m 760 0 l 760 992 l 601 992 l 601 625 l 599 625 b 553 676 587 644 572 661 b 494 711 535 690 516 702 b 428 731 473 720 451 727 b 360 738 405 735 382 738 b 245 716 321 738 283 730 b 145 649 208 702 174 679 b 75 532 116 618 93 579 b 49 364 57 485 49 429 b 69 213 49 310 56 260 b 132 92 83 166 104 126 b 237 10 160 57 195 30 b 385 -19 279 -9 328 -19 b 514 8 430 -19 473 -10 b 607 97 555 26 586 56 l 610 97 l 610 0 z m 207 351 b 217 447 207 384 210 416 b 252 530 224 478 236 505 b 315 590 268 554 289 574 b 408 613 340 605 371 613 b 553 546 469 613 518 590 b 607 360 589 501 607 439 b 595 267 607 328 603 297 b 559 186 587 237 575 210 b 497 128 543 162 522 143 b 406 106 471 113 441 106 b 317 126 371 106 342 113 b 255 182 292 140 271 159 b 219 261 239 205 227 231 b 207 351 211 291 207 321 z m 907 718 l 907 593 l 1276 593 l 879 111 l 879 0 l 1511 0 l 1511 125 l 1079 125 l 1490 607 l 1490 718 z m 1271 788 l 1421 986 l 1292 986 l 1193 863 l 1096 986 l 968 986 l 1117 788 z "},"\u01c7":{"ha":1543,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 783 0 l 783 150 l 279 150 l 279 992 z m 1438 319 l 1438 992 l 1264 992 l 1264 310 b 1258 228 1264 279 1262 252 b 1237 167 1255 204 1247 184 b 1194 131 1226 151 1212 139 b 1125 118 1176 122 1153 118 b 1017 165 1072 118 1036 134 b 989 296 998 196 989 239 l 989 347 l 815 347 l 815 294 b 832 168 815 249 821 207 b 885 67 843 129 861 96 b 976 1 909 39 939 17 b 1111 -24 1013 -16 1058 -24 b 1283 6 1182 -24 1240 -14 b 1381 83 1326 25 1359 51 b 1426 193 1404 116 1419 152 b 1438 319 1434 234 1438 276 z "},"\u01c8":{"ha":1132,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 783 0 l 783 150 l 279 150 l 279 992 z m 885 992 l 885 842 l 1043 842 l 1043 992 z m 885 718 l 885 -54 b 874 -133 885 -89 881 -116 b 821 -160 867 -151 850 -160 b 796 -158 813 -160 805 -159 b 767 -154 787 -157 777 -156 l 767 -279 b 798 -283 777 -281 787 -282 b 838 -285 809 -284 822 -285 b 996 -226 912 -285 964 -265 b 1043 -61 1027 -187 1043 -132 l 1043 718 z "},"\u01c9":{"ha":669,"x_min":0,"x_max":0,"o":"m 88 992 l 88 0 l 246 0 l 246 992 z m 422 992 l 422 842 l 581 842 l 581 992 z m 422 718 l 422 -54 b 412 -133 422 -89 419 -116 b 358 -160 405 -151 387 -160 b 333 -158 351 -160 343 -159 b 304 -154 324 -157 314 -156 l 304 -279 b 335 -283 314 -281 325 -282 b 375 -285 346 -284 359 -285 b 533 -226 449 -285 502 -265 b 581 -61 565 -187 581 -132 l 581 718 z "},"\u01ca":{"ha":1749,"x_min":0,"x_max":0,"o":"m 99 992 l 99 0 l 264 0 l 264 729 l 268 729 l 719 0 l 903 0 l 903 992 l 738 992 l 738 261 l 735 261 l 282 992 z m 1643 319 l 1643 992 l 1469 992 l 1469 310 b 1464 228 1469 279 1468 252 b 1442 167 1460 204 1453 184 b 1399 131 1432 151 1417 139 b 1331 118 1381 122 1358 118 b 1223 165 1278 118 1242 134 b 1194 296 1204 196 1194 239 l 1194 347 l 1021 347 l 1021 294 b 1038 168 1021 249 1026 207 b 1090 67 1049 129 1066 96 b 1182 1 1114 39 1145 17 b 1317 -24 1219 -16 1264 -24 b 1488 6 1388 -24 1445 -14 b 1587 83 1531 25 1564 51 b 1632 193 1609 116 1625 152 b 1643 319 1639 234 1643 276 z "},"\u01cb":{"ha":1338,"x_min":0,"x_max":0,"o":"m 99 992 l 99 0 l 264 0 l 264 729 l 268 729 l 719 0 l 903 0 l 903 992 l 738 992 l 738 261 l 735 261 l 282 992 z m 1090 992 l 1090 842 l 1249 842 l 1249 992 z m 1090 718 l 1090 -54 b 1080 -133 1090 -89 1087 -116 b 1026 -160 1073 -151 1055 -160 b 1001 -158 1019 -160 1011 -159 b 972 -154 992 -157 982 -156 l 972 -279 b 1003 -283 982 -281 993 -282 b 1043 -285 1014 -284 1027 -285 b 1201 -226 1117 -285 1170 -265 b 1249 -61 1233 -187 1249 -132 l 1249 718 z "},"\u01cc":{"ha":1132,"x_min":0,"x_max":0,"o":"m 83 718 l 83 0 l 242 0 l 242 424 b 254 497 242 450 246 474 b 289 558 263 520 274 541 b 343 598 304 575 322 588 b 415 613 364 608 388 613 b 519 574 463 613 497 600 b 556 451 542 549 554 508 l 556 0 l 714 0 l 714 493 b 646 676 714 575 691 636 b 460 738 600 717 538 738 b 331 703 413 738 369 726 b 236 610 292 681 260 650 l 233 613 l 233 718 z m 885 992 l 885 842 l 1043 842 l 1043 992 z m 885 718 l 885 -54 b 874 -133 885 -89 881 -116 b 821 -160 867 -151 850 -160 b 796 -158 813 -160 805 -159 b 767 -154 787 -157 777 -156 l 767 -279 b 798 -283 777 -281 787 -282 b 838 -285 809 -284 822 -285 b 996 -226 912 -285 964 -265 b 1043 -61 1027 -187 1043 -132 l 1043 718 z "},"\u01cd":{"ha":926,"x_min":0,"x_max":0,"o":"m 371 992 l -10 0 l 169 0 l 263 263 l 658 263 l 751 0 l 938 0 l 556 992 z m 310 394 l 460 821 l 464 821 l 613 394 z m 540 1061 l 690 1260 l 561 1260 l 463 1136 l 365 1260 l 238 1260 l 386 1061 z "},"\u01ce":{"ha":772,"x_min":0,"x_max":0,"o":"m 685 160 l 685 529 b 660 626 685 567 676 599 b 594 690 643 652 621 674 b 501 726 566 707 536 719 b 397 738 467 734 432 738 b 281 726 357 738 319 734 b 178 688 243 719 209 706 b 104 614 148 669 124 644 b 71 499 85 583 74 545 l 229 499 b 278 585 233 538 249 566 b 388 613 306 603 343 613 b 438 609 403 613 420 611 b 485 595 455 607 471 602 b 522 565 500 588 512 578 b 536 515 531 552 536 536 b 519 463 536 492 530 475 b 472 438 507 452 491 443 b 403 426 452 432 429 428 b 321 414 377 423 350 419 b 222 398 288 410 254 405 b 133 364 189 391 159 380 b 69 299 106 348 85 326 b 44 190 53 271 44 235 b 65 98 44 155 51 124 b 119 33 78 72 96 50 b 197 -6 141 16 168 3 b 290 -19 227 -15 258 -19 b 423 1 333 -19 377 -12 b 539 68 469 15 507 38 b 581 0 545 36 559 13 b 661 -19 602 -13 629 -19 b 685 -18 668 -19 675 -19 b 713 -14 694 -17 703 -16 b 740 -8 722 -12 731 -10 b 761 -1 748 -5 756 -3 l 761 108 b 739 106 753 106 745 106 l 722 106 b 692 118 707 106 697 110 b 685 160 687 126 685 140 z m 526 360 l 526 242 b 508 178 526 217 520 196 b 463 136 496 161 481 147 b 406 113 445 125 426 117 b 349 106 385 108 366 106 b 302 110 335 106 319 107 b 255 124 285 113 269 117 b 218 153 241 131 228 141 b 203 197 208 165 203 180 b 213 249 203 218 206 235 b 242 284 220 264 230 275 b 283 305 254 293 268 300 b 332 317 299 310 315 314 b 438 331 367 323 402 328 b 526 360 473 334 502 344 z m 479 807 l 629 1006 l 500 1006 l 401 882 l 304 1006 l 176 1006 l 325 807 z "},"\u01cf":{"ha":386,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 279 0 l 279 992 z m 268 1061 l 418 1260 l 289 1260 l 190 1136 l 93 1260 l -35 1260 l 114 1061 z "},"\u01d0":{"ha":335,"x_min":0,"x_max":0,"o":"m 88 0 l 246 0 l 246 718 l 88 718 z m 243 788 l 393 986 l 264 986 l 165 863 l 68 986 l -60 986 l 89 788 z "},"\u01d1":{"ha":1056,"x_min":0,"x_max":0,"o":"m 528 874 b 665 842 581 874 626 863 b 758 756 703 820 734 792 b 812 635 782 721 800 680 b 829 496 823 589 829 543 b 812 357 829 449 823 402 b 758 235 800 312 782 271 b 665 150 734 200 703 171 b 528 118 626 129 581 118 b 391 150 475 118 429 129 b 297 235 353 171 321 200 b 244 357 273 271 255 312 b 226 496 232 402 226 449 b 244 635 226 543 232 589 b 297 756 255 680 273 721 b 391 842 321 792 353 820 b 528 874 429 863 475 874 z m 528 1015 b 328 974 454 1015 387 1001 b 179 861 270 946 220 908 b 85 696 138 814 107 759 b 53 496 64 633 53 566 b 85 294 53 425 64 357 b 179 129 107 231 138 176 b 328 17 220 82 270 45 b 528 -24 387 -10 454 -24 b 727 17 602 -24 668 -10 b 876 129 786 45 836 82 b 970 294 917 176 948 231 b 1003 496 992 357 1003 425 b 970 696 1003 566 992 633 b 876 861 948 759 917 814 b 727 974 836 908 786 946 b 528 1015 668 1001 602 1015 z m 604 1085 l 754 1283 l 625 1283 l 526 1160 l 429 1283 l 301 1283 l 450 1085 z "},"\u01d2":{"ha":824,"x_min":0,"x_max":0,"o":"m 413 -19 b 566 9 470 -19 521 -10 b 680 88 611 28 649 54 b 751 207 711 121 734 161 b 775 360 767 253 775 304 b 751 511 775 414 767 465 b 680 631 734 557 711 597 b 566 709 649 664 611 690 b 413 738 521 728 470 738 b 259 709 355 738 304 728 b 145 631 214 690 176 664 b 74 511 114 597 91 557 b 50 360 58 465 50 414 b 74 207 50 304 58 253 b 145 88 91 161 114 121 b 259 9 176 54 214 28 b 413 -19 304 -10 355 -19 z m 413 106 b 321 128 377 106 347 113 b 257 186 295 143 274 162 b 220 267 240 210 228 237 b 208 360 212 297 208 328 b 220 451 208 390 212 421 b 257 533 228 482 240 509 b 321 590 274 556 295 575 b 413 613 347 605 377 613 b 504 590 448 613 478 605 b 568 533 530 575 551 556 b 605 451 585 509 597 482 b 617 360 613 421 617 390 b 605 267 617 328 613 297 b 568 186 597 237 585 210 b 504 128 551 162 530 143 b 413 106 478 113 448 106 z m 489 807 l 639 1006 l 510 1006 l 411 882 l 314 1006 l 186 1006 l 335 807 z "},"\u01d3":{"ha":1003,"x_min":0,"x_max":0,"o":"m 94 992 l 94 357 b 124 190 94 293 104 238 b 206 72 143 143 171 103 b 335 0 242 40 285 16 b 501 -24 385 -16 440 -24 b 668 0 563 -24 618 -16 b 797 72 718 16 761 40 b 879 190 832 103 860 143 b 908 357 899 238 908 293 l 908 992 l 735 992 l 735 414 b 730 313 735 381 733 347 b 702 220 727 278 717 247 b 633 153 687 193 664 170 b 501 126 602 135 558 126 b 370 153 445 126 401 135 b 301 220 339 170 316 193 b 273 313 285 247 276 278 b 268 414 270 347 268 381 l 268 992 z m 578 1061 l 728 1260 l 599 1260 l 500 1136 l 403 1260 l 275 1260 l 424 1061 z "},"\u01d4":{"ha":797,"x_min":0,"x_max":0,"o":"m 714 0 l 714 718 l 556 718 l 556 301 b 547 224 556 274 553 248 b 517 162 541 200 531 179 b 463 121 503 145 485 131 b 379 106 440 111 413 106 b 278 144 336 106 302 119 b 242 278 254 170 242 215 l 242 718 l 83 718 l 83 263 b 147 51 83 168 104 97 b 351 -19 189 4 257 -19 b 469 13 391 -19 430 -9 b 556 100 507 35 536 64 l 558 100 l 558 0 z m 475 788 l 625 986 l 496 986 l 397 863 l 300 986 l 172 986 l 321 788 z "},"\u01d5":{"ha":1003,"x_min":0,"x_max":0,"o":"m 94 992 l 94 357 b 124 190 94 293 104 238 b 206 72 143 143 171 103 b 335 0 242 40 285 16 b 501 -24 385 -16 440 -24 b 668 0 563 -24 618 -16 b 797 72 718 16 761 40 b 879 190 832 103 860 143 b 908 357 899 238 908 293 l 908 992 l 735 992 l 735 414 b 730 313 735 381 733 347 b 702 220 727 278 717 247 b 633 153 687 193 664 170 b 501 126 602 135 558 126 b 370 153 445 126 401 135 b 301 220 339 170 316 193 b 273 313 285 247 276 278 b 268 414 270 347 268 381 l 268 992 z m 303 1061 l 461 1061 l 461 1211 l 303 1211 z m 700 1211 l 542 1211 l 542 1061 l 700 1061 z m 301 1281 l 701 1281 l 701 1371 l 301 1371 z "},"\u01d6":{"ha":797,"x_min":0,"x_max":0,"o":"m 714 0 l 714 718 l 556 718 l 556 301 b 547 224 556 274 553 248 b 517 162 541 200 531 179 b 463 121 503 145 485 131 b 379 106 440 111 413 106 b 278 144 336 106 302 119 b 242 278 254 170 242 215 l 242 718 l 83 718 l 83 263 b 147 51 83 168 104 97 b 351 -19 189 4 257 -19 b 469 13 391 -19 430 -9 b 556 100 507 35 536 64 l 558 100 l 558 0 z m 200 788 l 358 788 l 358 938 l 200 938 z m 597 938 l 439 938 l 439 788 l 597 788 z m 199 1007 l 599 1007 l 599 1097 l 199 1097 z "},"\u01d7":{"ha":1003,"x_min":0,"x_max":0,"o":"m 94 992 l 94 357 b 124 190 94 293 104 238 b 206 72 143 143 171 103 b 335 0 242 40 285 16 b 501 -24 385 -16 440 -24 b 668 0 563 -24 618 -16 b 797 72 718 16 761 40 b 879 190 832 103 860 143 b 908 357 899 238 908 293 l 908 992 l 735 992 l 735 414 b 730 313 735 381 733 347 b 702 220 727 278 717 247 b 633 153 687 193 664 170 b 501 126 602 135 558 126 b 370 153 445 126 401 135 b 301 220 339 170 316 193 b 273 313 285 247 276 278 b 268 414 270 347 268 381 l 268 992 z m 303 1061 l 461 1061 l 461 1211 l 303 1211 z m 700 1211 l 542 1211 l 542 1061 l 700 1061 z m 557 1479 l 432 1281 l 547 1281 l 744 1479 z "},"\u01d8":{"ha":797,"x_min":0,"x_max":0,"o":"m 714 0 l 714 718 l 556 718 l 556 301 b 547 224 556 274 553 248 b 517 162 541 200 531 179 b 463 121 503 145 485 131 b 379 106 440 111 413 106 b 278 144 336 106 302 119 b 242 278 254 170 242 215 l 242 718 l 83 718 l 83 263 b 147 51 83 168 104 97 b 351 -19 189 4 257 -19 b 469 13 391 -19 430 -9 b 556 100 507 35 536 64 l 558 100 l 558 0 z m 200 788 l 358 788 l 358 938 l 200 938 z m 597 938 l 439 938 l 439 788 l 597 788 z m 451 1210 l 326 1011 l 442 1011 l 639 1210 z "},"\u01d9":{"ha":1003,"x_min":0,"x_max":0,"o":"m 94 992 l 94 357 b 124 190 94 293 104 238 b 206 72 143 143 171 103 b 335 0 242 40 285 16 b 501 -24 385 -16 440 -24 b 668 0 563 -24 618 -16 b 797 72 718 16 761 40 b 879 190 832 103 860 143 b 908 357 899 238 908 293 l 908 992 l 735 992 l 735 414 b 730 313 735 381 733 347 b 702 220 727 278 717 247 b 633 153 687 193 664 170 b 501 126 602 135 558 126 b 370 153 445 126 401 135 b 301 220 339 170 316 193 b 273 313 285 247 276 278 b 268 414 270 347 268 381 l 268 992 z m 303 1061 l 461 1061 l 461 1211 l 303 1211 z m 700 1211 l 542 1211 l 542 1061 l 700 1061 z m 578 1281 l 728 1479 l 599 1479 l 500 1356 l 403 1479 l 275 1479 l 424 1281 z "},"\u01da":{"ha":797,"x_min":0,"x_max":0,"o":"m 714 0 l 714 718 l 556 718 l 556 301 b 547 224 556 274 553 248 b 517 162 541 200 531 179 b 463 121 503 145 485 131 b 379 106 440 111 413 106 b 278 144 336 106 302 119 b 242 278 254 170 242 215 l 242 718 l 83 718 l 83 263 b 147 51 83 168 104 97 b 351 -19 189 4 257 -19 b 469 13 391 -19 430 -9 b 556 100 507 35 536 64 l 558 100 l 558 0 z m 200 788 l 358 788 l 358 938 l 200 938 z m 597 938 l 439 938 l 439 788 l 597 788 z m 475 1007 l 625 1206 l 496 1206 l 397 1082 l 300 1206 l 172 1206 l 321 1007 z "},"\u01db":{"ha":1003,"x_min":0,"x_max":0,"o":"m 94 992 l 94 357 b 124 190 94 293 104 238 b 206 72 143 143 171 103 b 335 0 242 40 285 16 b 501 -24 385 -16 440 -24 b 668 0 563 -24 618 -16 b 797 72 718 16 761 40 b 879 190 832 103 860 143 b 908 357 899 238 908 293 l 908 992 l 735 992 l 735 414 b 730 313 735 381 733 347 b 702 220 727 278 717 247 b 633 153 687 193 664 170 b 501 126 602 135 558 126 b 370 153 445 126 401 135 b 301 220 339 170 316 193 b 273 313 285 247 276 278 b 268 414 270 347 268 381 l 268 992 z m 303 1061 l 461 1061 l 461 1211 l 303 1211 z m 700 1211 l 542 1211 l 542 1061 l 700 1061 z m 449 1479 l 263 1479 l 460 1281 l 575 1281 z "},"\u01dc":{"ha":797,"x_min":0,"x_max":0,"o":"m 714 0 l 714 718 l 556 718 l 556 301 b 547 224 556 274 553 248 b 517 162 541 200 531 179 b 463 121 503 145 485 131 b 379 106 440 111 413 106 b 278 144 336 106 302 119 b 242 278 254 170 242 215 l 242 718 l 83 718 l 83 263 b 147 51 83 168 104 97 b 351 -19 189 4 257 -19 b 469 13 391 -19 430 -9 b 556 100 507 35 536 64 l 558 100 l 558 0 z m 200 788 l 358 788 l 358 938 l 200 938 z m 597 938 l 439 938 l 439 788 l 597 788 z m 363 1206 l 176 1206 l 374 1007 l 489 1007 z "},"\u01de":{"ha":926,"x_min":0,"x_max":0,"o":"m 371 992 l -10 0 l 169 0 l 263 263 l 658 263 l 751 0 l 938 0 l 556 992 z m 310 394 l 460 821 l 464 821 l 613 394 z m 265 1061 l 424 1061 l 424 1211 l 265 1211 z m 663 1211 l 504 1211 l 504 1061 l 663 1061 z m 264 1281 l 664 1281 l 664 1371 l 264 1371 z "},"\u01df":{"ha":772,"x_min":0,"x_max":0,"o":"m 685 160 l 685 529 b 660 626 685 567 676 599 b 594 690 643 652 621 674 b 501 726 566 707 536 719 b 397 738 467 734 432 738 b 281 726 357 738 319 734 b 178 688 243 719 209 706 b 104 614 148 669 124 644 b 71 499 85 583 74 545 l 229 499 b 278 585 233 538 249 566 b 388 613 306 603 343 613 b 438 609 403 613 420 611 b 485 595 455 607 471 602 b 522 565 500 588 512 578 b 536 515 531 552 536 536 b 519 463 536 492 530 475 b 472 438 507 452 491 443 b 403 426 452 432 429 428 b 321 414 377 423 350 419 b 222 398 288 410 254 405 b 133 364 189 391 159 380 b 69 299 106 348 85 326 b 44 190 53 271 44 235 b 65 98 44 155 51 124 b 119 33 78 72 96 50 b 197 -6 141 16 168 3 b 290 -19 227 -15 258 -19 b 423 1 333 -19 377 -12 b 539 68 469 15 507 38 b 581 0 545 36 559 13 b 661 -19 602 -13 629 -19 b 685 -18 668 -19 675 -19 b 713 -14 694 -17 703 -16 b 740 -8 722 -12 731 -10 b 761 -1 748 -5 756 -3 l 761 108 b 739 106 753 106 745 106 l 722 106 b 692 118 707 106 697 110 b 685 160 687 126 685 140 z m 526 360 l 526 242 b 508 178 526 217 520 196 b 463 136 496 161 481 147 b 406 113 445 125 426 117 b 349 106 385 108 366 106 b 302 110 335 106 319 107 b 255 124 285 113 269 117 b 218 153 241 131 228 141 b 203 197 208 165 203 180 b 213 249 203 218 206 235 b 242 284 220 264 230 275 b 283 305 254 293 268 300 b 332 317 299 310 315 314 b 438 331 367 323 402 328 b 526 360 473 334 502 344 z m 204 807 l 363 807 l 363 957 l 204 957 z m 601 957 l 443 957 l 443 807 l 601 807 z m 203 1026 l 603 1026 l 603 1117 l 203 1117 z "},"\u01e0":{"ha":926,"x_min":0,"x_max":0,"o":"m 371 992 l -10 0 l 169 0 l 263 263 l 658 263 l 751 0 l 938 0 l 556 992 z m 310 394 l 460 821 l 464 821 l 613 394 z m 385 1061 l 543 1061 l 543 1211 l 385 1211 z m 264 1281 l 664 1281 l 664 1371 l 264 1371 z "},"\u01e1":{"ha":772,"x_min":0,"x_max":0,"o":"m 685 160 l 685 529 b 660 626 685 567 676 599 b 594 690 643 652 621 674 b 501 726 566 707 536 719 b 397 738 467 734 432 738 b 281 726 357 738 319 734 b 178 688 243 719 209 706 b 104 614 148 669 124 644 b 71 499 85 583 74 545 l 229 499 b 278 585 233 538 249 566 b 388 613 306 603 343 613 b 438 609 403 613 420 611 b 485 595 455 607 471 602 b 522 565 500 588 512 578 b 536 515 531 552 536 536 b 519 463 536 492 530 475 b 472 438 507 452 491 443 b 403 426 452 432 429 428 b 321 414 377 423 350 419 b 222 398 288 410 254 405 b 133 364 189 391 159 380 b 69 299 106 348 85 326 b 44 190 53 271 44 235 b 65 98 44 155 51 124 b 119 33 78 72 96 50 b 197 -6 141 16 168 3 b 290 -19 227 -15 258 -19 b 423 1 333 -19 377 -12 b 539 68 469 15 507 38 b 581 0 545 36 559 13 b 661 -19 602 -13 629 -19 b 685 -18 668 -19 675 -19 b 713 -14 694 -17 703 -16 b 740 -8 722 -12 731 -10 b 761 -1 748 -5 756 -3 l 761 108 b 739 106 753 106 745 106 l 722 106 b 692 118 707 106 697 110 b 685 160 687 126 685 140 z m 526 360 l 526 242 b 508 178 526 217 520 196 b 463 136 496 161 481 147 b 406 113 445 125 426 117 b 349 106 385 108 366 106 b 302 110 335 106 319 107 b 255 124 285 113 269 117 b 218 153 241 131 228 141 b 203 197 208 165 203 180 b 213 249 203 218 206 235 b 242 284 220 264 230 275 b 283 305 254 293 268 300 b 332 317 299 310 315 314 b 438 331 367 323 402 328 b 526 360 473 334 502 344 z m 324 807 l 482 807 l 482 957 l 324 957 z m 203 1026 l 603 1026 l 603 1117 l 203 1117 z "},"\u01e2":{"ha":1338,"x_min":0,"x_max":0,"o":"m 483 992 l -10 0 l 183 0 l 303 254 l 635 254 l 635 0 l 1292 0 l 1292 150 l 800 150 l 800 440 l 1253 440 l 1253 582 l 800 582 l 800 842 l 1283 842 l 1283 992 z m 367 386 l 585 842 l 635 842 l 635 386 z m 663 1078 l 1063 1078 l 1063 1168 l 663 1168 z "},"\u01e3":{"ha":1235,"x_min":0,"x_max":0,"o":"m 1192 226 l 1033 226 b 971 138 1020 188 1000 159 b 864 106 942 116 906 106 b 779 124 831 106 803 112 b 720 171 755 136 735 151 b 687 238 705 190 694 213 b 676 318 680 264 676 290 l 1197 318 b 1186 484 1201 377 1197 433 b 1128 617 1175 535 1156 580 b 1022 706 1101 655 1066 684 b 864 738 978 727 925 738 b 738 715 820 738 778 730 b 636 640 697 700 663 675 b 588 690 622 661 606 677 b 528 720 569 703 549 713 b 461 734 506 727 484 732 b 393 738 438 736 415 738 b 279 726 354 738 316 734 b 178 688 242 719 209 706 b 104 614 148 669 124 644 b 71 499 85 583 74 545 l 229 499 b 278 585 233 538 249 566 b 388 613 306 603 343 613 b 436 609 403 613 419 611 b 481 595 453 607 468 602 b 515 565 495 588 506 578 b 528 515 523 552 528 536 b 511 463 528 492 522 475 b 467 438 500 452 485 443 b 401 426 448 432 426 428 b 321 414 376 423 350 419 b 222 398 288 410 254 405 b 133 364 189 391 159 380 b 69 299 106 348 85 326 b 44 190 53 271 44 235 b 65 98 44 155 51 124 b 120 33 78 72 97 50 b 203 -6 144 16 171 3 b 304 -19 234 -15 268 -19 b 476 11 365 -19 422 -9 b 603 113 529 31 571 65 b 715 10 631 63 668 29 b 867 -19 763 -10 813 -19 b 1074 46 946 -19 1015 2 b 1192 226 1132 89 1171 150 z m 526 357 l 526 250 b 510 188 526 226 521 205 b 469 142 500 170 486 155 b 413 115 453 130 434 121 b 347 106 391 109 369 106 b 297 110 331 106 314 107 b 250 124 279 113 264 117 b 216 152 236 131 225 141 b 203 197 207 164 203 179 b 213 249 203 218 206 235 b 242 284 220 264 230 275 b 283 305 254 293 268 300 b 333 317 299 310 316 314 b 390 324 352 319 371 322 b 445 330 410 325 428 328 b 492 339 462 332 478 335 b 526 357 507 343 518 349 z m 1039 422 l 676 422 b 692 495 678 448 683 472 b 727 556 700 518 712 538 b 783 597 742 573 761 587 b 857 613 804 607 829 613 b 992 560 915 613 960 595 b 1039 422 1024 526 1040 480 z m 424 807 l 824 807 l 824 897 l 424 897 z "},"\u01e6":{"ha":1054,"x_min":0,"x_max":0,"o":"m 971 0 l 971 522 l 549 522 l 549 390 l 813 390 b 793 276 812 349 805 311 b 740 190 781 242 763 213 b 653 135 716 166 687 148 b 535 118 619 123 579 117 b 398 150 482 118 436 129 b 304 235 359 171 328 200 b 251 357 280 271 262 312 b 233 496 239 402 233 449 b 251 635 233 543 239 589 b 304 756 262 680 280 721 b 398 842 328 792 359 820 b 535 874 436 863 482 874 b 625 861 566 874 596 869 b 703 824 654 853 680 840 b 760 762 726 807 745 786 b 790 676 776 737 786 709 l 960 676 b 913 824 953 732 938 781 b 818 930 888 866 856 902 b 688 994 780 958 737 979 b 535 1015 640 1008 588 1015 b 335 974 461 1015 394 1001 b 186 861 277 946 227 908 b 92 696 145 814 114 759 b 60 496 71 633 60 566 b 92 294 60 425 71 357 b 186 129 114 231 145 176 b 335 17 227 82 277 45 b 535 -24 394 -10 461 -24 b 694 7 595 -24 648 -13 b 833 117 741 27 787 64 l 860 0 z m 592 1085 l 742 1283 l 613 1283 l 514 1160 l 417 1283 l 289 1283 l 438 1085 z "},"\u01e7":{"ha":824,"x_min":0,"x_max":0,"o":"m 747 38 l 747 718 l 589 718 l 589 619 l 586 619 b 499 709 566 660 537 690 b 374 738 461 728 419 738 b 237 708 323 738 277 728 b 135 630 197 689 163 663 b 71 515 107 597 86 559 b 49 378 56 472 49 426 b 67 232 49 326 55 277 b 124 112 79 187 98 147 b 224 30 151 77 184 50 b 371 0 265 10 313 0 b 495 33 415 0 457 11 b 586 126 534 56 564 87 l 589 126 l 589 17 b 544 -119 589 -43 574 -88 b 404 -167 515 -151 468 -167 b 346 -163 384 -167 364 -166 b 295 -148 327 -161 310 -156 b 256 -115 280 -140 267 -129 b 232 -61 244 -101 237 -83 l 74 -61 b 110 -167 77 -103 89 -138 b 185 -236 130 -195 155 -219 b 285 -274 216 -254 249 -266 b 394 -285 322 -281 358 -285 b 656 -205 508 -285 596 -258 b 747 38 717 -152 747 -71 z m 396 125 b 310 146 363 125 334 132 b 252 200 287 160 267 178 b 218 276 237 222 225 247 b 207 363 211 304 207 333 b 217 452 207 392 210 422 b 249 533 223 482 234 509 b 307 590 263 556 283 575 b 396 613 331 605 361 613 b 484 593 430 613 459 606 b 544 540 509 580 528 563 b 578 464 559 518 570 493 b 589 375 585 435 589 406 b 578 284 589 344 585 314 b 545 203 572 254 560 227 b 485 147 530 180 510 161 b 396 125 461 132 431 125 z m 474 807 l 624 1006 l 494 1006 l 396 882 l 299 1006 l 171 1006 l 319 807 z "},"\u01e8":{"ha":951,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 279 0 l 279 333 l 421 474 l 746 0 l 963 0 l 539 596 l 935 992 l 721 992 l 279 540 l 279 992 z m 610 1061 l 760 1260 l 631 1260 l 532 1136 l 435 1260 l 307 1260 l 456 1061 z "},"\u01e9":{"ha":746,"x_min":0,"x_max":0,"o":"m 88 992 l 88 0 l 246 0 l 246 257 l 340 349 l 560 0 l 753 0 l 451 454 l 726 718 l 532 718 l 246 428 l 246 992 z m 496 1061 l 646 1260 l 517 1260 l 418 1136 l 321 1260 l 193 1260 l 342 1061 z "},"\u01ea":{"ha":1056,"x_min":0,"x_max":0,"o":"m 528 874 b 665 842 581 874 626 863 b 758 756 703 820 734 792 b 812 635 782 721 800 680 b 829 496 823 589 829 543 b 812 357 829 449 823 402 b 758 235 800 312 782 271 b 665 150 734 200 703 171 b 528 118 626 129 581 118 b 391 150 475 118 429 129 b 297 235 353 171 321 200 b 244 357 273 271 255 312 b 226 496 232 402 226 449 b 244 635 226 543 232 589 b 297 756 255 680 273 721 b 391 842 321 792 353 820 b 528 874 429 863 475 874 z m 528 1015 b 328 974 454 1015 387 1001 b 179 861 270 946 220 908 b 85 696 138 814 107 759 b 53 496 64 633 53 566 b 85 294 53 425 64 357 b 179 129 107 231 138 176 b 328 17 220 82 270 45 b 528 -24 387 -10 454 -24 b 727 17 602 -24 668 -10 b 876 129 786 45 836 82 b 970 294 917 176 948 231 b 1003 496 992 357 1003 425 b 970 696 1003 566 992 633 b 876 861 948 759 917 814 b 727 974 836 908 786 946 b 528 1015 668 1001 602 1015 z m 618 -24 l 543 -24 b 453 -87 504 -47 474 -68 b 406 -140 431 -107 416 -125 b 388 -181 395 -156 389 -169 b 385 -208 386 -192 385 -201 b 403 -278 385 -238 391 -261 b 445 -315 415 -294 429 -307 b 492 -331 461 -324 477 -329 b 525 -333 508 -332 519 -333 b 568 -328 539 -333 553 -332 b 610 -312 583 -325 597 -320 b 647 -280 624 -304 636 -293 b 671 -229 657 -266 665 -250 l 614 -217 b 579 -254 602 -235 590 -248 b 542 -264 568 -261 556 -264 b 504 -247 528 -264 515 -258 b 488 -203 493 -236 488 -221 b 493 -165 488 -190 489 -177 b 513 -124 497 -152 503 -139 b 553 -78 523 -110 536 -95 b 618 -24 571 -62 592 -44 z "},"\u01eb":{"ha":824,"x_min":0,"x_max":0,"o":"m 413 -19 b 566 9 470 -19 521 -10 b 680 88 611 28 649 54 b 751 207 711 121 734 161 b 775 360 767 253 775 304 b 751 511 775 414 767 465 b 680 631 734 557 711 597 b 566 709 649 664 611 690 b 413 738 521 728 470 738 b 259 709 355 738 304 728 b 145 631 214 690 176 664 b 74 511 114 597 91 557 b 50 360 58 465 50 414 b 74 207 50 304 58 253 b 145 88 91 161 114 121 b 259 9 176 54 214 28 b 413 -19 304 -10 355 -19 z m 413 106 b 321 128 377 106 347 113 b 257 186 295 143 274 162 b 220 267 240 210 228 237 b 208 360 212 297 208 328 b 220 451 208 390 212 421 b 257 533 228 482 240 509 b 321 590 274 556 295 575 b 413 613 347 605 377 613 b 504 590 448 613 478 605 b 568 533 530 575 551 556 b 605 451 585 509 597 482 b 617 360 613 421 617 390 b 605 267 617 328 613 297 b 568 186 597 237 585 210 b 504 128 551 162 530 143 b 413 106 478 113 448 106 z m 503 -19 l 428 -19 b 338 -83 389 -43 359 -64 b 290 -136 316 -103 300 -120 b 272 -176 280 -152 274 -165 b 269 -204 270 -187 269 -197 b 288 -274 269 -234 275 -257 b 330 -311 300 -290 314 -303 b 377 -326 346 -319 362 -325 b 410 -329 392 -328 403 -329 b 453 -324 424 -329 438 -328 b 495 -308 468 -321 482 -316 b 531 -276 509 -300 521 -289 b 556 -225 542 -262 550 -245 l 499 -212 b 464 -250 487 -231 475 -244 b 426 -260 453 -256 440 -260 b 389 -243 413 -260 400 -254 b 372 -199 378 -232 372 -217 b 378 -160 372 -186 374 -173 b 398 -120 381 -148 388 -134 b 438 -74 408 -106 421 -91 b 503 -19 455 -58 477 -40 z "},"\u01ec":{"ha":1056,"x_min":0,"x_max":0,"o":"m 528 874 b 665 842 581 874 626 863 b 758 756 703 820 734 792 b 812 635 782 721 800 680 b 829 496 823 589 829 543 b 812 357 829 449 823 402 b 758 235 800 312 782 271 b 665 150 734 200 703 171 b 528 118 626 129 581 118 b 391 150 475 118 429 129 b 297 235 353 171 321 200 b 244 357 273 271 255 312 b 226 496 232 402 226 449 b 244 635 226 543 232 589 b 297 756 255 680 273 721 b 391 842 321 792 353 820 b 528 874 429 863 475 874 z m 528 1015 b 328 974 454 1015 387 1001 b 179 861 270 946 220 908 b 85 696 138 814 107 759 b 53 496 64 633 53 566 b 85 294 53 425 64 357 b 179 129 107 231 138 176 b 328 17 220 82 270 45 b 528 -24 387 -10 454 -24 b 727 17 602 -24 668 -10 b 876 129 786 45 836 82 b 970 294 917 176 948 231 b 1003 496 992 357 1003 425 b 970 696 1003 566 992 633 b 876 861 948 759 917 814 b 727 974 836 908 786 946 b 528 1015 668 1001 602 1015 z m 618 -24 l 543 -24 b 453 -87 504 -47 474 -68 b 406 -140 431 -107 416 -125 b 388 -181 395 -156 389 -169 b 385 -208 386 -192 385 -201 b 403 -278 385 -238 391 -261 b 445 -315 415 -294 429 -307 b 492 -331 461 -324 477 -329 b 525 -333 508 -332 519 -333 b 568 -328 539 -333 553 -332 b 610 -312 583 -325 597 -320 b 647 -280 624 -304 636 -293 b 671 -229 657 -266 665 -250 l 614 -217 b 579 -254 602 -235 590 -248 b 542 -264 568 -261 556 -264 b 504 -247 528 -264 515 -258 b 488 -203 493 -236 488 -221 b 493 -165 488 -190 489 -177 b 513 -124 497 -152 503 -139 b 553 -78 523 -110 536 -95 b 618 -24 571 -62 592 -44 z m 328 1085 l 728 1085 l 728 1175 l 328 1175 z "},"\u01ed":{"ha":824,"x_min":0,"x_max":0,"o":"m 413 -19 b 566 9 470 -19 521 -10 b 680 88 611 28 649 54 b 751 207 711 121 734 161 b 775 360 767 253 775 304 b 751 511 775 414 767 465 b 680 631 734 557 711 597 b 566 709 649 664 611 690 b 413 738 521 728 470 738 b 259 709 355 738 304 728 b 145 631 214 690 176 664 b 74 511 114 597 91 557 b 50 360 58 465 50 414 b 74 207 50 304 58 253 b 145 88 91 161 114 121 b 259 9 176 54 214 28 b 413 -19 304 -10 355 -19 z m 413 106 b 321 128 377 106 347 113 b 257 186 295 143 274 162 b 220 267 240 210 228 237 b 208 360 212 297 208 328 b 220 451 208 390 212 421 b 257 533 228 482 240 509 b 321 590 274 556 295 575 b 413 613 347 605 377 613 b 504 590 448 613 478 605 b 568 533 530 575 551 556 b 605 451 585 509 597 482 b 617 360 613 421 617 390 b 605 267 617 328 613 297 b 568 186 597 237 585 210 b 504 128 551 162 530 143 b 413 106 478 113 448 106 z m 503 -19 l 428 -19 b 338 -83 389 -43 359 -64 b 290 -136 316 -103 300 -120 b 272 -176 280 -152 274 -165 b 269 -204 270 -187 269 -197 b 288 -274 269 -234 275 -257 b 330 -311 300 -290 314 -303 b 377 -326 346 -319 362 -325 b 410 -329 392 -328 403 -329 b 453 -324 424 -329 438 -328 b 495 -308 468 -321 482 -316 b 531 -276 509 -300 521 -289 b 556 -225 542 -262 550 -245 l 499 -212 b 464 -250 487 -231 475 -244 b 426 -260 453 -256 440 -260 b 389 -243 413 -260 400 -254 b 372 -199 378 -232 372 -217 b 378 -160 372 -186 374 -173 b 398 -120 381 -148 388 -134 b 438 -74 408 -106 421 -91 b 503 -19 455 -58 477 -40 z m 213 807 l 613 807 l 613 897 l 213 897 z "},"\u01f1":{"ha":1878,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 517 0 b 714 39 593 0 658 13 b 850 145 769 65 815 100 b 928 303 885 190 911 243 b 954 496 946 363 954 427 b 928 689 954 564 946 629 b 850 847 911 749 885 802 b 714 953 815 891 769 927 b 517 992 658 979 593 992 z m 279 142 l 279 850 l 450 850 b 616 823 518 850 573 841 b 717 748 659 805 693 780 b 767 635 742 716 759 678 b 781 496 776 592 781 546 b 767 356 781 446 776 399 b 717 244 759 313 742 276 b 616 169 693 212 659 187 b 450 142 573 151 518 142 z m 1079 992 l 1079 842 l 1613 842 l 1035 142 l 1035 0 l 1847 0 l 1847 150 l 1256 150 l 1833 860 l 1833 992 z "},"\u01f2":{"ha":1697,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 517 0 b 714 39 593 0 658 13 b 850 145 769 65 815 100 b 928 303 885 190 911 243 b 954 496 946 363 954 427 b 928 689 954 564 946 629 b 850 847 911 749 885 802 b 714 953 815 891 769 927 b 517 992 658 979 593 992 z m 279 142 l 279 850 l 450 850 b 616 823 518 850 573 841 b 717 748 659 805 693 780 b 767 635 742 716 759 678 b 781 496 776 592 781 546 b 767 356 781 446 776 399 b 717 244 759 313 742 276 b 616 169 693 212 659 187 b 450 142 573 151 518 142 z m 1061 718 l 1061 593 l 1431 593 l 1033 111 l 1033 0 l 1665 0 l 1665 125 l 1233 125 l 1644 607 l 1644 718 z "},"\u01f3":{"ha":1543,"x_min":0,"x_max":0,"o":"m 760 0 l 760 992 l 601 992 l 601 625 l 599 625 b 553 676 587 644 572 661 b 494 711 535 690 516 702 b 428 731 473 720 451 727 b 360 738 405 735 382 738 b 245 716 321 738 283 730 b 145 649 208 702 174 679 b 75 532 116 618 93 579 b 49 364 57 485 49 429 b 69 213 49 310 56 260 b 132 92 83 166 104 126 b 237 10 160 57 195 30 b 385 -19 279 -9 328 -19 b 514 8 430 -19 473 -10 b 607 97 555 26 586 56 l 610 97 l 610 0 z m 207 351 b 217 447 207 384 210 416 b 252 530 224 478 236 505 b 315 590 268 554 289 574 b 408 613 340 605 371 613 b 553 546 469 613 518 590 b 607 360 589 501 607 439 b 595 267 607 328 603 297 b 559 186 587 237 575 210 b 497 128 543 162 522 143 b 406 106 471 113 441 106 b 317 126 371 106 342 113 b 255 182 292 140 271 159 b 219 261 239 205 227 231 b 207 351 211 291 207 321 z m 907 718 l 907 593 l 1276 593 l 879 111 l 879 0 l 1511 0 l 1511 125 l 1079 125 l 1490 607 l 1490 718 z "},"\u01f4":{"ha":1054,"x_min":0,"x_max":0,"o":"m 971 0 l 971 522 l 549 522 l 549 390 l 813 390 b 793 276 812 349 805 311 b 740 190 781 242 763 213 b 653 135 716 166 687 148 b 535 118 619 123 579 117 b 398 150 482 118 436 129 b 304 235 359 171 328 200 b 251 357 280 271 262 312 b 233 496 239 402 233 449 b 251 635 233 543 239 589 b 304 756 262 680 280 721 b 398 842 328 792 359 820 b 535 874 436 863 482 874 b 625 861 566 874 596 869 b 703 824 654 853 680 840 b 760 762 726 807 745 786 b 790 676 776 737 786 709 l 960 676 b 913 824 953 732 938 781 b 818 930 888 866 856 902 b 688 994 780 958 737 979 b 535 1015 640 1008 588 1015 b 335 974 461 1015 394 1001 b 186 861 277 946 227 908 b 92 696 145 814 114 759 b 60 496 71 633 60 566 b 92 294 60 425 71 357 b 186 129 114 231 145 176 b 335 17 227 82 277 45 b 535 -24 394 -10 461 -24 b 694 7 595 -24 648 -13 b 833 117 741 27 787 64 l 860 0 z m 592 1283 l 467 1085 l 582 1085 l 779 1283 z "},"\u01f5":{"ha":824,"x_min":0,"x_max":0,"o":"m 747 38 l 747 718 l 589 718 l 589 619 l 586 619 b 499 709 566 660 537 690 b 374 738 461 728 419 738 b 237 708 323 738 277 728 b 135 630 197 689 163 663 b 71 515 107 597 86 559 b 49 378 56 472 49 426 b 67 232 49 326 55 277 b 124 112 79 187 98 147 b 224 30 151 77 184 50 b 371 0 265 10 313 0 b 495 33 415 0 457 11 b 586 126 534 56 564 87 l 589 126 l 589 17 b 544 -119 589 -43 574 -88 b 404 -167 515 -151 468 -167 b 346 -163 384 -167 364 -166 b 295 -148 327 -161 310 -156 b 256 -115 280 -140 267 -129 b 232 -61 244 -101 237 -83 l 74 -61 b 110 -167 77 -103 89 -138 b 185 -236 130 -195 155 -219 b 285 -274 216 -254 249 -266 b 394 -285 322 -281 358 -285 b 656 -205 508 -285 596 -258 b 747 38 717 -152 747 -71 z m 396 125 b 310 146 363 125 334 132 b 252 200 287 160 267 178 b 218 276 237 222 225 247 b 207 363 211 304 207 333 b 217 452 207 392 210 422 b 249 533 223 482 234 509 b 307 590 263 556 283 575 b 396 613 331 605 361 613 b 484 593 430 613 459 606 b 544 540 509 580 528 563 b 578 464 559 518 570 493 b 589 375 585 435 589 406 b 578 284 589 344 585 314 b 545 203 572 254 560 227 b 485 147 530 180 510 161 b 396 125 461 132 431 125 z m 422 1013 l 297 814 l 413 814 l 610 1013 z "},"\u01f8":{"ha":1003,"x_min":0,"x_max":0,"o":"m 99 992 l 99 0 l 264 0 l 264 729 l 268 729 l 719 0 l 903 0 l 903 992 l 738 992 l 738 261 l 735 261 l 282 992 z m 483 1256 l 297 1256 l 494 1057 l 610 1057 z "},"\u01f9":{"ha":797,"x_min":0,"x_max":0,"o":"m 83 718 l 83 0 l 242 0 l 242 424 b 254 497 242 450 246 474 b 289 558 263 520 274 541 b 343 598 304 575 322 588 b 415 613 364 608 388 613 b 519 574 463 613 497 600 b 556 451 542 549 554 508 l 556 0 l 714 0 l 714 493 b 646 676 714 575 691 636 b 460 738 600 717 538 738 b 331 703 413 738 369 726 b 236 610 292 681 260 650 l 233 613 l 233 718 z m 393 1006 l 207 1006 l 404 807 l 519 807 z "},"\u01fa":{"ha":926,"x_min":0,"x_max":0,"o":"m 371 992 l -10 0 l 169 0 l 263 263 l 658 263 l 751 0 l 938 0 l 556 992 z m 310 394 l 460 821 l 464 821 l 613 394 z m 381 1204 b 405 1265 381 1229 389 1250 b 464 1289 421 1281 441 1289 b 524 1265 488 1289 508 1281 b 547 1204 539 1250 547 1229 b 524 1144 547 1180 539 1160 b 464 1119 508 1128 488 1119 b 405 1144 441 1119 421 1128 b 381 1204 389 1160 381 1180 z m 464 1061 b 519 1072 483 1061 502 1065 b 565 1101 536 1078 551 1088 b 597 1146 579 1113 590 1128 b 608 1204 605 1163 608 1183 b 597 1263 608 1225 605 1245 b 565 1308 590 1280 579 1295 b 519 1338 551 1321 536 1331 b 464 1347 502 1344 483 1347 b 409 1338 444 1347 426 1344 b 363 1308 392 1331 377 1321 b 331 1263 350 1295 339 1280 b 319 1204 323 1245 319 1225 b 331 1146 319 1183 323 1163 b 362 1101 338 1128 348 1113 b 408 1072 375 1088 391 1078 b 464 1061 426 1065 444 1061 z m 493 1611 l 368 1413 l 483 1413 l 681 1611 z "},"\u01fb":{"ha":772,"x_min":0,"x_max":0,"o":"m 685 160 l 685 529 b 660 626 685 567 676 599 b 594 690 643 652 621 674 b 501 726 566 707 536 719 b 397 738 467 734 432 738 b 281 726 357 738 319 734 b 178 688 243 719 209 706 b 104 614 148 669 124 644 b 71 499 85 583 74 545 l 229 499 b 278 585 233 538 249 566 b 388 613 306 603 343 613 b 438 609 403 613 420 611 b 485 595 455 607 471 602 b 522 565 500 588 512 578 b 536 515 531 552 536 536 b 519 463 536 492 530 475 b 472 438 507 452 491 443 b 403 426 452 432 429 428 b 321 414 377 423 350 419 b 222 398 288 410 254 405 b 133 364 189 391 159 380 b 69 299 106 348 85 326 b 44 190 53 271 44 235 b 65 98 44 155 51 124 b 119 33 78 72 96 50 b 197 -6 141 16 168 3 b 290 -19 227 -15 258 -19 b 423 1 333 -19 377 -12 b 539 68 469 15 507 38 b 581 0 545 36 559 13 b 661 -19 602 -13 629 -19 b 685 -18 668 -19 675 -19 b 713 -14 694 -17 703 -16 b 740 -8 722 -12 731 -10 b 761 -1 748 -5 756 -3 l 761 108 b 739 106 753 106 745 106 l 722 106 b 692 118 707 106 697 110 b 685 160 687 126 685 140 z m 526 360 l 526 242 b 508 178 526 217 520 196 b 463 136 496 161 481 147 b 406 113 445 125 426 117 b 349 106 385 108 366 106 b 302 110 335 106 319 107 b 255 124 285 113 269 117 b 218 153 241 131 228 141 b 203 197 208 165 203 180 b 213 249 203 218 206 235 b 242 284 220 264 230 275 b 283 305 254 293 268 300 b 332 317 299 310 315 314 b 438 331 367 323 402 328 b 526 360 473 334 502 344 z m 319 950 b 344 1011 319 975 328 995 b 403 1035 360 1027 380 1035 b 463 1011 427 1035 447 1027 b 486 950 478 995 486 975 b 463 890 486 926 478 906 b 403 865 447 873 427 865 b 344 890 380 865 360 873 b 319 950 328 906 319 926 z m 403 807 b 458 817 422 807 441 810 b 504 847 475 824 490 834 b 536 892 518 859 529 874 b 547 950 544 909 547 929 b 536 1008 547 971 544 991 b 504 1054 529 1026 518 1041 b 458 1083 490 1067 475 1077 b 403 1093 441 1090 422 1093 b 348 1083 383 1093 365 1090 b 302 1054 331 1077 316 1067 b 270 1008 289 1041 278 1026 b 258 950 262 991 258 971 b 269 892 258 929 262 909 b 301 847 277 874 287 859 b 347 817 314 834 330 824 b 403 807 365 810 383 807 z m 451 1365 l 326 1167 l 442 1167 l 639 1365 z "},"\u01fc":{"ha":1338,"x_min":0,"x_max":0,"o":"m 483 992 l -10 0 l 183 0 l 303 254 l 635 254 l 635 0 l 1292 0 l 1292 150 l 800 150 l 800 440 l 1253 440 l 1253 582 l 800 582 l 800 842 l 1283 842 l 1283 992 z m 367 386 l 585 842 l 635 842 l 635 386 z m 879 1276 l 754 1078 l 869 1078 l 1067 1276 z "},"\u01fd":{"ha":1235,"x_min":0,"x_max":0,"o":"m 1192 226 l 1033 226 b 971 138 1020 188 1000 159 b 864 106 942 116 906 106 b 779 124 831 106 803 112 b 720 171 755 136 735 151 b 687 238 705 190 694 213 b 676 318 680 264 676 290 l 1197 318 b 1186 484 1201 377 1197 433 b 1128 617 1175 535 1156 580 b 1022 706 1101 655 1066 684 b 864 738 978 727 925 738 b 738 715 820 738 778 730 b 636 640 697 700 663 675 b 588 690 622 661 606 677 b 528 720 569 703 549 713 b 461 734 506 727 484 732 b 393 738 438 736 415 738 b 279 726 354 738 316 734 b 178 688 242 719 209 706 b 104 614 148 669 124 644 b 71 499 85 583 74 545 l 229 499 b 278 585 233 538 249 566 b 388 613 306 603 343 613 b 436 609 403 613 419 611 b 481 595 453 607 468 602 b 515 565 495 588 506 578 b 528 515 523 552 528 536 b 511 463 528 492 522 475 b 467 438 500 452 485 443 b 401 426 448 432 426 428 b 321 414 376 423 350 419 b 222 398 288 410 254 405 b 133 364 189 391 159 380 b 69 299 106 348 85 326 b 44 190 53 271 44 235 b 65 98 44 155 51 124 b 120 33 78 72 97 50 b 203 -6 144 16 171 3 b 304 -19 234 -15 268 -19 b 476 11 365 -19 422 -9 b 603 113 529 31 571 65 b 715 10 631 63 668 29 b 867 -19 763 -10 813 -19 b 1074 46 946 -19 1015 2 b 1192 226 1132 89 1171 150 z m 526 357 l 526 250 b 510 188 526 226 521 205 b 469 142 500 170 486 155 b 413 115 453 130 434 121 b 347 106 391 109 369 106 b 297 110 331 106 314 107 b 250 124 279 113 264 117 b 216 152 236 131 225 141 b 203 197 207 164 203 179 b 213 249 203 218 206 235 b 242 284 220 264 230 275 b 283 305 254 293 268 300 b 333 317 299 310 316 314 b 390 324 352 319 371 322 b 445 330 410 325 428 328 b 492 339 462 332 478 335 b 526 357 507 343 518 349 z m 1039 422 l 676 422 b 692 495 678 448 683 472 b 727 556 700 518 712 538 b 783 597 742 573 761 587 b 857 613 804 607 829 613 b 992 560 915 613 960 595 b 1039 422 1024 526 1040 480 z m 679 1013 l 554 814 l 669 814 l 867 1013 z "},"\u01fe":{"ha":1056,"x_min":0,"x_max":0,"o":"m 1000 969 l 940 1019 l 836 903 b 701 985 797 938 752 966 b 528 1015 649 1005 592 1015 b 328 974 454 1015 387 1001 b 179 861 270 946 220 908 b 85 696 138 814 107 759 b 53 496 64 633 53 566 b 82 306 53 428 63 365 b 165 147 101 246 129 194 l 56 22 l 114 -28 l 219 90 b 355 7 258 55 303 27 b 528 -24 406 -13 464 -24 b 727 17 602 -24 668 -10 b 876 129 786 45 836 82 b 970 294 917 176 948 231 b 1003 496 992 357 1003 425 b 974 686 1003 563 993 627 b 890 846 954 745 926 799 z m 322 206 l 778 719 b 817 613 796 687 809 652 b 829 496 825 575 829 536 b 812 357 829 449 823 402 b 758 235 800 312 782 271 b 665 150 734 200 703 171 b 528 118 626 129 581 118 b 410 142 483 118 444 126 b 322 206 377 157 347 179 z m 733 786 l 276 272 b 238 378 259 305 246 340 b 226 496 230 416 226 455 b 244 635 226 543 232 589 b 297 756 255 680 273 721 b 391 842 321 792 353 820 b 528 874 429 863 475 874 b 648 850 574 874 614 866 b 733 786 682 834 710 813 z m 613 1292 l 488 1093 l 603 1093 l 800 1292 z "},"\u01ff":{"ha":824,"x_min":0,"x_max":0,"o":"m 550 554 l 240 215 b 216 285 229 237 221 260 b 208 360 211 310 208 335 b 220 451 208 390 212 421 b 257 533 228 482 240 509 b 321 590 274 556 295 575 b 413 613 347 605 377 613 b 491 597 442 613 468 607 b 550 554 514 587 533 573 z m 44 0 l 89 -39 l 178 58 b 281 1 207 33 242 14 b 413 -19 321 -13 364 -19 b 566 9 470 -19 521 -10 b 680 88 611 28 649 54 b 751 207 711 121 734 161 b 775 360 767 253 775 304 b 690 619 775 463 747 550 l 781 718 l 736 757 l 649 661 b 545 717 619 685 584 704 b 413 738 506 731 462 738 b 259 709 355 738 304 728 b 145 631 214 690 176 664 b 74 511 114 597 91 557 b 50 360 58 465 50 414 b 135 100 50 254 78 168 z m 275 164 l 585 503 b 609 434 596 481 604 459 b 617 360 614 409 617 385 b 605 267 617 328 613 297 b 568 186 597 237 585 210 b 504 128 551 162 530 143 b 413 106 478 113 448 106 b 334 121 383 106 357 111 b 275 164 311 131 292 145 z m 446 1029 l 321 831 l 436 831 l 633 1029 z "},"\u0200":{"ha":926,"x_min":0,"x_max":0,"o":"m 371 992 l -10 0 l 169 0 l 263 263 l 658 263 l 751 0 l 938 0 l 556 992 z m 310 394 l 460 821 l 464 821 l 613 394 z m 683 1092 l 558 1290 l 369 1290 l 569 1092 z m 407 1092 l 282 1290 l 93 1290 l 293 1092 z "},"\u0201":{"ha":772,"x_min":0,"x_max":0,"o":"m 685 160 l 685 529 b 660 626 685 567 676 599 b 594 690 643 652 621 674 b 501 726 566 707 536 719 b 397 738 467 734 432 738 b 281 726 357 738 319 734 b 178 688 243 719 209 706 b 104 614 148 669 124 644 b 71 499 85 583 74 545 l 229 499 b 278 585 233 538 249 566 b 388 613 306 603 343 613 b 438 609 403 613 420 611 b 485 595 455 607 471 602 b 522 565 500 588 512 578 b 536 515 531 552 536 536 b 519 463 536 492 530 475 b 472 438 507 452 491 443 b 403 426 452 432 429 428 b 321 414 377 423 350 419 b 222 398 288 410 254 405 b 133 364 189 391 159 380 b 69 299 106 348 85 326 b 44 190 53 271 44 235 b 65 98 44 155 51 124 b 119 33 78 72 96 50 b 197 -6 141 16 168 3 b 290 -19 227 -15 258 -19 b 423 1 333 -19 377 -12 b 539 68 469 15 507 38 b 581 0 545 36 559 13 b 661 -19 602 -13 629 -19 b 685 -18 668 -19 675 -19 b 713 -14 694 -17 703 -16 b 740 -8 722 -12 731 -10 b 761 -1 748 -5 756 -3 l 761 108 b 739 106 753 106 745 106 l 722 106 b 692 118 707 106 697 110 b 685 160 687 126 685 140 z m 526 360 l 526 242 b 508 178 526 217 520 196 b 463 136 496 161 481 147 b 406 113 445 125 426 117 b 349 106 385 108 366 106 b 302 110 335 106 319 107 b 255 124 285 113 269 117 b 218 153 241 131 228 141 b 203 197 208 165 203 180 b 213 249 203 218 206 235 b 242 284 220 264 230 275 b 283 305 254 293 268 300 b 332 317 299 310 315 314 b 438 331 367 323 402 328 b 526 360 473 334 502 344 z m 615 818 l 490 1017 l 301 1017 l 501 818 z m 339 818 l 214 1017 l 25 1017 l 225 818 z "},"\u0202":{"ha":926,"x_min":0,"x_max":0,"o":"m 371 992 l -10 0 l 169 0 l 263 263 l 658 263 l 751 0 l 938 0 l 556 992 z m 310 394 l 460 821 l 464 821 l 613 394 z m 607 1093 l 688 1093 b 622 1239 682 1157 660 1206 b 469 1289 584 1272 533 1289 b 312 1241 406 1289 353 1273 b 239 1093 271 1209 246 1160 l 318 1093 b 367 1172 325 1128 342 1155 b 458 1199 393 1190 423 1199 b 555 1175 495 1199 528 1191 b 607 1093 582 1159 600 1132 z "},"\u0203":{"ha":772,"x_min":0,"x_max":0,"o":"m 685 160 l 685 529 b 660 626 685 567 676 599 b 594 690 643 652 621 674 b 501 726 566 707 536 719 b 397 738 467 734 432 738 b 281 726 357 738 319 734 b 178 688 243 719 209 706 b 104 614 148 669 124 644 b 71 499 85 583 74 545 l 229 499 b 278 585 233 538 249 566 b 388 613 306 603 343 613 b 438 609 403 613 420 611 b 485 595 455 607 471 602 b 522 565 500 588 512 578 b 536 515 531 552 536 536 b 519 463 536 492 530 475 b 472 438 507 452 491 443 b 403 426 452 432 429 428 b 321 414 377 423 350 419 b 222 398 288 410 254 405 b 133 364 189 391 159 380 b 69 299 106 348 85 326 b 44 190 53 271 44 235 b 65 98 44 155 51 124 b 119 33 78 72 96 50 b 197 -6 141 16 168 3 b 290 -19 227 -15 258 -19 b 423 1 333 -19 377 -12 b 539 68 469 15 507 38 b 581 0 545 36 559 13 b 661 -19 602 -13 629 -19 b 685 -18 668 -19 675 -19 b 713 -14 694 -17 703 -16 b 740 -8 722 -12 731 -10 b 761 -1 748 -5 756 -3 l 761 108 b 739 106 753 106 745 106 l 722 106 b 692 118 707 106 697 110 b 685 160 687 126 685 140 z m 526 360 l 526 242 b 508 178 526 217 520 196 b 463 136 496 161 481 147 b 406 113 445 125 426 117 b 349 106 385 108 366 106 b 302 110 335 106 319 107 b 255 124 285 113 269 117 b 218 153 241 131 228 141 b 203 197 208 165 203 180 b 213 249 203 218 206 235 b 242 284 220 264 230 275 b 283 305 254 293 268 300 b 332 317 299 310 315 314 b 438 331 367 323 402 328 b 526 360 473 334 502 344 z m 535 819 l 615 819 b 550 965 610 883 588 932 b 397 1015 512 999 461 1015 b 240 967 333 1015 281 999 b 167 819 198 935 174 886 l 246 819 b 295 899 253 855 270 881 b 386 925 321 916 351 925 b 483 901 423 925 455 917 b 535 819 510 886 527 858 z "},"\u0204":{"ha":875,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 829 0 l 829 150 l 279 150 l 279 440 l 779 440 l 779 582 l 279 582 l 279 842 l 819 842 l 819 992 z m 690 1092 l 565 1290 l 376 1290 l 576 1092 z m 414 1092 l 289 1290 l 100 1290 l 300 1092 z "},"\u0205":{"ha":772,"x_min":0,"x_max":0,"o":"m 576 422 l 207 422 b 223 497 208 449 213 474 b 262 558 233 520 246 541 b 320 598 278 575 297 588 b 396 613 343 608 368 613 b 469 597 423 613 447 607 b 524 555 491 586 509 572 b 560 494 540 538 552 518 b 576 422 569 471 575 447 z m 207 318 l 735 318 b 724 474 741 372 738 424 b 660 608 711 525 689 569 b 548 702 630 647 593 678 b 396 738 503 726 452 738 b 251 707 342 738 294 727 b 142 624 209 687 172 659 b 73 503 112 590 89 549 b 49 358 57 458 49 409 b 72 206 49 303 56 252 b 140 86 87 159 109 119 b 250 8 170 53 206 27 b 400 -19 294 -10 344 -19 b 512 -3 439 -19 476 -14 b 608 44 547 7 580 23 b 682 121 637 65 662 90 b 725 225 702 151 717 186 l 575 225 b 512 135 561 185 540 155 b 400 106 484 116 446 106 b 314 123 367 106 338 111 b 254 169 290 134 270 150 b 219 238 238 189 227 212 b 207 318 211 263 207 290 z m 639 818 l 514 1017 l 325 1017 l 525 818 z m 363 818 l 238 1017 l 49 1017 l 249 818 z "},"\u0206":{"ha":875,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 829 0 l 829 150 l 279 150 l 279 440 l 779 440 l 779 582 l 279 582 l 279 842 l 819 842 l 819 992 z m 622 1093 l 703 1093 b 638 1239 697 1157 675 1206 b 485 1289 600 1272 549 1289 b 327 1241 421 1289 368 1273 b 254 1093 286 1209 262 1160 l 333 1093 b 383 1172 341 1128 357 1155 b 474 1199 408 1190 438 1199 b 570 1175 511 1199 543 1191 b 622 1093 597 1159 615 1132 z "},"\u0207":{"ha":772,"x_min":0,"x_max":0,"o":"m 576 422 l 207 422 b 223 497 208 449 213 474 b 262 558 233 520 246 541 b 320 598 278 575 297 588 b 396 613 343 608 368 613 b 469 597 423 613 447 607 b 524 555 491 586 509 572 b 560 494 540 538 552 518 b 576 422 569 471 575 447 z m 207 318 l 735 318 b 724 474 741 372 738 424 b 660 608 711 525 689 569 b 548 702 630 647 593 678 b 396 738 503 726 452 738 b 251 707 342 738 294 727 b 142 624 209 687 172 659 b 73 503 112 590 89 549 b 49 358 57 458 49 409 b 72 206 49 303 56 252 b 140 86 87 159 109 119 b 250 8 170 53 206 27 b 400 -19 294 -10 344 -19 b 512 -3 439 -19 476 -14 b 608 44 547 7 580 23 b 682 121 637 65 662 90 b 725 225 702 151 717 186 l 575 225 b 512 135 561 185 540 155 b 400 106 484 116 446 106 b 314 123 367 106 338 111 b 254 169 290 134 270 150 b 219 238 238 189 227 212 b 207 318 211 263 207 290 z m 529 819 l 610 819 b 544 965 604 883 582 932 b 392 1015 506 999 456 1015 b 234 967 328 1015 275 999 b 161 819 193 935 169 886 l 240 819 b 290 899 248 855 264 881 b 381 925 315 916 345 925 b 477 901 418 925 450 917 b 529 819 504 886 522 858 z "},"\u0208":{"ha":386,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 279 0 l 279 992 z m 404 1092 l 279 1290 l 90 1290 l 290 1092 z m 128 1092 l 3 1290 l -186 1290 l 14 1092 z "},"\u0209":{"ha":381,"x_min":0,"x_max":0,"o":"m 133 0 l 292 0 l 292 718 l 133 718 z m 439 818 l 314 1017 l 125 1017 l 325 818 z m 163 818 l 38 1017 l -151 1017 l 49 818 z "},"\u020a":{"ha":386,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 279 0 l 279 992 z m 336 1093 l 417 1093 b 351 1239 411 1157 389 1206 b 199 1289 313 1272 263 1289 b 41 1241 135 1289 82 1273 b -32 1093 0 1209 -25 1160 l 47 1093 b 97 1172 55 1128 71 1155 b 188 1199 122 1190 152 1199 b 284 1175 225 1199 257 1191 b 336 1093 311 1159 329 1132 z "},"\u020b":{"ha":390,"x_min":0,"x_max":0,"o":"m 115 0 l 274 0 l 274 718 l 115 718 z m 339 819 l 419 819 b 354 965 414 883 392 932 b 201 1015 316 999 265 1015 b 44 967 138 1015 85 999 b -29 819 3 935 -22 886 l 50 819 b 99 899 57 855 74 881 b 190 925 125 916 155 925 b 287 901 227 925 259 917 b 339 819 314 886 331 858 z "},"\u020c":{"ha":1056,"x_min":0,"x_max":0,"o":"m 528 874 b 665 842 581 874 626 863 b 758 756 703 820 734 792 b 812 635 782 721 800 680 b 829 496 823 589 829 543 b 812 357 829 449 823 402 b 758 235 800 312 782 271 b 665 150 734 200 703 171 b 528 118 626 129 581 118 b 391 150 475 118 429 129 b 297 235 353 171 321 200 b 244 357 273 271 255 312 b 226 496 232 402 226 449 b 244 635 226 543 232 589 b 297 756 255 680 273 721 b 391 842 321 792 353 820 b 528 874 429 863 475 874 z m 528 1015 b 328 974 454 1015 387 1001 b 179 861 270 946 220 908 b 85 696 138 814 107 759 b 53 496 64 633 53 566 b 85 294 53 425 64 357 b 179 129 107 231 138 176 b 328 17 220 82 270 45 b 528 -24 387 -10 454 -24 b 727 17 602 -24 668 -10 b 876 129 786 45 836 82 b 970 294 917 176 948 231 b 1003 496 992 357 1003 425 b 970 696 1003 566 992 633 b 876 861 948 759 917 814 b 727 974 836 908 786 946 b 528 1015 668 1001 602 1015 z m 753 1092 l 628 1290 l 439 1290 l 639 1092 z m 476 1092 l 351 1290 l 163 1290 l 363 1092 z "},"\u020d":{"ha":824,"x_min":0,"x_max":0,"o":"m 413 -19 b 566 9 470 -19 521 -10 b 680 88 611 28 649 54 b 751 207 711 121 734 161 b 775 360 767 253 775 304 b 751 511 775 414 767 465 b 680 631 734 557 711 597 b 566 709 649 664 611 690 b 413 738 521 728 470 738 b 259 709 355 738 304 728 b 145 631 214 690 176 664 b 74 511 114 597 91 557 b 50 360 58 465 50 414 b 74 207 50 304 58 253 b 145 88 91 161 114 121 b 259 9 176 54 214 28 b 413 -19 304 -10 355 -19 z m 413 106 b 321 128 377 106 347 113 b 257 186 295 143 274 162 b 220 267 240 210 228 237 b 208 360 212 297 208 328 b 220 451 208 390 212 421 b 257 533 228 482 240 509 b 321 590 274 556 295 575 b 413 613 347 605 377 613 b 504 590 448 613 478 605 b 568 533 530 575 551 556 b 605 451 585 509 597 482 b 617 360 613 421 617 390 b 605 267 617 328 613 297 b 568 186 597 237 585 210 b 504 128 551 162 530 143 b 413 106 478 113 448 106 z m 651 818 l 526 1017 l 338 1017 l 538 818 z m 375 818 l 250 1017 l 61 1017 l 261 818 z "},"\u020e":{"ha":1056,"x_min":0,"x_max":0,"o":"m 528 874 b 665 842 581 874 626 863 b 758 756 703 820 734 792 b 812 635 782 721 800 680 b 829 496 823 589 829 543 b 812 357 829 449 823 402 b 758 235 800 312 782 271 b 665 150 734 200 703 171 b 528 118 626 129 581 118 b 391 150 475 118 429 129 b 297 235 353 171 321 200 b 244 357 273 271 255 312 b 226 496 232 402 226 449 b 244 635 226 543 232 589 b 297 756 255 680 273 721 b 391 842 321 792 353 820 b 528 874 429 863 475 874 z m 528 1015 b 328 974 454 1015 387 1001 b 179 861 270 946 220 908 b 85 696 138 814 107 759 b 53 496 64 633 53 566 b 85 294 53 425 64 357 b 179 129 107 231 138 176 b 328 17 220 82 270 45 b 528 -24 387 -10 454 -24 b 727 17 602 -24 668 -10 b 876 129 786 45 836 82 b 970 294 917 176 948 231 b 1003 496 992 357 1003 425 b 970 696 1003 566 992 633 b 876 861 948 759 917 814 b 727 974 836 908 786 946 b 528 1015 668 1001 602 1015 z m 671 1093 l 751 1093 b 686 1239 746 1157 724 1206 b 533 1289 648 1272 597 1289 b 376 1241 469 1289 417 1273 b 303 1093 334 1209 310 1160 l 382 1093 b 431 1172 389 1128 406 1155 b 522 1199 457 1190 487 1199 b 619 1175 559 1199 591 1191 b 671 1093 646 1159 663 1132 z "},"\u020f":{"ha":824,"x_min":0,"x_max":0,"o":"m 413 -19 b 566 9 470 -19 521 -10 b 680 88 611 28 649 54 b 751 207 711 121 734 161 b 775 360 767 253 775 304 b 751 511 775 414 767 465 b 680 631 734 557 711 597 b 566 709 649 664 611 690 b 413 738 521 728 470 738 b 259 709 355 738 304 728 b 145 631 214 690 176 664 b 74 511 114 597 91 557 b 50 360 58 465 50 414 b 74 207 50 304 58 253 b 145 88 91 161 114 121 b 259 9 176 54 214 28 b 413 -19 304 -10 355 -19 z m 413 106 b 321 128 377 106 347 113 b 257 186 295 143 274 162 b 220 267 240 210 228 237 b 208 360 212 297 208 328 b 220 451 208 390 212 421 b 257 533 228 482 240 509 b 321 590 274 556 295 575 b 413 613 347 605 377 613 b 504 590 448 613 478 605 b 568 533 530 575 551 556 b 605 451 585 509 597 482 b 617 360 613 421 617 390 b 605 267 617 328 613 297 b 568 186 597 237 585 210 b 504 128 551 162 530 143 b 413 106 478 113 448 106 z m 556 819 l 636 819 b 571 965 631 883 609 932 b 418 1015 533 999 482 1015 b 260 967 354 1015 302 999 b 188 819 219 935 195 886 l 267 819 b 316 899 274 855 291 881 b 407 925 341 916 372 925 b 503 901 444 925 476 917 b 556 819 531 886 548 858 z "},"\u0210":{"ha":978,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 279 0 l 279 408 l 535 408 b 633 393 575 408 607 403 b 693 345 658 383 678 367 b 724 263 708 323 718 296 b 732 146 729 230 732 191 b 735 71 732 122 733 97 b 758 0 738 45 745 21 l 944 0 b 903 102 926 20 912 54 b 890 261 895 150 890 203 b 876 358 890 300 885 332 b 839 422 866 384 854 405 b 791 457 824 438 808 450 b 743 471 774 464 758 469 l 743 474 b 783 490 751 476 765 482 b 838 531 801 499 819 512 b 886 606 856 550 872 575 b 907 724 900 637 907 676 b 825 921 907 808 880 874 b 579 992 770 968 688 992 z m 279 540 l 279 850 l 561 850 b 626 844 583 850 605 848 b 681 822 647 841 665 833 b 719 776 697 811 710 796 b 733 699 729 756 733 730 b 690 580 733 646 719 606 b 564 540 662 553 619 540 z m 728 1092 l 603 1290 l 414 1290 l 614 1092 z m 451 1092 l 326 1290 l 138 1290 l 338 1092 z "},"\u0211":{"ha":489,"x_min":0,"x_max":0,"o":"m 83 718 l 83 0 l 242 0 l 242 342 b 257 447 242 381 247 417 b 299 524 267 478 281 503 b 360 572 316 545 337 561 b 436 588 384 582 409 588 b 470 585 447 588 459 587 b 504 581 482 584 493 582 l 504 733 b 483 736 497 734 490 735 b 444 738 476 737 463 738 b 374 724 420 738 397 733 b 310 687 350 714 329 702 b 262 636 291 672 275 655 b 235 579 248 618 239 599 l 232 579 l 232 718 z m 525 818 l 400 1017 l 211 1017 l 411 818 z m 249 818 l 124 1017 l -65 1017 l 135 818 z "},"\u0212":{"ha":978,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 279 0 l 279 408 l 535 408 b 633 393 575 408 607 403 b 693 345 658 383 678 367 b 724 263 708 323 718 296 b 732 146 729 230 732 191 b 735 71 732 122 733 97 b 758 0 738 45 745 21 l 944 0 b 903 102 926 20 912 54 b 890 261 895 150 890 203 b 876 358 890 300 885 332 b 839 422 866 384 854 405 b 791 457 824 438 808 450 b 743 471 774 464 758 469 l 743 474 b 783 490 751 476 765 482 b 838 531 801 499 819 512 b 886 606 856 550 872 575 b 907 724 900 637 907 676 b 825 921 907 808 880 874 b 579 992 770 968 688 992 z m 279 540 l 279 850 l 561 850 b 626 844 583 850 605 848 b 681 822 647 841 665 833 b 719 776 697 811 710 796 b 733 699 729 756 733 730 b 690 580 733 646 719 606 b 564 540 662 553 619 540 z m 618 1093 l 699 1093 b 633 1239 693 1157 671 1206 b 481 1289 595 1272 544 1289 b 323 1241 417 1289 364 1273 b 250 1093 282 1209 257 1160 l 329 1093 b 378 1172 337 1128 353 1155 b 469 1199 404 1190 434 1199 b 566 1175 506 1199 539 1191 b 618 1093 593 1159 611 1132 z "},"\u0213":{"ha":489,"x_min":0,"x_max":0,"o":"m 83 718 l 83 0 l 242 0 l 242 342 b 257 447 242 381 247 417 b 299 524 267 478 281 503 b 360 572 316 545 337 561 b 436 588 384 582 409 588 b 470 585 447 588 459 587 b 504 581 482 584 493 582 l 504 733 b 483 736 497 734 490 735 b 444 738 476 737 463 738 b 374 724 420 738 397 733 b 310 687 350 714 329 702 b 262 636 291 672 275 655 b 235 579 248 618 239 599 l 232 579 l 232 718 z m 432 819 l 513 819 b 447 965 507 883 485 932 b 294 1015 409 999 358 1015 b 137 967 231 1015 178 999 b 64 819 96 935 71 886 l 143 819 b 192 899 150 855 167 881 b 283 925 218 916 248 925 b 380 901 320 925 353 917 b 432 819 407 886 425 858 z "},"\u0214":{"ha":1003,"x_min":0,"x_max":0,"o":"m 94 992 l 94 357 b 124 190 94 293 104 238 b 206 72 143 143 171 103 b 335 0 242 40 285 16 b 501 -24 385 -16 440 -24 b 668 0 563 -24 618 -16 b 797 72 718 16 761 40 b 879 190 832 103 860 143 b 908 357 899 238 908 293 l 908 992 l 735 992 l 735 414 b 730 313 735 381 733 347 b 702 220 727 278 717 247 b 633 153 687 193 664 170 b 501 126 602 135 558 126 b 370 153 445 126 401 135 b 301 220 339 170 316 193 b 273 313 285 247 276 278 b 268 414 270 347 268 381 l 268 992 z m 710 1092 l 585 1290 l 396 1290 l 596 1092 z m 433 1092 l 308 1290 l 119 1290 l 319 1092 z "},"\u0215":{"ha":797,"x_min":0,"x_max":0,"o":"m 714 0 l 714 718 l 556 718 l 556 301 b 547 224 556 274 553 248 b 517 162 541 200 531 179 b 463 121 503 145 485 131 b 379 106 440 111 413 106 b 278 144 336 106 302 119 b 242 278 254 170 242 215 l 242 718 l 83 718 l 83 263 b 147 51 83 168 104 97 b 351 -19 189 4 257 -19 b 469 13 391 -19 430 -9 b 556 100 507 35 536 64 l 558 100 l 558 0 z m 624 818 l 499 1017 l 310 1017 l 510 818 z m 347 818 l 222 1017 l 33 1017 l 233 818 z "},"\u0216":{"ha":1003,"x_min":0,"x_max":0,"o":"m 94 992 l 94 357 b 124 190 94 293 104 238 b 206 72 143 143 171 103 b 335 0 242 40 285 16 b 501 -24 385 -16 440 -24 b 668 0 563 -24 618 -16 b 797 72 718 16 761 40 b 879 190 832 103 860 143 b 908 357 899 238 908 293 l 908 992 l 735 992 l 735 414 b 730 313 735 381 733 347 b 702 220 727 278 717 247 b 633 153 687 193 664 170 b 501 126 602 135 558 126 b 370 153 445 126 401 135 b 301 220 339 170 316 193 b 273 313 285 247 276 278 b 268 414 270 347 268 381 l 268 992 z m 644 1093 l 725 1093 b 660 1239 719 1157 698 1206 b 507 1289 622 1272 571 1289 b 349 1241 443 1289 391 1273 b 276 1093 308 1209 284 1160 l 356 1093 b 405 1172 363 1128 379 1155 b 496 1199 430 1190 461 1199 b 592 1175 533 1199 565 1191 b 644 1093 620 1159 637 1132 z "},"\u0217":{"ha":797,"x_min":0,"x_max":0,"o":"m 714 0 l 714 718 l 556 718 l 556 301 b 547 224 556 274 553 248 b 517 162 541 200 531 179 b 463 121 503 145 485 131 b 379 106 440 111 413 106 b 278 144 336 106 302 119 b 242 278 254 170 242 215 l 242 718 l 83 718 l 83 263 b 147 51 83 168 104 97 b 351 -19 189 4 257 -19 b 469 13 391 -19 430 -9 b 556 100 507 35 536 64 l 558 100 l 558 0 z m 542 819 l 622 819 b 557 965 617 883 595 932 b 404 1015 519 999 468 1015 b 247 967 340 1015 288 999 b 174 819 205 935 181 886 l 253 819 b 302 899 260 855 277 881 b 393 925 328 916 358 925 b 490 901 430 925 462 917 b 542 819 517 886 534 858 z "},"\u0218":{"ha":900,"x_min":0,"x_max":0,"o":"m 46 331 b 164 65 48 213 87 125 b 460 -24 241 6 339 -24 b 604 -6 511 -24 559 -18 b 730 48 650 6 691 24 b 821 145 768 72 799 104 b 854 288 843 186 854 234 b 804 441 854 343 838 394 b 661 540 771 488 723 521 b 572 565 646 545 616 553 b 440 600 527 577 483 589 b 375 617 398 611 376 617 b 257 744 296 640 257 682 b 312 843 257 790 275 823 b 439 874 348 863 391 874 b 653 699 572 874 644 815 l 826 699 b 717 931 826 798 790 875 b 446 1015 645 987 554 1015 b 191 940 348 1015 263 990 b 83 724 119 889 83 817 b 303 472 83 594 156 510 b 419 442 334 464 373 454 b 527 414 465 431 501 421 b 599 390 553 406 577 399 b 681 268 653 370 681 329 b 629 162 681 226 663 191 b 471 118 595 133 542 118 b 289 170 396 118 335 135 b 219 331 243 205 219 258 z m 358 -207 l 442 -207 b 379 -257 437 -235 416 -251 l 379 -310 b 540 -193 487 -305 540 -266 l 540 -69 l 358 -69 z "},"\u0219":{"ha":721,"x_min":0,"x_max":0,"o":"m 44 231 b 134 44 46 149 76 87 b 363 -19 192 2 268 -19 b 513 2 416 -19 466 -12 b 633 78 559 16 599 42 b 683 214 666 115 683 160 b 665 302 683 248 677 278 b 610 363 652 327 634 347 b 538 399 586 378 562 391 b 451 424 515 408 486 416 l 403 433 b 353 444 380 438 363 441 b 312 455 344 446 330 450 b 272 469 294 460 281 465 b 244 486 264 474 255 480 b 224 509 234 493 227 500 b 218 539 220 518 218 528 b 242 585 218 558 226 574 b 293 608 259 597 275 604 b 349 613 311 611 329 613 b 494 517 433 613 481 581 l 660 517 b 564 684 651 593 619 648 b 360 738 508 720 440 738 b 257 727 325 738 290 734 b 161 694 224 720 192 709 b 88 630 131 680 106 658 b 60 532 69 602 60 569 b 78 441 60 497 66 466 b 133 380 91 416 109 395 b 204 344 156 365 180 353 b 290 319 228 335 257 327 b 339 309 301 317 318 313 b 388 299 360 305 376 301 b 429 288 399 296 413 292 b 468 274 446 283 459 278 b 497 256 477 269 487 263 b 517 232 506 249 513 241 b 525 200 522 223 524 212 b 511 151 526 181 521 164 b 469 122 501 137 487 128 b 417 109 451 116 434 111 b 365 106 401 107 384 106 b 203 231 265 106 211 147 z m 265 -207 l 349 -207 b 286 -257 344 -235 323 -251 l 286 -310 b 447 -193 394 -305 447 -266 l 447 -69 l 265 -69 z "},"\u021a":{"ha":824,"x_min":0,"x_max":0,"o":"m 11 842 l 325 842 l 325 0 l 499 0 l 499 842 l 814 842 l 814 992 l 11 992 z m 319 -207 l 403 -207 b 340 -257 398 -235 377 -251 l 340 -310 b 501 -193 448 -305 501 -266 l 501 -69 l 319 -69 z "},"\u021b":{"ha":463,"x_min":0,"x_max":0,"o":"m 11 600 l 131 600 l 131 176 b 173 35 132 111 147 64 b 329 -7 199 7 251 -7 b 432 1 351 -7 386 -4 l 432 124 b 365 118 417 120 395 118 b 302 140 332 118 311 125 b 289 217 293 154 289 180 l 289 600 l 432 600 l 432 718 l 289 718 l 289 933 l 131 933 l 131 718 l 11 718 z m 193 -207 l 276 -207 b 214 -257 272 -235 251 -251 l 214 -310 b 375 -193 321 -305 375 -266 l 375 -69 l 193 -69 z "},"\u021e":{"ha":1003,"x_min":0,"x_max":0,"o":"m 101 992 l 101 0 l 275 0 l 275 447 l 726 447 l 726 0 l 900 0 l 900 992 l 726 992 l 726 597 l 275 597 l 275 992 z m 576 1061 l 726 1260 l 597 1260 l 499 1136 l 401 1260 l 274 1260 l 422 1061 z "},"\u021f":{"ha":797,"x_min":0,"x_max":0,"o":"m 83 992 l 83 0 l 242 0 l 242 424 b 254 497 242 450 246 474 b 289 558 263 520 274 541 b 343 598 304 575 322 588 b 415 613 364 608 388 613 b 519 574 463 613 497 600 b 556 451 542 549 554 508 l 556 0 l 714 0 l 714 493 b 646 676 714 575 691 636 b 460 738 600 717 538 738 b 331 705 413 738 370 727 b 244 624 293 683 264 656 l 242 624 l 242 992 z m 475 1061 l 625 1260 l 496 1260 l 397 1136 l 300 1260 l 172 1260 l 321 1061 z "},"\u0226":{"ha":926,"x_min":0,"x_max":0,"o":"m 371 992 l -10 0 l 169 0 l 263 263 l 658 263 l 751 0 l 938 0 l 556 992 z m 310 394 l 460 821 l 464 821 l 613 394 z m 385 1061 l 543 1061 l 543 1211 l 385 1211 z "},"\u0227":{"ha":772,"x_min":0,"x_max":0,"o":"m 685 160 l 685 529 b 660 626 685 567 676 599 b 594 690 643 652 621 674 b 501 726 566 707 536 719 b 397 738 467 734 432 738 b 281 726 357 738 319 734 b 178 688 243 719 209 706 b 104 614 148 669 124 644 b 71 499 85 583 74 545 l 229 499 b 278 585 233 538 249 566 b 388 613 306 603 343 613 b 438 609 403 613 420 611 b 485 595 455 607 471 602 b 522 565 500 588 512 578 b 536 515 531 552 536 536 b 519 463 536 492 530 475 b 472 438 507 452 491 443 b 403 426 452 432 429 428 b 321 414 377 423 350 419 b 222 398 288 410 254 405 b 133 364 189 391 159 380 b 69 299 106 348 85 326 b 44 190 53 271 44 235 b 65 98 44 155 51 124 b 119 33 78 72 96 50 b 197 -6 141 16 168 3 b 290 -19 227 -15 258 -19 b 423 1 333 -19 377 -12 b 539 68 469 15 507 38 b 581 0 545 36 559 13 b 661 -19 602 -13 629 -19 b 685 -18 668 -19 675 -19 b 713 -14 694 -17 703 -16 b 740 -8 722 -12 731 -10 b 761 -1 748 -5 756 -3 l 761 108 b 739 106 753 106 745 106 l 722 106 b 692 118 707 106 697 110 b 685 160 687 126 685 140 z m 526 360 l 526 242 b 508 178 526 217 520 196 b 463 136 496 161 481 147 b 406 113 445 125 426 117 b 349 106 385 108 366 106 b 302 110 335 106 319 107 b 255 124 285 113 269 117 b 218 153 241 131 228 141 b 203 197 208 165 203 180 b 213 249 203 218 206 235 b 242 284 220 264 230 275 b 283 305 254 293 268 300 b 332 317 299 310 315 314 b 438 331 367 323 402 328 b 526 360 473 334 502 344 z m 324 807 l 482 807 l 482 957 l 324 957 z "},"\u0228":{"ha":875,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 829 0 l 829 150 l 279 150 l 279 440 l 779 440 l 779 582 l 279 582 l 279 842 l 819 842 l 819 992 z m 336 -222 l 311 -278 b 378 -302 331 -289 354 -297 b 454 -310 403 -307 428 -310 b 515 -302 475 -310 495 -307 b 568 -280 534 -297 552 -290 b 607 -242 584 -270 597 -257 b 622 -182 617 -226 622 -206 b 611 -136 622 -164 619 -149 b 583 -103 604 -123 594 -112 b 546 -84 572 -95 560 -88 b 504 -78 532 -80 518 -78 b 478 -79 494 -78 485 -78 b 458 -83 470 -80 464 -81 l 457 -82 l 521 0 l 454 0 l 363 -122 l 393 -149 b 447 -135 409 -139 427 -135 b 491 -148 463 -135 478 -139 b 511 -187 504 -157 511 -170 b 503 -217 511 -200 509 -209 b 483 -234 498 -224 492 -230 b 456 -242 475 -238 466 -241 b 426 -244 445 -244 436 -244 b 382 -239 411 -244 396 -243 b 336 -222 368 -235 353 -230 z "},"\u0229":{"ha":772,"x_min":0,"x_max":0,"o":"m 576 422 l 207 422 b 223 497 208 449 213 474 b 262 558 233 520 246 541 b 320 598 278 575 297 588 b 396 613 343 608 368 613 b 469 597 423 613 447 607 b 524 555 491 586 509 572 b 560 494 540 538 552 518 b 576 422 569 471 575 447 z m 207 318 l 735 318 b 724 474 741 372 738 424 b 660 608 711 525 689 569 b 548 702 630 647 593 678 b 396 738 503 726 452 738 b 251 707 342 738 294 727 b 142 624 209 687 172 659 b 73 503 112 590 89 549 b 49 358 57 458 49 409 b 72 206 49 303 56 252 b 140 86 87 159 109 119 b 250 8 170 53 206 27 b 400 -19 294 -10 344 -19 b 512 -3 439 -19 476 -14 b 608 44 547 7 580 23 b 682 121 637 65 662 90 b 725 225 702 151 717 186 l 575 225 b 512 135 561 185 540 155 b 400 106 484 116 446 106 b 314 123 367 106 338 111 b 254 169 290 134 270 150 b 219 238 238 189 227 212 b 207 318 211 263 207 290 z m 265 -242 l 240 -297 b 308 -322 261 -308 283 -316 b 383 -329 332 -327 357 -329 b 444 -322 404 -329 424 -327 b 497 -299 464 -316 481 -309 b 536 -261 513 -290 526 -277 b 551 -201 546 -245 551 -225 b 540 -156 551 -184 548 -169 b 513 -123 533 -143 524 -132 b 475 -103 501 -114 489 -108 b 433 -97 461 -99 447 -97 b 407 -99 423 -97 414 -98 b 388 -103 400 -100 393 -101 l 386 -101 l 450 -19 l 383 -19 l 292 -142 l 322 -168 b 376 -154 338 -159 356 -154 b 420 -167 392 -154 407 -159 b 440 -207 434 -176 440 -189 b 433 -236 440 -219 438 -229 b 413 -253 428 -244 421 -249 b 385 -262 404 -258 395 -260 b 356 -264 375 -263 365 -264 b 311 -258 340 -264 325 -262 b 265 -242 297 -255 282 -249 z "},"\u022a":{"ha":1056,"x_min":0,"x_max":0,"o":"m 528 874 b 665 842 581 874 626 863 b 758 756 703 820 734 792 b 812 635 782 721 800 680 b 829 496 823 589 829 543 b 812 357 829 449 823 402 b 758 235 800 312 782 271 b 665 150 734 200 703 171 b 528 118 626 129 581 118 b 391 150 475 118 429 129 b 297 235 353 171 321 200 b 244 357 273 271 255 312 b 226 496 232 402 226 449 b 244 635 226 543 232 589 b 297 756 255 680 273 721 b 391 842 321 792 353 820 b 528 874 429 863 475 874 z m 528 1015 b 328 974 454 1015 387 1001 b 179 861 270 946 220 908 b 85 696 138 814 107 759 b 53 496 64 633 53 566 b 85 294 53 425 64 357 b 179 129 107 231 138 176 b 328 17 220 82 270 45 b 528 -24 387 -10 454 -24 b 727 17 602 -24 668 -10 b 876 129 786 45 836 82 b 970 294 917 176 948 231 b 1003 496 992 357 1003 425 b 970 696 1003 566 992 633 b 876 861 948 759 917 814 b 727 974 836 908 786 946 b 528 1015 668 1001 602 1015 z m 329 1085 l 488 1085 l 488 1235 l 329 1235 z m 726 1235 l 568 1235 l 568 1085 l 726 1085 z m 328 1304 l 728 1304 l 728 1394 l 328 1394 z "},"\u022b":{"ha":824,"x_min":0,"x_max":0,"o":"m 413 -19 b 566 9 470 -19 521 -10 b 680 88 611 28 649 54 b 751 207 711 121 734 161 b 775 360 767 253 775 304 b 751 511 775 414 767 465 b 680 631 734 557 711 597 b 566 709 649 664 611 690 b 413 738 521 728 470 738 b 259 709 355 738 304 728 b 145 631 214 690 176 664 b 74 511 114 597 91 557 b 50 360 58 465 50 414 b 74 207 50 304 58 253 b 145 88 91 161 114 121 b 259 9 176 54 214 28 b 413 -19 304 -10 355 -19 z m 413 106 b 321 128 377 106 347 113 b 257 186 295 143 274 162 b 220 267 240 210 228 237 b 208 360 212 297 208 328 b 220 451 208 390 212 421 b 257 533 228 482 240 509 b 321 590 274 556 295 575 b 413 613 347 605 377 613 b 504 590 448 613 478 605 b 568 533 530 575 551 556 b 605 451 585 509 597 482 b 617 360 613 421 617 390 b 605 267 617 328 613 297 b 568 186 597 237 585 210 b 504 128 551 162 530 143 b 413 106 478 113 448 106 z m 214 807 l 372 807 l 372 957 l 214 957 z m 611 957 l 453 957 l 453 807 l 611 807 z m 213 1026 l 613 1026 l 613 1117 l 213 1117 z "},"\u022c":{"ha":1056,"x_min":0,"x_max":0,"o":"m 528 874 b 665 842 581 874 626 863 b 758 756 703 820 734 792 b 812 635 782 721 800 680 b 829 496 823 589 829 543 b 812 357 829 449 823 402 b 758 235 800 312 782 271 b 665 150 734 200 703 171 b 528 118 626 129 581 118 b 391 150 475 118 429 129 b 297 235 353 171 321 200 b 244 357 273 271 255 312 b 226 496 232 402 226 449 b 244 635 226 543 232 589 b 297 756 255 680 273 721 b 391 842 321 792 353 820 b 528 874 429 863 475 874 z m 528 1015 b 328 974 454 1015 387 1001 b 179 861 270 946 220 908 b 85 696 138 814 107 759 b 53 496 64 633 53 566 b 85 294 53 425 64 357 b 179 129 107 231 138 176 b 328 17 220 82 270 45 b 528 -24 387 -10 454 -24 b 727 17 602 -24 668 -10 b 876 129 786 45 836 82 b 970 294 917 176 948 231 b 1003 496 992 357 1003 425 b 970 696 1003 566 992 633 b 876 861 948 759 917 814 b 727 974 836 908 786 946 b 528 1015 668 1001 602 1015 z m 774 1250 l 696 1250 b 673 1206 691 1231 684 1217 b 626 1189 662 1194 647 1189 b 588 1195 613 1189 601 1191 b 540 1214 576 1199 560 1206 b 476 1237 512 1226 490 1234 b 428 1242 461 1240 445 1242 b 371 1227 406 1242 388 1237 b 328 1190 354 1217 340 1205 b 299 1139 316 1174 306 1157 b 283 1085 291 1120 286 1102 l 363 1085 b 383 1127 366 1103 373 1117 b 422 1142 392 1137 406 1142 b 465 1136 438 1142 452 1140 b 517 1117 478 1132 495 1126 b 569 1098 534 1109 552 1103 b 619 1090 587 1093 604 1090 b 683 1103 644 1090 666 1094 b 728 1138 701 1111 716 1123 b 758 1188 741 1151 751 1168 b 774 1250 765 1207 770 1228 z m 328 1319 l 728 1319 l 728 1410 l 328 1410 z "},"\u022d":{"ha":824,"x_min":0,"x_max":0,"o":"m 413 -19 b 566 9 470 -19 521 -10 b 680 88 611 28 649 54 b 751 207 711 121 734 161 b 775 360 767 253 775 304 b 751 511 775 414 767 465 b 680 631 734 557 711 597 b 566 709 649 664 611 690 b 413 738 521 728 470 738 b 259 709 355 738 304 728 b 145 631 214 690 176 664 b 74 511 114 597 91 557 b 50 360 58 465 50 414 b 74 207 50 304 58 253 b 145 88 91 161 114 121 b 259 9 176 54 214 28 b 413 -19 304 -10 355 -19 z m 413 106 b 321 128 377 106 347 113 b 257 186 295 143 274 162 b 220 267 240 210 228 237 b 208 360 212 297 208 328 b 220 451 208 390 212 421 b 257 533 228 482 240 509 b 321 590 274 556 295 575 b 413 613 347 605 377 613 b 504 590 448 613 478 605 b 568 533 530 575 551 556 b 605 451 585 509 597 482 b 617 360 613 421 617 390 b 605 267 617 328 613 297 b 568 186 597 237 585 210 b 504 128 551 162 530 143 b 413 106 478 113 448 106 z m 658 972 l 581 972 b 558 928 576 954 568 939 b 511 911 547 917 531 911 b 473 917 498 911 485 913 b 425 936 460 922 444 928 b 360 959 396 948 375 956 b 313 964 346 962 330 964 b 256 949 291 964 272 959 b 213 912 239 940 225 927 b 183 861 200 897 191 880 b 168 807 176 843 171 825 l 247 807 b 267 849 251 825 258 840 b 307 864 277 859 290 864 b 350 858 323 864 337 862 b 401 839 363 855 380 848 b 454 820 419 831 437 825 b 504 813 472 815 488 813 b 568 825 529 813 550 817 b 613 860 586 833 600 845 b 642 910 625 874 635 890 b 658 972 649 929 655 950 z m 213 1042 l 613 1042 l 613 1132 l 213 1132 z "},"\u022e":{"ha":1056,"x_min":0,"x_max":0,"o":"m 528 874 b 665 842 581 874 626 863 b 758 756 703 820 734 792 b 812 635 782 721 800 680 b 829 496 823 589 829 543 b 812 357 829 449 823 402 b 758 235 800 312 782 271 b 665 150 734 200 703 171 b 528 118 626 129 581 118 b 391 150 475 118 429 129 b 297 235 353 171 321 200 b 244 357 273 271 255 312 b 226 496 232 402 226 449 b 244 635 226 543 232 589 b 297 756 255 680 273 721 b 391 842 321 792 353 820 b 528 874 429 863 475 874 z m 528 1015 b 328 974 454 1015 387 1001 b 179 861 270 946 220 908 b 85 696 138 814 107 759 b 53 496 64 633 53 566 b 85 294 53 425 64 357 b 179 129 107 231 138 176 b 328 17 220 82 270 45 b 528 -24 387 -10 454 -24 b 727 17 602 -24 668 -10 b 876 129 786 45 836 82 b 970 294 917 176 948 231 b 1003 496 992 357 1003 425 b 970 696 1003 566 992 633 b 876 861 948 759 917 814 b 727 974 836 908 786 946 b 528 1015 668 1001 602 1015 z m 449 1085 l 607 1085 l 607 1235 l 449 1235 z "},"\u022f":{"ha":824,"x_min":0,"x_max":0,"o":"m 413 -19 b 566 9 470 -19 521 -10 b 680 88 611 28 649 54 b 751 207 711 121 734 161 b 775 360 767 253 775 304 b 751 511 775 414 767 465 b 680 631 734 557 711 597 b 566 709 649 664 611 690 b 413 738 521 728 470 738 b 259 709 355 738 304 728 b 145 631 214 690 176 664 b 74 511 114 597 91 557 b 50 360 58 465 50 414 b 74 207 50 304 58 253 b 145 88 91 161 114 121 b 259 9 176 54 214 28 b 413 -19 304 -10 355 -19 z m 413 106 b 321 128 377 106 347 113 b 257 186 295 143 274 162 b 220 267 240 210 228 237 b 208 360 212 297 208 328 b 220 451 208 390 212 421 b 257 533 228 482 240 509 b 321 590 274 556 295 575 b 413 613 347 605 377 613 b 504 590 448 613 478 605 b 568 533 530 575 551 556 b 605 451 585 509 597 482 b 617 360 613 421 617 390 b 605 267 617 328 613 297 b 568 186 597 237 585 210 b 504 128 551 162 530 143 b 413 106 478 113 448 106 z m 333 807 l 492 807 l 492 957 l 333 957 z "},"\u0230":{"ha":1056,"x_min":0,"x_max":0,"o":"m 528 874 b 665 842 581 874 626 863 b 758 756 703 820 734 792 b 812 635 782 721 800 680 b 829 496 823 589 829 543 b 812 357 829 449 823 402 b 758 235 800 312 782 271 b 665 150 734 200 703 171 b 528 118 626 129 581 118 b 391 150 475 118 429 129 b 297 235 353 171 321 200 b 244 357 273 271 255 312 b 226 496 232 402 226 449 b 244 635 226 543 232 589 b 297 756 255 680 273 721 b 391 842 321 792 353 820 b 528 874 429 863 475 874 z m 528 1015 b 328 974 454 1015 387 1001 b 179 861 270 946 220 908 b 85 696 138 814 107 759 b 53 496 64 633 53 566 b 85 294 53 425 64 357 b 179 129 107 231 138 176 b 328 17 220 82 270 45 b 528 -24 387 -10 454 -24 b 727 17 602 -24 668 -10 b 876 129 786 45 836 82 b 970 294 917 176 948 231 b 1003 496 992 357 1003 425 b 970 696 1003 566 992 633 b 876 861 948 759 917 814 b 727 974 836 908 786 946 b 528 1015 668 1001 602 1015 z m 449 1085 l 607 1085 l 607 1235 l 449 1235 z m 328 1304 l 728 1304 l 728 1394 l 328 1394 z "},"\u0231":{"ha":824,"x_min":0,"x_max":0,"o":"m 413 -19 b 566 9 470 -19 521 -10 b 680 88 611 28 649 54 b 751 207 711 121 734 161 b 775 360 767 253 775 304 b 751 511 775 414 767 465 b 680 631 734 557 711 597 b 566 709 649 664 611 690 b 413 738 521 728 470 738 b 259 709 355 738 304 728 b 145 631 214 690 176 664 b 74 511 114 597 91 557 b 50 360 58 465 50 414 b 74 207 50 304 58 253 b 145 88 91 161 114 121 b 259 9 176 54 214 28 b 413 -19 304 -10 355 -19 z m 413 106 b 321 128 377 106 347 113 b 257 186 295 143 274 162 b 220 267 240 210 228 237 b 208 360 212 297 208 328 b 220 451 208 390 212 421 b 257 533 228 482 240 509 b 321 590 274 556 295 575 b 413 613 347 605 377 613 b 504 590 448 613 478 605 b 568 533 530 575 551 556 b 605 451 585 509 597 482 b 617 360 613 421 617 390 b 605 267 617 328 613 297 b 568 186 597 237 585 210 b 504 128 551 162 530 143 b 413 106 478 113 448 106 z m 333 807 l 492 807 l 492 957 l 333 957 z m 213 1026 l 613 1026 l 613 1117 l 213 1117 z "},"\u0232":{"ha":900,"x_min":0,"x_max":0,"o":"m 364 389 l 364 0 l 538 0 l 538 389 l 908 992 l 714 992 l 456 547 l 193 992 l -8 992 z m 250 1061 l 650 1061 l 650 1151 l 250 1151 z "},"\u0233":{"ha":721,"x_min":0,"x_max":0,"o":"m 4 718 l 276 3 l 258 -53 b 243 -94 254 -69 249 -82 b 223 -126 238 -106 231 -117 b 193 -146 215 -134 205 -141 b 147 -153 181 -150 166 -153 b 110 -149 134 -153 122 -152 b 72 -143 98 -147 85 -145 l 72 -276 b 182 -285 108 -282 145 -285 b 285 -265 224 -285 258 -278 b 352 -210 312 -251 334 -233 b 398 -132 370 -188 385 -162 b 436 -39 410 -102 423 -71 l 715 718 l 550 718 l 368 182 l 365 182 l 178 718 z m 160 788 l 560 788 l 560 878 l 160 878 z "},"\u0237":{"ha":335,"x_min":0,"x_max":0,"o":"m 88 718 l 88 -54 b 77 -133 88 -89 84 -116 b 24 -160 70 -151 52 -160 b -1 -158 16 -160 8 -159 b -31 -154 -11 -157 -20 -156 l -31 -279 b 1 -283 -20 -281 -10 -282 b 40 -285 11 -284 25 -285 b 199 -226 114 -285 167 -265 b 246 -61 230 -187 246 -132 l 246 718 z "},"\u0259":{"ha":772,"x_min":0,"x_max":0,"o":"m 196 296 l 565 296 b 549 221 564 269 559 244 b 510 160 540 198 527 178 b 452 120 494 143 475 130 b 376 106 429 110 404 106 b 303 122 350 106 325 111 b 248 163 282 132 263 146 b 212 224 233 180 221 200 b 196 296 203 247 198 271 z m 565 400 l 38 400 b 47 244 31 346 34 294 b 112 110 60 193 82 149 b 224 16 142 71 179 40 b 376 -19 269 -8 320 -19 b 521 11 430 -19 478 -9 b 630 94 563 31 600 59 b 699 215 660 128 683 169 b 724 360 716 260 724 309 b 701 513 724 415 716 466 b 633 632 685 559 663 599 b 522 710 603 665 566 691 b 372 738 479 728 429 738 b 260 722 333 738 296 732 b 164 674 225 711 193 695 b 90 597 135 653 111 628 b 47 493 70 567 56 532 l 197 493 b 260 583 211 533 232 563 b 372 613 288 603 325 613 b 458 595 406 613 434 607 b 518 549 482 584 502 568 b 553 481 534 529 546 506 b 565 400 561 455 565 428 z "},"\u02bb":{"ha":386,"x_min":0,"x_max":0,"o":"m 281 911 l 281 992 b 213 963 256 984 234 975 b 158 919 192 950 174 936 b 121 860 143 902 130 882 b 107 788 112 838 107 813 l 107 600 l 281 600 l 281 788 l 196 788 b 217 864 196 817 203 843 b 281 911 232 885 253 901 z "},"\u02bc":{"ha":386,"x_min":0,"x_max":0,"o":"m 107 681 l 107 600 b 234 667 161 607 203 630 b 281 804 265 705 281 750 l 281 992 l 107 992 l 107 804 l 192 804 b 174 723 192 774 186 747 b 107 681 163 699 140 685 z "},"\u02c6":{"ha":335,"x_min":0,"x_max":0,"o":"m 167 943 l 265 818 l 394 818 l 244 1017 l 90 1017 l -58 818 l 69 818 z "},"\u02c7":{"ha":335,"x_min":0,"x_max":0,"o":"m 393 1017 l 264 1017 l 165 893 l 68 1017 l -60 1017 l 89 818 l 243 818 z "},"\u02c9":{"ha":335,"x_min":0,"x_max":0,"o":"m 368 867 l 368 957 l -32 957 l -32 867 z "},"\u02d8":{"ha":335,"x_min":0,"x_max":0,"o":"m -57 1015 b 8 869 -51 951 -30 903 b 161 819 46 836 97 819 b 320 869 227 819 280 836 b 392 1015 360 902 384 950 l 313 1015 b 264 937 305 981 289 955 b 172 910 239 919 208 910 b 24 1015 87 910 38 945 z "},"\u02d9":{"ha":335,"x_min":0,"x_max":0,"o":"m 247 836 l 247 986 l 89 986 l 89 836 z "},"\u02da":{"ha":335,"x_min":0,"x_max":0,"o":"m 85 936 b 109 997 85 961 93 981 b 168 1021 125 1013 145 1021 b 228 997 192 1021 212 1013 b 251 936 244 981 251 961 b 228 876 251 912 244 892 b 168 851 212 859 192 851 b 109 876 145 851 125 859 b 85 936 93 892 85 912 z m 168 793 b 270 833 208 793 242 806 b 313 936 298 860 313 894 b 270 1039 313 978 298 1012 b 168 1079 242 1066 208 1079 b 66 1039 128 1079 94 1066 b 24 936 38 1012 24 978 b 65 833 24 894 38 860 b 168 793 93 806 127 793 z "},"\u02db":{"ha":335,"x_min":0,"x_max":0,"o":"m 225 0 b 67 -185 119 -63 67 -125 b 84 -254 67 -212 72 -236 b 128 -292 96 -273 110 -285 b 173 -306 147 -299 161 -304 b 207 -310 184 -309 196 -310 b 353 -206 286 -310 334 -275 l 296 -193 b 224 -240 276 -225 252 -240 b 185 -224 209 -240 196 -235 b 169 -179 175 -212 169 -198 b 197 -99 169 -151 179 -125 b 300 0 216 -73 250 -40 z "},"\u02dc":{"ha":335,"x_min":0,"x_max":0,"o":"m 335 1000 b 265 939 325 959 301 939 b 179 964 247 939 218 947 b 67 992 135 982 97 992 b -30 944 28 992 -4 976 b -78 835 -55 912 -71 875 l 1 835 b 61 892 9 873 29 892 b 156 867 84 892 116 883 b 258 840 195 849 230 840 b 367 888 305 840 341 856 b 413 1000 389 912 404 949 z "},"\u02dd":{"ha":335,"x_min":0,"x_max":0,"o":"m 228 818 l 342 818 l 542 1017 l 353 1017 z m -49 818 l 65 818 l 265 1017 l 76 1017 z "},"\u02ee":{"ha":617,"x_min":0,"x_max":0,"o":"m 360 681 l 360 600 b 427 628 384 606 406 616 b 482 673 448 641 466 656 b 519 731 498 690 510 709 b 533 804 529 753 533 777 l 533 992 l 360 992 l 360 804 l 444 804 b 424 728 444 775 438 749 b 360 681 410 706 388 691 z m 83 681 l 83 600 b 151 628 107 606 130 616 b 206 673 172 641 190 656 b 243 731 221 690 234 709 b 257 804 252 753 257 777 l 257 992 l 83 992 l 83 804 l 168 804 b 147 728 168 775 161 749 b 83 681 133 706 112 691 z "},"\u0300":{"ha":335,"x_min":0,"x_max":0,"o":"m 146 1017 l -40 1017 l 157 818 l 272 818 z "},"\u0301":{"ha":335,"x_min":0,"x_max":0,"o":"m 188 1017 l 63 818 l 178 818 l 375 1017 z "},"\u0302":{"ha":335,"x_min":0,"x_max":0,"o":"m 69 818 l 167 943 l 265 818 l 394 818 l 244 1017 l 90 1017 l -58 818 z "},"\u0303":{"ha":335,"x_min":0,"x_max":0,"o":"m 413 1000 l 335 1000 b 312 956 330 981 322 967 b 265 939 301 944 286 939 b 227 945 252 939 240 941 b 179 964 215 949 199 956 b 115 987 150 976 129 984 b 67 992 100 990 84 992 b 10 977 45 992 26 987 b -33 940 -7 967 -21 955 b -62 889 -45 924 -55 907 b -78 835 -70 870 -75 852 l 1 835 b 22 877 5 853 12 867 b 61 892 31 887 44 892 b 104 886 77 892 91 890 b 156 867 117 882 134 876 b 208 848 173 859 191 853 b 258 840 226 843 243 840 b 322 853 283 840 305 844 b 367 888 340 861 355 873 b 397 938 380 901 390 918 b 413 1000 403 957 409 978 z "},"\u0304":{"ha":335,"x_min":0,"x_max":0,"o":"m -32 867 l 368 867 l 368 957 l -32 957 z "},"\u0306":{"ha":335,"x_min":0,"x_max":0,"o":"m 24 1015 l -57 1015 b 8 869 -51 951 -30 903 b 161 819 46 836 97 819 b 319 868 225 819 278 836 b 392 1015 360 900 384 950 l 313 1015 b 263 936 305 980 289 954 b 172 910 238 919 207 910 b 76 933 135 910 103 918 b 24 1015 48 949 31 976 z "},"\u0307":{"ha":335,"x_min":0,"x_max":0,"o":"m 89 836 l 247 836 l 247 986 l 89 986 z "},"\u0308":{"ha":335,"x_min":0,"x_max":0,"o":"m -32 836 l 126 836 l 126 986 l -32 986 z m 365 986 l 207 986 l 207 836 l 365 836 z "},"\u0309":{"ha":1,"x_min":0,"x_max":0,"o":"m -486 1090 l -483 1022 b -435 1028 -469 1026 -452 1028 b -381 1015 -410 1028 -392 1023 b -365 969 -371 1006 -365 991 b -383 933 -365 957 -371 945 b -453 911 -394 921 -418 914 l -453 851 l -376 851 l -374 882 b -297 922 -336 890 -310 904 b -278 979 -284 941 -278 960 b -292 1035 -278 1001 -283 1020 b -328 1070 -302 1050 -314 1061 b -376 1089 -343 1079 -359 1085 b -422 1094 -393 1093 -408 1094 b -486 1090 -440 1094 -461 1093 z "},"\u030a":{"ha":335,"x_min":0,"x_max":0,"o":"m 85 936 b 109 997 85 961 93 981 b 168 1021 125 1013 145 1021 b 228 997 192 1021 212 1013 b 251 936 244 981 251 961 b 228 876 251 912 244 892 b 168 851 212 859 192 851 b 109 876 145 851 125 859 b 85 936 93 892 85 912 z m 168 793 b 223 803 188 793 206 797 b 269 833 240 810 256 820 b 301 878 283 845 294 860 b 313 936 309 895 313 915 b 301 994 313 957 309 977 b 269 1040 294 1012 283 1027 b 223 1069 256 1053 240 1063 b 168 1079 206 1076 188 1079 b 113 1069 149 1079 130 1076 b 67 1040 96 1063 81 1053 b 35 994 54 1027 43 1012 b 24 936 28 977 24 957 b 35 878 24 915 27 895 b 66 833 42 860 53 845 b 113 803 79 820 95 810 b 168 793 130 797 149 793 z "},"\u030b":{"ha":335,"x_min":0,"x_max":0,"o":"m 353 1017 l 228 818 l 342 818 l 542 1017 z m 76 1017 l -49 818 l 65 818 l 265 1017 z "},"\u030c":{"ha":335,"x_min":0,"x_max":0,"o":"m 243 818 l 393 1017 l 264 1017 l 165 893 l 68 1017 l -60 1017 l 89 818 z "},"\u030f":{"ha":0,"x_min":0,"x_max":0,"o":"m -210 818 l -335 1017 l -524 1017 l -324 818 z m -486 818 l -611 1017 l -800 1017 l -600 818 z "},"\u0311":{"ha":0,"x_min":0,"x_max":0,"o":"m -240 819 l -160 819 b -225 965 -165 883 -187 932 b -378 1015 -263 999 -314 1015 b -535 967 -442 1015 -494 999 b -608 819 -577 935 -601 886 l -529 819 b -480 899 -522 855 -505 881 b -389 925 -454 916 -424 925 b -292 901 -352 925 -320 917 b -240 819 -265 886 -248 858 z "},"\u031b":{"ha":0,"x_min":0,"x_max":0,"o":"m 94 774 l -25 706 l 21 628 b -41 599 -3 615 -24 605 b -86 590 -58 593 -73 590 b -118 597 -99 590 -110 593 b -140 615 -126 602 -134 608 l -185 590 b -125 529 -166 562 -146 541 b -57 511 -104 517 -81 511 b 10 524 -36 511 -13 515 b 78 556 33 532 56 543 l 185 617 z "},"\u0323":{"ha":0,"x_min":0,"x_max":0,"o":"m -469 -275 l -311 -275 l -311 -125 l -469 -125 z "},"\u0324":{"ha":0,"x_min":0,"x_max":0,"o":"m -606 -275 l -447 -275 l -447 -125 l -606 -125 z m -208 -125 l -367 -125 l -367 -275 l -208 -275 z "},"\u0325":{"ha":0,"x_min":0,"x_max":0,"o":"m -481 -203 b -456 -142 -481 -178 -472 -157 b -397 -118 -440 -126 -420 -118 b -337 -142 -373 -118 -353 -126 b -314 -203 -322 -157 -314 -178 b -337 -263 -314 -227 -322 -247 b -397 -287 -353 -279 -373 -287 b -456 -263 -420 -287 -440 -279 b -481 -203 -472 -247 -481 -227 z m -397 -346 b -342 -335 -378 -346 -359 -342 b -296 -306 -325 -328 -310 -319 b -264 -261 -282 -294 -271 -279 b -253 -203 -256 -244 -253 -224 b -264 -144 -253 -181 -256 -162 b -296 -99 -271 -127 -282 -112 b -342 -69 -310 -86 -325 -76 b -397 -60 -359 -63 -378 -60 b -452 -69 -417 -60 -435 -63 b -498 -99 -469 -76 -484 -86 b -530 -144 -511 -112 -522 -127 b -542 -203 -538 -162 -542 -181 b -531 -261 -542 -224 -538 -244 b -499 -306 -523 -279 -513 -294 b -453 -335 -486 -319 -470 -328 b -397 -346 -435 -342 -417 -346 z "},"\u0326":{"ha":0,"x_min":0,"x_max":0,"o":"m -415 -94 l -471 -293 l -360 -293 l -237 -94 z "},"\u0327":{"ha":335,"x_min":0,"x_max":0,"o":"m 38 -222 l 13 -278 b 80 -302 33 -289 55 -297 b 156 -310 104 -307 130 -310 b 216 -302 176 -310 196 -307 b 269 -280 236 -297 254 -290 b 308 -242 285 -270 298 -257 b 324 -182 319 -226 324 -206 b 313 -136 324 -164 320 -149 b 285 -103 305 -123 296 -112 b 247 -84 274 -95 261 -88 b 206 -78 233 -80 219 -78 b 179 -79 195 -78 187 -78 b 160 -83 172 -80 165 -81 l 158 -82 l 222 0 l 156 0 l 64 -122 l 94 -149 b 149 -135 110 -139 128 -135 b 192 -148 164 -135 179 -139 b 213 -187 206 -157 213 -170 b 205 -217 213 -200 210 -209 b 185 -234 200 -224 193 -230 b 157 -242 176 -238 167 -241 b 128 -244 147 -244 137 -244 b 83 -239 112 -244 97 -243 b 38 -222 69 -235 54 -230 z "},"\u0328":{"ha":335,"x_min":0,"x_max":0,"o":"m 300 0 l 225 0 b 135 -64 186 -23 156 -44 b 88 -117 113 -83 98 -101 b 69 -157 77 -132 71 -146 b 67 -185 68 -168 67 -177 b 85 -254 67 -214 73 -237 b 127 -292 97 -271 111 -283 b 174 -307 143 -300 159 -305 b 207 -310 190 -309 200 -310 b 250 -305 221 -310 235 -308 b 292 -288 265 -302 279 -296 b 328 -256 306 -280 318 -270 b 353 -206 339 -243 347 -226 l 296 -193 b 261 -231 284 -212 272 -224 b 224 -240 250 -237 238 -240 b 186 -224 210 -240 197 -235 b 169 -179 175 -212 169 -198 b 175 -141 169 -166 171 -153 b 195 -101 179 -128 185 -115 b 235 -55 205 -86 218 -71 b 300 0 253 -39 274 -20 z "},"\u032d":{"ha":0,"x_min":0,"x_max":0,"o":"m -478 -293 l -381 -168 l -282 -293 l -153 -293 l -303 -94 l -457 -94 l -606 -293 z "},"\u032e":{"ha":0,"x_min":0,"x_max":0,"o":"m -542 -96 l -622 -96 b -557 -242 -617 -160 -595 -208 b -404 -292 -519 -275 -468 -292 b -247 -243 -340 -292 -288 -275 b -174 -96 -205 -211 -181 -162 l -253 -96 b -302 -175 -260 -131 -277 -157 b -393 -201 -328 -193 -358 -201 b -490 -178 -430 -201 -462 -194 b -542 -96 -517 -162 -534 -135 z "},"\u0330":{"ha":0,"x_min":0,"x_max":0,"o":"m -169 -111 l -247 -111 b -270 -156 -252 -130 -259 -144 b -317 -172 -281 -167 -296 -172 b -355 -166 -330 -172 -342 -170 b -403 -147 -367 -162 -383 -156 b -467 -124 -431 -135 -453 -128 b -515 -119 -482 -121 -498 -119 b -572 -134 -537 -119 -556 -124 b -615 -172 -589 -144 -603 -156 b -644 -222 -627 -187 -637 -204 b -660 -276 -652 -241 -657 -259 l -581 -276 b -560 -234 -577 -258 -570 -244 b -521 -219 -551 -224 -537 -219 b -478 -225 -505 -219 -491 -221 b -426 -244 -465 -229 -448 -235 b -374 -263 -409 -252 -391 -258 b -324 -271 -356 -268 -339 -271 b -260 -258 -299 -271 -277 -267 b -215 -224 -242 -250 -227 -238 b -185 -174 -202 -210 -192 -193 b -169 -111 -178 -154 -173 -133 z "},"\u0331":{"ha":0,"x_min":0,"x_max":0,"o":"m -619 -244 l -219 -244 l -219 -154 l -619 -154 z "},"\u0338":{"ha":0,"x_min":0,"x_max":0,"o":"m -110 1006 l -692 -33 l -582 -33 l -1 1006 z "},"\u0340":{"ha":0,"x_min":0,"x_max":0,"o":"m -412 1017 l -599 1017 l -401 818 l -286 818 z "},"\u0341":{"ha":0,"x_min":0,"x_max":0,"o":"m -378 1017 l -503 818 l -387 818 l -190 1017 z "},"\u0344":{"ha":0,"x_min":0,"x_max":0,"o":"m -672 840 l -514 840 l -514 990 l -672 990 z m -447 1017 l -503 818 l -392 818 l -269 1017 z m -268 840 l -110 840 l -110 990 l -268 990 z "},"\u037e":{"ha":386,"x_min":0,"x_max":0,"o":"m 96 703 l 96 515 l 289 515 l 289 703 z m 96 188 l 96 0 l 192 0 b 170 -84 193 -30 185 -58 b 101 -135 155 -110 132 -127 l 101 -219 b 236 -144 157 -208 202 -183 b 289 0 270 -106 288 -57 l 289 188 z "},"\u0384":{"ha":335,"x_min":0,"x_max":0,"o":"m 106 1017 l 50 818 l 161 818 l 283 1017 z "},"\u0385":{"ha":594,"x_min":0,"x_max":0,"o":"m 15 840 l 174 840 l 174 990 l 15 990 z m 240 1017 l 185 818 l 296 818 l 418 1017 z m 419 840 l 578 840 l 578 990 l 419 990 z "},"\u0386":{"ha":988,"x_min":0,"x_max":0,"o":"m 88 1017 l 32 818 l 143 818 l 265 1017 z m 432 992 l 51 0 l 231 0 l 324 263 l 719 263 l 813 0 l 999 0 l 617 992 z m 371 394 l 521 821 l 525 821 l 674 394 z "},"\u0387":{"ha":386,"x_min":0,"x_max":0,"o":"m 96 614 l 96 426 l 289 426 l 289 614 z "},"\u0388":{"ha":1111,"x_min":0,"x_max":0,"o":"m 90 1017 l 35 818 l 146 818 l 268 1017 z m 342 992 l 342 0 l 1065 0 l 1065 150 l 515 150 l 515 440 l 1015 440 l 1015 582 l 515 582 l 515 842 l 1056 842 l 1056 992 z "},"\u0389":{"ha":1239,"x_min":0,"x_max":0,"o":"m 90 1017 l 35 818 l 146 818 l 268 1017 z m 338 992 l 338 0 l 511 0 l 511 447 l 963 447 l 963 0 l 1136 0 l 1136 992 l 963 992 l 963 597 l 511 597 l 511 992 z "},"\u038a":{"ha":622,"x_min":0,"x_max":0,"o":"m 90 1017 l 35 818 l 146 818 l 268 1017 z m 342 992 l 342 0 l 515 0 l 515 992 z "},"\u038c":{"ha":1208,"x_min":0,"x_max":0,"o":"m 90 1017 l 35 818 l 146 818 l 268 1017 z m 681 874 b 817 842 733 874 779 863 b 911 756 856 820 887 792 b 965 635 935 721 953 680 b 982 496 976 589 982 543 b 965 357 982 449 976 402 b 911 235 953 312 935 271 b 817 150 887 200 856 171 b 681 118 779 129 733 118 b 544 150 628 118 582 129 b 450 235 505 171 474 200 b 397 357 426 271 408 312 b 379 496 385 402 379 449 b 397 635 379 543 385 589 b 450 756 408 680 426 721 b 544 842 474 792 505 820 b 681 874 582 863 628 874 z m 681 1015 b 481 974 606 1015 540 1001 b 332 861 422 946 373 908 b 238 696 291 814 260 759 b 206 496 216 633 206 566 b 238 294 206 425 216 357 b 332 129 260 231 291 176 b 481 17 373 82 422 45 b 681 -24 540 -10 606 -24 b 880 17 755 -24 821 -10 b 1029 129 939 45 988 82 b 1123 294 1070 176 1101 231 b 1156 496 1145 357 1156 425 b 1123 696 1156 566 1145 633 b 1029 861 1101 759 1070 814 b 880 974 988 908 939 946 b 681 1015 821 1001 755 1015 z "},"\u038e":{"ha":1192,"x_min":0,"x_max":0,"o":"m 90 1017 l 35 818 l 146 818 l 268 1017 z m 656 389 l 656 0 l 829 0 l 829 389 l 1200 992 l 1006 992 l 747 547 l 485 992 l 283 992 z "},"\u038f":{"ha":1200,"x_min":0,"x_max":0,"o":"m 90 1017 l 35 818 l 146 818 l 268 1017 z m 200 150 l 200 0 l 592 0 l 592 153 b 440 328 524 205 473 263 b 389 565 406 394 389 473 b 408 692 389 612 395 654 b 463 790 420 730 439 762 b 554 853 488 817 518 838 b 679 875 590 868 632 875 b 804 853 726 875 768 868 b 895 790 840 838 871 817 b 951 692 920 762 938 730 b 969 565 963 654 969 612 b 919 328 969 473 953 394 b 767 153 885 263 834 205 l 767 0 l 1158 0 l 1158 150 l 943 150 l 943 156 b 1026 232 973 178 1000 203 b 1092 327 1051 261 1073 292 b 1135 441 1110 362 1125 400 b 1150 574 1145 482 1150 526 b 1117 762 1150 644 1139 707 b 1022 901 1094 817 1063 863 b 874 986 981 938 932 967 b 679 1015 816 1006 751 1015 b 484 986 607 1015 542 1006 b 336 901 426 967 377 938 b 242 762 295 863 264 817 b 208 574 219 707 208 644 b 267 328 208 479 228 397 b 415 156 306 258 355 201 l 415 150 z "},"\u0390":{"ha":453,"x_min":0,"x_max":0,"o":"m 296 157 l 296 718 l 138 718 l 138 122 b 169 17 138 76 148 41 b 271 -19 191 -7 225 -19 b 323 -14 285 -19 302 -18 b 372 -1 344 -10 360 -6 l 372 108 b 360 106 368 107 364 107 b 350 106 357 106 354 106 l 340 106 b 309 113 328 106 318 108 b 296 157 300 117 296 132 z m -33 838 l 97 838 l 97 960 l -33 960 z m 192 1046 l 136 806 l 247 806 l 369 1046 z m 371 838 l 501 838 l 501 960 l 371 960 z "},"\u0391":{"ha":926,"x_min":0,"x_max":0,"o":"m 371 992 l -10 0 l 169 0 l 263 263 l 658 263 l 751 0 l 938 0 l 556 992 z m 310 394 l 460 821 l 464 821 l 613 394 z "},"\u0392":{"ha":978,"x_min":0,"x_max":0,"o":"m 279 576 l 279 850 l 563 850 b 671 819 610 850 646 840 b 708 714 696 799 708 764 b 667 612 708 669 694 635 b 563 576 639 588 604 576 z m 106 992 l 106 0 l 561 0 b 726 22 625 0 680 7 b 840 80 773 36 811 55 b 906 167 870 104 892 134 b 926 276 919 201 926 238 b 879 445 926 344 911 400 b 740 532 848 490 801 519 l 740 535 b 845 617 786 554 821 582 b 882 746 870 653 882 696 b 801 931 882 828 855 890 b 588 992 748 971 676 992 z m 279 142 l 279 451 l 586 451 b 709 412 639 451 680 438 b 753 299 738 385 753 348 b 709 183 753 249 738 210 b 586 142 680 155 639 142 z "},"\u0393":{"ha":824,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 279 0 l 279 842 l 790 842 l 790 992 z "},"\u0394":{"ha":949,"x_min":0,"x_max":0,"o":"m 728 136 l 214 136 l 464 817 z m 938 0 l 543 989 l 390 989 l 13 0 z "},"\u0395":{"ha":875,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 829 0 l 829 150 l 279 150 l 279 440 l 779 440 l 779 582 l 279 582 l 279 842 l 819 842 l 819 992 z "},"\u0396":{"ha":875,"x_min":0,"x_max":0,"o":"m 76 992 l 76 842 l 610 842 l 32 142 l 32 0 l 844 0 l 844 150 l 253 150 l 831 860 l 831 992 z "},"\u0397":{"ha":1003,"x_min":0,"x_max":0,"o":"m 101 992 l 101 0 l 275 0 l 275 447 l 726 447 l 726 0 l 900 0 l 900 992 l 726 992 l 726 597 l 275 597 l 275 992 z "},"\u0398":{"ha":1056,"x_min":0,"x_max":0,"o":"m 528 874 b 665 842 581 874 626 863 b 758 756 703 820 734 792 b 812 635 782 721 800 680 b 829 496 823 589 829 543 b 812 357 829 449 823 402 b 758 235 800 312 782 271 b 665 150 734 200 703 171 b 528 118 626 129 581 118 b 391 150 475 118 429 129 b 297 235 353 171 321 200 b 244 357 273 271 255 312 b 226 496 232 402 226 449 b 244 635 226 543 232 589 b 297 756 255 680 273 721 b 391 842 321 792 353 820 b 528 874 429 863 475 874 z m 528 1015 b 328 974 454 1015 387 1001 b 179 861 270 946 220 908 b 85 696 138 814 107 759 b 53 496 64 633 53 566 b 85 294 53 425 64 357 b 179 129 107 231 138 176 b 328 17 220 82 270 45 b 528 -24 387 -10 454 -24 b 727 17 602 -24 668 -10 b 876 129 786 45 836 82 b 970 294 917 176 948 231 b 1003 496 992 357 1003 425 b 970 696 1003 566 992 633 b 876 861 948 759 917 814 b 727 974 836 908 786 946 b 528 1015 668 1001 602 1015 z m 325 575 l 325 425 l 729 425 l 729 575 z "},"\u0399":{"ha":386,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 279 0 l 279 992 z "},"\u039a":{"ha":951,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 279 0 l 279 333 l 421 474 l 746 0 l 963 0 l 539 596 l 935 992 l 721 992 l 279 540 l 279 992 z "},"\u039b":{"ha":926,"x_min":0,"x_max":0,"o":"m 169 0 l 460 821 l 464 821 l 751 0 l 938 0 l 556 992 l 371 992 l -10 0 z "},"\u039c":{"ha":1235,"x_min":0,"x_max":0,"o":"m 103 992 l 103 0 l 268 0 l 268 765 l 271 765 l 546 0 l 689 0 l 964 765 l 967 765 l 967 0 l 1132 0 l 1132 992 l 890 992 l 624 215 l 621 215 l 347 992 z "},"\u039d":{"ha":1003,"x_min":0,"x_max":0,"o":"m 99 992 l 99 0 l 264 0 l 264 729 l 268 729 l 719 0 l 903 0 l 903 992 l 738 992 l 738 261 l 735 261 l 282 992 z "},"\u039e":{"ha":864,"x_min":0,"x_max":0,"o":"m 53 0 l 811 0 l 811 150 l 53 150 z m 63 842 l 801 842 l 801 992 l 63 992 z m 103 440 l 761 440 l 761 582 l 103 582 z "},"\u039f":{"ha":1056,"x_min":0,"x_max":0,"o":"m 528 874 b 665 842 581 874 626 863 b 758 756 703 820 734 792 b 812 635 782 721 800 680 b 829 496 823 589 829 543 b 812 357 829 449 823 402 b 758 235 800 312 782 271 b 665 150 734 200 703 171 b 528 118 626 129 581 118 b 391 150 475 118 429 129 b 297 235 353 171 321 200 b 244 357 273 271 255 312 b 226 496 232 402 226 449 b 244 635 226 543 232 589 b 297 756 255 680 273 721 b 391 842 321 792 353 820 b 528 874 429 863 475 874 z m 528 1015 b 328 974 454 1015 387 1001 b 179 861 270 946 220 908 b 85 696 138 814 107 759 b 53 496 64 633 53 566 b 85 294 53 425 64 357 b 179 129 107 231 138 176 b 328 17 220 82 270 45 b 528 -24 387 -10 454 -24 b 727 17 602 -24 668 -10 b 876 129 786 45 836 82 b 970 294 917 176 948 231 b 1003 496 992 357 1003 425 b 970 696 1003 566 992 633 b 876 861 948 759 917 814 b 727 974 836 908 786 946 b 528 1015 668 1001 602 1015 z "},"\u03a0":{"ha":1003,"x_min":0,"x_max":0,"o":"m 101 992 l 101 0 l 275 0 l 275 842 l 726 842 l 726 0 l 900 0 l 900 992 z "},"\u03a1":{"ha":926,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 279 0 l 279 381 l 543 381 b 715 410 613 381 671 391 b 818 486 760 430 794 456 b 867 585 842 517 859 550 b 881 685 876 621 881 654 b 867 785 881 715 876 749 b 818 885 859 821 842 854 b 715 961 794 915 760 941 b 543 992 671 981 613 992 z m 279 522 l 279 850 l 536 850 b 601 843 559 850 581 848 b 656 817 622 838 640 830 b 693 767 671 805 684 788 b 707 686 702 745 707 719 b 691 608 707 655 702 628 b 649 558 680 587 666 570 b 593 531 632 545 613 536 b 533 522 573 525 553 522 z "},"\u03a3":{"ha":840,"x_min":0,"x_max":0,"o":"m 621 521 l 297 842 l 785 842 l 785 992 l 71 992 l 71 867 l 424 515 l 71 143 l 71 0 l 794 0 l 794 150 l 278 150 z "},"\u03a4":{"ha":824,"x_min":0,"x_max":0,"o":"m 11 992 l 11 842 l 325 842 l 325 0 l 499 0 l 499 842 l 814 842 l 814 992 z "},"\u03a5":{"ha":900,"x_min":0,"x_max":0,"o":"m 364 389 l 364 0 l 538 0 l 538 389 l 908 992 l 714 992 l 456 547 l 193 992 l -8 992 z "},"\u03a6":{"ha":1036,"x_min":0,"x_max":0,"o":"m 431 114 l 431 0 l 604 0 l 604 114 b 773 156 668 119 724 133 b 894 241 822 178 862 206 b 968 362 927 276 951 316 b 993 511 985 408 993 457 b 969 661 993 565 985 615 b 898 783 954 707 930 748 b 777 867 866 817 826 846 b 604 908 728 889 671 903 l 604 1033 l 431 1033 l 431 908 b 258 867 364 903 306 889 b 137 783 209 846 169 817 b 66 661 105 748 81 707 b 43 511 51 615 43 565 b 67 362 43 457 51 408 b 141 241 84 316 108 276 b 263 156 174 206 214 178 b 431 114 311 133 367 119 z m 825 511 b 813 418 825 478 821 447 b 776 341 805 389 793 364 b 708 284 759 318 736 299 b 604 253 679 269 645 258 l 604 771 b 708 740 645 765 679 755 b 776 683 736 724 759 705 b 813 605 793 660 805 634 b 825 511 821 576 825 544 z m 211 511 b 222 604 211 544 215 575 b 260 681 230 633 242 659 b 328 738 277 704 300 723 b 431 769 356 753 390 764 l 431 253 b 328 284 390 258 356 269 b 260 341 300 299 277 318 b 222 418 242 364 230 389 b 211 511 215 447 211 478 z "},"\u03a7":{"ha":900,"x_min":0,"x_max":0,"o":"m 19 992 l 347 514 l -4 0 l 194 0 l 446 379 l 693 0 l 904 0 l 553 514 l 881 992 l 686 992 l 451 642 l 226 992 z "},"\u03a8":{"ha":1140,"x_min":0,"x_max":0,"o":"m 482 218 l 482 0 l 656 0 l 656 218 b 812 243 712 222 764 230 b 935 300 859 256 901 275 b 1017 397 970 325 997 357 b 1046 540 1036 436 1046 484 l 1046 992 l 872 992 l 872 556 b 820 425 872 498 855 455 b 656 369 785 395 731 377 l 656 992 l 482 992 l 482 369 b 319 425 407 377 353 395 b 268 556 285 455 268 498 l 268 992 l 94 992 l 94 540 b 124 397 94 484 104 436 b 204 300 143 357 170 325 b 326 243 238 275 279 256 b 482 218 374 230 425 222 z "},"\u03a9":{"ha":1051,"x_min":0,"x_max":0,"o":"m 969 0 l 969 126 l 714 126 l 714 192 b 904 331 797 217 861 263 b 969 568 948 398 969 477 b 839 881 969 696 926 800 b 517 1001 752 961 644 1001 b 195 877 390 1001 283 960 b 64 564 108 794 64 690 b 129 331 64 475 86 397 b 318 192 173 265 236 219 l 318 126 l 64 126 l 64 0 l 440 0 l 440 261 b 276 363 368 278 313 312 b 221 553 239 413 221 477 b 304 774 221 641 249 715 b 518 864 360 834 431 864 b 731 775 604 864 675 834 b 814 556 786 716 814 643 b 756 363 814 481 794 417 b 592 261 717 309 662 275 l 592 0 z "},"\u03aa":{"ha":386,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 279 0 l 279 992 z m -6 1110 l 153 1110 l 153 1260 l -6 1260 z m 392 1260 l 233 1260 l 233 1110 l 392 1110 z "},"\u03ab":{"ha":900,"x_min":0,"x_max":0,"o":"m 364 389 l 364 0 l 538 0 l 538 389 l 908 992 l 714 992 l 456 547 l 193 992 l -8 992 z m 251 1110 l 410 1110 l 410 1260 l 251 1260 z m 649 1260 l 490 1260 l 490 1110 l 649 1110 z "},"\u03ac":{"ha":842,"x_min":0,"x_max":0,"o":"m 754 157 l 754 718 l 596 718 l 596 622 l 593 622 b 507 706 573 656 544 684 b 385 738 470 727 429 738 b 235 706 327 738 278 727 b 131 622 193 685 159 657 b 70 501 104 587 84 547 b 50 361 57 456 50 409 b 69 221 50 313 56 266 b 128 100 82 175 102 135 b 228 15 155 65 188 37 b 368 -17 268 -6 314 -17 b 504 11 419 -17 464 -7 b 597 106 544 30 575 61 l 601 106 b 635 13 605 65 616 34 b 729 -19 653 -9 685 -19 b 781 -14 743 -19 760 -18 b 831 -1 802 -10 819 -6 l 831 108 b 819 106 826 107 822 107 b 808 106 816 106 812 106 l 799 106 b 767 113 787 106 776 108 b 754 157 759 117 754 132 z m 208 361 b 218 453 208 393 212 423 b 251 534 225 484 235 510 b 313 591 266 558 287 577 b 410 613 338 605 371 613 b 494 593 442 613 470 606 b 555 540 519 580 539 563 b 591 463 571 518 583 492 b 603 367 599 433 603 401 b 592 272 603 334 599 303 b 558 188 585 241 574 213 b 496 128 543 164 522 144 b 400 106 470 113 438 106 b 313 128 366 106 337 113 b 253 188 288 144 269 164 b 219 271 238 213 227 240 b 208 361 212 301 208 331 z m 360 1017 l 304 818 l 415 818 l 538 1017 z "},"\u03ad":{"ha":750,"x_min":0,"x_max":0,"o":"m 528 524 l 678 524 b 581 686 665 598 633 652 b 378 738 530 720 462 738 b 261 724 337 738 298 733 b 164 683 224 714 192 701 b 98 617 136 665 114 643 b 74 526 82 591 74 561 b 103 428 74 487 84 454 b 186 374 123 402 151 384 l 186 371 b 88 315 147 363 114 345 b 47 200 61 284 47 246 b 74 97 47 159 56 125 b 145 30 92 69 116 47 b 244 -8 174 13 207 0 b 354 -19 280 -16 317 -19 b 597 38 455 -19 536 0 b 711 226 658 75 696 138 l 553 226 b 531 167 548 202 541 182 b 492 128 520 151 508 138 b 440 108 477 119 460 112 b 379 103 421 105 400 103 b 256 130 328 103 287 112 b 208 217 224 148 208 177 b 240 290 208 250 219 275 b 339 314 260 306 294 314 l 454 314 l 454 438 l 338 438 b 256 455 303 438 276 443 b 226 521 236 466 226 488 b 269 594 226 556 241 580 b 381 614 298 607 335 614 b 484 594 427 614 461 607 b 528 524 507 581 521 558 z m 314 1017 l 258 818 l 369 818 l 492 1017 z "},"\u03ae":{"ha":797,"x_min":0,"x_max":0,"o":"m 83 718 l 83 0 l 242 0 l 242 424 b 254 497 242 450 246 474 b 289 558 263 520 274 541 b 343 598 304 575 322 588 b 415 613 364 608 388 613 b 521 574 463 613 498 600 b 556 451 544 549 556 508 l 556 -265 l 714 -265 l 714 493 b 646 676 714 575 691 636 b 460 738 600 717 538 738 b 331 703 413 738 369 726 b 236 610 292 681 260 650 l 233 613 l 233 718 z m 338 1017 l 282 818 l 393 818 l 515 1017 z "},"\u03af":{"ha":333,"x_min":0,"x_max":0,"o":"m 246 157 l 246 718 l 88 718 l 88 122 b 119 17 88 76 98 41 b 221 -19 141 -7 175 -19 b 273 -14 235 -19 252 -18 b 322 -1 294 -10 310 -6 l 322 108 b 310 106 318 107 314 107 b 300 106 307 106 304 106 l 290 106 b 259 113 278 106 268 108 b 246 157 250 117 246 132 z m 106 1017 l 50 818 l 161 818 l 283 1017 z "},"\u03b0":{"ha":799,"x_min":0,"x_max":0,"o":"m 414 106 b 282 144 353 106 309 119 b 242 278 255 170 242 215 l 242 718 l 83 718 l 83 263 b 99 139 83 215 89 174 b 153 51 110 104 128 74 b 251 -2 178 27 210 9 b 400 -19 291 -14 341 -19 b 546 9 454 -19 502 -10 b 656 90 589 28 626 55 b 726 215 686 124 709 166 b 750 378 742 263 750 318 b 742 503 750 425 747 467 b 721 599 736 540 729 572 b 694 669 713 627 704 650 b 669 718 685 689 677 705 l 496 718 b 531 668 508 704 519 688 b 561 598 542 649 552 625 b 583 504 570 571 578 539 b 592 382 589 469 592 428 b 581 276 592 345 588 310 b 549 188 574 243 564 214 b 494 128 535 163 516 143 b 414 106 471 113 444 106 z m 114 838 l 244 838 l 244 960 l 114 960 z m 339 1046 l 283 806 l 394 806 l 517 1046 z m 546 838 l 676 838 l 676 960 l 546 960 z "},"\u03b1":{"ha":842,"x_min":0,"x_max":0,"o":"m 754 157 l 754 718 l 596 718 l 596 622 l 593 622 b 507 706 573 656 544 684 b 385 738 470 727 429 738 b 235 706 327 738 278 727 b 131 622 193 685 159 657 b 70 501 104 587 84 547 b 50 361 57 456 50 409 b 69 221 50 313 56 266 b 128 100 82 175 102 135 b 228 15 155 65 188 37 b 368 -17 268 -6 314 -17 b 504 11 419 -17 464 -7 b 597 106 544 30 575 61 l 601 106 b 635 13 605 65 616 34 b 729 -19 653 -9 685 -19 b 781 -14 743 -19 760 -18 b 831 -1 802 -10 819 -6 l 831 108 b 819 106 826 107 822 107 b 808 106 816 106 812 106 l 799 106 b 767 113 787 106 776 108 b 754 157 759 117 754 132 z m 208 361 b 218 453 208 393 212 423 b 251 534 225 484 235 510 b 313 591 266 558 287 577 b 410 613 338 605 371 613 b 494 593 442 613 470 606 b 555 540 519 580 539 563 b 591 463 571 518 583 492 b 603 367 599 433 603 401 b 592 272 603 334 599 303 b 558 188 585 241 574 213 b 496 128 543 164 522 144 b 400 106 470 113 438 106 b 313 128 366 106 337 113 b 253 188 288 144 269 164 b 219 271 238 213 227 240 b 208 361 212 301 208 331 z "},"\u03b2":{"ha":803,"x_min":0,"x_max":0,"o":"m 88 726 l 88 -265 l 246 -265 l 246 29 b 319 -6 267 14 292 3 b 414 -19 347 -15 379 -19 b 553 6 467 -19 513 -11 b 656 74 594 22 628 45 b 719 176 683 103 704 138 b 740 303 733 215 740 257 b 687 474 740 372 722 429 b 546 553 651 519 604 545 l 546 556 b 653 636 594 570 630 597 b 688 765 676 675 688 718 b 663 872 688 805 679 841 b 596 950 646 903 624 929 b 501 999 568 971 536 988 b 392 1015 465 1010 429 1015 b 269 996 347 1015 306 1009 b 174 939 232 983 200 964 b 110 848 147 914 126 884 b 88 726 95 812 88 772 z m 246 189 l 246 710 b 259 800 246 747 250 777 b 293 855 268 823 279 841 b 340 883 307 868 322 878 b 389 890 357 888 373 890 b 529 750 482 890 529 844 b 514 678 529 722 524 698 b 473 631 504 659 490 643 b 412 605 456 619 435 610 b 338 597 388 600 363 597 l 338 493 b 434 482 372 491 404 488 b 512 453 464 476 490 467 b 563 396 534 439 551 420 b 582 304 576 372 582 341 b 574 232 582 280 579 256 b 546 168 568 208 559 187 b 494 123 533 150 516 134 b 415 106 473 111 447 106 b 312 129 374 106 339 113 b 246 189 284 145 263 165 z "},"\u03b3":{"ha":725,"x_min":0,"x_max":0,"o":"m 686 718 l 521 718 b 498 562 514 662 507 609 b 466 428 489 514 478 469 b 424 309 453 386 440 347 b 374 199 409 272 392 235 l 369 199 b 340 329 363 238 353 281 b 293 473 326 377 311 425 b 238 609 275 521 257 566 b 183 718 219 652 201 688 l 8 718 b 92 548 35 672 63 615 b 170 337 120 481 147 410 b 228 119 194 263 213 191 b 250 -72 243 47 250 -17 l 250 -265 l 408 -265 l 408 -36 b 498 115 440 11 470 62 b 576 288 526 169 552 227 b 640 488 599 350 621 416 b 686 718 659 559 674 636 z "},"\u03b4":{"ha":824,"x_min":0,"x_max":0,"o":"m 413 -19 b 566 8 470 -19 521 -10 b 680 86 611 27 649 53 b 751 203 711 119 734 159 b 775 350 767 248 775 297 b 738 501 775 407 763 458 b 646 603 713 545 682 579 b 521 672 603 631 562 653 b 410 721 480 690 443 706 b 355 756 384 732 366 744 b 339 807 344 769 339 786 b 365 869 339 834 347 854 b 435 890 382 883 405 890 b 549 874 470 890 508 885 b 665 813 591 863 629 842 l 665 965 b 565 1000 638 978 605 990 b 446 1015 524 1010 485 1015 b 349 1006 413 1015 381 1012 b 264 972 317 999 289 988 b 203 908 239 955 219 934 b 179 810 187 881 179 849 b 204 726 179 782 188 754 b 289 658 221 699 249 676 b 202 620 259 651 230 638 b 126 553 174 602 148 580 b 71 460 103 526 85 495 b 50 347 57 425 50 387 b 74 202 50 295 58 247 b 145 85 91 157 114 118 b 259 8 176 53 214 27 b 413 -19 304 -10 355 -19 z m 413 106 b 321 128 377 106 347 113 b 257 184 295 143 274 161 b 220 260 240 207 228 232 b 208 344 212 289 208 317 b 260 501 208 414 226 466 b 413 572 295 537 346 560 b 508 533 453 558 485 545 b 571 486 531 520 552 505 b 608 428 588 468 601 448 b 617 353 615 407 618 382 b 603 265 616 323 611 294 b 567 185 596 235 583 209 b 503 128 550 162 529 143 b 413 106 478 113 448 106 z "},"\u03b5":{"ha":750,"x_min":0,"x_max":0,"o":"m 528 524 l 678 524 b 581 686 665 598 633 652 b 378 738 530 720 462 738 b 261 724 337 738 298 733 b 164 683 224 714 192 701 b 98 617 136 665 114 643 b 74 526 82 591 74 561 b 103 428 74 487 84 454 b 186 374 123 402 151 384 l 186 371 b 88 315 147 363 114 345 b 47 200 61 284 47 246 b 74 97 47 159 56 125 b 145 30 92 69 116 47 b 244 -8 174 13 207 0 b 354 -19 280 -16 317 -19 b 597 38 455 -19 536 0 b 711 226 658 75 696 138 l 553 226 b 531 167 548 202 541 182 b 492 128 520 151 508 138 b 440 108 477 119 460 112 b 379 103 421 105 400 103 b 256 130 328 103 287 112 b 208 217 224 148 208 177 b 240 290 208 250 219 275 b 339 314 260 306 294 314 l 454 314 l 454 438 l 338 438 b 256 455 303 438 276 443 b 226 521 236 466 226 488 b 269 594 226 556 241 580 b 381 614 298 607 335 614 b 484 594 427 614 461 607 b 528 524 507 581 521 558 z "},"\u03b6":{"ha":654,"x_min":0,"x_max":0,"o":"m 469 106 l 426 106 b 270 171 358 106 306 127 b 213 364 234 214 215 279 b 231 524 211 421 217 475 b 301 660 244 573 268 618 b 435 777 335 703 379 741 b 642 876 490 813 559 846 l 642 992 l 111 992 l 111 867 l 372 867 b 249 784 329 844 288 817 b 148 670 211 751 177 713 b 78 528 119 627 96 580 b 53 364 61 477 53 422 b 77 208 53 307 61 256 b 146 87 93 161 116 121 b 253 8 175 53 211 27 b 392 -19 294 -10 341 -19 l 422 -19 b 483 -37 452 -19 472 -25 b 499 -92 493 -48 499 -67 b 495 -142 499 -106 497 -123 b 481 -214 493 -161 488 -185 l 636 -214 b 651 -142 644 -187 648 -163 b 654 -71 653 -122 654 -98 b 612 59 654 -15 640 28 b 469 106 584 90 536 106 z "},"\u03b7":{"ha":797,"x_min":0,"x_max":0,"o":"m 83 718 l 83 0 l 242 0 l 242 424 b 254 497 242 450 246 474 b 289 558 263 520 274 541 b 343 598 304 575 322 588 b 415 613 364 608 388 613 b 521 574 463 613 498 600 b 556 451 544 549 556 508 l 556 -265 l 714 -265 l 714 493 b 646 676 714 575 691 636 b 460 738 600 717 538 738 b 331 703 413 738 369 726 b 236 610 292 681 260 650 l 233 613 l 233 718 z "},"\u03b8":{"ha":824,"x_min":0,"x_max":0,"o":"m 413 -19 b 688 108 538 -19 630 23 b 775 494 746 194 775 322 b 688 882 775 667 746 796 b 413 1011 630 968 538 1011 b 137 882 287 1011 195 968 b 50 494 79 796 50 667 b 137 108 50 322 79 194 b 413 -19 195 23 287 -19 z m 413 106 b 269 182 350 106 303 131 b 210 425 235 233 215 314 l 614 425 b 556 182 608 314 589 233 b 413 106 522 131 475 106 z m 413 886 b 554 810 474 886 521 861 b 614 575 588 760 607 681 l 210 575 b 271 810 217 681 238 760 b 413 886 304 861 351 886 z "},"\u03b9":{"ha":333,"x_min":0,"x_max":0,"o":"m 246 157 l 246 718 l 88 718 l 88 122 b 119 17 88 76 98 41 b 221 -19 141 -7 175 -19 b 273 -14 235 -19 252 -18 b 322 -1 294 -10 310 -6 l 322 108 b 310 106 318 107 314 107 b 300 106 307 106 304 106 l 290 106 b 259 113 278 106 268 108 b 246 157 250 117 246 132 z "},"\u03ba":{"ha":746,"x_min":0,"x_max":0,"o":"m 88 718 l 88 0 l 246 0 l 246 257 l 340 349 l 560 0 l 753 0 l 451 454 l 726 718 l 532 718 l 246 428 l 246 718 z "},"\u03bb":{"ha":761,"x_min":0,"x_max":0,"o":"m 376 536 l 538 63 b 575 1 547 36 559 15 b 650 -19 591 -12 616 -19 b 702 -14 664 -19 681 -18 b 751 -1 723 -10 739 -6 l 751 108 b 740 106 747 107 743 107 b 729 106 736 106 733 106 l 719 106 b 694 110 711 106 703 107 b 672 136 685 113 678 121 l 440 769 b 403 863 428 802 416 833 b 358 941 391 892 376 918 b 290 995 340 964 317 982 b 186 1015 262 1009 228 1015 b 76 1007 149 1015 113 1013 l 76 874 b 113 881 88 876 101 879 b 151 883 126 882 138 883 b 196 876 169 883 184 881 b 226 856 208 872 218 865 b 247 824 235 847 242 837 b 263 783 253 812 258 798 l 285 715 l 13 0 l 186 0 l 374 536 z "},"\u03bc":{"ha":797,"x_min":0,"x_max":0,"o":"m 714 718 l 556 718 l 556 301 b 379 106 556 171 497 106 b 276 146 334 106 300 119 b 242 278 253 173 242 217 l 242 718 l 83 718 l 83 -265 l 242 -265 l 242 31 b 367 -19 270 -3 312 -19 b 472 14 400 -19 435 -8 b 556 100 508 36 536 65 l 558 100 l 558 0 l 714 0 z "},"\u03bd":{"ha":724,"x_min":0,"x_max":0,"o":"m 13 718 l 274 0 l 438 0 b 596 349 498 111 550 228 b 697 718 641 471 675 594 l 536 718 b 508 569 528 666 518 616 b 471 430 497 521 485 475 b 425 296 457 385 442 340 b 371 160 408 251 390 206 l 368 160 l 185 718 z "},"\u03be":{"ha":636,"x_min":0,"x_max":0,"o":"m 357 -19 l 411 -19 b 467 -37 440 -19 459 -25 b 481 -94 476 -48 481 -68 b 476 -144 481 -109 479 -126 b 463 -214 474 -162 469 -185 l 619 -214 b 633 -142 627 -187 631 -163 b 636 -71 635 -122 636 -98 b 588 65 636 -7 620 38 b 439 106 555 92 506 106 l 381 106 b 211 285 268 106 211 165 b 222 365 211 315 215 342 b 256 423 228 388 240 408 b 321 457 272 438 294 450 b 421 468 348 464 381 468 l 556 468 l 556 592 l 426 592 b 286 635 361 592 314 606 b 244 747 258 665 244 702 b 284 858 244 800 258 837 b 399 890 310 880 349 890 b 495 877 430 890 462 886 b 589 840 528 868 559 856 l 589 986 b 497 1009 561 997 531 1005 b 399 1015 464 1013 431 1015 b 278 999 356 1015 316 1010 b 178 951 240 989 207 973 b 111 870 150 930 128 903 b 86 754 94 837 86 799 b 130 609 86 697 101 648 b 239 529 159 570 195 543 l 239 526 b 101 434 179 508 133 477 b 53 269 69 391 53 336 b 71 152 53 227 59 188 b 126 60 83 116 101 86 b 221 1 151 35 183 15 b 357 -19 259 -12 304 -19 z "},"\u03bf":{"ha":824,"x_min":0,"x_max":0,"o":"m 413 -19 b 566 9 470 -19 521 -10 b 680 88 611 28 649 54 b 751 207 711 121 734 161 b 775 360 767 253 775 304 b 751 511 775 414 767 465 b 680 631 734 557 711 597 b 566 709 649 664 611 690 b 413 738 521 728 470 738 b 259 709 355 738 304 728 b 145 631 214 690 176 664 b 74 511 114 597 91 557 b 50 360 58 465 50 414 b 74 207 50 304 58 253 b 145 88 91 161 114 121 b 259 9 176 54 214 28 b 413 -19 304 -10 355 -19 z m 413 106 b 321 128 377 106 347 113 b 257 186 295 143 274 162 b 220 267 240 210 228 237 b 208 360 212 297 208 328 b 220 451 208 390 212 421 b 257 533 228 482 240 509 b 321 590 274 556 295 575 b 413 613 347 605 377 613 b 504 590 448 613 478 605 b 568 533 530 575 551 556 b 605 451 585 509 597 482 b 617 360 613 421 617 390 b 605 267 617 328 613 297 b 568 186 597 237 585 210 b 504 128 551 162 530 143 b 413 106 478 113 448 106 z "},"\u03c0":{"ha":818,"x_min":0,"x_max":0,"o":"m 786 124 b 725 110 767 114 746 110 b 689 124 709 110 697 114 b 674 151 681 133 676 142 b 672 192 673 161 672 174 l 672 538 l 782 538 l 782 671 l 1 671 l 1 538 l 99 538 l 99 0 l 239 0 l 239 538 l 532 538 l 532 171 b 559 36 532 112 541 67 b 671 -10 577 6 614 -10 b 786 18 708 -10 746 0 z "},"\u03c1":{"ha":849,"x_min":0,"x_max":0,"o":"m 88 358 l 88 -265 l 246 -265 l 246 93 l 249 93 b 294 42 261 74 276 57 b 353 7 312 28 331 16 b 419 -13 374 -2 396 -9 b 489 -19 443 -17 466 -19 b 626 12 542 -19 588 -9 b 723 95 665 33 697 60 b 780 215 748 130 767 170 b 799 356 792 259 799 306 b 778 504 799 408 792 458 b 713 626 764 550 742 591 b 602 708 684 660 647 688 b 442 738 557 728 504 738 b 294 710 387 738 338 728 b 183 633 251 692 214 667 b 113 513 153 600 129 560 b 88 358 96 466 88 415 z m 640 358 b 630 266 640 327 637 296 b 595 185 623 236 611 209 b 533 128 579 162 558 143 b 442 106 508 113 478 106 b 356 125 409 106 381 112 b 293 178 332 138 311 156 b 253 258 275 200 262 227 b 240 358 245 289 240 322 b 291 544 240 436 257 498 b 442 613 325 590 375 613 b 528 591 474 613 503 605 b 590 534 553 577 574 558 b 628 453 607 510 619 483 b 640 358 636 422 640 391 z "},"\u03c2":{"ha":772,"x_min":0,"x_max":0,"o":"m 568 478 l 726 478 b 693 593 723 522 712 561 b 622 674 675 625 651 652 b 522 722 592 695 559 711 b 403 738 484 732 444 738 b 248 708 344 738 292 728 b 138 626 204 688 167 660 b 71 503 108 591 86 550 b 49 351 56 456 49 405 b 72 208 49 300 56 253 b 140 90 88 163 110 123 b 247 10 169 56 205 29 b 392 -19 290 -10 338 -19 l 422 -19 b 483 -37 452 -19 472 -25 b 499 -92 493 -48 499 -67 b 495 -142 499 -106 497 -123 b 481 -214 493 -161 488 -185 l 636 -214 b 651 -142 644 -187 648 -163 b 654 -71 653 -122 654 -98 b 612 59 654 -15 640 28 b 469 106 584 90 536 106 l 426 106 b 328 126 388 106 356 113 b 259 182 300 140 277 159 b 219 261 241 205 228 231 b 207 351 211 291 207 321 b 226 483 207 405 213 449 b 275 563 239 518 256 544 b 339 602 294 582 316 595 b 404 613 362 609 384 613 b 515 578 449 613 485 601 b 568 478 544 556 562 522 z "},"\u03c3":{"ha":847,"x_min":0,"x_max":0,"o":"m 413 -19 b 565 9 470 -19 521 -10 b 676 88 609 28 646 54 b 744 207 706 121 728 161 b 767 360 759 253 767 304 b 742 496 767 409 759 454 b 674 600 726 538 703 572 l 824 600 l 824 718 l 413 718 b 259 693 355 718 304 710 b 145 621 214 676 176 652 b 74 508 114 589 91 552 b 50 360 58 464 50 414 b 74 207 50 304 58 253 b 145 88 91 161 114 121 b 259 9 176 54 214 28 b 413 -19 304 -10 355 -19 z m 413 106 b 321 128 377 106 347 113 b 257 186 295 143 274 162 b 220 267 240 210 228 237 b 208 360 212 297 208 328 b 220 449 208 390 212 420 b 257 524 228 477 240 503 b 321 576 274 546 295 563 b 413 596 347 589 377 596 b 505 576 448 596 478 589 b 570 524 531 563 553 546 b 608 449 587 503 600 477 b 621 360 617 420 621 390 b 608 267 621 328 617 297 b 570 186 600 237 587 210 b 505 128 553 162 531 143 b 413 106 478 113 448 106 z "},"\u03c4":{"ha":668,"x_min":0,"x_max":0,"o":"m 654 600 l 654 718 l 11 718 l 11 600 l 258 600 l 258 122 b 290 17 258 76 269 41 b 392 -19 312 -7 345 -19 b 444 -14 406 -19 423 -18 b 493 -1 465 -10 481 -6 l 493 108 b 481 106 488 107 484 107 b 471 106 478 106 475 106 l 461 106 b 430 113 449 106 439 108 b 417 157 421 117 417 132 l 417 600 z "},"\u03c5":{"ha":799,"x_min":0,"x_max":0,"o":"m 414 106 b 282 144 353 106 309 119 b 242 278 255 170 242 215 l 242 718 l 83 718 l 83 263 b 99 139 83 215 89 174 b 153 51 110 104 128 74 b 251 -2 178 27 210 9 b 400 -19 291 -14 341 -19 b 546 9 454 -19 502 -10 b 656 90 589 28 626 55 b 726 215 686 124 709 166 b 750 378 742 263 750 318 b 742 503 750 425 747 467 b 721 599 736 540 729 572 b 694 669 713 627 704 650 b 669 718 685 689 677 705 l 496 718 b 531 668 508 704 519 688 b 561 598 542 649 552 625 b 583 504 570 571 578 539 b 592 382 589 469 592 428 b 581 276 592 345 588 310 b 549 188 574 243 564 214 b 494 128 535 163 516 143 b 414 106 471 113 444 106 z "},"\u03c6":{"ha":1035,"x_min":0,"x_max":0,"o":"m 439 -19 l 439 -265 l 597 -265 l 597 -19 b 755 9 655 -19 707 -10 b 878 88 803 28 844 54 b 958 207 912 121 939 161 b 986 360 977 253 986 304 b 958 511 986 414 977 465 b 878 631 939 557 912 597 b 755 709 844 664 803 690 b 597 738 707 728 655 738 l 597 925 l 439 925 l 439 738 b 281 709 381 738 329 728 b 158 631 234 690 193 664 b 78 511 124 597 97 557 b 50 360 59 465 50 414 b 78 207 50 304 59 253 b 158 88 97 161 124 121 b 281 9 193 54 234 28 b 439 -19 329 -10 381 -19 z m 828 360 b 815 267 828 328 824 297 b 775 186 807 237 794 210 b 703 128 756 162 733 143 b 597 106 674 113 639 106 l 597 613 b 703 590 639 613 674 605 b 775 533 733 575 756 556 b 815 451 794 509 807 482 b 828 360 824 421 828 390 z m 439 613 l 439 106 b 333 128 397 106 362 113 b 261 186 303 143 280 162 b 221 267 243 210 229 237 b 208 360 213 297 208 328 b 221 451 208 390 213 421 b 261 533 229 482 243 509 b 333 590 280 556 303 575 b 439 613 362 605 397 613 z "},"\u03c7":{"ha":774,"x_min":0,"x_max":0,"o":"m 289 251 l 13 -265 l 189 -265 l 382 126 l 581 -265 l 761 -265 l 481 264 l 731 718 l 557 718 l 383 388 l 217 718 l 35 718 z "},"\u03c8":{"ha":993,"x_min":0,"x_max":0,"o":"m 422 -19 l 422 -265 l 581 -265 l 581 -19 b 728 9 634 -19 684 -10 b 844 90 773 28 812 55 b 918 215 876 124 900 166 b 944 378 936 263 944 318 b 936 503 944 425 942 467 b 915 599 931 540 924 572 b 889 669 907 627 898 650 b 864 718 880 689 871 705 l 690 718 b 725 668 702 704 714 688 b 756 598 736 649 746 625 b 778 504 765 571 772 539 b 786 382 783 469 786 428 b 772 276 786 345 781 310 b 730 188 762 243 748 214 b 665 128 712 163 690 143 b 581 106 639 113 611 106 l 581 925 l 422 925 l 422 106 b 286 144 361 106 316 118 b 242 278 256 169 242 214 l 242 718 l 83 718 l 83 263 b 163 50 83 167 110 96 b 422 -19 216 4 303 -19 z "},"\u03c9":{"ha":1106,"x_min":0,"x_max":0,"o":"m 343 106 b 281 128 319 106 298 113 b 239 188 264 143 250 163 b 215 276 228 214 220 243 b 207 382 209 310 207 345 b 215 504 207 428 210 469 b 237 598 221 539 228 571 b 267 668 246 625 256 649 b 303 718 279 688 291 704 l 129 718 b 104 669 122 705 113 689 b 78 599 95 650 86 627 b 57 503 69 572 63 540 b 49 378 51 467 49 425 b 69 215 49 318 55 263 b 128 90 82 166 102 124 b 224 9 154 55 186 28 b 357 -19 263 -10 307 -19 b 476 8 404 -19 444 -10 b 553 78 509 26 534 49 b 628 8 570 49 596 26 b 749 -19 661 -10 701 -19 b 881 9 799 -19 843 -10 b 978 90 920 28 952 55 b 1037 215 1004 124 1023 166 b 1057 378 1050 263 1057 318 b 1049 503 1057 425 1054 467 b 1028 599 1043 540 1036 572 b 1001 669 1019 627 1011 650 b 976 718 992 689 984 705 l 803 718 b 838 668 815 704 826 688 b 868 598 849 649 859 625 b 890 504 877 571 885 539 b 899 382 896 469 899 428 b 890 276 899 345 896 310 b 865 188 885 243 876 214 b 823 128 854 163 840 143 b 763 106 806 113 786 106 b 665 143 719 106 686 118 b 632 279 643 168 632 213 l 632 560 l 474 560 l 474 278 b 442 144 474 214 463 169 b 343 106 422 118 388 106 z "},"\u03ca":{"ha":333,"x_min":0,"x_max":0,"o":"m 246 157 l 246 718 l 88 718 l 88 122 b 119 17 88 76 98 41 b 221 -19 141 -7 175 -19 b 273 -14 235 -19 252 -18 b 322 -1 294 -10 310 -6 l 322 108 b 310 106 318 107 314 107 b 300 106 307 106 304 106 l 290 106 b 259 113 278 106 268 108 b 246 157 250 117 246 132 z m -32 836 l 126 836 l 126 986 l -32 986 z m 365 986 l 207 986 l 207 836 l 365 836 z "},"\u03cb":{"ha":799,"x_min":0,"x_max":0,"o":"m 414 106 b 282 144 353 106 309 119 b 242 278 255 170 242 215 l 242 718 l 83 718 l 83 263 b 99 139 83 215 89 174 b 153 51 110 104 128 74 b 251 -2 178 27 210 9 b 400 -19 291 -14 341 -19 b 546 9 454 -19 502 -10 b 656 90 589 28 626 55 b 726 215 686 124 709 166 b 750 378 742 263 750 318 b 742 503 750 425 747 467 b 721 599 736 540 729 572 b 694 669 713 627 704 650 b 669 718 685 689 677 705 l 496 718 b 531 668 508 704 519 688 b 561 598 542 649 552 625 b 583 504 570 571 578 539 b 592 382 589 469 592 428 b 581 276 592 345 588 310 b 549 188 574 243 564 214 b 494 128 535 163 516 143 b 414 106 471 113 444 106 z m 200 836 l 358 836 l 358 986 l 200 986 z m 597 986 l 439 986 l 439 836 l 597 836 z "},"\u03cc":{"ha":824,"x_min":0,"x_max":0,"o":"m 413 -19 b 566 9 470 -19 521 -10 b 680 88 611 28 649 54 b 751 207 711 121 734 161 b 775 360 767 253 775 304 b 751 511 775 414 767 465 b 680 631 734 557 711 597 b 566 709 649 664 611 690 b 413 738 521 728 470 738 b 259 709 355 738 304 728 b 145 631 214 690 176 664 b 74 511 114 597 91 557 b 50 360 58 465 50 414 b 74 207 50 304 58 253 b 145 88 91 161 114 121 b 259 9 176 54 214 28 b 413 -19 304 -10 355 -19 z m 413 106 b 321 128 377 106 347 113 b 257 186 295 143 274 162 b 220 267 240 210 228 237 b 208 360 212 297 208 328 b 220 451 208 390 212 421 b 257 533 228 482 240 509 b 321 590 274 556 295 575 b 413 613 347 605 377 613 b 504 590 448 613 478 605 b 568 533 530 575 551 556 b 605 451 585 509 597 482 b 617 360 613 421 617 390 b 605 267 617 328 613 297 b 568 186 597 237 585 210 b 504 128 551 162 530 143 b 413 106 478 113 448 106 z m 350 1017 l 294 818 l 406 818 l 528 1017 z "},"\u03cd":{"ha":799,"x_min":0,"x_max":0,"o":"m 414 106 b 282 144 353 106 309 119 b 242 278 255 170 242 215 l 242 718 l 83 718 l 83 263 b 99 139 83 215 89 174 b 153 51 110 104 128 74 b 251 -2 178 27 210 9 b 400 -19 291 -14 341 -19 b 546 9 454 -19 502 -10 b 656 90 589 28 626 55 b 726 215 686 124 709 166 b 750 378 742 263 750 318 b 742 503 750 425 747 467 b 721 599 736 540 729 572 b 694 669 713 627 704 650 b 669 718 685 689 677 705 l 496 718 b 531 668 508 704 519 688 b 561 598 542 649 552 625 b 583 504 570 571 578 539 b 592 382 589 469 592 428 b 581 276 592 345 588 310 b 549 188 574 243 564 214 b 494 128 535 163 516 143 b 414 106 471 113 444 106 z m 338 1017 l 282 818 l 393 818 l 515 1017 z "},"\u03ce":{"ha":1106,"x_min":0,"x_max":0,"o":"m 343 106 b 281 128 319 106 298 113 b 239 188 264 143 250 163 b 215 276 228 214 220 243 b 207 382 209 310 207 345 b 215 504 207 428 210 469 b 237 598 221 539 228 571 b 267 668 246 625 256 649 b 303 718 279 688 291 704 l 129 718 b 104 669 122 705 113 689 b 78 599 95 650 86 627 b 57 503 69 572 63 540 b 49 378 51 467 49 425 b 69 215 49 318 55 263 b 128 90 82 166 102 124 b 224 9 154 55 186 28 b 357 -19 263 -10 307 -19 b 476 8 404 -19 444 -10 b 553 78 509 26 534 49 b 628 8 570 49 596 26 b 749 -19 661 -10 701 -19 b 881 9 799 -19 843 -10 b 978 90 920 28 952 55 b 1037 215 1004 124 1023 166 b 1057 378 1050 263 1057 318 b 1049 503 1057 425 1054 467 b 1028 599 1043 540 1036 572 b 1001 669 1019 627 1011 650 b 976 718 992 689 984 705 l 803 718 b 838 668 815 704 826 688 b 868 598 849 649 859 625 b 890 504 877 571 885 539 b 899 382 896 469 899 428 b 890 276 899 345 896 310 b 865 188 885 243 876 214 b 823 128 854 163 840 143 b 763 106 806 113 786 106 b 665 143 719 106 686 118 b 632 279 643 168 632 213 l 632 560 l 474 560 l 474 278 b 442 144 474 214 463 169 b 343 106 422 118 388 106 z m 492 1017 l 436 818 l 547 818 l 669 1017 z "},"\u0400":{"ha":875,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 829 0 l 829 150 l 279 150 l 279 440 l 779 440 l 779 582 l 279 582 l 279 842 l 819 842 l 819 992 z m 483 1290 l 297 1290 l 494 1092 l 610 1092 z "},"\u0401":{"ha":875,"x_min":0,"x_max":0,"o":"m 815 989 l 103 989 l 103 0 l 824 0 l 824 149 l 275 149 l 275 440 l 776 440 l 776 581 l 275 581 l 275 843 l 815 843 z m 672 1224 l 518 1224 l 518 1074 l 672 1074 z m 396 1224 l 240 1224 l 240 1074 l 396 1074 z "},"\u0402":{"ha":1081,"x_min":0,"x_max":0,"o":"m 1044 222 b 951 506 1044 340 1013 434 b 696 614 889 578 804 614 b 471 501 598 614 523 576 l 471 839 l 814 839 l 814 989 l 11 989 l 11 839 l 297 839 l 297 0 l 471 0 l 471 226 b 524 411 471 305 488 367 b 669 478 559 456 607 478 b 819 412 735 478 785 456 b 871 226 854 368 871 306 b 810 38 871 148 851 85 b 658 -33 770 -10 719 -33 l 658 -165 b 706 -168 681 -167 696 -168 b 947 -58 801 -168 881 -131 b 1044 222 1012 16 1044 109 z "},"\u0403":{"ha":782,"x_min":0,"x_max":0,"o":"m 279 0 l 279 839 l 776 839 l 776 989 l 106 989 l 106 0 z m 599 1250 l 415 1250 l 297 1051 l 411 1051 z "},"\u0404":{"ha":1003,"x_min":0,"x_max":0,"o":"m 947 332 l 772 332 b 526 124 741 193 659 124 b 321 214 438 124 369 154 b 238 440 273 274 245 350 l 660 440 l 660 581 l 242 581 b 333 784 255 663 285 731 b 528 864 380 837 445 864 b 682 818 588 864 639 849 b 768 692 725 788 753 745 l 942 692 b 798 929 922 795 874 875 b 531 1011 722 984 632 1011 b 276 940 433 1011 349 987 b 114 752 204 892 150 829 b 60 494 78 675 60 589 b 186 118 60 338 102 213 b 522 -24 270 24 382 -24 b 808 73 637 -24 732 9 b 947 332 884 137 931 224 z "},"\u0405":{"ha":900,"x_min":0,"x_max":0,"o":"m 815 697 b 708 932 812 803 776 881 b 446 1008 641 983 553 1008 b 180 930 335 1008 246 982 b 81 719 114 878 81 807 l 81 700 b 210 507 86 613 129 549 b 453 429 249 487 330 461 b 468 425 456 428 462 427 b 589 390 525 410 566 399 b 653 348 612 382 634 368 b 683 271 673 328 683 302 b 627 156 683 222 665 184 b 471 115 590 129 538 115 b 286 167 395 115 333 133 b 215 328 239 202 215 256 l 44 328 b 160 67 44 213 83 126 b 461 -22 237 7 337 -22 b 576 -12 501 -22 539 -19 b 683 22 613 -5 649 6 b 772 81 718 38 747 58 b 832 169 797 105 817 134 b 854 288 847 205 854 244 b 722 508 854 388 810 461 b 497 583 682 531 607 556 b 446 597 485 586 468 591 b 283 651 362 619 307 637 b 246 733 258 666 246 694 b 296 834 246 776 263 809 b 435 871 329 859 375 871 b 650 697 568 871 640 813 z "},"\u0406":{"ha":386,"x_min":0,"x_max":0,"o":"m 281 989 l 106 989 l 106 0 l 281 0 z "},"\u0407":{"ha":386,"x_min":0,"x_max":0,"o":"m 281 989 l 106 989 l 106 0 l 281 0 z m 408 1222 l 254 1222 l 254 1071 l 408 1071 z m 132 1222 l -24 1222 l -24 1071 l 132 1071 z "},"\u0408":{"ha":746,"x_min":0,"x_max":0,"o":"m 653 989 l 479 989 l 479 317 b 478 255 479 291 479 270 b 469 203 477 240 474 222 b 447 158 464 183 456 168 b 407 130 438 147 425 138 b 343 118 389 122 368 118 b 231 163 288 118 251 133 b 200 293 210 193 200 237 l 200 347 l 35 347 l 35 310 b 108 61 35 200 59 118 b 349 -24 156 5 237 -24 b 576 57 449 -24 524 3 b 653 293 627 111 653 189 z "},"\u0409":{"ha":1438,"x_min":0,"x_max":0,"o":"m 1392 307 b 1304 532 1392 404 1363 479 b 1054 611 1246 585 1163 611 l 853 611 l 853 989 l 232 989 l 213 415 b 189 228 210 336 202 273 b 144 142 176 184 161 155 b 79 122 128 129 106 122 b 11 133 52 122 30 126 l 11 0 b 115 -18 47 -12 82 -18 b 301 76 191 -18 253 13 b 381 368 348 139 375 237 l 399 839 l 679 839 l 679 0 l 1054 0 b 1303 80 1162 0 1245 27 b 1392 307 1362 133 1392 209 z m 1218 303 b 1047 142 1218 195 1161 142 l 853 142 l 853 469 l 1044 469 b 1172 425 1099 469 1142 455 b 1218 303 1203 395 1218 355 z "},"\u040a":{"ha":1438,"x_min":0,"x_max":0,"o":"m 669 469 l 669 0 l 1054 0 b 1303 80 1162 0 1245 27 b 1392 307 1362 133 1392 209 b 1304 532 1392 404 1363 479 b 1054 611 1246 585 1163 611 l 843 611 l 843 989 l 669 989 l 669 613 l 275 613 l 275 989 l 101 989 l 101 0 l 275 0 l 275 469 z m 1218 303 b 1047 142 1218 195 1161 142 l 843 142 l 843 469 l 1044 469 b 1172 425 1099 469 1142 455 b 1218 303 1203 395 1218 355 z "},"\u040b":{"ha":1081,"x_min":0,"x_max":0,"o":"m 683 614 b 471 594 629 614 558 607 l 471 839 l 814 839 l 814 989 l 11 989 l 11 839 l 297 839 l 297 0 l 471 0 l 471 444 b 656 460 534 455 595 460 b 753 446 694 460 726 455 b 813 414 780 437 800 426 b 843 364 825 402 836 385 b 856 313 850 343 855 325 b 857 260 856 300 857 282 l 857 0 l 1031 0 l 1031 313 b 1024 387 1031 338 1028 363 b 994 465 1019 410 1009 437 b 937 540 980 494 960 519 b 835 592 913 560 879 578 b 683 614 791 607 741 614 z "},"\u040c":{"ha":951,"x_min":0,"x_max":0,"o":"m 932 989 l 713 989 l 275 540 l 275 989 l 103 989 l 103 0 l 275 0 l 275 332 l 417 474 l 742 0 l 957 0 l 536 594 z m 682 1250 l 499 1250 l 381 1051 l 494 1051 z "},"\u040d":{"ha":1003,"x_min":0,"x_max":0,"o":"m 101 992 l 101 0 l 300 0 l 726 744 l 726 0 l 900 0 l 900 992 l 696 992 l 275 253 l 275 992 z m 478 1290 l 292 1290 l 489 1092 l 604 1092 z "},"\u040e":{"ha":849,"x_min":0,"x_max":0,"o":"m 335 278 l 333 276 b 258 158 304 221 279 181 b 183 122 238 134 213 122 b 72 147 136 122 99 131 l 72 1 b 189 -24 109 -15 148 -24 b 343 28 246 -24 298 -6 b 471 201 388 62 431 120 l 856 989 l 668 989 l 424 458 l 185 989 l -7 989 z m 657 1239 l 576 1239 b 429 1133 559 1169 510 1133 b 282 1239 349 1133 300 1169 l 201 1239 b 268 1091 209 1172 231 1123 b 429 1043 305 1059 359 1043 b 590 1091 500 1043 553 1059 b 657 1239 627 1123 650 1172 z "},"\u040f":{"ha":1003,"x_min":0,"x_max":0,"o":"m 728 150 l 275 150 l 275 989 l 101 989 l 101 0 l 414 0 l 414 -246 l 588 -246 l 588 0 l 901 0 l 901 989 l 728 989 z "},"\u0410":{"ha":926,"x_min":0,"x_max":0,"o":"m 556 990 l 371 990 l -11 0 l 168 0 l 265 263 l 657 263 l 751 0 l 938 0 z m 611 393 l 310 393 l 464 810 z "},"\u0411":{"ha":978,"x_min":0,"x_max":0,"o":"m 913 307 b 825 532 913 404 883 479 b 575 611 767 585 683 611 l 279 611 l 279 839 l 833 839 l 833 989 l 106 989 l 106 0 l 575 0 b 824 80 682 0 766 27 b 913 307 883 133 913 209 z m 739 303 b 568 142 739 195 682 142 l 279 142 l 279 469 l 565 469 b 693 425 620 469 663 455 b 739 303 724 395 739 355 z "},"\u0412":{"ha":978,"x_min":0,"x_max":0,"o":"m 103 989 l 103 0 l 607 0 b 833 81 700 0 775 27 b 919 292 891 134 919 205 b 869 449 919 355 903 407 b 733 532 836 490 791 518 b 836 613 776 549 810 576 b 875 740 862 651 875 693 b 792 922 875 816 847 877 b 554 989 737 966 658 989 z m 272 849 l 514 849 b 653 822 574 849 621 840 b 703 713 686 805 703 768 b 656 608 703 663 687 628 b 508 576 624 587 575 576 l 272 576 z m 272 451 l 529 451 b 611 446 561 451 588 450 b 678 425 634 442 657 435 b 728 377 700 415 717 399 b 746 296 740 355 746 328 b 689 175 746 238 727 197 b 532 142 651 153 599 142 l 272 142 z "},"\u0413":{"ha":782,"x_min":0,"x_max":0,"o":"m 279 0 l 279 839 l 776 839 l 776 989 l 106 989 l 106 0 z "},"\u0414":{"ha":1003,"x_min":0,"x_max":0,"o":"m 988 -246 l 988 150 l 876 150 l 876 989 l 232 989 l 232 836 b 196 442 232 701 220 569 b 103 150 172 314 141 217 l 7 150 l 7 -246 l 175 -246 l 175 0 l 819 0 l 819 -246 z m 703 150 l 289 150 b 369 423 320 214 347 305 b 401 779 391 541 401 660 l 401 839 l 703 839 z "},"\u0415":{"ha":875,"x_min":0,"x_max":0,"o":"m 815 989 l 103 989 l 103 0 l 824 0 l 824 149 l 275 149 l 275 440 l 776 440 l 776 581 l 275 581 l 275 843 l 815 843 z "},"\u0416":{"ha":1449,"x_min":0,"x_max":0,"o":"m 531 444 l 638 325 l 638 0 l 811 0 l 811 325 l 918 444 l 1242 0 l 1458 0 l 1031 569 l 1411 989 l 1197 989 l 811 544 l 811 989 l 638 989 l 638 544 l 251 989 l 38 989 l 418 569 l -10 0 l 207 0 z "},"\u0417":{"ha":900,"x_min":0,"x_max":0,"o":"m 839 286 b 787 445 839 348 822 401 b 651 528 752 489 707 517 l 651 532 b 761 608 692 542 729 568 b 810 744 794 649 810 694 b 710 945 810 833 776 900 b 453 1013 643 990 557 1013 b 190 936 345 1013 258 987 b 83 701 123 885 87 807 l 249 701 b 464 875 259 817 331 875 b 593 838 519 875 563 863 b 639 736 624 814 639 780 b 594 625 639 691 624 654 b 481 582 564 596 526 582 l 360 582 l 360 447 l 481 447 b 616 407 538 447 583 434 b 665 289 649 380 665 341 b 615 160 665 232 649 189 b 471 115 582 130 534 115 b 286 167 395 115 333 133 b 215 328 239 202 215 256 l 44 328 b 160 67 44 213 83 126 b 461 -22 237 7 337 -22 b 636 8 527 -22 585 -12 b 755 87 687 29 727 55 b 818 185 783 119 804 152 b 839 286 832 219 839 253 z "},"\u0418":{"ha":1003,"x_min":0,"x_max":0,"o":"m 101 0 l 303 0 l 728 758 l 728 0 l 901 0 l 901 989 l 700 989 l 275 231 l 275 989 l 101 989 z "},"\u0419":{"ha":1003,"x_min":0,"x_max":0,"o":"m 729 1239 l 649 1239 b 501 1133 631 1169 582 1133 b 354 1239 421 1133 372 1169 l 274 1239 b 340 1091 281 1172 303 1123 b 501 1043 377 1059 431 1043 b 663 1091 572 1043 625 1059 b 729 1239 700 1123 722 1172 z m 101 0 l 303 0 l 728 758 l 728 0 l 901 0 l 901 989 l 700 989 l 275 231 l 275 989 l 101 989 z "},"\u041a":{"ha":951,"x_min":0,"x_max":0,"o":"m 932 989 l 713 989 l 275 540 l 275 989 l 103 989 l 103 0 l 275 0 l 275 332 l 417 474 l 742 0 l 957 0 l 536 594 z "},"\u041b":{"ha":978,"x_min":0,"x_max":0,"o":"m 878 0 l 878 989 l 232 989 l 213 415 b 189 228 210 336 202 273 b 144 142 176 184 161 155 b 79 122 128 129 106 122 b 11 133 52 122 30 126 l 11 0 b 115 -18 47 -12 82 -18 b 301 76 191 -18 253 13 b 381 368 348 139 375 237 l 399 839 l 704 839 l 704 0 z "},"\u041c":{"ha":1235,"x_min":0,"x_max":0,"o":"m 1132 989 l 890 989 l 624 215 l 347 989 l 104 989 l 104 0 l 268 0 l 268 763 l 550 0 l 692 0 l 967 763 l 967 0 l 1132 0 z "},"\u041d":{"ha":1003,"x_min":0,"x_max":0,"o":"m 901 989 l 728 989 l 728 596 l 275 596 l 275 989 l 101 989 l 101 0 l 275 0 l 275 444 l 728 444 l 728 0 l 901 0 z "},"\u041e":{"ha":1056,"x_min":0,"x_max":0,"o":"m 531 1013 b 181 866 383 1013 267 964 b 53 494 96 768 53 644 b 184 119 53 340 97 215 b 528 -24 272 24 386 -24 b 871 120 669 -24 783 24 b 1003 494 959 216 1003 341 b 872 869 1003 648 959 773 b 531 1013 784 965 670 1013 z m 528 867 b 747 766 619 867 692 833 b 828 496 801 699 828 609 b 747 224 828 383 801 292 b 531 122 692 156 620 122 b 309 224 437 122 363 156 b 228 497 255 291 228 382 b 310 766 228 609 255 699 b 528 867 364 833 437 867 z "},"\u041f":{"ha":1003,"x_min":0,"x_max":0,"o":"m 901 989 l 101 989 l 101 0 l 275 0 l 275 839 l 728 839 l 728 0 l 901 0 z "},"\u0420":{"ha":926,"x_min":0,"x_max":0,"o":"m 107 989 l 107 0 l 281 0 l 281 381 l 560 381 b 794 463 659 381 737 408 b 881 688 852 518 881 593 b 788 913 881 788 850 863 b 536 989 727 964 643 989 z m 281 844 l 507 844 b 711 683 643 844 711 791 b 522 521 711 575 648 521 l 281 521 z "},"\u0421":{"ha":1003,"x_min":0,"x_max":0,"o":"m 951 376 l 778 376 b 525 124 756 208 672 124 b 391 156 474 124 429 134 b 300 241 353 177 322 205 b 250 358 278 277 261 316 b 233 494 239 401 233 446 b 262 672 233 558 243 617 b 359 808 281 726 313 771 b 526 864 405 845 461 864 b 688 813 590 864 644 847 b 771 674 731 779 759 733 l 943 674 b 803 924 927 783 881 866 b 529 1011 725 982 634 1011 b 275 940 432 1011 347 987 b 113 752 203 892 149 829 b 58 494 76 675 58 589 b 185 118 58 338 100 213 b 521 -24 269 24 381 -24 b 822 85 644 -24 744 13 b 951 376 899 158 942 255 z "},"\u0422":{"ha":824,"x_min":0,"x_max":0,"o":"m 814 989 l 10 989 l 10 839 l 325 839 l 325 0 l 499 0 l 499 839 l 814 839 z "},"\u0423":{"ha":849,"x_min":0,"x_max":0,"o":"m 335 278 l 333 275 b 258 157 304 219 279 180 b 183 122 238 134 213 122 b 72 147 136 122 99 131 l 72 1 b 189 -24 109 -15 148 -24 b 343 28 246 -24 298 -6 b 471 201 388 62 431 120 l 856 989 l 668 989 l 424 458 l 185 989 l -7 989 z "},"\u0424":{"ha":1121,"x_min":0,"x_max":0,"o":"m 1074 499 b 952 783 1074 619 1033 714 b 647 893 871 852 769 888 l 647 989 l 474 989 l 474 893 b 170 783 353 889 252 853 b 47 499 88 714 47 619 b 111 285 47 416 69 345 b 269 155 154 226 206 182 b 474 111 332 128 400 113 l 474 0 l 647 0 l 647 111 b 947 215 763 113 863 148 b 1074 499 1031 283 1074 377 z m 900 499 b 835 331 900 423 878 367 b 647 261 791 294 729 271 l 647 743 b 900 499 816 725 900 644 z m 474 261 b 286 331 392 271 330 294 b 221 499 243 367 221 423 b 474 743 221 644 305 725 z "},"\u0425":{"ha":900,"x_min":0,"x_max":0,"o":"m -8 0 l 192 0 l 443 378 l 690 0 l 901 0 l 550 513 l 878 989 l 683 989 l 449 639 l 224 989 l 17 989 l 344 513 z "},"\u0426":{"ha":1019,"x_min":0,"x_max":0,"o":"m 897 150 l 897 989 l 724 989 l 724 150 l 271 150 l 271 989 l 97 989 l 97 0 l 838 0 l 838 -246 l 1006 -246 l 1006 150 z "},"\u0427":{"ha":951,"x_min":0,"x_max":0,"o":"m 676 433 l 676 0 l 850 0 l 850 989 l 676 989 l 676 583 b 444 560 598 568 520 560 b 347 574 406 560 374 564 b 288 606 320 583 300 594 b 257 656 275 618 264 634 b 244 707 250 677 245 694 b 243 760 244 720 243 738 l 243 989 l 69 989 l 69 707 b 76 633 69 681 72 656 b 106 554 81 609 91 583 b 163 480 120 525 140 501 b 265 427 187 459 221 441 b 417 406 309 413 359 406 b 676 433 483 406 570 415 z "},"\u0428":{"ha":1490,"x_min":0,"x_max":0,"o":"m 101 0 l 1389 0 l 1389 989 l 1215 989 l 1215 150 l 832 150 l 832 989 l 658 989 l 658 150 l 275 150 l 275 989 l 101 989 z "},"\u0429":{"ha":1507,"x_min":0,"x_max":0,"o":"m 97 0 l 1325 0 l 1325 -246 l 1493 -246 l 1493 150 l 1385 150 l 1385 989 l 1211 989 l 1211 150 l 828 150 l 828 989 l 654 989 l 654 150 l 271 150 l 271 989 l 97 989 z "},"\u042a":{"ha":1129,"x_min":0,"x_max":0,"o":"m 1083 307 b 996 532 1083 404 1054 479 b 746 611 938 585 854 611 l 482 611 l 482 989 l 11 989 l 11 839 l 308 839 l 308 0 l 746 0 b 995 80 853 0 936 27 b 1083 307 1054 133 1083 209 z m 910 303 b 739 142 910 195 853 142 l 482 142 l 482 469 l 736 469 b 864 425 791 469 833 455 b 910 303 894 395 910 355 z "},"\u042b":{"ha":1244,"x_min":0,"x_max":0,"o":"m 853 307 b 765 532 853 404 824 479 b 515 611 707 585 624 611 l 279 611 l 279 989 l 106 989 l 106 0 l 515 0 b 765 80 623 0 706 27 b 853 307 823 133 853 209 z m 679 303 b 508 142 679 195 622 142 l 279 142 l 279 469 l 506 469 b 633 425 560 469 603 455 b 679 303 664 395 679 355 z m 969 989 l 969 0 l 1143 0 l 1143 989 z "},"\u042c":{"ha":926,"x_min":0,"x_max":0,"o":"m 881 307 b 793 532 881 404 851 479 b 543 611 735 585 651 611 l 279 611 l 279 989 l 106 989 l 106 0 l 543 0 b 792 80 650 0 734 27 b 881 307 851 133 881 209 z m 707 303 b 536 142 707 195 650 142 l 279 142 l 279 469 l 533 469 b 661 425 588 469 631 455 b 707 303 692 395 707 355 z "},"\u042d":{"ha":1003,"x_min":0,"x_max":0,"o":"m 944 494 b 890 752 944 589 926 675 b 728 940 854 829 800 892 b 474 1011 656 987 571 1011 b 206 929 372 1011 283 984 b 63 692 130 875 82 795 l 236 692 b 322 818 251 745 280 788 b 476 864 365 849 416 864 b 672 784 559 864 624 837 b 763 581 719 731 750 663 l 344 581 l 344 440 l 767 440 b 683 214 759 350 731 274 b 478 124 635 154 567 124 b 232 332 345 124 263 193 l 57 332 b 196 73 74 224 120 137 b 482 -24 272 9 367 -24 b 818 118 622 -24 734 24 b 944 494 902 213 944 338 z "},"\u042e":{"ha":1414,"x_min":0,"x_max":0,"o":"m 907 1013 b 603 897 785 1013 684 974 b 454 596 523 820 474 720 l 275 596 l 275 989 l 101 989 l 101 0 l 275 0 l 275 447 l 449 447 b 588 106 458 306 504 193 b 904 -24 672 20 777 -24 b 1232 121 1037 -24 1146 25 b 1361 494 1318 217 1361 342 b 1233 868 1361 647 1318 772 b 907 1013 1147 964 1038 1013 z m 904 867 b 1109 766 989 867 1058 833 b 1186 496 1160 699 1186 609 b 1108 225 1186 384 1160 294 b 907 122 1056 156 989 122 b 701 224 823 122 754 156 b 622 497 649 292 622 383 b 701 765 622 608 648 698 b 904 867 753 833 821 867 z "},"\u042f":{"ha":951,"x_min":0,"x_max":0,"o":"m 850 0 l 850 989 l 400 989 b 158 915 296 989 216 964 b 72 715 101 865 72 799 b 118 536 72 645 88 585 b 286 425 149 487 205 450 l -18 0 l 199 0 l 479 408 l 676 408 l 676 0 z m 676 540 l 415 540 b 246 700 302 540 246 594 b 288 812 246 751 260 788 b 418 847 315 835 359 847 l 676 847 z "},"\u0430":{"ha":772,"x_min":0,"x_max":0,"o":"m 76 496 l 226 496 b 272 594 233 542 248 575 b 386 624 296 614 334 624 b 533 515 484 624 533 588 b 524 464 533 488 530 471 b 482 441 516 454 502 446 b 367 422 462 436 423 430 b 317 416 342 419 325 417 b 269 408 309 415 294 412 b 219 398 245 405 228 401 b 174 383 209 395 194 390 b 131 363 154 377 140 370 b 98 335 122 355 111 346 b 69 299 84 324 75 312 b 53 253 63 286 57 270 b 46 196 48 235 46 216 b 111 40 46 130 68 78 b 288 -18 155 1 213 -18 b 539 68 395 -18 479 11 b 656 -18 549 11 588 -18 b 758 -3 683 -18 718 -13 l 758 108 b 722 106 745 106 733 106 b 692 117 707 106 697 109 b 685 158 687 124 685 138 l 685 522 b 605 686 685 596 658 651 b 390 739 552 721 480 739 b 76 496 198 739 93 658 z m 532 360 l 532 275 b 500 151 532 214 521 173 b 338 94 462 113 408 94 b 242 122 297 94 265 104 b 208 201 220 141 208 167 b 218 249 208 220 212 236 b 241 281 225 263 232 273 b 278 301 250 289 262 296 b 319 313 295 307 308 311 b 365 321 331 316 346 318 b 406 326 372 322 385 324 b 452 333 427 329 442 331 b 490 342 462 334 475 337 b 532 360 506 347 520 353 z "},"\u0431":{"ha":824,"x_min":0,"x_max":0,"o":"m 772 350 b 679 617 772 460 741 549 b 447 718 617 684 540 718 b 286 681 381 718 327 706 b 179 571 245 657 210 620 l 175 571 b 426 840 215 740 299 830 b 473 844 436 841 451 842 b 519 847 495 845 510 846 b 560 852 528 848 541 850 b 600 859 578 854 592 857 b 635 869 608 861 620 865 b 667 885 650 874 660 879 b 694 906 674 890 683 897 b 718 933 704 914 713 923 b 734 969 724 944 729 956 b 746 1015 739 983 743 999 l 588 1015 b 579 1003 585 1011 582 1006 b 567 994 576 999 572 996 b 552 988 561 991 556 990 b 531 984 548 987 541 985 b 508 981 522 983 514 982 b 477 979 502 981 491 980 b 443 976 463 978 451 977 b 271 934 374 972 316 958 b 156 826 225 910 187 875 b 65 406 95 734 65 594 b 101 179 65 310 77 235 b 426 -19 157 47 265 -19 b 678 81 531 -19 615 14 b 772 350 741 148 772 238 z m 614 350 b 560 172 614 276 596 217 b 419 106 525 128 478 106 b 278 172 361 106 314 128 b 225 350 243 217 225 276 b 278 527 225 424 243 483 b 419 593 314 571 361 593 b 560 526 478 593 525 571 b 614 350 596 482 614 423 z "},"\u0432":{"ha":772,"x_min":0,"x_max":0,"o":"m 724 203 b 589 388 724 303 679 364 l 589 390 b 667 450 624 407 650 427 b 692 542 683 473 692 504 b 635 671 692 597 673 640 b 479 717 598 701 546 717 l 83 717 l 83 0 l 460 0 b 655 53 544 0 609 18 b 724 203 701 88 724 138 z m 460 317 b 539 290 494 317 520 308 b 567 217 557 273 567 248 b 460 119 567 152 531 119 l 242 119 l 242 317 z m 439 597 b 535 518 503 597 535 571 b 443 432 535 461 504 432 l 242 432 l 242 597 z "},"\u0433":{"ha":592,"x_min":0,"x_max":0,"o":"m 585 592 l 585 717 l 83 717 l 83 0 l 242 0 l 242 592 z "},"\u0434":{"ha":833,"x_min":0,"x_max":0,"o":"m 819 -228 l 819 125 l 724 125 l 724 717 l 185 717 l 185 636 b 100 125 185 428 156 257 l 10 125 l 10 -228 l 160 -228 l 160 0 l 669 0 l 669 -228 z m 568 125 l 263 125 b 313 310 280 167 297 228 b 336 546 328 392 336 471 l 336 594 l 568 594 z "},"\u0435":{"ha":772,"x_min":0,"x_max":0,"o":"m 725 224 l 574 224 b 509 124 558 178 536 145 b 403 93 482 103 446 93 b 260 152 342 93 294 113 b 206 319 225 191 207 247 l 735 319 l 735 336 b 643 630 735 460 704 558 b 394 738 582 702 499 738 b 145 628 294 738 210 701 b 47 350 80 555 47 462 b 142 81 47 241 79 151 b 400 -24 206 11 292 -24 b 610 42 481 -24 552 -2 b 725 224 669 85 707 146 z m 576 425 l 208 425 b 267 569 216 488 235 536 b 393 619 299 603 341 619 b 520 567 445 619 487 602 b 576 425 553 533 572 485 z "},"\u0436":{"ha":1081,"x_min":0,"x_max":0,"o":"m 1093 0 l 785 411 l 1058 717 l 867 717 l 621 414 l 617 414 l 617 717 l 464 717 l 464 414 l 460 414 l 214 717 l 22 717 l 296 411 l -12 0 l 178 0 l 397 311 l 464 236 l 464 0 l 617 0 l 617 236 l 683 311 l 903 0 z "},"\u0437":{"ha":721,"x_min":0,"x_max":0,"o":"m 669 213 b 628 334 669 263 656 304 b 531 390 601 364 569 383 l 531 393 b 612 444 562 400 589 417 b 646 544 634 472 646 506 b 570 690 646 610 621 659 b 374 738 520 722 454 738 b 61 510 179 738 75 662 l 221 510 b 358 617 237 581 282 617 b 489 526 445 617 489 587 b 346 432 489 463 441 432 l 282 432 l 282 315 l 371 315 b 511 210 464 315 511 280 b 471 131 511 176 498 150 b 363 103 444 112 408 103 b 200 224 265 103 211 143 l 40 224 b 128 45 44 148 73 88 b 364 -19 184 2 262 -19 b 578 42 446 -19 518 1 b 669 213 639 82 669 139 z "},"\u0438":{"ha":797,"x_min":0,"x_max":0,"o":"m 283 0 l 551 522 l 556 522 l 556 0 l 714 0 l 714 717 l 514 717 l 246 194 l 242 194 l 242 717 l 83 717 l 83 0 z "},"\u0439":{"ha":797,"x_min":0,"x_max":0,"o":"m 626 1013 l 546 1013 b 399 907 528 942 479 907 b 251 1013 318 907 269 942 l 171 1013 b 238 865 178 946 200 897 b 399 817 275 833 328 817 b 560 865 469 817 523 833 b 626 1013 597 897 619 946 z m 283 0 l 551 522 l 556 522 l 556 0 l 714 0 l 714 717 l 514 717 l 246 194 l 242 194 l 242 717 l 83 717 l 83 0 z "},"\u043a":{"ha":746,"x_min":0,"x_max":0,"o":"m 753 0 l 442 429 l 721 717 l 528 717 l 242 399 l 242 717 l 83 717 l 83 0 l 242 0 l 242 222 l 336 321 l 561 0 z "},"\u043b":{"ha":797,"x_min":0,"x_max":0,"o":"m 717 0 l 717 717 l 188 717 l 175 293 b 75 115 171 175 138 115 b 18 122 46 115 27 118 l 18 -1 b 115 -17 43 -12 75 -17 b 269 60 180 -17 231 9 b 329 278 306 112 326 184 l 339 592 l 558 592 l 558 0 z "},"\u043c":{"ha":978,"x_min":0,"x_max":0,"o":"m 236 0 l 236 476 l 239 476 l 410 0 l 569 0 l 740 476 l 743 476 l 743 0 l 896 0 l 896 717 l 688 717 l 494 147 l 492 147 l 292 717 l 83 717 l 83 0 z "},"\u043d":{"ha":797,"x_min":0,"x_max":0,"o":"m 242 0 l 242 311 l 556 311 l 556 0 l 714 0 l 714 717 l 556 717 l 556 436 l 242 436 l 242 717 l 83 717 l 83 0 z "},"\u043e":{"ha":824,"x_min":0,"x_max":0,"o":"m 415 738 b 149 635 304 738 216 703 b 50 358 83 566 50 474 b 149 81 50 242 83 149 b 415 -22 214 12 303 -22 b 677 81 525 -22 613 12 b 774 358 741 149 774 242 b 676 635 774 474 741 566 b 415 738 612 703 525 738 z m 413 613 b 560 545 475 613 525 590 b 614 360 596 500 614 438 b 560 170 614 279 596 216 b 414 101 525 124 476 101 b 264 169 350 101 300 124 b 210 358 228 215 210 278 b 264 544 210 437 228 499 b 413 613 300 590 350 613 z "},"\u043f":{"ha":797,"x_min":0,"x_max":0,"o":"m 242 0 l 242 592 l 556 592 l 556 0 l 714 0 l 714 717 l 83 717 l 83 0 z "},"\u0440":{"ha":849,"x_min":0,"x_max":0,"o":"m 235 717 l 86 717 l 86 -265 l 243 -265 l 243 94 b 476 -18 297 19 375 -18 b 708 84 573 -18 650 16 b 794 356 766 152 794 243 b 706 633 794 471 765 564 b 468 738 646 703 567 738 b 235 621 361 738 283 699 z m 436 610 b 581 541 497 610 546 587 b 635 356 617 495 635 433 b 582 175 635 280 617 219 b 439 108 547 131 499 108 b 291 175 376 108 327 131 b 238 358 255 219 238 281 b 290 543 238 437 255 499 b 436 610 325 588 374 610 z "},"\u0441":{"ha":772,"x_min":0,"x_max":0,"o":"m 733 271 l 578 271 b 520 149 569 218 550 178 b 404 107 490 121 451 107 b 263 174 344 107 297 129 b 213 360 229 218 213 280 b 265 548 213 439 230 502 b 410 617 300 594 349 617 b 515 581 452 617 488 605 b 571 476 543 556 562 522 l 728 476 b 630 669 719 559 686 623 b 408 739 574 716 500 739 b 148 634 299 739 212 704 b 51 351 84 564 51 470 b 147 84 51 241 83 152 b 404 -18 211 16 297 -18 b 628 60 494 -18 569 8 b 733 271 687 113 722 183 z "},"\u0442":{"ha":644,"x_min":0,"x_max":0,"o":"m 638 592 l 638 717 l 7 717 l 7 592 l 243 592 l 243 0 l 401 0 l 401 592 z "},"\u0443":{"ha":721,"x_min":0,"x_max":0,"o":"m 715 717 l 550 717 l 369 189 l 178 717 l 4 717 l 279 21 b 271 -7 278 17 275 8 b 260 -40 266 -22 263 -33 b 248 -69 257 -47 253 -56 b 232 -98 243 -81 238 -91 b 213 -120 226 -105 220 -112 b 188 -137 205 -128 197 -134 b 157 -142 178 -140 168 -142 b 74 -132 135 -142 107 -138 l 74 -265 b 183 -274 117 -271 154 -274 b 233 -269 201 -274 217 -272 b 274 -258 248 -266 262 -262 b 309 -237 286 -253 297 -247 b 338 -212 321 -227 330 -219 b 364 -181 346 -206 355 -195 l 385 -147 b 403 -108 389 -140 396 -127 b 419 -69 411 -90 417 -77 b 435 -27 422 -62 427 -48 b 450 14 442 -6 447 7 z "},"\u0444":{"ha":1147,"x_min":0,"x_max":0,"o":"m 1097 369 b 1021 638 1097 482 1072 572 b 815 738 970 704 901 738 b 724 715 786 738 755 730 b 657 664 693 700 671 683 l 653 664 l 653 989 l 494 989 l 494 664 l 490 664 b 423 715 476 683 454 700 b 332 738 392 730 362 738 b 126 638 246 738 177 704 b 50 369 75 572 50 482 b 77 178 50 298 59 234 b 172 38 95 122 127 75 b 342 -19 218 0 274 -19 b 425 1 368 -19 395 -13 b 490 47 455 14 476 30 l 494 47 l 494 -265 l 653 -265 l 653 47 l 657 47 b 722 1 671 30 693 14 b 806 -19 752 -13 780 -19 b 975 38 873 -19 930 0 b 1070 178 1020 75 1052 122 b 1097 369 1088 234 1097 298 z m 939 367 b 901 178 939 291 926 228 b 775 103 875 128 833 103 b 693 126 743 103 715 110 b 653 182 671 141 657 160 l 653 531 b 703 595 662 560 679 582 b 782 615 728 609 754 615 b 939 367 887 615 939 532 z m 494 182 b 454 126 490 160 476 141 b 372 103 432 110 405 103 b 247 178 314 103 272 128 b 208 367 221 228 208 291 b 365 615 208 532 261 615 b 444 595 393 615 419 609 b 494 531 468 582 485 560 z "},"\u0445":{"ha":746,"x_min":0,"x_max":0,"o":"m 275 376 l 4 0 l 190 0 l 367 264 l 549 0 l 739 0 l 465 385 l 708 717 l 525 717 l 368 496 l 218 717 l 26 717 z "},"\u0446":{"ha":819,"x_min":0,"x_max":0,"o":"m 714 125 l 714 717 l 556 717 l 556 125 l 242 125 l 242 717 l 83 717 l 83 0 l 657 0 l 657 -228 l 810 -228 l 810 125 z "},"\u0447":{"ha":746,"x_min":0,"x_max":0,"o":"m 510 304 l 510 0 l 668 0 l 668 717 l 510 717 l 510 435 b 339 400 455 412 398 400 b 208 536 252 400 208 445 l 208 717 l 50 717 l 50 481 b 109 322 50 411 70 358 b 276 267 148 285 204 267 b 510 304 352 267 430 279 z "},"\u0448":{"ha":1131,"x_min":0,"x_max":0,"o":"m 83 0 l 1047 0 l 1047 717 l 889 717 l 889 125 l 644 125 l 644 717 l 486 717 l 486 125 l 242 125 l 242 717 l 83 717 z "},"\u0449":{"ha":1153,"x_min":0,"x_max":0,"o":"m 83 0 l 990 0 l 990 -228 l 1143 -228 l 1143 125 l 1047 125 l 1047 717 l 889 717 l 889 125 l 644 125 l 644 717 l 486 717 l 486 125 l 242 125 l 242 717 l 83 717 z "},"\u044a":{"ha":875,"x_min":0,"x_max":0,"o":"m 833 229 b 769 397 833 300 812 356 b 589 457 727 437 667 457 l 371 457 l 371 717 l 8 717 l 8 592 l 213 592 l 213 0 l 590 0 b 769 61 667 0 727 20 b 833 229 812 102 833 158 z m 675 226 b 649 152 675 196 666 171 b 572 124 632 133 606 124 l 371 124 l 371 333 l 569 333 b 647 304 603 333 629 324 b 675 226 666 285 675 259 z "},"\u044b":{"ha":1003,"x_min":0,"x_max":0,"o":"m 768 717 l 768 0 l 926 0 l 926 717 z m 669 229 b 606 397 669 300 648 356 b 425 457 563 437 503 457 l 235 457 l 235 717 l 76 717 l 76 0 l 426 0 b 606 61 503 0 563 20 b 669 229 648 102 669 158 z m 511 226 b 485 152 511 196 503 171 b 408 124 468 133 443 124 l 235 124 l 235 333 l 406 333 b 483 304 439 333 465 324 b 511 226 502 285 511 259 z "},"\u044c":{"ha":746,"x_min":0,"x_max":0,"o":"m 704 229 b 640 397 704 300 683 356 b 460 457 598 437 538 457 l 242 457 l 242 717 l 83 717 l 83 0 l 461 0 b 640 61 538 0 598 20 b 704 229 683 102 704 158 z m 546 226 b 520 152 546 196 537 171 b 443 124 503 133 477 124 l 242 124 l 242 333 l 440 333 b 518 304 474 333 500 324 b 546 226 537 285 546 259 z "},"\u044d":{"ha":772,"x_min":0,"x_max":0,"o":"m 722 351 b 626 634 722 470 690 564 b 365 739 561 704 475 739 b 151 675 277 739 206 718 b 49 496 96 632 62 573 l 207 496 b 364 617 230 576 282 617 b 493 566 417 617 460 600 b 557 424 526 532 548 485 l 292 424 l 292 313 l 558 313 b 499 161 552 248 532 197 b 369 107 466 125 423 107 b 201 244 281 107 225 153 l 44 244 b 156 53 60 164 97 100 b 369 -18 214 6 285 -18 b 626 84 477 -18 563 16 b 722 351 690 152 722 241 z "},"\u044e":{"ha":1114,"x_min":0,"x_max":0,"o":"m 719 738 b 485 656 625 738 547 710 b 374 433 424 602 387 528 l 242 433 l 242 717 l 83 717 l 83 0 l 242 0 l 242 314 l 371 314 b 476 68 378 210 413 128 b 719 -22 538 8 619 -22 b 971 81 825 -22 909 12 b 1064 358 1033 149 1064 242 b 971 635 1064 474 1033 566 b 719 738 909 703 825 738 z m 717 613 b 855 545 776 613 822 590 b 904 360 888 500 904 438 b 855 170 904 279 888 216 b 718 101 822 124 776 101 b 578 169 658 101 611 124 b 528 358 544 215 528 278 b 578 544 528 437 544 499 b 717 613 611 590 657 613 z "},"\u044f":{"ha":772,"x_min":0,"x_max":0,"o":"m 689 0 l 689 717 l 310 717 b 135 665 234 717 175 699 b 74 518 94 630 74 581 b 107 388 74 467 85 424 b 228 307 129 353 169 325 l -11 0 l 175 0 l 396 289 l 531 289 l 531 0 z m 531 404 l 338 404 b 232 504 267 404 232 438 b 339 596 232 565 268 596 l 531 596 z "},"\u0450":{"ha":772,"x_min":0,"x_max":0,"o":"m 576 422 l 207 422 b 223 497 208 449 213 474 b 262 558 233 520 246 541 b 320 598 278 575 297 588 b 396 613 343 608 368 613 b 469 597 423 613 447 607 b 524 555 491 586 509 572 b 560 494 540 538 552 518 b 576 422 569 471 575 447 z m 207 318 l 735 318 b 724 474 741 372 738 424 b 660 608 711 525 689 569 b 548 702 630 647 593 678 b 396 738 503 726 452 738 b 251 707 342 738 294 727 b 142 624 209 687 172 659 b 73 503 112 590 89 549 b 49 358 57 458 49 409 b 72 206 49 303 56 252 b 140 86 87 159 109 119 b 250 8 170 53 206 27 b 400 -19 294 -10 344 -19 b 512 -3 439 -19 476 -14 b 608 44 547 7 580 23 b 682 121 637 65 662 90 b 725 225 702 151 717 186 l 575 225 b 512 135 561 185 540 155 b 400 106 484 116 446 106 b 314 123 367 106 338 111 b 254 169 290 134 270 150 b 219 238 238 189 227 212 b 207 318 211 263 207 290 z m 386 1017 l 200 1017 l 397 818 l 513 818 z "},"\u0451":{"ha":772,"x_min":0,"x_max":0,"o":"m 601 989 l 447 989 l 447 838 l 601 838 z m 325 989 l 171 989 l 171 838 l 325 838 z m 725 224 l 574 224 b 509 124 558 178 536 145 b 403 93 482 103 446 93 b 260 152 342 93 294 113 b 206 319 225 191 207 247 l 735 319 l 735 336 b 643 630 735 460 704 558 b 394 738 582 702 499 738 b 145 628 294 738 210 701 b 47 350 80 555 47 462 b 142 81 47 241 79 151 b 400 -24 206 11 292 -24 b 610 42 481 -24 552 -2 b 725 224 669 85 707 146 z m 576 425 l 208 425 b 267 569 216 488 235 536 b 393 619 299 603 341 619 b 520 567 445 619 487 602 b 576 425 553 533 572 485 z "},"\u0452":{"ha":797,"x_min":0,"x_max":0,"o":"m 724 143 l 724 271 b 658 450 724 347 702 406 b 476 515 614 494 553 515 b 254 401 378 515 304 477 l 251 401 l 251 599 l 567 599 l 567 717 l 251 717 l 251 989 l 93 989 l 93 717 l 21 717 l 21 599 l 93 599 l 93 0 l 251 0 l 251 201 b 301 338 251 257 268 302 b 428 390 334 373 376 390 b 565 229 519 390 565 337 l 565 142 b 498 -40 565 69 543 9 b 315 -128 453 -89 392 -119 l 315 -265 b 604 -142 428 -261 525 -220 b 724 143 684 -65 724 30 z "},"\u0453":{"ha":592,"x_min":0,"x_max":0,"o":"m 585 592 l 585 717 l 83 717 l 83 0 l 242 0 l 242 592 z m 492 1010 l 310 1010 l 192 811 l 306 811 z "},"\u0454":{"ha":772,"x_min":0,"x_max":0,"o":"m 729 244 l 572 244 b 404 107 549 153 493 107 b 274 161 350 107 307 125 b 215 313 241 197 222 248 l 489 313 l 489 424 l 217 424 b 281 566 226 485 247 532 b 410 617 314 600 357 617 b 567 496 491 617 544 576 l 725 496 b 623 675 712 573 678 632 b 408 739 568 718 496 739 b 148 634 299 739 212 704 b 51 351 84 564 51 470 b 147 84 51 241 83 152 b 404 -18 211 16 297 -18 b 618 53 488 -18 560 6 b 729 244 676 100 713 164 z "},"\u0455":{"ha":721,"x_min":0,"x_max":0,"o":"m 651 508 b 567 681 651 585 623 643 b 351 738 511 719 439 738 b 136 680 260 738 188 718 b 58 521 84 641 58 588 b 157 364 58 448 91 395 b 351 306 185 350 250 331 b 360 303 354 305 357 304 b 367 301 363 303 365 302 l 375 300 b 433 285 399 294 418 290 b 478 267 447 281 462 275 b 512 239 494 259 505 250 b 522 199 519 228 522 214 b 480 123 522 167 508 142 b 368 94 452 104 414 94 b 194 229 261 94 203 139 l 43 229 b 131 43 47 148 76 86 b 365 -21 185 0 263 -21 b 593 43 461 -21 537 0 b 678 215 650 86 678 143 b 659 297 678 246 672 273 b 618 352 647 320 633 339 b 549 391 603 366 580 378 b 478 416 518 403 495 412 b 400 435 462 420 436 426 b 364 442 392 437 380 439 b 330 450 348 446 337 448 b 301 458 323 452 313 454 b 276 466 289 461 281 464 b 256 475 271 468 264 471 b 238 486 247 479 241 482 b 227 499 235 490 231 494 b 219 517 223 504 220 510 b 217 539 217 523 217 531 b 250 600 217 565 228 585 b 344 622 272 615 304 622 b 500 508 439 622 491 584 z "},"\u0456":{"ha":335,"x_min":0,"x_max":0,"o":"m 246 993 l 88 993 l 88 838 l 246 838 z m 246 717 l 88 717 l 88 0 l 246 0 z "},"\u0457":{"ha":335,"x_min":0,"x_max":0,"o":"m 246 717 l 88 717 l 88 0 l 246 0 z m 383 989 l 228 989 l 228 838 l 383 838 z m 107 989 l -49 989 l -49 838 l 107 838 z "},"\u0458":{"ha":335,"x_min":0,"x_max":0,"o":"m 251 717 l 93 717 l 93 -79 b 74 -132 93 -106 87 -124 b 11 -144 62 -140 41 -144 b -26 -142 10 -144 -2 -144 l -26 -271 b 40 -275 4 -274 26 -275 b 205 -219 119 -275 174 -256 b 251 -37 236 -182 251 -122 z m 251 994 l 93 994 l 93 838 l 251 838 z "},"\u0459":{"ha":1135,"x_min":0,"x_max":0,"o":"m 1093 222 b 1030 385 1093 293 1072 347 b 849 443 988 424 927 443 l 681 443 l 681 717 l 183 717 l 171 293 b 71 115 167 175 134 115 b 14 122 42 115 23 118 l 14 -1 b 111 -17 40 -12 72 -17 b 265 60 176 -17 227 9 b 325 278 302 112 322 184 l 335 592 l 522 592 l 522 0 l 850 0 b 1030 58 928 0 988 19 b 1093 222 1072 96 1093 151 z m 935 219 b 832 124 935 156 900 124 l 681 124 l 681 319 l 829 319 b 907 293 863 319 888 311 b 935 219 925 275 935 251 z "},"\u045a":{"ha":1135,"x_min":0,"x_max":0,"o":"m 1093 222 b 1030 385 1093 293 1072 347 b 849 443 988 424 927 443 l 672 443 l 672 717 l 514 717 l 514 444 l 242 444 l 242 717 l 83 717 l 83 0 l 242 0 l 242 319 l 514 319 l 514 0 l 850 0 b 1030 58 928 0 988 19 b 1093 222 1072 96 1093 151 z m 935 219 b 832 124 935 156 900 124 l 672 124 l 672 319 l 829 319 b 907 293 863 319 888 311 b 935 219 925 275 935 251 z "},"\u045b":{"ha":797,"x_min":0,"x_max":0,"o":"m 724 0 l 724 271 b 658 450 724 347 702 406 b 476 515 614 494 553 515 b 254 401 378 515 304 477 l 251 401 l 251 599 l 567 599 l 567 717 l 251 717 l 251 989 l 93 989 l 93 717 l 21 717 l 21 599 l 93 599 l 93 0 l 251 0 l 251 201 b 301 338 251 257 268 302 b 428 390 334 373 376 390 b 565 229 519 390 565 337 l 565 0 z "},"\u045c":{"ha":746,"x_min":0,"x_max":0,"o":"m 579 1010 l 397 1010 l 279 811 l 393 811 z m 753 0 l 442 429 l 721 717 l 528 717 l 242 399 l 242 717 l 83 717 l 83 0 l 242 0 l 242 222 l 336 321 l 561 0 z "},"\u045d":{"ha":849,"x_min":0,"x_max":0,"o":"m 88 718 l 88 0 l 276 0 l 599 497 l 601 497 l 601 0 l 760 0 l 760 718 l 564 718 l 249 225 l 246 225 l 246 718 z m 399 1017 l 213 1017 l 410 818 l 525 818 z "},"\u045e":{"ha":721,"x_min":0,"x_max":0,"o":"m 596 1013 l 515 1013 b 368 907 498 942 449 907 b 221 1013 288 907 238 942 l 140 1013 b 207 865 148 946 170 897 b 368 817 244 833 298 817 b 529 865 438 817 492 833 b 596 1013 566 897 588 946 z m 715 717 l 550 717 l 369 189 l 178 717 l 4 717 l 279 21 b 271 -7 278 17 275 8 b 260 -40 266 -22 263 -33 b 248 -69 257 -47 253 -56 b 232 -98 243 -81 238 -91 b 213 -120 226 -105 220 -112 b 188 -137 205 -128 197 -134 b 157 -142 178 -140 168 -142 b 74 -132 135 -142 107 -138 l 74 -265 b 183 -274 117 -271 154 -274 b 233 -269 201 -274 217 -272 b 274 -258 248 -266 262 -262 b 309 -237 286 -253 297 -247 b 338 -212 321 -227 330 -219 b 364 -181 346 -205 355 -194 b 385 -147 373 -167 380 -156 b 403 -108 389 -139 395 -126 b 419 -69 410 -90 416 -77 b 435 -27 422 -61 427 -47 b 450 14 442 -7 447 6 z "},"\u045f":{"ha":797,"x_min":0,"x_max":0,"o":"m 556 125 l 242 125 l 242 717 l 83 717 l 83 0 l 318 0 l 318 -228 l 476 -228 l 476 0 l 714 0 l 714 717 l 556 717 z "},"\u0462":{"ha":1036,"x_min":0,"x_max":0,"o":"m 215 842 l 215 0 l 653 0 b 825 31 723 0 781 10 b 928 107 869 51 904 76 b 977 207 952 138 968 171 b 990 307 986 243 990 276 b 977 406 990 338 986 371 b 928 506 968 442 952 475 b 825 581 904 536 869 561 b 653 611 781 601 723 611 l 389 611 l 389 842 l 610 842 l 610 992 l 389 992 l 389 1175 l 215 1175 l 215 992 l 11 992 l 11 842 z m 389 142 l 389 469 l 643 469 b 703 461 663 469 682 467 b 759 434 723 456 742 447 b 801 384 776 422 790 405 b 817 306 811 363 817 337 b 803 225 817 273 812 246 b 765 174 794 204 781 187 b 711 149 750 162 731 153 b 646 142 691 144 669 142 z "},"\u0463":{"ha":889,"x_min":0,"x_max":0,"o":"m 219 718 l 14 718 l 14 600 l 219 600 l 219 0 l 589 0 b 719 22 643 0 686 7 b 796 78 752 37 777 56 b 833 150 814 100 827 124 b 843 222 840 176 843 200 b 833 294 843 244 840 269 b 796 366 827 320 814 344 b 719 421 777 388 752 406 b 589 443 686 436 643 443 l 378 443 l 378 600 l 589 600 l 589 718 l 378 718 l 378 875 l 219 875 z m 378 118 l 378 321 l 582 321 b 654 300 610 321 634 314 b 685 224 675 286 685 261 b 654 143 685 187 675 160 b 582 118 634 126 610 118 z "},"\u046a":{"ha":1347,"x_min":0,"x_max":0,"o":"m 760 0 l 760 476 l 872 476 b 1022 445 939 476 989 466 b 1071 329 1054 424 1071 386 l 1071 0 l 1244 0 l 1244 371 b 1220 478 1244 412 1236 447 b 1153 554 1204 508 1181 534 b 1049 600 1124 575 1090 590 b 917 615 1009 610 965 615 l 850 615 l 1107 992 l 239 992 l 496 615 l 429 615 b 297 600 381 615 337 610 b 193 554 256 590 222 575 b 126 478 164 534 142 508 b 101 371 109 447 101 412 l 101 0 l 275 0 l 275 329 b 324 445 275 386 291 424 b 474 476 357 466 407 476 l 586 476 l 586 0 z m 672 610 l 525 849 l 821 849 z "},"\u046b":{"ha":1092,"x_min":0,"x_max":0,"o":"m 622 0 l 622 339 l 704 339 b 772 335 731 339 753 338 b 815 319 790 332 804 327 b 838 289 825 312 833 302 b 844 239 842 276 844 259 l 844 0 l 1003 0 l 1003 268 b 983 348 1003 298 996 324 b 930 408 970 372 953 391 b 847 445 907 424 880 436 b 740 458 815 454 779 458 l 686 458 l 892 718 l 199 718 l 404 458 l 350 458 b 243 445 311 458 275 454 b 160 408 211 436 183 424 b 107 348 138 391 120 372 b 88 268 94 324 88 298 l 88 0 l 246 0 l 246 239 b 253 289 246 259 248 276 b 276 319 257 302 265 312 b 319 335 286 327 301 332 b 386 339 337 338 359 339 l 468 339 l 468 0 z m 544 464 l 454 600 l 636 600 z "},"\u0472":{"ha":1056,"x_min":0,"x_max":0,"o":"m 528 1015 b 328 974 454 1015 387 1001 b 179 861 270 946 220 908 b 85 696 138 814 107 759 b 53 496 64 633 53 566 b 85 294 53 425 64 357 b 179 129 107 231 138 176 b 328 17 220 82 270 45 b 528 -24 387 -10 454 -24 b 727 17 602 -24 668 -10 b 876 129 786 45 836 82 b 970 294 917 176 948 231 b 1003 496 992 357 1003 425 b 970 696 1003 566 992 633 b 876 861 948 759 917 814 b 727 974 836 908 786 946 b 528 1015 668 1001 602 1015 z m 235 396 b 294 459 255 425 275 446 b 360 479 314 472 336 479 b 454 466 395 479 426 475 b 533 436 482 457 508 447 b 608 406 558 425 583 415 b 688 393 632 397 659 393 b 753 405 710 393 732 397 b 826 449 775 413 800 427 b 803 324 825 405 817 363 b 746 218 790 284 771 249 b 653 145 721 188 690 163 b 528 118 617 127 575 118 b 335 191 447 118 383 142 b 235 396 288 240 254 308 z m 528 874 b 640 852 569 874 607 866 b 727 794 674 838 703 819 b 787 709 752 770 772 742 b 818 604 802 676 813 641 b 797 577 813 596 805 587 b 767 551 788 567 778 559 b 731 531 756 543 744 536 b 689 522 718 525 704 522 b 620 535 669 522 647 527 b 538 565 594 544 566 554 b 451 595 509 576 480 586 b 368 608 422 604 394 608 b 298 597 342 608 319 604 b 229 561 277 589 254 577 b 260 681 236 604 246 644 b 316 781 274 719 292 752 b 403 849 340 809 369 832 b 528 874 438 865 480 874 z "},"\u0473":{"ha":824,"x_min":0,"x_max":0,"o":"m 413 -19 b 566 9 470 -19 521 -10 b 680 88 611 28 649 54 b 751 207 711 121 734 161 b 775 360 767 253 775 304 b 751 511 775 414 767 465 b 680 631 734 557 711 597 b 566 709 649 664 611 690 b 413 738 521 728 470 738 b 259 709 355 738 304 728 b 145 631 214 690 176 664 b 74 511 114 597 91 557 b 50 360 58 465 50 414 b 74 207 50 304 58 253 b 145 88 91 161 114 121 b 259 9 176 54 214 28 b 413 -19 304 -10 355 -19 z m 413 106 b 336 120 384 106 358 110 b 278 160 314 130 295 143 b 238 218 262 176 249 196 b 215 289 228 240 220 264 b 245 329 223 303 233 316 b 296 349 258 342 275 349 b 358 338 319 349 340 345 b 410 314 376 330 393 322 b 461 290 428 306 444 298 b 517 279 478 283 496 279 b 572 293 538 279 556 284 b 615 328 588 302 602 314 b 597 245 613 299 606 272 b 558 174 588 219 575 195 b 497 124 542 153 521 137 b 413 106 473 112 445 106 z m 413 613 b 540 565 466 613 509 597 b 606 449 572 533 594 494 b 568 404 594 433 582 418 b 518 383 554 390 538 383 b 470 394 504 383 488 387 b 414 418 452 402 433 410 b 356 442 394 426 375 434 b 300 453 336 449 318 453 b 251 444 281 453 265 450 b 213 419 236 438 224 430 b 235 493 217 445 225 470 b 274 554 245 516 258 537 b 333 597 291 572 310 586 b 413 613 356 607 383 613 z "},"\u0474":{"ha":932,"x_min":0,"x_max":0,"o":"m 897 842 b 925 840 907 842 917 841 b 954 836 933 839 943 838 l 954 986 b 920 990 943 988 932 989 b 876 992 909 991 894 992 b 762 969 831 992 793 984 b 684 910 731 953 705 934 b 633 831 663 886 646 859 b 600 746 620 802 609 774 l 425 207 l 422 207 l 174 992 l -7 992 l 324 0 l 517 0 l 772 746 b 819 816 782 775 798 799 b 897 842 840 833 866 842 z "},"\u0475":{"ha":783,"x_min":0,"x_max":0,"o":"m 13 718 l 274 0 l 451 0 l 635 513 b 742 604 657 574 693 604 b 776 603 756 604 768 604 b 803 600 784 603 793 602 l 803 719 b 772 723 793 721 782 722 b 735 724 762 723 750 724 b 628 711 691 724 656 719 b 560 676 600 703 578 691 b 520 624 543 662 530 644 b 494 561 510 604 502 583 l 369 167 l 367 167 l 185 718 z "},"\u048c":{"ha":1036,"x_min":0,"x_max":0,"o":"m 215 842 l 215 0 l 653 0 b 825 31 723 0 781 10 b 928 107 869 51 904 76 b 977 207 952 138 968 171 b 990 307 986 243 990 276 b 977 406 990 338 986 371 b 928 506 968 442 952 475 b 825 581 904 536 869 561 b 653 611 781 601 723 611 l 389 611 l 389 842 l 610 842 l 610 992 l 389 992 l 389 1175 l 215 1175 l 215 992 l 11 992 l 11 842 z m 389 142 l 389 469 l 643 469 b 703 461 663 469 682 467 b 759 434 723 456 742 447 b 801 384 776 422 790 405 b 817 306 811 363 817 337 b 803 225 817 273 812 246 b 765 174 794 204 781 187 b 711 149 750 162 731 153 b 646 142 691 144 669 142 z "},"\u048d":{"ha":889,"x_min":0,"x_max":0,"o":"m 219 718 l 14 718 l 14 600 l 219 600 l 219 0 l 589 0 b 719 22 643 0 686 7 b 796 78 752 37 777 56 b 833 150 814 100 827 124 b 843 222 840 176 843 200 b 833 294 843 244 840 269 b 796 366 827 320 814 344 b 719 421 777 388 752 406 b 589 443 686 436 643 443 l 378 443 l 378 600 l 589 600 l 589 718 l 378 718 l 378 875 l 219 875 z m 378 118 l 378 321 l 582 321 b 654 300 610 321 634 314 b 685 224 675 286 685 261 b 654 143 685 187 675 160 b 582 118 634 126 610 118 z "},"\u0490":{"ha":782,"x_min":0,"x_max":0,"o":"m 776 1207 l 603 1207 l 603 989 l 106 989 l 106 0 l 279 0 l 279 839 l 776 839 z "},"\u0491":{"ha":592,"x_min":0,"x_max":0,"o":"m 588 931 l 429 931 l 429 717 l 83 717 l 83 0 l 242 0 l 242 592 l 588 592 z "},"\u0492":{"ha":838,"x_min":0,"x_max":0,"o":"m 293 414 l 471 414 l 471 542 l 293 542 l 293 842 l 804 842 l 804 992 l 119 992 l 119 542 l 0 542 l 0 414 l 119 414 l 119 0 l 293 0 z "},"\u0493":{"ha":601,"x_min":0,"x_max":0,"o":"m 260 286 l 399 286 l 399 408 l 260 408 l 260 600 l 589 600 l 589 718 l 101 718 l 101 408 l 0 408 l 0 286 l 101 286 l 101 0 l 260 0 z "},"\u0496":{"ha":1569,"x_min":0,"x_max":0,"o":"m 672 333 l 672 0 l 846 0 l 846 333 l 988 474 l 1313 0 l 1382 0 l 1382 -246 l 1556 -246 l 1556 150 l 1422 150 l 1106 596 l 1501 992 l 1288 992 l 846 540 l 846 992 l 672 992 l 672 540 l 231 992 l 17 992 l 413 596 l -11 0 l 206 0 l 531 474 z "},"\u0497":{"ha":1232,"x_min":0,"x_max":0,"o":"m 500 257 l 500 0 l 658 0 l 658 257 l 753 349 l 972 0 l 1072 0 l 1072 -218 l 1218 -218 l 1218 118 l 1086 118 l 864 454 l 1139 718 l 944 718 l 658 428 l 658 718 l 500 718 l 500 428 l 214 718 l 19 718 l 294 454 l -7 0 l 186 0 l 406 349 z "},"\u0498":{"ha":821,"x_min":0,"x_max":0,"o":"m 279 -222 l 254 -278 b 322 -302 275 -289 297 -297 b 397 -310 346 -307 371 -310 b 458 -303 418 -310 438 -307 b 511 -281 478 -298 495 -291 b 550 -241 527 -270 540 -257 b 565 -182 560 -225 565 -205 b 554 -136 565 -164 562 -149 b 526 -103 547 -123 538 -112 b 489 -84 515 -95 503 -88 b 447 -78 475 -80 461 -78 b 401 -83 427 -78 412 -80 l 400 -82 l 446 -22 b 576 5 493 -19 537 -10 b 679 67 616 20 650 41 b 747 160 708 93 730 124 b 771 282 763 197 771 238 b 721 447 771 347 754 402 b 585 532 688 493 642 521 l 585 535 b 694 617 634 552 670 580 b 731 749 719 654 731 698 b 706 865 731 793 722 832 b 637 949 689 899 666 926 b 535 999 608 971 574 988 b 411 1015 496 1010 455 1015 b 272 990 359 1015 313 1007 b 169 919 231 972 197 949 b 103 811 141 889 119 853 b 78 675 88 769 80 724 l 249 675 b 256 753 248 703 250 729 b 285 816 262 777 272 798 b 335 858 298 834 315 848 b 408 874 356 869 381 874 b 517 838 455 874 491 862 b 557 738 544 815 557 781 b 505 615 557 676 540 635 b 343 586 470 594 416 584 l 343 457 b 454 455 386 458 423 457 b 533 434 486 453 512 446 b 581 383 555 422 571 405 b 597 290 592 360 597 329 b 550 160 597 232 581 189 b 413 118 519 132 473 118 b 271 174 349 118 301 137 b 228 325 240 211 226 261 l 57 325 b 78 188 58 275 65 229 b 137 80 91 146 110 110 b 237 8 163 50 197 26 b 379 -22 277 -9 325 -19 l 306 -122 l 336 -149 b 390 -135 351 -139 369 -135 b 434 -148 406 -135 421 -139 b 454 -187 447 -157 454 -170 b 447 -217 454 -200 452 -209 b 426 -234 441 -224 435 -230 b 399 -242 418 -238 409 -241 b 369 -244 388 -244 379 -244 b 325 -239 354 -244 339 -243 b 279 -222 311 -235 296 -230 z "},"\u0499":{"ha":750,"x_min":0,"x_max":0,"o":"m 244 -222 l 219 -278 b 287 -302 240 -289 262 -297 b 363 -310 311 -307 337 -310 b 423 -303 383 -310 403 -307 b 476 -281 443 -298 461 -291 b 515 -241 492 -270 505 -257 b 531 -182 525 -225 531 -205 b 519 -136 531 -164 527 -149 b 492 -103 512 -123 503 -112 b 454 -84 481 -95 468 -88 b 413 -78 440 -80 426 -78 b 367 -83 392 -78 377 -80 l 365 -82 l 414 -19 b 519 -5 449 -19 484 -14 b 612 34 553 4 584 17 b 678 101 639 51 661 73 b 703 200 694 128 703 161 b 663 315 703 246 689 284 b 564 371 636 345 603 363 l 564 374 b 647 428 599 384 627 402 b 676 526 666 454 676 487 b 652 617 676 561 668 591 b 586 683 636 643 614 665 b 489 724 558 701 526 714 b 372 738 452 733 413 738 b 169 686 288 738 220 720 b 72 524 117 652 85 598 l 222 524 b 266 594 229 558 243 581 b 369 614 289 607 323 614 b 481 594 415 614 452 607 b 524 521 509 580 524 556 b 494 455 524 488 514 466 b 413 438 474 443 447 438 l 296 438 l 296 314 l 411 314 b 510 290 456 314 490 306 b 542 217 531 275 542 250 b 494 130 542 177 526 148 b 371 103 463 112 422 103 b 310 108 350 103 329 105 b 258 128 290 112 273 119 b 219 167 242 138 229 151 b 197 226 208 182 201 202 l 39 226 b 138 47 52 145 85 85 b 349 -18 190 9 261 -12 l 271 -122 l 301 -149 b 356 -135 316 -139 334 -135 b 399 -148 371 -135 386 -139 b 419 -187 413 -157 419 -170 b 412 -217 419 -200 417 -209 b 392 -234 407 -224 400 -230 b 364 -242 383 -238 374 -241 b 335 -244 354 -244 344 -244 b 290 -239 319 -244 304 -243 b 244 -222 276 -235 261 -230 z "},"\u049a":{"ha":1003,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 279 0 l 279 333 l 421 474 l 746 0 l 815 0 l 815 -246 l 989 -246 l 989 150 l 856 150 l 539 596 l 935 992 l 721 992 l 279 540 l 279 992 z "},"\u049b":{"ha":821,"x_min":0,"x_max":0,"o":"m 89 718 l 89 0 l 247 0 l 247 257 l 342 349 l 561 0 l 661 0 l 661 -218 l 807 -218 l 807 118 l 675 118 l 453 454 l 728 718 l 533 718 l 247 428 l 247 718 z "},"\u049c":{"ha":1076,"x_min":0,"x_max":0,"o":"m 363 865 l 363 583 l 279 583 l 279 992 l 106 992 l 106 0 l 279 0 l 279 456 l 363 456 l 363 163 l 469 163 l 469 456 l 514 456 l 867 0 l 1088 0 l 665 533 l 1060 992 l 864 992 l 513 583 l 469 583 l 469 865 z "},"\u049d":{"ha":874,"x_min":0,"x_max":0,"o":"m 88 718 l 88 0 l 246 0 l 246 322 l 306 322 l 306 107 l 419 107 l 419 322 l 442 322 l 682 0 l 881 0 l 576 386 l 854 718 l 675 718 l 450 438 l 419 438 l 419 613 l 306 613 l 306 438 l 246 438 l 246 718 z "},"\u04a0":{"ha":1056,"x_min":0,"x_max":0,"o":"m 389 540 l 389 992 l 11 992 l 11 842 l 215 842 l 215 0 l 389 0 l 389 333 l 531 474 l 856 0 l 1072 0 l 649 596 l 1044 992 l 831 992 z "},"\u04a1":{"ha":886,"x_min":0,"x_max":0,"o":"m 378 718 l 14 718 l 14 600 l 219 600 l 219 0 l 378 0 l 378 257 l 472 349 l 692 0 l 885 0 l 583 454 l 858 718 l 664 718 l 378 428 z "},"\u04a2":{"ha":1075,"x_min":0,"x_max":0,"o":"m 101 992 l 101 0 l 275 0 l 275 447 l 726 447 l 726 0 l 888 0 l 888 -246 l 1061 -246 l 1061 150 l 900 150 l 900 992 l 726 992 l 726 597 l 275 597 l 275 992 z "},"\u04a3":{"ha":903,"x_min":0,"x_max":0,"o":"m 743 0 l 743 -218 l 889 -218 l 889 118 l 761 118 l 761 718 l 603 718 l 603 421 l 246 421 l 246 718 l 88 718 l 88 0 l 246 0 l 246 303 l 603 303 l 603 0 z "},"\u04a4":{"ha":1115,"x_min":0,"x_max":0,"o":"m 101 992 l 101 0 l 275 0 l 275 447 l 726 447 l 726 0 l 900 0 l 900 842 l 1104 842 l 1104 992 l 726 992 l 726 597 l 275 597 l 275 992 z "},"\u04a5":{"ha":978,"x_min":0,"x_max":0,"o":"m 88 718 l 88 0 l 246 0 l 246 303 l 603 303 l 603 0 l 761 0 l 761 600 l 967 600 l 967 718 l 603 718 l 603 421 l 246 421 l 246 718 z "},"\u04aa":{"ha":1003,"x_min":0,"x_max":0,"o":"m 950 378 l 781 378 b 757 276 777 342 769 308 b 707 194 745 245 728 217 b 631 138 686 170 660 152 b 528 118 601 125 567 118 b 391 150 475 118 429 129 b 297 235 353 171 321 200 b 244 357 273 271 255 312 b 226 496 232 402 226 449 b 244 635 226 543 232 589 b 297 756 255 680 273 721 b 391 842 321 792 353 820 b 528 874 429 863 475 874 b 623 859 564 874 596 869 b 694 818 650 849 674 836 b 744 756 715 800 731 780 b 775 676 757 731 768 705 l 949 676 b 906 819 943 730 929 778 b 815 926 882 861 852 897 b 685 992 777 955 734 977 b 528 1015 636 1008 583 1015 b 328 974 454 1015 387 1001 b 179 861 270 946 220 908 b 85 696 138 814 107 759 b 53 496 64 633 53 566 b 81 307 53 429 62 366 b 164 148 100 248 128 195 b 297 33 200 101 244 63 b 474 -21 349 4 408 -14 l 397 -122 l 428 -149 b 482 -135 444 -139 462 -135 b 526 -148 498 -135 512 -139 b 546 -187 539 -157 546 -170 b 538 -217 546 -200 543 -209 b 518 -234 533 -224 526 -230 b 490 -242 510 -238 500 -241 b 461 -244 480 -244 470 -244 b 415 -237 445 -244 430 -242 b 371 -222 400 -232 386 -227 l 346 -278 b 415 -300 364 -288 388 -295 b 489 -307 443 -305 468 -307 b 549 -301 509 -307 529 -305 b 603 -280 569 -297 587 -290 b 642 -242 619 -270 631 -257 b 657 -182 652 -226 657 -206 b 646 -136 657 -164 653 -149 b 618 -104 638 -123 629 -112 b 581 -85 607 -96 594 -90 b 539 -79 567 -81 553 -79 b 513 -80 529 -79 520 -79 b 493 -83 505 -80 499 -81 l 493 -81 l 538 -22 b 699 8 596 -21 650 -11 b 826 90 748 28 790 55 b 913 217 863 125 891 168 b 950 378 934 266 946 319 z "},"\u04ab":{"ha":772,"x_min":0,"x_max":0,"o":"m 265 -222 l 240 -278 b 308 -302 261 -289 283 -297 b 383 -310 332 -307 357 -310 b 444 -302 404 -310 424 -307 b 497 -280 464 -297 481 -290 b 536 -242 513 -270 526 -257 b 551 -182 546 -226 551 -206 b 540 -136 551 -164 548 -149 b 513 -103 533 -123 524 -112 b 475 -84 501 -95 489 -88 b 433 -78 461 -80 447 -78 b 407 -79 423 -78 414 -78 b 388 -83 400 -80 393 -81 l 386 -82 l 436 -18 b 619 54 511 -12 572 13 b 726 269 676 104 712 176 l 568 269 b 512 149 561 218 542 177 b 397 106 482 120 444 106 b 310 127 363 106 334 113 b 251 183 286 141 266 160 b 217 263 235 206 224 233 b 207 351 210 292 207 322 b 226 484 207 406 213 450 b 275 563 239 518 256 544 b 339 602 294 582 316 595 b 404 613 362 609 384 613 b 515 578 449 613 485 601 b 568 478 544 556 562 522 l 726 478 b 693 593 723 522 712 561 b 622 674 675 625 651 652 b 522 722 592 695 559 711 b 403 738 484 732 444 738 b 248 708 344 738 292 728 b 138 626 204 688 167 660 b 71 503 108 591 86 550 b 49 351 56 456 49 405 b 72 204 49 299 56 250 b 139 87 87 159 109 120 b 247 8 169 54 205 28 b 369 -18 283 -6 324 -15 l 292 -122 l 322 -149 b 376 -135 338 -139 356 -135 b 420 -148 392 -135 407 -139 b 440 -187 434 -157 440 -170 b 433 -217 440 -200 438 -209 b 413 -234 428 -224 421 -230 b 385 -242 404 -238 395 -241 b 356 -244 375 -244 365 -244 b 311 -239 340 -244 325 -243 b 265 -222 297 -235 282 -230 z "},"\u04ae":{"ha":900,"x_min":0,"x_max":0,"o":"m 364 389 l 364 0 l 538 0 l 538 389 l 908 992 l 714 992 l 456 547 l 193 992 l -8 992 z "},"\u04af":{"ha":721,"x_min":0,"x_max":0,"o":"m 13 718 l 283 -26 l 283 -265 l 442 -265 l 442 -26 l 708 718 l 544 718 l 369 167 l 367 167 l 185 718 z "},"\u04b0":{"ha":900,"x_min":0,"x_max":0,"o":"m 142 192 l 364 192 l 364 0 l 538 0 l 538 192 l 753 192 l 753 303 l 538 303 l 538 389 l 908 992 l 714 992 l 456 547 l 193 992 l -8 992 l 364 389 l 364 303 l 142 303 z "},"\u04b1":{"ha":721,"x_min":0,"x_max":0,"o":"m 68 -28 l 283 -28 l 283 -265 l 442 -265 l 442 -28 l 664 -28 l 664 90 l 483 90 l 708 718 l 544 718 l 369 167 l 367 167 l 185 718 l 13 718 l 240 90 l 68 90 z "},"\u04b2":{"ha":1033,"x_min":0,"x_max":0,"o":"m 19 992 l 347 514 l -4 0 l 194 0 l 446 379 l 693 0 l 846 0 l 846 -246 l 1019 -246 l 1019 150 l 801 150 l 553 514 l 881 992 l 686 992 l 451 642 l 226 992 z "},"\u04b3":{"ha":822,"x_min":0,"x_max":0,"o":"m 276 378 l 6 0 l 192 0 l 368 265 l 550 0 l 663 0 l 663 -218 l 808 -218 l 808 118 l 656 118 l 465 386 l 710 718 l 526 718 l 369 497 l 219 718 l 28 718 z "},"\u04b6":{"ha":1006,"x_min":0,"x_max":0,"o":"m 657 0 l 818 0 l 818 -246 l 992 -246 l 992 150 l 831 150 l 831 992 l 657 992 l 657 578 b 624 551 650 569 639 561 b 574 526 610 542 593 534 b 515 508 555 519 536 513 b 456 501 495 504 475 501 b 306 540 389 501 339 514 b 257 663 273 565 257 606 l 257 992 l 83 992 l 83 621 b 108 514 83 580 91 544 b 175 438 124 483 146 458 b 278 392 204 417 238 402 b 411 376 319 381 363 376 b 481 381 434 376 458 378 b 549 392 505 383 528 387 b 610 410 571 396 591 402 b 657 435 628 417 644 425 z "},"\u04b7":{"ha":842,"x_min":0,"x_max":0,"o":"m 682 0 l 682 -218 l 828 -218 l 828 118 l 700 118 l 700 718 l 542 718 l 542 394 b 472 373 526 388 503 381 b 382 361 442 365 412 361 b 264 399 327 361 288 374 b 228 522 240 425 228 466 l 228 718 l 69 718 l 69 481 b 141 297 69 399 93 338 b 353 236 189 256 259 236 b 463 249 394 236 431 240 b 542 274 494 257 520 265 l 542 0 z "},"\u04b8":{"ha":933,"x_min":0,"x_max":0,"o":"m 831 0 l 831 992 l 657 992 l 657 578 b 599 538 646 565 627 552 b 511 507 572 525 543 514 l 511 786 l 404 786 l 404 504 b 293 551 354 510 317 525 b 257 663 269 576 257 613 l 257 992 l 83 992 l 83 621 b 107 515 83 580 91 545 b 173 439 123 484 145 459 b 274 392 201 419 235 403 b 404 376 314 382 357 376 l 404 83 l 511 83 l 511 383 b 594 403 541 388 569 394 b 657 435 620 411 641 422 l 657 0 z "},"\u04b9":{"ha":783,"x_min":0,"x_max":0,"o":"m 700 0 l 700 718 l 542 718 l 542 394 b 499 380 531 390 517 385 b 442 367 481 375 462 370 l 442 551 l 328 551 l 328 367 b 251 415 293 374 267 390 b 228 522 236 440 228 476 l 228 718 l 69 718 l 69 481 b 135 302 69 402 91 342 b 328 236 178 262 243 240 l 328 46 l 442 46 l 442 244 b 497 258 462 248 481 253 b 542 274 514 263 529 268 l 542 0 z "},"\u04ba":{"ha":933,"x_min":0,"x_max":0,"o":"m 103 992 l 103 0 l 276 0 l 276 414 b 308 440 283 422 294 431 b 359 465 323 450 340 458 b 418 483 378 473 398 479 b 478 490 438 488 458 490 b 627 452 544 490 594 478 b 676 329 660 427 676 386 l 676 0 l 850 0 l 850 371 b 826 478 850 412 842 447 b 758 554 809 508 787 534 b 655 600 730 575 695 590 b 522 615 615 610 570 615 b 452 611 499 615 476 614 b 384 600 428 608 406 605 b 323 582 362 595 342 589 b 276 557 304 575 288 566 l 276 992 z "},"\u04bb":{"ha":797,"x_min":0,"x_max":0,"o":"m 83 992 l 83 0 l 242 0 l 242 424 b 254 497 242 450 246 474 b 289 558 263 520 274 541 b 343 598 304 575 322 588 b 415 613 364 608 388 613 b 519 574 463 613 497 600 b 556 451 542 549 554 508 l 556 0 l 714 0 l 714 493 b 646 676 714 575 691 636 b 460 738 600 717 538 738 b 331 705 413 738 370 727 b 244 624 293 683 264 656 l 242 624 l 242 992 z "},"\u04c0":{"ha":386,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 279 0 l 279 992 z "},"\u04c1":{"ha":1518,"x_min":0,"x_max":0,"o":"m 672 333 l 672 0 l 846 0 l 846 333 l 988 474 l 1313 0 l 1529 0 l 1106 596 l 1501 992 l 1288 992 l 846 540 l 846 992 l 672 992 l 672 540 l 231 992 l 17 992 l 413 596 l -11 0 l 206 0 l 531 474 z m 615 1289 l 535 1289 b 600 1143 540 1225 562 1176 b 753 1093 638 1110 689 1093 b 910 1142 817 1093 869 1109 b 983 1289 952 1174 976 1223 l 904 1289 b 855 1210 897 1254 880 1227 b 764 1183 829 1192 799 1183 b 667 1207 727 1183 695 1191 b 615 1289 640 1223 623 1250 z "},"\u04c2":{"ha":1158,"x_min":0,"x_max":0,"o":"m 500 257 l 500 0 l 658 0 l 658 257 l 753 349 l 972 0 l 1165 0 l 864 454 l 1139 718 l 944 718 l 658 428 l 658 718 l 500 718 l 500 428 l 214 718 l 19 718 l 294 454 l -7 0 l 186 0 l 406 349 z m 435 1015 l 354 1015 b 419 869 360 951 381 903 b 572 819 457 836 508 819 b 730 868 636 819 689 836 b 803 1015 771 900 795 950 l 724 1015 b 674 936 716 980 700 954 b 583 910 649 919 619 910 b 487 933 546 910 514 918 b 435 1015 459 949 442 976 z "},"\u04d0":{"ha":926,"x_min":0,"x_max":0,"o":"m 371 992 l -10 0 l 169 0 l 263 263 l 658 263 l 751 0 l 938 0 l 556 992 z m 310 394 l 460 821 l 464 821 l 613 394 z m 319 1289 l 239 1289 b 304 1143 244 1225 266 1176 b 457 1093 342 1110 393 1093 b 615 1142 521 1093 573 1109 b 688 1289 656 1174 680 1223 l 608 1289 b 559 1210 601 1254 584 1227 b 468 1183 534 1192 503 1183 b 372 1207 431 1183 399 1191 b 319 1289 344 1223 327 1250 z "},"\u04d1":{"ha":772,"x_min":0,"x_max":0,"o":"m 685 160 l 685 529 b 660 626 685 567 676 599 b 594 690 643 652 621 674 b 501 726 566 707 536 719 b 397 738 467 734 432 738 b 281 726 357 738 319 734 b 178 688 243 719 209 706 b 104 614 148 669 124 644 b 71 499 85 583 74 545 l 229 499 b 278 585 233 538 249 566 b 388 613 306 603 343 613 b 438 609 403 613 420 611 b 485 595 455 607 471 602 b 522 565 500 588 512 578 b 536 515 531 552 536 536 b 519 463 536 492 530 475 b 472 438 507 452 491 443 b 403 426 452 432 429 428 b 321 414 377 423 350 419 b 222 398 288 410 254 405 b 133 364 189 391 159 380 b 69 299 106 348 85 326 b 44 190 53 271 44 235 b 65 98 44 155 51 124 b 119 33 78 72 96 50 b 197 -6 141 16 168 3 b 290 -19 227 -15 258 -19 b 423 1 333 -19 377 -12 b 539 68 469 15 507 38 b 581 0 545 36 559 13 b 661 -19 602 -13 629 -19 b 685 -18 668 -19 675 -19 b 713 -14 694 -17 703 -16 b 740 -8 722 -12 731 -10 b 761 -1 748 -5 756 -3 l 761 108 b 739 106 753 106 745 106 l 722 106 b 692 118 707 106 697 110 b 685 160 687 126 685 140 z m 526 360 l 526 242 b 508 178 526 217 520 196 b 463 136 496 161 481 147 b 406 113 445 125 426 117 b 349 106 385 108 366 106 b 302 110 335 106 319 107 b 255 124 285 113 269 117 b 218 153 241 131 228 141 b 203 197 208 165 203 180 b 213 249 203 218 206 235 b 242 284 220 264 230 275 b 283 305 254 293 268 300 b 332 317 299 310 315 314 b 438 331 367 323 402 328 b 526 360 473 334 502 344 z m 242 1015 l 161 1015 b 226 869 167 951 188 903 b 379 819 264 836 315 819 b 537 868 443 819 496 836 b 610 1015 578 900 602 950 l 531 1015 b 481 936 523 980 507 954 b 390 910 456 919 425 910 b 294 933 353 910 321 918 b 242 1015 266 949 249 976 z "},"\u04d2":{"ha":926,"x_min":0,"x_max":0,"o":"m 371 992 l -10 0 l 169 0 l 263 263 l 658 263 l 751 0 l 938 0 l 556 992 z m 310 394 l 460 821 l 464 821 l 613 394 z m 264 1110 l 422 1110 l 422 1260 l 264 1260 z m 661 1260 l 503 1260 l 503 1110 l 661 1110 z "},"\u04d3":{"ha":772,"x_min":0,"x_max":0,"o":"m 685 160 l 685 529 b 660 626 685 567 676 599 b 594 690 643 652 621 674 b 501 726 566 707 536 719 b 397 738 467 734 432 738 b 281 726 357 738 319 734 b 178 688 243 719 209 706 b 104 614 148 669 124 644 b 71 499 85 583 74 545 l 229 499 b 278 585 233 538 249 566 b 388 613 306 603 343 613 b 438 609 403 613 420 611 b 485 595 455 607 471 602 b 522 565 500 588 512 578 b 536 515 531 552 536 536 b 519 463 536 492 530 475 b 472 438 507 452 491 443 b 403 426 452 432 429 428 b 321 414 377 423 350 419 b 222 398 288 410 254 405 b 133 364 189 391 159 380 b 69 299 106 348 85 326 b 44 190 53 271 44 235 b 65 98 44 155 51 124 b 119 33 78 72 96 50 b 197 -6 141 16 168 3 b 290 -19 227 -15 258 -19 b 423 1 333 -19 377 -12 b 539 68 469 15 507 38 b 581 0 545 36 559 13 b 661 -19 602 -13 629 -19 b 685 -18 668 -19 675 -19 b 713 -14 694 -17 703 -16 b 740 -8 722 -12 731 -10 b 761 -1 748 -5 756 -3 l 761 108 b 739 106 753 106 745 106 l 722 106 b 692 118 707 106 697 110 b 685 160 687 126 685 140 z m 526 360 l 526 242 b 508 178 526 217 520 196 b 463 136 496 161 481 147 b 406 113 445 125 426 117 b 349 106 385 108 366 106 b 302 110 335 106 319 107 b 255 124 285 113 269 117 b 218 153 241 131 228 141 b 203 197 208 165 203 180 b 213 249 203 218 206 235 b 242 284 220 264 230 275 b 283 305 254 293 268 300 b 332 317 299 310 315 314 b 438 331 367 323 402 328 b 526 360 473 334 502 344 z m 181 836 l 339 836 l 339 986 l 181 986 z m 578 986 l 419 986 l 419 836 l 578 836 z "},"\u04d4":{"ha":1338,"x_min":0,"x_max":0,"o":"m 483 992 l -10 0 l 183 0 l 303 254 l 635 254 l 635 0 l 1292 0 l 1292 150 l 800 150 l 800 440 l 1253 440 l 1253 582 l 800 582 l 800 842 l 1283 842 l 1283 992 z m 367 386 l 585 842 l 635 842 l 635 386 z "},"\u04d5":{"ha":1235,"x_min":0,"x_max":0,"o":"m 1192 226 l 1033 226 b 971 138 1020 188 1000 159 b 864 106 942 116 906 106 b 779 124 831 106 803 112 b 720 171 755 136 735 151 b 687 238 705 190 694 213 b 676 318 680 264 676 290 l 1197 318 b 1186 484 1201 377 1197 433 b 1128 617 1175 535 1156 580 b 1022 706 1101 655 1066 684 b 864 738 978 727 925 738 b 738 715 820 738 778 730 b 636 640 697 700 663 675 b 588 690 622 661 606 677 b 528 720 569 703 549 713 b 461 734 506 727 484 732 b 393 738 438 736 415 738 b 279 726 354 738 316 734 b 178 688 242 719 209 706 b 104 614 148 669 124 644 b 71 499 85 583 74 545 l 229 499 b 278 585 233 538 249 566 b 388 613 306 603 343 613 b 436 609 403 613 419 611 b 481 595 453 607 468 602 b 515 565 495 588 506 578 b 528 515 523 552 528 536 b 511 463 528 492 522 475 b 467 438 500 452 485 443 b 401 426 448 432 426 428 b 321 414 376 423 350 419 b 222 398 288 410 254 405 b 133 364 189 391 159 380 b 69 299 106 348 85 326 b 44 190 53 271 44 235 b 65 98 44 155 51 124 b 120 33 78 72 97 50 b 203 -6 144 16 171 3 b 304 -19 234 -15 268 -19 b 476 11 365 -19 422 -9 b 603 113 529 31 571 65 b 715 10 631 63 668 29 b 867 -19 763 -10 813 -19 b 1074 46 946 -19 1015 2 b 1192 226 1132 89 1171 150 z m 526 357 l 526 250 b 510 188 526 226 521 205 b 469 142 500 170 486 155 b 413 115 453 130 434 121 b 347 106 391 109 369 106 b 297 110 331 106 314 107 b 250 124 279 113 264 117 b 216 152 236 131 225 141 b 203 197 207 164 203 179 b 213 249 203 218 206 235 b 242 284 220 264 230 275 b 283 305 254 293 268 300 b 333 317 299 310 316 314 b 390 324 352 319 371 322 b 445 330 410 325 428 328 b 492 339 462 332 478 335 b 526 357 507 343 518 349 z m 1039 422 l 676 422 b 692 495 678 448 683 472 b 727 556 700 518 712 538 b 783 597 742 573 761 587 b 857 613 804 607 829 613 b 992 560 915 613 960 595 b 1039 422 1024 526 1040 480 z "},"\u04d6":{"ha":875,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 829 0 l 829 150 l 279 150 l 279 440 l 779 440 l 779 582 l 279 582 l 279 842 l 819 842 l 819 992 z m 335 1289 l 254 1289 b 319 1143 260 1225 281 1176 b 472 1093 357 1110 408 1093 b 630 1142 536 1093 589 1109 b 703 1289 671 1174 695 1223 l 624 1289 b 574 1210 616 1254 600 1227 b 483 1183 549 1192 519 1183 b 387 1207 446 1183 414 1191 b 335 1289 359 1223 342 1250 z "},"\u04d7":{"ha":772,"x_min":0,"x_max":0,"o":"m 576 422 l 207 422 b 223 497 208 449 213 474 b 262 558 233 520 246 541 b 320 598 278 575 297 588 b 396 613 343 608 368 613 b 469 597 423 613 447 607 b 524 555 491 586 509 572 b 560 494 540 538 552 518 b 576 422 569 471 575 447 z m 207 318 l 735 318 b 724 474 741 372 738 424 b 660 608 711 525 689 569 b 548 702 630 647 593 678 b 396 738 503 726 452 738 b 251 707 342 738 294 727 b 142 624 209 687 172 659 b 73 503 112 590 89 549 b 49 358 57 458 49 409 b 72 206 49 303 56 252 b 140 86 87 159 109 119 b 250 8 170 53 206 27 b 400 -19 294 -10 344 -19 b 512 -3 439 -19 476 -14 b 608 44 547 7 580 23 b 682 121 637 65 662 90 b 725 225 702 151 717 186 l 575 225 b 512 135 561 185 540 155 b 400 106 484 116 446 106 b 314 123 367 106 338 111 b 254 169 290 134 270 150 b 219 238 238 189 227 212 b 207 318 211 263 207 290 z m 242 1015 l 161 1015 b 226 869 167 951 188 903 b 379 819 264 836 315 819 b 537 868 443 819 496 836 b 610 1015 578 900 602 950 l 531 1015 b 481 936 523 980 507 954 b 390 910 456 919 425 910 b 294 933 353 910 321 918 b 242 1015 266 949 249 976 z "},"\u04d8":{"ha":1056,"x_min":0,"x_max":0,"o":"m 528 1015 b 373 991 472 1015 421 1007 b 245 924 325 975 283 952 b 148 822 208 895 175 861 b 83 692 121 782 99 739 l 263 692 b 360 822 284 744 316 788 b 528 874 403 856 459 874 b 651 848 575 874 616 865 b 740 779 685 831 715 808 b 797 680 764 750 783 717 b 825 561 811 642 820 603 l 56 561 b 53 529 55 551 54 540 b 53 496 53 518 53 507 b 85 294 53 425 64 357 b 179 129 107 231 138 176 b 328 17 220 82 270 45 b 528 -24 387 -10 454 -24 b 727 17 602 -24 668 -10 b 876 129 786 45 836 82 b 970 294 917 176 948 231 b 1003 496 992 357 1003 425 b 970 696 1003 566 992 633 b 876 861 948 759 917 814 b 727 974 836 908 786 946 b 528 1015 668 1001 602 1015 z m 528 118 b 408 142 482 118 443 126 b 321 206 374 157 345 179 b 263 299 297 232 277 263 b 232 411 248 334 238 371 l 822 411 b 792 299 817 371 806 334 b 733 206 777 263 757 232 b 647 142 709 179 680 157 b 528 118 613 126 573 118 z "},"\u04d9":{"ha":772,"x_min":0,"x_max":0,"o":"m 196 296 l 565 296 b 549 221 564 269 559 244 b 510 160 540 198 527 178 b 452 120 494 143 475 130 b 376 106 429 110 404 106 b 303 122 350 106 325 111 b 248 163 282 132 263 146 b 212 224 233 180 221 200 b 196 296 203 247 198 271 z m 565 400 l 38 400 b 47 244 31 346 34 294 b 112 110 60 193 82 149 b 224 16 142 71 179 40 b 376 -19 269 -8 320 -19 b 521 11 430 -19 478 -9 b 630 94 563 31 600 59 b 699 215 660 128 683 169 b 724 360 716 260 724 309 b 701 513 724 415 716 466 b 633 632 685 559 663 599 b 522 710 603 665 566 691 b 372 738 479 728 429 738 b 260 722 333 738 296 732 b 164 674 225 711 193 695 b 90 597 135 653 111 628 b 47 493 70 567 56 532 l 197 493 b 260 583 211 533 232 563 b 372 613 288 603 325 613 b 458 595 406 613 434 607 b 518 549 482 584 502 568 b 553 481 534 529 546 506 b 565 400 561 455 565 428 z "},"\u04da":{"ha":1056,"x_min":0,"x_max":0,"o":"m 528 1015 b 373 991 472 1015 421 1007 b 245 924 325 975 283 952 b 148 822 208 895 175 861 b 83 692 121 782 99 739 l 263 692 b 360 822 284 744 316 788 b 528 874 403 856 459 874 b 651 848 575 874 616 865 b 740 779 685 831 715 808 b 797 680 764 750 783 717 b 825 561 811 642 820 603 l 56 561 b 53 529 55 551 54 540 b 53 496 53 518 53 507 b 85 294 53 425 64 357 b 179 129 107 231 138 176 b 328 17 220 82 270 45 b 528 -24 387 -10 454 -24 b 727 17 602 -24 668 -10 b 876 129 786 45 836 82 b 970 294 917 176 948 231 b 1003 496 992 357 1003 425 b 970 696 1003 566 992 633 b 876 861 948 759 917 814 b 727 974 836 908 786 946 b 528 1015 668 1001 602 1015 z m 528 118 b 408 142 482 118 443 126 b 321 206 374 157 345 179 b 263 299 297 232 277 263 b 232 411 248 334 238 371 l 822 411 b 792 299 817 371 806 334 b 733 206 777 263 757 232 b 647 142 709 179 680 157 b 528 118 613 126 573 118 z m 329 1106 l 488 1106 l 488 1256 l 329 1256 z m 726 1256 l 568 1256 l 568 1106 l 726 1106 z "},"\u04db":{"ha":772,"x_min":0,"x_max":0,"o":"m 196 296 l 565 296 b 549 221 564 269 559 244 b 510 160 540 198 527 178 b 452 120 494 143 475 130 b 376 106 429 110 404 106 b 303 122 350 106 325 111 b 248 163 282 132 263 146 b 212 224 233 180 221 200 b 196 296 203 247 198 271 z m 565 400 l 38 400 b 47 244 31 346 34 294 b 112 110 60 193 82 149 b 224 16 142 71 179 40 b 376 -19 269 -8 320 -19 b 521 11 430 -19 478 -9 b 630 94 563 31 600 59 b 699 215 660 128 683 169 b 724 360 716 260 724 309 b 701 513 724 415 716 466 b 633 632 685 559 663 599 b 522 710 603 665 566 691 b 372 738 479 728 429 738 b 260 722 333 738 296 732 b 164 674 225 711 193 695 b 90 597 135 653 111 628 b 47 493 70 567 56 532 l 197 493 b 260 583 211 533 232 563 b 372 613 288 603 325 613 b 458 595 406 613 434 607 b 518 549 482 584 502 568 b 553 481 534 529 546 506 b 565 400 561 455 565 428 z m 181 836 l 339 836 l 339 986 l 181 986 z m 578 986 l 419 986 l 419 836 l 578 836 z "},"\u04dc":{"ha":1518,"x_min":0,"x_max":0,"o":"m 672 333 l 672 0 l 846 0 l 846 333 l 988 474 l 1313 0 l 1529 0 l 1106 596 l 1501 992 l 1288 992 l 846 540 l 846 992 l 672 992 l 672 540 l 231 992 l 17 992 l 413 596 l -11 0 l 206 0 l 531 474 z m 560 1110 l 718 1110 l 718 1260 l 560 1260 z m 957 1260 l 799 1260 l 799 1110 l 957 1110 z "},"\u04dd":{"ha":1158,"x_min":0,"x_max":0,"o":"m 500 257 l 500 0 l 658 0 l 658 257 l 753 349 l 972 0 l 1165 0 l 864 454 l 1139 718 l 944 718 l 658 428 l 658 718 l 500 718 l 500 428 l 214 718 l 19 718 l 294 454 l -7 0 l 186 0 l 406 349 z m 381 836 l 539 836 l 539 986 l 381 986 z m 778 986 l 619 986 l 619 836 l 778 836 z "},"\u04de":{"ha":821,"x_min":0,"x_max":0,"o":"m 343 586 l 343 457 b 454 455 386 458 423 457 b 533 434 486 453 512 446 b 581 383 555 422 571 405 b 597 290 592 360 597 329 b 550 160 597 232 581 189 b 413 118 519 132 473 118 b 271 174 349 118 301 137 b 228 325 240 211 226 261 l 57 325 b 80 181 58 272 66 224 b 145 72 94 138 116 102 b 255 1 174 41 211 18 b 413 -24 299 -15 351 -24 b 556 -3 464 -24 512 -17 b 669 58 599 11 637 31 b 744 154 701 84 726 116 b 771 282 762 192 771 235 b 721 447 771 347 754 402 b 585 532 688 493 642 521 l 585 535 b 694 617 634 552 670 580 b 731 749 719 654 731 698 b 706 865 731 793 722 832 b 637 949 689 899 666 926 b 535 999 608 971 574 988 b 411 1015 496 1010 455 1015 b 272 990 359 1015 313 1007 b 169 919 231 972 197 949 b 103 811 141 889 119 853 b 78 675 88 769 80 724 l 249 675 b 256 753 248 703 250 729 b 285 816 262 777 272 798 b 335 858 298 834 315 848 b 408 874 356 869 381 874 b 517 838 455 874 491 862 b 557 738 544 815 557 781 b 505 615 557 676 540 635 b 343 586 470 594 416 584 z m 211 1110 l 369 1110 l 369 1260 l 211 1260 z m 608 1260 l 450 1260 l 450 1110 l 608 1110 z "},"\u04df":{"ha":750,"x_min":0,"x_max":0,"o":"m 72 524 l 222 524 b 266 594 229 558 243 581 b 369 614 289 607 323 614 b 481 594 415 614 452 607 b 524 521 509 580 524 556 b 494 455 524 488 514 466 b 413 438 474 443 447 438 l 296 438 l 296 314 l 411 314 b 510 290 456 314 490 306 b 542 217 531 275 542 250 b 494 130 542 177 526 148 b 371 103 463 112 422 103 b 310 108 350 103 329 105 b 258 128 290 112 273 119 b 219 167 242 138 229 151 b 197 226 208 182 201 202 l 39 226 b 152 38 54 138 91 75 b 396 -19 213 0 294 -19 b 506 -8 433 -19 470 -16 b 605 30 543 0 576 13 b 676 97 634 47 658 69 b 703 200 694 125 703 159 b 663 315 703 246 689 284 b 564 371 636 345 603 363 l 564 374 b 647 428 599 384 627 402 b 676 526 666 454 676 487 b 652 617 676 561 668 591 b 586 683 636 643 614 665 b 489 724 558 701 526 714 b 372 738 452 733 413 738 b 169 686 288 738 220 720 b 72 524 117 652 85 598 z m 176 836 l 335 836 l 335 986 l 176 986 z m 574 986 l 415 986 l 415 836 l 574 836 z "},"\u04e2":{"ha":1003,"x_min":0,"x_max":0,"o":"m 101 992 l 101 0 l 300 0 l 726 744 l 726 0 l 900 0 l 900 992 l 696 992 l 275 253 l 275 992 z m 301 1140 l 701 1140 l 701 1231 l 301 1231 z "},"\u04e3":{"ha":849,"x_min":0,"x_max":0,"o":"m 88 718 l 88 0 l 276 0 l 599 497 l 601 497 l 601 0 l 760 0 l 760 718 l 564 718 l 249 225 l 246 225 l 246 718 z m 224 867 l 624 867 l 624 957 l 224 957 z "},"\u04e4":{"ha":1003,"x_min":0,"x_max":0,"o":"m 101 992 l 101 0 l 300 0 l 726 744 l 726 0 l 900 0 l 900 992 l 696 992 l 275 253 l 275 992 z m 303 1110 l 461 1110 l 461 1260 l 303 1260 z m 700 1260 l 542 1260 l 542 1110 l 700 1110 z "},"\u04e5":{"ha":849,"x_min":0,"x_max":0,"o":"m 88 718 l 88 0 l 276 0 l 599 497 l 601 497 l 601 0 l 760 0 l 760 718 l 564 718 l 249 225 l 246 225 l 246 718 z m 225 836 l 383 836 l 383 986 l 225 986 z m 622 986 l 464 986 l 464 836 l 622 836 z "},"\u04e6":{"ha":1056,"x_min":0,"x_max":0,"o":"m 528 874 b 665 842 581 874 626 863 b 758 756 703 820 734 792 b 812 635 782 721 800 680 b 829 496 823 589 829 543 b 812 357 829 449 823 402 b 758 235 800 312 782 271 b 665 150 734 200 703 171 b 528 118 626 129 581 118 b 391 150 475 118 429 129 b 297 235 353 171 321 200 b 244 357 273 271 255 312 b 226 496 232 402 226 449 b 244 635 226 543 232 589 b 297 756 255 680 273 721 b 391 842 321 792 353 820 b 528 874 429 863 475 874 z m 528 1015 b 328 974 454 1015 387 1001 b 179 861 270 946 220 908 b 85 696 138 814 107 759 b 53 496 64 633 53 566 b 85 294 53 425 64 357 b 179 129 107 231 138 176 b 328 17 220 82 270 45 b 528 -24 387 -10 454 -24 b 727 17 602 -24 668 -10 b 876 129 786 45 836 82 b 970 294 917 176 948 231 b 1003 496 992 357 1003 425 b 970 696 1003 566 992 633 b 876 861 948 759 917 814 b 727 974 836 908 786 946 b 528 1015 668 1001 602 1015 z m 329 1110 l 488 1110 l 488 1260 l 329 1260 z m 726 1260 l 568 1260 l 568 1110 l 726 1110 z "},"\u04e7":{"ha":824,"x_min":0,"x_max":0,"o":"m 413 -19 b 566 9 470 -19 521 -10 b 680 88 611 28 649 54 b 751 207 711 121 734 161 b 775 360 767 253 775 304 b 751 511 775 414 767 465 b 680 631 734 557 711 597 b 566 709 649 664 611 690 b 413 738 521 728 470 738 b 259 709 355 738 304 728 b 145 631 214 690 176 664 b 74 511 114 597 91 557 b 50 360 58 465 50 414 b 74 207 50 304 58 253 b 145 88 91 161 114 121 b 259 9 176 54 214 28 b 413 -19 304 -10 355 -19 z m 413 106 b 321 128 377 106 347 113 b 257 186 295 143 274 162 b 220 267 240 210 228 237 b 208 360 212 297 208 328 b 220 451 208 390 212 421 b 257 533 228 482 240 509 b 321 590 274 556 295 575 b 413 613 347 605 377 613 b 504 590 448 613 478 605 b 568 533 530 575 551 556 b 605 451 585 509 597 482 b 617 360 613 421 617 390 b 605 267 617 328 613 297 b 568 186 597 237 585 210 b 504 128 551 162 530 143 b 413 106 478 113 448 106 z m 213 836 l 371 836 l 371 986 l 213 986 z m 610 986 l 451 986 l 451 836 l 610 836 z "},"\u04e8":{"ha":1056,"x_min":0,"x_max":0,"o":"m 528 1015 b 328 974 454 1015 387 1001 b 179 861 270 946 220 908 b 85 696 138 814 107 759 b 53 496 64 633 53 566 b 85 294 53 425 64 357 b 179 129 107 231 138 176 b 328 17 220 82 270 45 b 528 -24 387 -10 454 -24 b 727 17 602 -24 668 -10 b 876 129 786 45 836 82 b 970 294 917 176 948 231 b 1003 496 992 357 1003 425 b 970 696 1003 566 992 633 b 876 861 948 759 917 814 b 727 974 836 908 786 946 b 528 1015 668 1001 602 1015 z m 528 118 b 404 144 481 118 439 127 b 315 212 369 161 339 184 b 257 311 290 240 271 273 b 229 431 243 349 234 389 l 825 431 b 797 311 820 389 811 349 b 740 212 783 273 764 240 b 651 144 715 184 685 161 b 528 118 616 127 575 118 z m 528 874 b 647 850 573 874 613 866 b 733 786 680 834 709 813 b 792 692 757 759 777 728 b 822 581 806 657 817 619 l 232 581 b 263 692 238 619 248 657 b 321 786 277 728 297 759 b 408 850 345 813 374 834 b 528 874 443 866 482 874 z "},"\u04e9":{"ha":824,"x_min":0,"x_max":0,"o":"m 413 -19 b 566 9 470 -19 521 -10 b 680 88 611 28 649 54 b 751 207 711 121 734 161 b 775 360 767 253 775 304 b 751 511 775 414 767 465 b 680 631 734 557 711 597 b 566 709 649 664 611 690 b 413 738 521 728 470 738 b 259 709 355 738 304 728 b 145 631 214 690 176 664 b 74 511 114 597 91 557 b 50 360 58 465 50 414 b 74 207 50 304 58 253 b 145 88 91 161 114 121 b 259 9 176 54 214 28 b 413 -19 304 -10 355 -19 z m 413 106 b 335 121 383 106 357 111 b 277 161 313 131 293 144 b 237 220 261 178 247 197 b 214 292 226 243 219 267 l 610 292 b 587 220 605 267 597 243 b 547 161 576 197 563 178 b 489 121 530 144 511 131 b 413 106 467 111 441 106 z m 413 613 b 486 599 440 613 465 608 b 542 562 507 589 526 577 b 583 508 559 547 572 528 b 607 442 593 487 601 465 l 218 442 b 242 508 224 465 232 487 b 283 562 253 528 266 547 b 339 599 299 577 318 589 b 413 613 360 608 385 613 z "},"\u04ea":{"ha":1056,"x_min":0,"x_max":0,"o":"m 528 1015 b 328 974 454 1015 387 1001 b 179 861 270 946 220 908 b 85 696 138 814 107 759 b 53 496 64 633 53 566 b 85 294 53 425 64 357 b 179 129 107 231 138 176 b 328 17 220 82 270 45 b 528 -24 387 -10 454 -24 b 727 17 602 -24 668 -10 b 876 129 786 45 836 82 b 970 294 917 176 948 231 b 1003 496 992 357 1003 425 b 970 696 1003 566 992 633 b 876 861 948 759 917 814 b 727 974 836 908 786 946 b 528 1015 668 1001 602 1015 z m 528 118 b 404 144 481 118 439 127 b 315 212 369 161 339 184 b 257 311 290 240 271 273 b 229 431 243 349 234 389 l 825 431 b 797 311 820 389 811 349 b 740 212 783 273 764 240 b 651 144 715 184 685 161 b 528 118 616 127 575 118 z m 528 874 b 647 850 573 874 613 866 b 733 786 680 834 709 813 b 792 692 757 759 777 728 b 822 581 806 657 817 619 l 232 581 b 263 692 238 619 248 657 b 321 786 277 728 297 759 b 408 850 345 813 374 834 b 528 874 443 866 482 874 z m 329 1106 l 488 1106 l 488 1256 l 329 1256 z m 726 1256 l 568 1256 l 568 1106 l 726 1106 z "},"\u04eb":{"ha":824,"x_min":0,"x_max":0,"o":"m 413 -19 b 566 9 470 -19 521 -10 b 680 88 611 28 649 54 b 751 207 711 121 734 161 b 775 360 767 253 775 304 b 751 511 775 414 767 465 b 680 631 734 557 711 597 b 566 709 649 664 611 690 b 413 738 521 728 470 738 b 259 709 355 738 304 728 b 145 631 214 690 176 664 b 74 511 114 597 91 557 b 50 360 58 465 50 414 b 74 207 50 304 58 253 b 145 88 91 161 114 121 b 259 9 176 54 214 28 b 413 -19 304 -10 355 -19 z m 413 106 b 335 121 383 106 357 111 b 277 161 313 131 293 144 b 237 220 261 178 247 197 b 214 292 226 243 219 267 l 610 292 b 587 220 605 267 597 243 b 547 161 576 197 563 178 b 489 121 530 144 511 131 b 413 106 467 111 441 106 z m 413 613 b 486 599 440 613 465 608 b 542 562 507 589 526 577 b 583 508 559 547 572 528 b 607 442 593 487 601 465 l 218 442 b 242 508 224 465 232 487 b 283 562 253 528 266 547 b 339 599 299 577 318 589 b 413 613 360 608 385 613 z m 214 836 l 372 836 l 372 986 l 214 986 z m 611 986 l 453 986 l 453 836 l 611 836 z "},"\u04ee":{"ha":847,"x_min":0,"x_max":0,"o":"m 153 144 b 125 146 143 144 133 145 b 96 150 117 147 107 148 l 96 0 b 130 -4 107 -2 118 -3 b 174 -6 141 -5 156 -6 b 374 58 249 -6 316 16 b 526 264 433 100 484 169 l 854 992 l 660 992 l 429 438 l 426 438 l 200 992 l -7 992 l 319 265 b 251 177 305 228 282 199 b 153 144 221 155 188 144 z m 250 1140 l 650 1140 l 650 1231 l 250 1231 z "},"\u04ef":{"ha":721,"x_min":0,"x_max":0,"o":"m 4 718 l 276 3 l 258 -53 b 243 -94 254 -69 249 -82 b 223 -126 238 -106 231 -117 b 193 -146 215 -134 205 -141 b 147 -153 181 -150 166 -153 b 110 -149 134 -153 122 -152 b 72 -143 98 -147 85 -145 l 72 -276 b 182 -285 108 -282 145 -285 b 285 -265 224 -285 258 -278 b 352 -210 312 -251 334 -233 b 398 -132 370 -188 385 -162 b 436 -39 410 -102 423 -71 l 715 718 l 550 718 l 368 182 l 365 182 l 178 718 z m 160 867 l 560 867 l 560 957 l 160 957 z "},"\u04f0":{"ha":847,"x_min":0,"x_max":0,"o":"m 153 144 b 125 146 143 144 133 145 b 96 150 117 147 107 148 l 96 0 b 130 -4 107 -2 118 -3 b 174 -6 141 -5 156 -6 b 374 58 249 -6 316 16 b 526 264 433 100 484 169 l 854 992 l 660 992 l 429 438 l 426 438 l 200 992 l -7 992 l 319 265 b 251 177 305 228 282 199 b 153 144 221 155 188 144 z m 251 1110 l 410 1110 l 410 1260 l 251 1260 z m 649 1260 l 490 1260 l 490 1110 l 649 1110 z "},"\u04f1":{"ha":721,"x_min":0,"x_max":0,"o":"m 4 718 l 276 3 l 258 -53 b 243 -94 254 -69 249 -82 b 223 -126 238 -106 231 -117 b 193 -146 215 -134 205 -141 b 147 -153 181 -150 166 -153 b 110 -149 134 -153 122 -152 b 72 -143 98 -147 85 -145 l 72 -276 b 182 -285 108 -282 145 -285 b 285 -265 224 -285 258 -278 b 352 -210 312 -251 334 -233 b 398 -132 370 -188 385 -162 b 436 -39 410 -102 423 -71 l 715 718 l 550 718 l 368 182 l 365 182 l 178 718 z m 161 836 l 319 836 l 319 986 l 161 986 z m 558 986 l 400 986 l 400 836 l 558 836 z "},"\u04f2":{"ha":847,"x_min":0,"x_max":0,"o":"m 153 144 b 125 146 143 144 133 145 b 96 150 117 147 107 148 l 96 0 b 130 -4 107 -2 118 -3 b 174 -6 141 -5 156 -6 b 374 58 249 -6 316 16 b 526 264 433 100 484 169 l 854 992 l 660 992 l 429 438 l 426 438 l 200 992 l -7 992 l 319 265 b 251 177 305 228 282 199 b 153 144 221 155 188 144 z m 599 1290 l 474 1092 l 588 1092 l 788 1290 z m 322 1290 l 197 1092 l 311 1092 l 511 1290 z "},"\u04f3":{"ha":721,"x_min":0,"x_max":0,"o":"m 4 718 l 276 3 l 258 -53 b 243 -94 254 -69 249 -82 b 223 -126 238 -106 231 -117 b 193 -146 215 -134 205 -141 b 147 -153 181 -150 166 -153 b 110 -149 134 -153 122 -152 b 72 -143 98 -147 85 -145 l 72 -276 b 182 -285 108 -282 145 -285 b 285 -265 224 -285 258 -278 b 352 -210 312 -251 334 -233 b 398 -132 370 -188 385 -162 b 436 -39 410 -102 423 -71 l 715 718 l 550 718 l 368 182 l 365 182 l 178 718 z m 522 1017 l 397 818 l 511 818 l 711 1017 z m 246 1017 l 121 818 l 235 818 l 435 1017 z "},"\u04f4":{"ha":933,"x_min":0,"x_max":0,"o":"m 831 0 l 831 992 l 657 992 l 657 578 b 624 551 650 569 639 561 b 574 526 610 542 593 534 b 515 508 555 519 536 513 b 456 501 495 504 475 501 b 306 540 389 501 339 514 b 257 663 273 565 257 606 l 257 992 l 83 992 l 83 621 b 108 514 83 580 91 544 b 175 438 124 483 146 458 b 278 392 204 417 238 402 b 411 376 319 381 363 376 b 481 381 434 376 458 378 b 549 392 505 383 528 387 b 610 410 571 396 591 402 b 657 435 628 417 644 425 l 657 0 z m 268 1110 l 426 1110 l 426 1260 l 268 1260 z m 665 1260 l 507 1260 l 507 1110 l 665 1110 z "},"\u04f5":{"ha":783,"x_min":0,"x_max":0,"o":"m 700 0 l 700 718 l 542 718 l 542 394 b 472 373 526 388 503 381 b 382 361 442 365 412 361 b 264 399 327 361 288 374 b 228 522 240 425 228 466 l 228 718 l 69 718 l 69 481 b 141 297 69 399 93 338 b 353 236 189 256 259 236 b 463 249 394 236 431 240 b 542 274 494 257 520 265 l 542 0 z m 193 836 l 351 836 l 351 986 l 193 986 z m 590 986 l 432 986 l 432 836 l 590 836 z "},"\u04f8":{"ha":1313,"x_min":0,"x_max":0,"o":"m 279 142 l 279 469 l 533 469 b 593 461 553 469 573 467 b 649 434 613 456 632 447 b 691 384 666 422 680 405 b 707 306 702 363 707 337 b 693 225 707 273 702 246 b 656 174 684 204 671 187 b 601 149 640 162 622 153 b 536 142 581 144 559 142 z m 106 992 l 106 0 l 543 0 b 715 31 613 0 671 10 b 818 107 760 51 794 76 b 867 207 842 138 859 171 b 881 307 876 243 881 276 b 867 406 881 338 876 371 b 818 506 859 442 842 475 b 715 581 794 536 760 561 b 543 611 671 601 613 611 l 279 611 l 279 992 z m 1032 992 l 1032 0 l 1206 0 l 1206 992 z m 442 1110 l 600 1110 l 600 1260 l 442 1260 z m 839 1260 l 681 1260 l 681 1110 l 839 1110 z "},"\u04f9":{"ha":1092,"x_min":0,"x_max":0,"o":"m 246 118 l 246 321 l 450 321 b 522 300 478 321 502 314 b 553 224 543 286 553 261 b 522 143 553 187 543 160 b 450 118 502 126 478 118 z m 88 718 l 88 0 l 457 0 b 587 22 511 0 554 7 b 664 78 620 37 645 56 b 701 150 682 100 695 124 b 711 222 708 176 711 200 b 701 294 711 244 708 269 b 664 366 695 320 682 344 b 587 421 645 388 620 406 b 457 443 554 436 511 443 l 246 443 l 246 718 z m 844 0 l 1003 0 l 1003 718 l 844 718 z m 332 836 l 490 836 l 490 986 l 332 986 z m 729 986 l 571 986 l 571 836 l 729 836 z "},"\u10d0":{"ha":736,"x_min":0,"x_max":0,"o":"m 51 275 b 86 130 51 223 63 175 b 192 22 109 85 144 49 b 365 -19 239 -6 297 -19 b 537 22 432 -19 489 -6 b 644 131 584 49 620 85 b 681 278 669 177 681 226 b 658 396 681 323 673 363 b 606 481 644 429 626 457 b 522 561 585 504 557 531 b 446 638 489 590 463 615 b 413 714 428 660 417 685 l 254 714 b 272 627 254 681 260 653 b 313 563 283 602 297 580 b 379 501 329 545 351 525 b 401 482 389 493 397 487 b 466 421 428 458 450 438 b 507 360 482 404 496 384 b 524 278 518 336 524 308 b 483 151 524 224 510 182 b 365 106 456 121 417 106 b 249 153 314 106 275 122 b 208 294 222 185 208 232 b 224 392 208 325 213 357 l 71 392 b 56 334 63 371 58 352 b 51 275 53 316 51 296 z "},"\u10d1":{"ha":794,"x_min":0,"x_max":0,"o":"m 50 346 b 92 155 50 274 64 210 b 212 26 119 100 159 57 b 397 -19 264 -4 326 -19 b 583 26 469 -19 530 -4 b 703 156 635 57 675 100 b 744 346 731 211 744 275 b 715 506 744 404 735 458 b 631 628 696 555 668 596 b 500 699 595 661 551 685 l 500 779 b 485 852 500 809 495 833 b 449 897 475 871 463 886 b 392 932 435 907 416 919 b 347 960 373 942 358 951 b 317 992 335 968 325 979 b 306 1042 309 1006 306 1022 l 157 1042 b 173 949 157 1003 162 972 b 211 899 184 927 196 910 b 271 867 226 889 246 878 b 324 830 294 856 312 844 b 343 764 337 816 343 794 l 343 707 b 186 647 283 699 231 678 b 85 521 142 615 108 573 b 50 346 62 469 50 411 z m 586 346 b 565 230 586 305 579 266 b 502 140 551 193 530 163 b 397 106 474 117 439 106 b 292 140 356 106 321 117 b 229 231 264 163 243 194 b 208 346 215 268 208 306 b 229 463 208 387 215 425 b 292 552 243 500 264 529 b 396 586 321 575 355 586 b 502 552 438 586 474 575 b 565 463 530 529 551 500 b 586 346 579 427 586 388 z "},"\u10d2":{"ha":750,"x_min":0,"x_max":0,"o":"m 42 35 b 85 -146 42 -36 56 -96 b 203 -259 113 -196 153 -234 b 375 -297 254 -284 311 -297 b 546 -258 439 -297 496 -284 b 665 -144 596 -232 635 -194 b 708 35 694 -94 708 -35 b 681 167 708 83 699 127 b 605 266 663 206 638 240 b 489 319 572 292 533 310 l 489 325 b 571 388 524 339 551 360 b 600 499 590 416 600 453 b 570 603 600 535 590 569 b 483 683 550 636 521 663 b 350 714 445 704 401 714 b 222 683 302 714 259 704 b 133 597 184 663 155 634 b 101 468 112 559 101 516 l 253 468 b 278 560 253 508 261 538 b 353 592 294 581 319 592 b 425 561 383 592 407 581 b 451 485 443 541 451 515 b 420 399 451 449 441 420 b 335 358 399 378 371 365 b 196 307 287 350 240 333 b 85 199 151 281 115 245 b 42 35 56 153 42 99 z m 550 35 b 531 -72 550 -5 544 -41 b 472 -146 518 -103 498 -127 b 375 -174 445 -164 413 -174 b 278 -146 337 -174 305 -164 b 219 -71 252 -127 232 -102 b 200 35 206 -39 200 -4 b 219 141 200 75 206 110 b 278 214 232 172 252 196 b 374 240 305 231 337 240 b 506 184 432 240 476 222 b 550 35 535 147 550 97 z "},"\u10d3":{"ha":1169,"x_min":0,"x_max":0,"o":"m 371 -139 b 510 -156 425 -139 471 -145 b 601 -205 550 -168 580 -184 b 632 -278 622 -226 632 -250 l 785 -278 b 751 -158 785 -230 774 -190 b 656 -79 729 -126 697 -100 b 496 -21 615 -59 562 -39 b 353 51 444 -7 397 17 b 251 179 310 84 276 127 b 213 354 225 231 213 289 b 244 530 213 432 223 491 b 340 589 265 569 297 589 b 428 549 378 589 407 575 b 458 444 448 522 458 487 l 458 356 b 499 170 458 286 472 224 b 613 44 525 116 564 74 b 785 0 663 15 720 0 b 957 45 850 0 907 15 b 1073 171 1007 75 1046 117 b 1114 356 1100 225 1114 286 b 1074 540 1114 424 1100 485 b 961 667 1047 594 1009 636 b 799 714 913 698 859 714 b 649 682 742 714 692 703 b 546 582 605 661 571 627 l 540 582 b 328 714 508 670 437 714 b 183 671 272 714 224 700 b 88 547 141 642 110 601 b 56 354 66 492 56 428 b 82 197 56 299 64 246 b 161 66 100 147 126 103 b 292 -19 196 28 240 0 l 292 -25 l 147 -25 l 147 -139 z m 960 356 b 940 243 960 316 953 278 b 881 158 927 208 908 179 b 785 125 855 136 823 125 b 688 158 747 125 715 136 b 630 244 662 181 642 209 b 611 356 617 278 611 316 b 630 469 611 395 617 433 b 688 556 642 504 662 533 b 783 589 713 578 745 589 b 882 556 822 589 855 578 b 941 469 909 533 928 505 b 960 356 953 434 960 396 z "},"\u10d4":{"ha":772,"x_min":0,"x_max":0,"o":"m 49 -1 b 86 -158 49 -62 61 -114 b 197 -261 111 -203 148 -237 b 375 -297 245 -285 305 -297 b 551 -256 444 -297 502 -283 b 664 -139 600 -228 638 -189 b 703 36 690 -89 703 -31 l 703 385 b 669 550 703 445 691 500 b 563 669 646 600 611 640 b 389 714 516 699 457 714 b 217 674 322 714 265 700 b 110 568 170 647 134 612 b 75 428 87 525 75 478 b 81 371 75 408 77 389 l 238 371 b 233 422 235 385 233 402 b 249 502 233 450 238 477 b 299 565 259 528 275 548 b 389 589 322 581 352 589 b 508 529 444 589 483 569 b 544 381 532 489 544 440 l 544 36 b 503 -115 544 -27 531 -77 b 375 -172 476 -153 433 -172 b 248 -124 318 -172 275 -156 b 207 15 221 -91 207 -45 b 213 76 207 34 209 54 b 231 139 217 99 223 119 l 78 139 b 56 68 68 113 60 89 b 49 -1 51 47 49 24 z "},"\u10d5":{"ha":765,"x_min":0,"x_max":0,"o":"m 49 -15 b 90 -156 49 -66 62 -113 b 208 -259 117 -199 156 -234 b 389 -297 260 -284 320 -297 b 563 -256 456 -297 514 -283 b 677 -146 613 -228 651 -191 b 717 0 703 -100 717 -52 b 673 162 717 69 702 123 b 563 244 644 200 607 228 l 563 250 b 653 325 600 265 631 290 b 688 464 676 360 688 406 b 653 583 688 505 676 544 b 550 677 630 621 595 653 b 389 714 505 702 451 714 b 223 676 326 714 271 701 b 113 576 175 651 139 618 b 75 442 88 535 75 490 b 81 388 75 424 77 406 l 238 388 b 233 433 235 401 233 417 b 270 544 233 477 246 514 b 389 589 295 574 334 589 b 470 567 422 589 449 581 b 515 511 491 552 506 533 b 529 444 525 489 529 467 b 497 347 529 404 518 371 b 389 311 475 323 439 311 l 335 311 l 335 183 l 389 183 b 515 136 444 183 485 168 b 558 4 544 105 558 61 b 539 -87 558 -30 552 -60 b 481 -149 526 -113 507 -134 b 389 -172 456 -165 425 -172 b 289 -149 349 -172 316 -165 b 228 -87 262 -134 242 -113 b 207 4 214 -60 207 -30 b 213 63 207 22 209 41 b 231 125 217 84 223 105 l 78 125 b 56 54 68 99 60 75 b 49 -15 51 33 49 10 z "},"\u10d6":{"ha":890,"x_min":0,"x_max":0,"o":"m 140 346 b 182 155 140 274 154 210 b 302 26 210 100 250 57 b 488 -19 354 -4 416 -19 b 673 26 559 -19 621 -4 b 793 156 725 57 765 100 b 835 346 821 211 835 275 b 794 526 835 413 821 474 b 676 651 766 579 727 621 b 493 700 624 682 563 698 l 493 706 b 521 760 505 719 514 738 b 531 819 527 782 531 802 b 499 938 531 861 520 900 b 410 1027 478 975 449 1004 b 275 1061 372 1050 327 1061 b 142 1028 225 1061 181 1050 b 53 935 104 1006 74 975 b 21 801 31 896 21 851 b 49 687 21 759 30 721 b 124 606 68 653 93 626 b 221 571 155 586 188 575 l 221 565 b 159 463 192 534 172 500 b 140 346 147 427 140 388 z m 392 804 b 361 701 392 761 381 726 b 276 664 341 676 313 664 b 192 702 241 664 213 677 b 160 804 170 728 160 762 b 174 881 160 833 165 858 b 216 932 184 903 198 920 b 278 950 234 944 255 950 b 362 910 314 950 342 937 b 392 804 382 884 392 849 z m 676 346 b 656 230 676 305 669 266 b 592 140 642 193 621 163 b 488 106 564 117 529 106 b 383 140 446 106 411 117 b 319 231 354 163 333 194 b 299 346 306 268 299 306 b 321 461 299 387 306 425 b 385 549 336 497 357 527 b 486 583 414 572 447 583 b 592 550 529 583 564 572 b 656 463 621 528 642 499 b 676 346 669 426 676 388 z "},"\u10d7":{"ha":1181,"x_min":0,"x_max":0,"o":"m 968 358 b 942 169 968 291 959 228 b 861 0 924 110 897 54 l 1025 0 b 1101 164 1059 52 1084 106 b 1125 356 1117 221 1125 285 b 1092 547 1125 429 1114 492 b 997 671 1069 601 1038 642 b 853 714 955 700 907 714 b 769 704 821 714 793 711 b 699 665 744 698 721 685 b 640 582 676 646 657 618 l 635 582 b 561 665 613 618 588 646 b 477 704 534 685 506 698 b 375 714 448 711 414 714 b 208 667 312 714 256 698 b 95 535 159 635 122 591 b 56 346 69 479 56 416 b 94 154 56 273 69 209 b 208 26 120 100 158 57 b 389 -19 258 -4 319 -19 b 569 26 459 -19 519 -4 b 683 155 619 57 657 100 b 722 346 709 210 722 274 l 722 444 b 752 551 722 490 732 525 b 840 589 772 576 801 589 b 937 532 884 589 916 570 b 968 358 958 494 968 436 z m 564 346 b 521 173 564 275 550 218 b 389 106 492 128 448 106 b 257 174 330 106 286 128 b 214 346 228 219 214 276 b 257 521 214 417 228 475 b 388 589 286 566 329 589 b 521 522 448 589 492 566 b 564 346 550 477 564 418 z "},"\u10d8":{"ha":767,"x_min":0,"x_max":0,"o":"m 553 347 b 531 166 553 278 546 217 b 465 0 517 115 495 59 l 625 0 b 689 160 653 54 674 107 b 711 347 704 214 711 276 b 674 537 711 419 699 482 b 563 667 649 592 612 635 b 383 714 513 698 454 714 b 204 667 313 714 253 698 b 93 537 155 635 118 592 b 56 347 68 482 56 419 b 78 159 56 275 63 212 b 142 0 93 106 114 53 l 301 0 b 253 108 282 39 266 75 b 224 216 241 141 231 177 b 214 347 217 255 214 299 b 253 519 214 415 227 472 b 383 589 280 566 323 589 b 513 519 444 589 487 566 b 553 347 540 472 553 415 z "},"\u10d9":{"ha":738,"x_min":0,"x_max":0,"o":"m 35 -15 b 74 -156 35 -66 48 -113 b 189 -259 101 -199 139 -234 b 368 -297 239 -284 299 -297 b 541 -253 435 -297 492 -283 b 651 -139 590 -224 626 -186 b 689 14 676 -92 689 -41 b 644 189 689 86 674 144 b 528 278 615 233 576 263 l 528 283 b 615 353 565 298 594 321 b 646 475 635 384 646 425 b 617 583 646 513 636 549 b 527 669 597 618 567 646 b 376 708 487 691 437 705 l 376 579 b 460 537 413 574 441 559 b 488 456 478 514 488 487 b 361 339 488 378 445 339 l 297 339 l 297 211 l 365 211 b 489 159 420 211 461 194 b 531 18 517 124 531 77 b 513 -78 531 -17 525 -49 b 458 -147 500 -106 482 -129 b 368 -172 434 -164 404 -172 b 238 -124 311 -172 267 -156 b 193 4 208 -92 193 -50 b 213 125 193 49 200 89 l 64 125 b 42 53 54 99 46 75 b 35 -15 37 32 35 9 z "},"\u10da":{"ha":1374,"x_min":0,"x_max":0,"o":"m 521 -139 b 731 -174 610 -139 680 -150 b 821 -278 781 -197 812 -231 l 979 -278 b 779 -56 972 -170 905 -96 b 705 -37 759 -48 734 -42 b 593 -21 676 -32 638 -26 b 481 -3 536 -12 498 -6 b 344 60 430 8 384 29 b 250 181 305 90 273 131 b 215 354 227 231 215 288 b 241 531 215 434 224 493 b 329 589 258 570 288 589 b 403 549 362 589 386 575 b 428 435 419 522 428 484 l 428 182 l 585 182 l 585 435 b 608 549 585 484 592 522 b 688 589 623 575 650 589 b 767 551 725 589 752 576 b 789 435 781 525 789 487 l 789 182 l 946 182 l 946 435 b 971 547 946 481 954 518 b 1043 589 988 575 1012 589 b 1128 532 1081 589 1109 570 b 1158 353 1147 494 1157 434 b 1086 58 1158 245 1134 147 l 1249 58 b 1299 198 1272 102 1289 148 b 1315 361 1310 247 1315 302 b 1287 544 1315 430 1306 491 b 1202 669 1268 597 1240 639 b 1063 714 1165 699 1118 714 b 947 681 1021 714 982 703 b 868 582 911 659 885 626 l 863 582 b 797 682 849 627 827 661 b 688 714 768 703 731 714 b 575 681 645 714 607 703 b 507 582 543 659 520 626 l 501 582 b 315 714 469 670 407 714 b 174 672 260 714 213 700 b 88 548 136 643 107 602 b 58 354 68 494 58 429 b 88 199 58 302 68 250 b 171 62 107 147 135 101 b 294 -19 207 22 248 -5 l 294 -25 l 164 -25 l 164 -139 z "},"\u10db":{"ha":826,"x_min":0,"x_max":0,"o":"m 56 349 b 97 151 56 273 69 207 b 215 24 124 96 163 53 b 400 -19 266 -5 328 -19 b 587 24 472 -19 534 -5 b 708 151 639 53 679 96 b 750 349 736 207 750 273 l 750 756 b 713 919 750 819 738 874 b 600 1024 688 965 650 1000 b 415 1061 550 1049 488 1061 b 242 1027 349 1061 291 1050 b 128 935 193 1004 155 974 b 89 803 102 896 89 852 l 244 803 b 267 871 244 828 252 850 b 330 919 283 891 303 907 b 417 936 356 930 385 936 b 545 889 471 936 514 920 b 592 756 576 857 592 813 l 592 606 l 589 606 b 499 681 569 638 539 663 b 364 707 460 698 415 707 b 208 665 306 707 254 693 b 97 541 161 636 124 595 b 56 349 69 487 56 423 z m 597 339 b 574 219 597 294 589 254 b 505 135 558 183 535 155 b 400 106 475 116 440 106 b 300 135 361 106 328 116 b 236 218 272 155 251 183 b 214 339 221 253 214 294 b 262 519 214 415 230 475 b 401 585 294 563 340 585 b 545 521 463 585 510 563 b 597 339 580 478 597 418 z "},"\u10dc":{"ha":826,"x_min":0,"x_max":0,"o":"m 76 349 b 119 151 76 273 91 207 b 240 24 147 96 187 53 b 426 -19 292 -5 354 -19 b 613 24 499 -19 561 -5 b 731 151 664 53 704 96 b 771 349 757 207 771 273 b 731 542 771 423 757 487 b 620 668 704 597 667 639 b 464 711 573 697 521 711 b 328 685 413 711 368 702 b 238 610 288 667 258 642 l 235 610 l 235 772 b 276 882 235 824 249 861 b 403 914 304 903 346 914 l 690 914 l 690 1042 l 417 1042 b 224 1013 338 1042 274 1032 b 113 918 175 993 138 962 b 76 743 89 875 76 816 z m 613 342 b 591 220 613 296 605 256 b 527 136 577 184 555 156 b 426 106 499 116 465 106 b 322 136 387 106 352 116 b 253 220 293 156 270 184 b 229 342 237 256 229 296 b 281 524 229 420 247 481 b 425 589 316 567 364 589 b 565 522 486 589 533 567 b 613 342 597 478 613 418 z "},"\u10dd":{"ha":1040,"x_min":0,"x_max":0,"o":"m 828 353 b 801 167 828 287 819 225 b 721 0 784 109 757 54 l 885 0 b 961 166 920 52 945 107 b 985 361 977 225 985 290 b 953 542 985 429 974 489 b 863 668 933 596 902 638 b 719 714 823 699 775 714 b 597 682 672 714 631 703 b 518 582 562 661 536 627 l 513 582 b 441 683 496 628 472 662 b 319 714 410 703 369 714 b 176 672 264 714 216 700 b 86 550 137 643 106 603 b 56 364 66 497 56 435 b 81 165 56 291 64 224 b 156 0 98 105 123 50 l 318 0 b 240 169 284 53 258 109 b 213 354 222 230 213 291 b 246 532 213 435 224 494 b 344 589 268 570 301 589 b 439 438 407 589 439 538 l 439 182 l 596 182 l 596 438 b 620 548 596 484 604 521 b 693 589 636 575 661 589 b 793 532 737 589 770 570 b 828 353 816 494 828 434 z "},"\u10de":{"ha":765,"x_min":0,"x_max":0,"o":"m 42 263 b 83 122 42 212 55 165 b 201 19 110 80 150 45 b 382 -19 253 -6 313 -19 b 558 22 450 -19 508 -6 b 671 134 607 49 645 86 b 710 292 697 182 710 234 b 688 417 710 340 702 381 b 631 502 673 452 654 480 b 556 550 607 524 582 540 l 556 556 b 651 624 600 574 632 597 b 681 729 671 652 681 687 b 656 814 681 763 672 791 b 597 870 639 837 619 856 b 506 918 574 884 544 900 b 441 951 479 930 457 941 b 401 989 425 962 412 974 b 386 1042 391 1004 386 1021 l 229 1042 b 253 932 229 996 237 960 b 310 870 269 904 288 884 b 397 831 333 857 362 844 b 461 802 423 821 444 812 b 502 766 478 792 491 780 b 518 711 513 752 518 733 b 485 640 518 680 507 656 b 396 617 464 625 434 617 l 328 617 l 328 489 l 382 489 b 474 465 418 489 449 481 b 532 397 500 448 519 426 b 551 296 545 367 551 334 b 508 156 551 237 537 190 b 382 106 478 122 437 106 b 282 128 342 106 309 113 b 221 190 255 143 235 163 b 200 282 207 217 200 248 b 215 383 200 312 205 345 l 64 383 b 47 321 56 360 51 339 b 42 263 44 302 42 283 z "},"\u10df":{"ha":796,"x_min":0,"x_max":0,"o":"m 65 -1 b 103 -158 65 -62 78 -114 b 214 -261 128 -203 165 -237 b 392 -297 263 -285 322 -297 b 635 -208 497 -297 578 -268 b 719 47 691 -149 719 -64 l 719 707 l 560 707 l 154 643 l 154 522 b 226 497 184 522 208 514 b 254 429 245 481 254 458 b 226 364 254 401 245 380 b 154 340 207 348 183 340 l 56 340 l 56 226 l 176 226 b 287 250 217 226 254 234 b 363 315 320 266 345 287 b 390 404 381 342 390 372 b 368 486 390 433 383 460 b 303 549 353 512 331 533 l 303 554 l 561 593 l 561 49 b 522 -115 561 -23 548 -77 b 392 -172 496 -153 453 -172 b 224 18 280 -172 224 -109 b 231 76 224 37 226 56 l 79 76 b 65 -1 70 50 65 24 z "},"\u10e0":{"ha":1040,"x_min":0,"x_max":0,"o":"m 828 353 b 801 167 828 287 819 225 b 721 0 784 109 757 54 l 885 0 b 961 166 920 52 945 107 b 985 361 977 225 985 290 b 953 542 985 429 974 489 b 863 666 933 594 902 636 b 719 711 823 696 775 711 b 597 679 672 711 631 700 b 518 579 562 658 536 625 l 513 579 b 476 657 501 613 489 638 b 426 698 463 675 447 689 b 344 711 405 707 378 711 b 255 686 312 711 282 703 b 190 617 228 669 206 646 l 186 617 b 288 774 205 687 239 740 b 467 847 338 809 397 833 l 583 871 b 708 908 637 882 679 894 b 774 959 738 921 760 938 b 801 1042 789 980 798 1007 l 643 1042 b 622 1019 639 1034 632 1027 b 582 1001 611 1011 598 1005 l 444 972 b 228 882 356 954 284 924 b 99 710 171 840 128 783 b 56 435 70 638 56 546 b 66 253 56 364 59 304 b 98 119 73 203 84 158 b 156 0 112 81 131 41 l 318 0 b 240 169 284 53 258 109 b 213 354 222 230 213 291 b 246 530 213 434 224 492 b 344 586 268 567 301 586 b 439 435 407 586 439 536 l 439 182 l 596 182 l 596 435 b 620 545 596 481 604 518 b 693 586 636 572 661 586 b 793 531 737 586 770 568 b 828 353 816 494 828 434 z "},"\u10e1":{"ha":786,"x_min":0,"x_max":0,"o":"m 76 294 b 116 123 76 227 90 170 b 229 17 142 76 180 41 b 403 -19 278 -7 336 -19 b 570 17 465 -19 521 -7 b 688 122 620 42 659 77 b 731 278 716 166 731 219 b 719 383 731 318 727 353 b 690 459 711 413 701 438 b 646 526 678 480 663 502 b 632 544 639 535 635 541 b 598 593 617 564 606 580 b 578 638 590 606 583 621 b 569 694 572 655 569 674 l 413 694 b 424 603 413 659 416 629 b 451 540 431 578 440 557 b 496 481 463 522 477 503 l 518 451 b 558 381 536 428 549 405 b 572 294 568 358 572 329 b 530 155 572 234 558 188 b 403 106 502 122 459 106 b 277 155 347 106 305 122 b 235 294 249 188 235 234 l 235 1042 l 76 1042 z "},"\u10e2":{"ha":939,"x_min":0,"x_max":0,"o":"m 56 204 b 108 -59 56 105 73 17 b 253 -235 142 -135 191 -194 b 469 -297 316 -277 388 -297 b 685 -235 551 -297 623 -277 b 831 -60 748 -194 797 -136 b 883 204 866 16 883 104 b 841 446 883 294 869 375 b 722 621 813 517 773 575 b 542 706 670 666 610 694 l 532 706 b 540 767 537 726 539 747 b 542 847 541 788 542 815 l 397 847 b 399 767 397 815 398 788 b 407 706 401 747 403 726 l 397 706 b 217 620 329 694 269 665 b 98 446 166 575 126 517 b 56 204 70 375 56 294 z m 725 204 b 697 9 725 130 716 65 b 611 -122 678 -47 649 -91 b 469 -169 573 -154 526 -169 b 327 -122 413 -169 366 -153 b 242 10 289 -90 260 -46 b 214 204 223 66 214 131 b 260 454 214 301 229 385 b 397 586 291 524 337 568 l 411 593 b 399 503 406 568 401 538 b 394 404 396 469 394 436 l 394 182 l 544 182 l 544 404 b 540 501 544 434 543 466 b 528 593 538 537 533 567 l 542 585 b 642 511 581 572 615 547 b 704 378 670 475 690 431 b 725 204 718 325 725 267 z "},"\u10e3":{"ha":793,"x_min":0,"x_max":0,"o":"m 56 -15 b 97 -156 56 -66 69 -113 b 215 -259 124 -199 163 -234 b 396 -297 266 -284 326 -297 b 572 -254 463 -297 522 -283 b 685 -137 621 -225 659 -187 b 724 28 711 -88 724 -33 l 724 446 b 695 587 724 500 714 547 b 613 681 676 627 649 658 b 483 714 576 703 533 714 b 354 688 431 714 388 705 b 278 600 320 671 294 642 l 272 600 b 206 684 258 641 236 669 b 83 707 176 699 135 707 l 28 707 l 28 574 l 92 574 b 175 553 130 574 157 567 b 201 489 193 539 201 518 l 201 331 l 357 331 l 357 475 b 383 560 357 509 366 538 b 458 593 401 582 426 593 b 538 557 494 593 520 581 b 565 446 556 533 565 496 l 565 28 b 545 -72 565 -8 559 -41 b 487 -144 532 -102 512 -126 b 396 -172 461 -163 431 -172 b 297 -149 357 -172 324 -165 b 235 -87 269 -134 249 -113 b 214 4 221 -60 214 -30 b 238 125 214 39 222 80 l 85 125 b 63 54 75 99 67 75 b 56 -15 58 33 56 10 z "},"\u10e4":{"ha":1122,"x_min":0,"x_max":0,"o":"m 286 -46 b 387 -234 290 -129 323 -192 b 651 -297 450 -276 538 -297 b 876 -262 742 -297 817 -285 b 1006 -166 936 -238 979 -206 b 1047 -28 1034 -126 1047 -80 b 1023 97 1047 21 1039 63 b 932 183 1007 131 976 160 l 932 189 b 1030 278 973 206 1005 235 b 1067 432 1054 320 1067 372 b 1034 569 1067 480 1056 526 b 940 674 1012 612 981 647 b 799 714 900 700 852 714 b 590 589 691 714 622 672 l 585 589 b 493 683 564 631 534 663 b 350 714 452 704 405 714 b 197 673 293 714 242 700 b 93 558 153 646 118 607 b 56 388 68 509 56 452 b 94 216 56 322 68 265 b 201 103 119 167 155 130 b 363 64 248 77 301 64 b 524 103 425 64 478 77 b 631 215 570 129 606 166 b 668 388 656 264 668 322 l 668 456 b 697 553 668 496 678 529 b 783 589 717 577 745 589 b 877 539 825 589 856 572 b 908 417 898 506 908 465 b 881 299 908 365 899 326 b 783 258 862 273 830 259 l 743 258 l 743 131 l 767 131 b 861 91 811 131 843 117 b 889 -15 880 65 889 29 b 825 -135 889 -72 868 -112 b 660 -171 782 -159 727 -171 b 558 -160 620 -171 586 -167 b 487 -123 529 -153 506 -141 b 444 -46 468 -105 454 -79 z m 524 388 b 507 285 524 350 518 316 b 454 210 496 254 478 229 b 363 182 430 191 400 182 b 273 210 327 182 297 191 b 219 285 248 228 230 253 b 201 388 207 316 201 350 b 242 537 201 448 215 497 b 364 596 269 576 309 596 b 454 567 400 596 430 586 b 507 492 478 548 496 523 b 524 388 518 460 524 425 z "},"\u10e5":{"ha":779,"x_min":0,"x_max":0,"o":"m 49 -1 b 89 -157 49 -61 62 -112 b 203 -260 116 -201 154 -236 b 375 -297 252 -285 309 -297 b 617 -208 480 -297 560 -268 b 703 49 674 -149 703 -63 l 703 1042 l 544 1042 l 544 608 l 542 608 b 503 659 533 626 520 643 b 438 699 485 675 464 688 b 354 714 413 709 385 714 b 194 674 289 714 236 701 b 103 569 153 648 122 613 b 75 428 84 526 75 479 b 81 371 75 408 77 389 l 239 371 b 233 419 235 389 233 406 b 267 535 233 465 244 503 b 379 583 289 567 326 583 b 503 517 434 583 475 561 b 544 343 531 473 544 415 l 544 50 b 505 -115 544 -22 531 -77 b 375 -172 478 -153 435 -172 b 250 -122 320 -172 279 -155 b 207 18 221 -88 207 -41 b 231 139 207 55 215 95 l 78 139 b 56 68 68 113 60 89 b 49 -1 51 47 49 24 z "},"\u10e6":{"ha":1040,"x_min":0,"x_max":0,"o":"m 371 -139 b 510 -156 425 -139 471 -145 b 601 -205 550 -168 580 -184 b 632 -278 622 -226 632 -250 l 785 -278 b 751 -158 785 -230 774 -190 b 656 -79 729 -126 697 -100 b 496 -21 615 -59 562 -39 b 353 51 444 -7 397 17 b 251 179 310 84 276 127 b 213 354 225 231 213 289 b 342 589 213 511 256 589 b 415 549 374 589 398 575 b 439 435 431 522 439 484 l 439 182 l 596 182 l 596 435 b 622 547 596 481 604 518 b 696 589 639 575 663 589 b 793 530 738 589 771 569 b 826 353 815 491 826 431 b 754 58 826 244 802 146 l 918 58 b 969 199 941 103 958 150 b 985 361 979 249 985 303 b 953 542 985 429 974 489 b 863 668 933 596 902 638 b 719 714 823 699 775 714 b 597 682 672 714 631 703 b 518 582 562 661 536 627 l 513 582 b 441 683 496 628 472 662 b 319 714 410 703 369 714 b 176 671 264 714 216 700 b 86 547 137 642 106 601 b 56 354 66 494 56 429 b 83 194 56 298 65 244 b 164 62 102 143 129 99 b 292 -19 199 24 242 -3 l 292 -25 l 147 -25 l 147 -139 z "},"\u10e7":{"ha":771,"x_min":0,"x_max":0,"o":"m 56 -42 b 97 -181 56 -96 69 -143 b 210 -268 124 -220 162 -249 b 374 -297 258 -287 313 -297 b 617 -215 479 -297 560 -270 b 701 29 673 -161 701 -79 l 701 694 l 549 694 l 549 507 b 503 324 549 428 533 367 b 375 260 472 281 430 260 b 249 313 319 260 278 277 b 207 468 221 348 207 400 b 222 586 207 506 212 545 b 261 694 232 627 245 663 l 115 694 b 68 584 97 664 81 627 b 49 443 55 541 49 494 b 83 283 49 383 60 330 b 182 176 106 237 139 201 b 329 138 225 150 274 138 b 458 160 380 138 423 145 b 540 233 492 176 520 200 l 543 233 l 543 35 b 503 -116 543 -28 530 -78 b 374 -172 476 -153 433 -172 b 250 -131 319 -172 278 -159 b 208 -24 222 -104 208 -68 b 213 29 208 -7 210 11 l 67 29 b 56 -42 59 2 56 -21 z "},"\u10e8":{"ha":826,"x_min":0,"x_max":0,"o":"m 57 346 b 98 149 57 270 71 204 b 216 24 125 94 165 52 b 401 -19 267 -5 329 -19 b 588 24 474 -19 536 -5 b 708 150 641 53 681 95 b 750 346 736 205 750 270 l 750 782 b 691 993 750 877 730 948 b 511 1061 652 1038 592 1061 b 387 1035 460 1061 419 1053 b 314 947 355 1018 331 989 l 308 947 b 245 1034 295 987 274 1016 b 146 1061 216 1052 183 1061 b 57 1051 109 1061 79 1058 l 57 928 b 91 934 65 931 77 933 b 133 936 105 935 119 936 b 208 909 167 936 191 927 b 232 842 224 891 232 869 l 232 797 l 390 797 l 390 840 b 401 890 390 858 394 874 b 435 926 409 905 420 917 b 489 940 450 936 468 940 b 593 813 558 940 593 898 l 593 606 l 590 606 b 498 677 568 637 537 661 b 364 701 459 693 414 701 b 208 660 306 701 254 688 b 97 538 161 632 124 591 b 57 346 70 484 57 420 z m 599 336 b 574 217 599 292 591 252 b 506 135 558 181 535 154 b 401 106 476 115 441 106 b 301 135 363 106 329 115 b 238 216 274 154 252 181 b 215 336 223 251 215 291 b 263 515 215 412 231 472 b 403 579 295 558 342 579 b 547 517 464 579 512 558 b 599 336 581 475 599 415 z "},"\u10e9":{"ha":806,"x_min":0,"x_max":0,"o":"m 592 342 b 581 212 592 294 588 250 b 551 107 573 173 563 138 b 504 0 539 75 524 40 l 664 0 b 725 147 688 40 708 89 b 750 342 742 206 750 270 b 711 535 750 417 737 481 b 604 659 685 590 650 631 b 450 701 559 687 507 701 b 238 600 351 701 280 668 l 235 600 l 235 769 b 268 889 235 819 246 859 b 358 933 290 919 320 933 b 453 891 401 933 433 919 b 485 786 474 863 485 828 l 638 786 b 605 930 638 841 627 889 b 509 1026 583 971 551 1003 b 357 1061 467 1050 416 1061 b 213 1028 303 1061 255 1050 b 113 931 170 1006 137 973 b 76 783 88 889 76 840 l 76 0 l 229 0 l 229 343 b 276 515 229 415 245 473 b 411 579 308 558 353 579 b 545 515 469 579 514 558 b 592 342 576 473 592 415 z "},"\u10ea":{"ha":826,"x_min":0,"x_max":0,"o":"m 56 250 b 158 -162 56 65 90 -73 b 451 -297 226 -252 324 -297 b 628 -255 518 -297 577 -283 b 746 -143 679 -227 718 -189 b 788 6 774 -97 788 -47 b 743 169 788 75 773 129 b 633 253 713 208 677 236 l 633 258 b 724 331 675 276 705 300 b 753 428 743 361 753 394 b 739 502 753 456 748 481 b 707 552 730 523 719 540 b 656 597 695 565 678 580 b 609 642 635 613 620 628 b 589 694 598 656 592 673 l 432 694 b 444 624 432 667 436 643 b 474 576 452 604 462 588 b 518 539 486 564 500 552 b 560 506 537 526 551 515 b 585 474 570 497 578 487 b 596 426 592 461 596 445 b 562 349 596 394 584 368 b 474 319 539 329 510 319 l 411 319 l 411 192 l 460 192 b 586 147 515 192 557 177 b 629 18 615 118 629 75 b 610 -78 629 -17 623 -49 b 551 -147 598 -106 578 -129 b 451 -172 525 -164 491 -172 b 214 250 293 -172 214 -31 b 242 488 214 324 223 403 b 308 694 260 573 282 642 l 157 694 b 109 571 140 663 124 622 b 71 409 94 520 81 466 b 56 250 61 352 56 299 z "},"\u10eb":{"ha":824,"x_min":0,"x_max":0,"o":"m 56 351 b 97 153 56 275 69 208 b 215 25 124 97 163 55 b 400 -19 266 -5 328 -19 b 587 25 472 -19 534 -5 b 706 153 639 55 679 97 b 747 351 734 209 747 275 l 747 1042 l 589 1042 l 589 613 l 586 613 b 497 688 566 646 536 671 b 363 714 458 705 413 714 b 207 671 305 714 253 700 b 97 545 161 642 124 600 b 56 351 69 490 56 425 z m 594 342 b 571 221 594 297 587 257 b 503 136 555 185 532 156 b 400 106 473 116 439 106 b 300 136 361 106 328 116 b 236 220 272 156 251 184 b 214 342 221 256 214 296 b 235 472 214 391 221 434 b 299 560 250 510 271 540 b 401 592 328 581 362 592 b 544 526 463 592 510 570 b 594 342 578 483 594 421 z "},"\u10ec":{"ha":826,"x_min":0,"x_max":0,"o":"m 83 346 b 125 149 83 270 97 204 b 245 24 153 94 193 52 b 432 -19 297 -5 360 -19 b 617 24 504 -19 566 -5 b 735 149 669 52 708 94 b 776 346 763 204 776 270 b 736 538 776 420 763 484 b 626 660 709 591 672 632 b 469 701 579 688 527 701 b 335 676 419 701 375 693 b 243 604 296 660 265 636 l 240 604 l 240 813 b 344 940 240 898 275 940 b 417 910 376 940 400 930 b 443 840 434 891 443 867 l 443 797 l 601 797 l 601 842 b 626 909 601 869 609 891 b 700 936 642 927 667 936 b 742 934 714 936 728 935 b 776 928 757 933 768 931 l 776 1051 b 688 1061 754 1058 725 1061 b 589 1034 651 1061 619 1052 b 525 947 559 1016 538 987 l 519 947 b 446 1035 503 989 478 1018 b 322 1061 413 1053 372 1061 b 142 993 242 1061 182 1038 b 83 782 103 948 83 877 z m 618 336 b 597 216 618 291 611 251 b 533 135 582 181 561 154 b 432 106 504 115 471 106 b 328 135 392 106 357 115 b 259 217 298 154 275 181 b 235 336 243 252 235 292 b 287 517 235 415 252 475 b 431 579 322 558 369 579 b 570 515 492 579 538 558 b 618 336 602 472 618 412 z "},"\u10ed":{"ha":861,"x_min":0,"x_max":0,"o":"m 42 -10 b 125 -222 42 -100 69 -171 b 367 -297 181 -272 261 -297 b 609 -206 471 -297 552 -267 b 694 58 666 -146 694 -57 l 694 567 l 840 567 l 840 694 l 694 694 l 694 1042 l 536 1042 l 536 694 l 375 694 b 222 665 318 694 267 684 b 118 578 178 645 143 616 b 81 442 93 540 81 494 b 113 315 81 393 91 350 b 201 233 134 279 163 252 b 332 206 238 215 282 206 b 418 218 362 206 390 210 b 490 251 446 226 470 238 b 533 297 511 265 525 281 l 536 297 l 536 39 b 496 -115 536 -25 523 -76 b 367 -172 469 -153 426 -172 b 239 -126 308 -172 266 -157 b 199 10 212 -95 199 -50 b 210 78 199 30 202 53 l 60 78 b 42 -10 48 47 42 18 z m 536 451 b 514 387 536 427 529 406 b 456 343 499 368 480 353 b 378 328 431 333 406 328 b 272 356 334 328 299 337 b 231 442 244 374 231 403 b 272 534 231 481 244 512 b 381 567 300 556 336 567 l 536 567 z "},"\u10ee":{"ha":824,"x_min":0,"x_max":0,"o":"m 76 350 b 118 153 76 274 90 208 b 238 25 146 97 186 55 b 424 -19 289 -5 351 -19 b 610 25 496 -19 558 -5 b 728 153 662 55 701 97 b 768 351 755 209 768 275 b 728 545 768 425 755 490 b 617 671 701 600 664 642 b 461 714 571 700 519 714 b 326 688 410 714 365 705 b 238 613 288 671 258 646 l 235 613 l 235 1042 l 76 1042 z m 610 342 b 588 220 610 296 603 256 b 524 136 574 184 553 156 b 424 106 496 116 463 106 b 322 136 385 106 351 116 b 253 221 292 156 270 185 b 229 342 237 257 229 297 b 280 526 229 421 246 483 b 422 592 314 570 361 592 b 524 560 462 592 496 581 b 588 472 553 540 574 510 b 610 342 603 434 610 391 z "},"\u10ef":{"ha":725,"x_min":0,"x_max":0,"o":"m 42 -6 b 79 -156 42 -62 54 -112 b 190 -260 104 -200 141 -235 b 368 -297 239 -285 299 -297 b 538 -252 434 -297 491 -282 b 647 -137 586 -222 622 -184 b 683 10 671 -90 683 -41 b 657 158 683 63 675 113 b 575 269 639 203 612 240 b 435 326 538 299 491 318 l 435 451 l 672 451 l 672 569 l 435 569 l 435 714 l 283 714 l 283 569 l 50 569 l 50 451 l 283 451 l 283 214 l 357 214 b 490 155 420 214 464 194 b 529 10 516 116 529 67 b 492 -119 529 -40 517 -83 b 368 -172 467 -154 425 -172 b 242 -120 312 -172 269 -155 b 200 14 214 -85 200 -41 b 202 49 200 23 201 35 b 210 88 203 64 206 76 l 60 88 b 47 42 55 75 51 59 b 42 -6 44 25 42 9 z "},"\u10f0":{"ha":760,"x_min":0,"x_max":0,"o":"m 42 232 b 79 100 42 182 54 138 b 191 12 104 62 141 33 b 371 -19 241 -9 300 -19 b 548 9 439 -19 498 -10 b 663 94 597 28 636 56 b 704 232 691 131 704 177 b 661 359 704 288 690 330 b 557 419 632 388 598 408 l 557 425 b 651 470 600 436 631 451 b 681 556 671 489 681 518 b 638 648 681 594 666 625 b 539 692 610 671 577 685 l 539 697 b 634 743 584 707 616 723 b 661 821 652 763 661 789 b 613 915 661 859 645 890 b 499 972 581 940 543 959 b 369 1042 419 995 376 1019 l 213 1042 b 237 967 213 1011 221 986 b 296 922 253 947 273 932 b 382 893 319 912 348 902 b 449 871 411 885 433 877 b 488 846 466 864 478 856 b 501 806 497 836 501 822 b 481 768 501 789 494 776 b 414 756 467 760 444 756 l 304 756 l 304 633 l 407 633 b 490 614 443 633 471 627 b 519 556 510 601 519 581 b 492 499 519 529 510 510 b 407 483 473 489 445 483 l 304 483 l 304 361 l 383 361 b 502 328 434 361 474 350 b 544 239 530 306 544 276 b 501 140 544 196 530 163 b 371 106 472 117 428 106 b 278 122 336 106 305 111 b 217 169 252 133 231 149 b 194 239 202 190 194 213 b 196 265 194 249 195 258 b 200 292 197 273 198 281 l 53 292 b 42 232 45 270 42 250 z "},"\u10f1":{"ha":839,"x_min":0,"x_max":0,"o":"m 56 563 b 156 128 56 371 89 226 b 458 -19 222 30 323 -19 b 626 10 521 -19 577 -9 b 742 96 675 30 714 59 b 783 225 769 133 783 176 b 760 322 783 263 776 295 b 704 385 745 349 726 370 b 636 419 682 401 659 412 l 636 425 b 730 470 679 436 710 451 b 760 556 750 489 760 518 b 717 648 760 594 746 625 b 618 692 689 671 656 685 l 618 697 b 713 742 662 706 693 722 b 743 810 733 763 743 786 b 730 878 743 836 739 858 b 690 926 721 897 708 913 b 658 949 673 938 662 946 b 615 988 641 962 626 975 b 588 1042 603 1002 594 1019 l 431 1042 b 444 969 431 1012 435 988 b 475 924 453 950 463 935 b 522 889 487 913 503 901 b 556 865 537 880 548 872 b 576 841 564 859 571 851 b 585 806 582 831 585 819 b 493 756 585 772 554 756 l 411 756 l 411 633 l 486 633 b 569 614 522 633 550 627 b 599 556 589 601 599 581 b 572 499 599 529 590 510 b 486 483 553 489 525 483 l 411 483 l 411 361 l 463 361 b 581 327 513 361 553 350 b 622 236 608 304 622 274 b 582 139 622 194 609 161 b 464 106 555 117 516 106 b 276 221 381 106 318 144 b 214 563 235 298 214 412 b 227 729 214 612 218 667 b 263 907 236 791 248 850 b 308 1042 277 963 293 1008 l 157 1042 b 110 911 141 1011 125 968 b 71 732 94 855 81 795 b 56 563 61 669 56 613 z "},"\u10f2":{"ha":753,"x_min":0,"x_max":0,"o":"m 60 -7 b 229 10 124 -7 180 -1 b 376 57 278 21 327 37 b 524 10 425 37 475 21 b 693 -7 573 -1 629 -7 l 693 118 b 603 122 663 118 634 119 b 496 136 573 125 538 130 l 496 140 b 601 192 535 150 570 168 b 676 283 633 216 658 246 b 704 408 695 319 704 361 b 664 565 704 467 691 519 b 549 674 637 612 599 648 b 376 714 500 701 442 714 b 203 674 311 714 253 701 b 89 565 154 648 116 612 b 49 408 62 519 49 467 b 76 283 49 361 58 319 b 151 192 95 246 120 216 b 257 140 183 168 218 150 l 257 136 b 149 122 215 130 179 125 b 60 118 119 119 89 118 z m 546 411 b 501 268 546 360 531 313 b 376 167 471 224 429 190 b 252 268 324 190 282 224 b 207 411 222 313 207 360 b 226 495 207 440 213 468 b 283 563 238 522 257 545 b 376 589 308 580 339 589 b 470 563 413 589 445 580 b 527 495 496 545 515 522 b 546 411 540 468 546 440 z "},"\u10f3":{"ha":765,"x_min":0,"x_max":0,"o":"m 49 -15 b 90 -156 49 -66 62 -113 b 208 -259 117 -199 156 -234 b 389 -297 260 -284 320 -297 b 563 -256 456 -297 514 -283 b 677 -146 613 -228 651 -191 b 717 0 703 -100 717 -52 b 667 173 717 70 700 128 b 542 272 634 218 593 251 l 542 278 b 633 352 581 293 611 317 b 667 489 656 387 667 432 l 667 694 l 138 694 l 138 569 l 508 569 l 508 469 b 484 374 508 429 500 397 b 396 339 468 350 438 339 l 314 339 l 314 211 l 396 211 b 481 187 427 211 456 203 b 538 118 506 171 525 148 b 558 18 552 88 558 55 b 539 -77 558 -16 552 -48 b 481 -147 526 -106 506 -129 b 389 -172 455 -164 424 -172 b 289 -149 349 -172 316 -165 b 228 -87 262 -134 242 -113 b 207 4 214 -60 207 -30 b 213 63 207 22 209 41 b 231 125 217 84 223 105 l 78 125 b 56 54 68 99 60 75 b 49 -15 51 33 49 10 z "},"\u10f4":{"ha":765,"x_min":0,"x_max":0,"o":"m 49 -15 b 90 -156 49 -66 62 -113 b 208 -259 117 -199 156 -234 b 389 -297 260 -284 320 -297 b 565 -259 456 -297 515 -284 b 678 -153 614 -234 652 -198 b 717 0 704 -109 717 -57 b 694 128 717 48 709 91 b 636 221 678 166 659 197 b 563 272 613 245 588 262 l 563 278 b 658 347 607 296 639 319 b 688 451 678 374 688 409 l 688 694 l 442 694 b 299 728 380 694 332 706 b 250 847 266 750 250 790 l 93 847 b 135 683 93 779 107 724 b 243 595 164 641 200 612 b 385 569 287 578 334 569 l 525 569 l 525 433 b 492 363 525 402 514 378 b 403 339 471 347 441 339 l 335 339 l 335 211 l 389 211 b 514 158 443 211 484 194 b 558 18 544 123 558 76 b 515 -121 558 -40 544 -87 b 389 -172 485 -155 444 -172 b 289 -149 349 -172 316 -165 b 228 -87 262 -134 242 -113 b 207 4 214 -60 207 -30 b 212 60 207 20 209 39 b 226 125 215 82 220 104 l 75 125 b 55 56 66 104 59 81 b 49 -15 51 32 49 8 z "},"\u10f5":{"ha":836,"x_min":0,"x_max":0,"o":"m 56 218 b 97 87 56 166 69 122 b 208 7 124 51 161 25 b 365 -19 254 -11 307 -19 b 523 13 425 -19 477 -9 b 631 105 569 34 605 65 b 669 249 656 145 669 193 l 669 328 l 815 328 l 815 450 l 669 450 l 669 611 l 815 611 l 815 733 l 669 733 l 669 804 b 631 945 669 860 657 907 b 524 1032 606 984 570 1013 b 365 1061 478 1051 425 1061 b 149 1006 275 1061 203 1043 b 69 835 96 969 69 912 b 365 611 69 686 168 611 l 517 611 l 517 450 l 365 450 b 139 392 270 450 194 431 b 56 218 83 353 56 295 z m 361 939 b 473 906 406 939 444 928 b 517 807 502 883 517 850 l 517 733 l 358 733 b 283 742 328 733 303 736 b 236 772 263 747 247 757 b 219 833 225 786 219 806 b 257 915 219 872 232 900 b 361 939 282 931 317 939 z m 517 246 b 496 169 517 216 510 191 b 440 119 482 147 463 131 b 361 103 416 108 390 103 b 250 133 317 103 280 113 b 206 219 220 153 206 181 b 358 328 206 292 256 328 l 517 328 z "},"\u10f6":{"ha":1032,"x_min":0,"x_max":0,"o":"m 372 -165 l 318 -165 l 318 -290 l 388 -290 b 544 -237 458 -290 510 -272 b 594 -72 578 -201 594 -146 l 594 1 b 878 94 719 5 813 36 b 976 353 944 152 976 238 b 931 541 976 425 961 488 b 801 666 901 594 858 636 b 596 714 744 696 675 712 l 596 819 b 602 879 596 845 598 865 b 622 908 606 893 613 903 b 660 917 631 914 644 917 l 714 917 l 714 1042 l 644 1042 b 488 988 574 1042 522 1024 b 438 824 454 953 438 898 l 438 714 b 240 671 363 711 297 697 b 105 553 183 645 138 606 b 56 356 72 500 56 434 b 152 99 56 243 88 157 b 436 1 216 40 311 8 l 436 -68 b 429 -128 436 -94 434 -114 b 409 -157 425 -142 418 -151 b 372 -165 400 -162 388 -165 z m 214 356 b 272 528 214 431 233 488 b 439 589 311 569 367 589 l 439 128 b 271 182 365 128 309 146 b 214 356 233 218 214 276 z m 818 353 b 763 180 818 273 800 216 b 594 126 725 144 669 126 l 594 589 b 760 528 666 589 721 569 b 818 353 799 488 818 430 z "},"\u10f7":{"ha":750,"x_min":0,"x_max":0,"o":"m 42 0 b 85 -158 42 -60 56 -113 b 204 -261 113 -203 153 -237 b 375 -297 255 -285 312 -297 b 546 -258 439 -297 496 -284 b 665 -144 596 -232 635 -194 b 708 35 694 -94 708 -35 b 701 89 708 51 706 69 b 685 139 697 108 691 125 l 532 139 b 547 83 539 118 544 99 b 550 17 549 66 550 44 b 530 -77 550 -17 543 -48 b 470 -147 516 -106 497 -130 b 375 -174 444 -165 412 -174 b 280 -148 338 -174 306 -165 b 220 -82 253 -131 234 -109 b 200 0 207 -55 200 -28 b 222 97 200 38 207 70 b 281 162 237 123 256 145 b 368 213 305 179 334 196 b 491 278 420 238 461 259 b 568 360 521 297 547 325 b 600 499 589 396 600 442 b 570 603 600 535 590 569 b 483 683 550 636 521 663 b 350 714 445 704 401 714 b 222 683 302 714 259 704 b 133 597 184 663 155 634 b 101 468 112 559 101 516 l 253 468 b 278 560 253 508 261 538 b 353 592 294 581 319 592 b 425 561 383 592 407 581 b 451 485 443 541 451 515 b 430 415 451 458 444 435 b 376 366 416 396 397 379 b 285 318 354 353 324 337 b 161 248 236 295 194 272 b 76 151 128 224 100 192 b 42 0 53 111 42 60 z "},"\u10f8":{"ha":778,"x_min":0,"x_max":0,"o":"m 76 29 b 161 -215 76 -79 105 -161 b 404 -297 218 -270 299 -297 b 568 -268 465 -297 520 -287 b 681 -181 616 -249 654 -220 b 722 -42 709 -143 722 -96 b 711 29 722 -21 719 2 l 565 29 b 569 -24 568 11 569 -7 b 528 -131 569 -68 556 -104 b 404 -172 500 -159 459 -172 b 275 -116 345 -172 302 -153 b 235 35 248 -78 235 -28 l 235 233 l 238 233 b 321 160 258 200 286 176 b 449 138 356 145 399 138 b 596 176 504 138 553 150 b 694 283 638 201 671 237 b 729 443 718 330 729 383 b 710 584 729 494 723 541 b 663 694 697 627 681 664 l 517 694 b 556 586 532 663 545 627 b 571 468 566 545 571 506 b 528 313 571 400 557 348 b 403 260 500 277 458 260 b 275 324 348 260 306 281 b 229 507 244 367 229 428 l 229 694 l 76 694 z "},"\u10f9":{"ha":778,"x_min":0,"x_max":0,"o":"m 722 382 b 679 563 722 452 708 513 b 560 676 650 613 611 650 b 389 714 510 701 453 714 b 218 675 325 714 268 701 b 99 562 168 649 128 611 b 56 382 70 512 56 452 b 83 250 56 334 65 290 b 159 151 101 210 126 177 b 275 97 192 124 231 106 l 275 92 b 194 29 241 79 214 58 b 164 -82 174 0 164 -37 b 194 -187 164 -119 174 -154 b 281 -267 215 -220 244 -246 b 414 -297 319 -287 363 -297 b 543 -266 462 -297 505 -287 b 631 -179 581 -245 610 -216 b 663 -51 652 -142 663 -100 l 511 -51 b 486 -144 511 -92 503 -123 b 411 -175 469 -165 444 -175 b 339 -145 381 -175 356 -165 b 313 -68 321 -125 313 -100 b 344 17 313 -32 323 -3 b 429 58 365 38 393 52 b 568 110 477 67 524 84 b 678 217 613 136 649 172 b 722 382 708 263 722 318 z m 214 382 b 233 488 214 421 220 456 b 292 563 246 519 266 544 b 389 590 319 581 351 590 b 485 563 427 590 459 581 b 544 488 512 544 531 519 b 564 382 557 456 564 421 b 544 276 564 342 557 307 b 485 203 530 245 511 220 b 390 176 459 185 427 176 b 258 233 332 176 288 195 b 214 382 229 270 214 320 z "},"\u10fa":{"ha":733,"x_min":0,"x_max":0,"o":"m 254 76 b 361 72 301 76 337 75 b 418 51 385 68 404 61 b 450 0 432 40 443 23 l 603 0 b 573 99 600 40 590 73 b 508 161 556 126 534 146 b 415 203 482 176 451 190 b 310 249 374 218 338 233 b 238 315 281 266 257 287 b 210 417 219 342 210 376 b 249 542 210 468 223 509 b 371 590 276 574 316 590 b 492 541 425 590 466 574 b 532 400 519 508 532 461 b 522 322 532 379 529 353 l 671 322 b 685 419 680 352 685 384 b 606 636 685 512 658 584 b 371 714 553 688 475 714 b 199 676 303 714 246 701 b 92 575 151 651 116 618 b 56 432 68 532 56 485 b 77 324 56 394 63 358 b 140 238 91 291 112 262 b 235 189 167 215 199 198 l 235 183 l 118 183 l 118 76 z "},"\u10fb":{"ha":789,"x_min":0,"x_max":0,"o":"m 96 515 l 289 515 l 289 703 l 96 703 z m 513 258 l 706 258 l 706 446 l 513 446 z m 96 0 l 289 0 l 289 188 l 96 188 z "},"\u10fc":{"ha":542,"x_min":0,"x_max":0,"o":"m 90 747 b 114 636 90 705 98 668 b 183 564 130 605 153 581 b 288 539 213 547 248 539 b 431 594 349 539 397 557 b 483 747 466 631 483 682 b 461 856 483 789 476 825 b 401 925 446 886 426 909 b 314 949 375 941 346 949 b 248 933 287 949 265 944 b 203 888 231 923 216 908 l 200 888 l 200 964 b 224 1026 200 994 208 1014 b 296 1044 239 1038 263 1044 l 438 1044 l 438 1138 l 283 1138 b 174 1121 239 1138 203 1132 b 111 1067 146 1110 125 1092 b 90 968 97 1043 90 1010 z m 369 742 b 348 667 369 711 362 686 b 288 639 334 648 313 639 b 224 667 261 639 239 648 b 200 742 208 686 200 711 b 223 822 200 777 208 804 b 288 850 238 841 260 850 b 349 821 314 850 335 840 b 369 742 363 801 369 775 z "},"\u10fd":{"ha":808,"x_min":0,"x_max":0,"o":"m 56 331 b 145 66 57 214 87 126 b 414 -24 203 6 293 -24 b 603 15 490 -24 553 -11 b 716 123 654 41 691 77 b 753 285 741 169 753 223 b 681 461 753 354 729 413 b 453 589 632 509 556 552 b 299 675 381 615 330 644 b 253 778 268 706 253 741 b 288 888 253 823 265 860 b 397 929 312 915 348 929 b 497 906 440 929 473 922 b 548 843 521 891 538 870 b 565 740 558 816 563 782 l 725 740 b 642 975 724 842 696 920 b 400 1057 587 1030 506 1057 b 240 1024 339 1057 285 1046 b 132 925 194 1001 158 969 b 93 767 106 881 93 829 b 162 595 93 702 116 645 b 396 464 208 546 286 502 b 551 375 471 438 522 408 b 593 263 579 342 593 304 b 554 147 593 213 580 175 b 415 104 528 118 482 104 b 265 163 347 104 297 124 b 215 331 233 201 216 257 z "},"\u10fe":{"ha":756,"x_min":0,"x_max":0,"o":"m 50 283 b 90 126 50 225 63 173 b 205 17 117 80 155 44 b 378 -22 254 -9 312 -22 b 551 17 444 -22 501 -9 b 665 126 600 44 638 80 b 706 283 692 173 706 225 b 678 409 706 331 696 372 b 603 500 659 446 634 476 b 497 551 571 524 536 541 l 497 556 b 605 569 539 562 575 567 b 694 574 635 572 665 574 l 694 699 b 525 682 631 699 574 693 b 378 635 476 671 427 655 b 231 682 329 655 280 671 b 61 699 181 693 125 699 l 61 574 b 151 569 91 574 121 572 b 258 556 181 567 217 562 l 258 551 b 153 500 219 541 184 524 b 78 409 121 476 96 446 b 50 283 59 372 50 331 z m 547 281 b 528 197 547 252 541 224 b 472 129 516 169 497 147 b 378 103 446 112 415 103 b 284 129 341 103 309 112 b 227 197 259 147 240 169 b 208 281 215 224 208 252 b 253 424 208 331 223 379 b 378 525 284 468 325 502 b 502 424 431 502 472 468 b 547 281 532 379 547 331 z "},"\u10ff":{"ha":794,"x_min":0,"x_max":0,"o":"m 50 346 b 92 155 50 274 64 210 b 212 26 119 100 159 57 b 397 -19 264 -4 326 -19 b 583 26 469 -19 530 -4 b 703 156 635 57 675 100 b 744 346 731 211 744 275 b 703 535 744 417 731 480 b 582 665 675 591 635 634 b 397 711 529 696 468 711 b 212 665 326 711 264 696 b 92 535 159 634 119 591 b 50 346 64 480 50 417 z m 586 346 b 565 230 586 305 579 266 b 502 140 551 193 530 163 b 397 106 474 117 439 106 b 292 140 356 106 321 117 b 229 231 264 163 243 194 b 208 346 215 268 208 306 b 229 463 208 387 215 425 b 292 552 243 500 264 529 b 396 586 321 575 355 586 b 502 552 438 586 474 575 b 565 463 530 529 551 500 b 586 346 579 427 586 388 z "},"\u1c90":{"ha":811,"x_min":0,"x_max":0,"o":"m 42 314 b 87 140 42 249 57 191 b 213 19 117 88 159 48 b 397 -24 267 -9 329 -24 b 581 19 465 -24 526 -9 b 711 140 636 48 680 88 b 758 314 743 192 758 250 b 734 477 758 376 750 430 b 675 594 718 524 698 563 b 578 710 652 625 619 663 b 491 836 540 751 511 794 b 461 992 471 879 461 931 l 288 992 b 308 835 288 931 294 879 b 358 724 321 791 338 754 b 433 631 379 693 404 662 b 515 536 469 594 496 562 b 564 444 535 510 551 479 b 583 319 577 408 583 367 b 561 215 583 281 576 246 b 497 141 546 184 525 159 b 399 114 469 123 437 114 b 302 141 363 114 330 123 b 238 215 274 159 252 184 b 215 319 223 246 215 281 b 249 479 215 371 226 425 l 82 479 b 53 403 71 457 61 432 b 42 314 46 375 42 345 z "},"\u1c91":{"ha":835,"x_min":0,"x_max":0,"o":"m 51 328 b 100 141 51 256 68 194 b 232 19 132 88 176 47 b 417 -24 288 -9 349 -24 b 604 19 486 -24 549 -9 b 735 141 660 47 703 88 b 783 328 767 194 783 256 b 750 487 783 387 772 440 b 658 603 728 534 697 572 b 524 667 618 633 574 655 l 524 718 b 508 790 524 746 518 770 b 470 840 497 811 484 827 b 414 885 456 853 437 868 b 366 931 393 900 377 915 b 350 992 355 946 350 967 l 186 992 b 198 903 186 956 190 926 b 227 851 206 881 216 863 b 274 814 239 839 254 827 b 285 807 280 809 284 807 b 322 778 300 796 313 786 b 345 747 331 771 339 760 b 354 700 351 734 354 719 l 354 675 b 199 619 297 668 245 649 b 91 499 153 589 117 549 b 51 328 65 450 51 393 z m 613 328 b 588 213 613 283 604 245 b 518 140 571 181 548 157 b 417 114 488 122 455 114 b 318 140 380 114 347 122 b 251 213 289 157 267 181 b 226 328 234 245 226 283 b 251 442 226 371 234 409 b 318 515 267 474 289 499 b 417 540 347 532 380 540 b 518 515 455 540 488 532 b 588 442 548 499 571 474 b 613 328 604 409 613 371 z "},"\u1c92":{"ha":833,"x_min":0,"x_max":0,"o":"m 51 315 b 101 133 51 245 68 184 b 233 17 134 82 178 44 b 415 -24 289 -10 350 -24 b 601 17 483 -24 545 -10 b 733 133 657 44 701 82 b 782 315 766 184 782 245 b 752 456 782 366 772 413 b 666 564 732 499 703 535 b 535 622 628 593 585 612 l 535 626 b 631 693 575 642 607 664 b 668 801 656 722 668 758 b 633 910 668 841 656 877 b 537 987 610 942 578 968 b 397 1015 496 1006 449 1015 b 259 985 347 1015 301 1005 b 158 899 217 964 183 936 b 121 774 133 863 121 821 l 289 774 b 303 831 289 795 294 814 b 344 872 313 848 327 862 b 400 886 361 881 380 886 b 455 874 420 886 439 882 b 493 840 471 865 484 854 b 507 793 502 825 507 810 b 465 714 507 763 493 737 b 326 651 438 691 391 670 b 128 534 246 627 180 588 b 51 315 77 480 51 407 z m 611 317 b 586 210 611 277 603 241 b 517 139 569 179 546 156 b 415 114 487 122 453 114 b 317 139 379 114 347 122 b 249 210 288 156 266 179 b 225 317 233 241 225 277 b 249 431 225 360 233 398 b 317 505 266 463 288 488 b 415 531 345 522 378 531 b 517 505 453 531 487 522 b 586 431 546 488 569 463 b 611 317 603 398 611 360 z "},"\u1c93":{"ha":1247,"x_min":0,"x_max":0,"o":"m 411 133 b 551 118 462 133 509 128 b 653 72 593 108 627 93 b 694 0 679 52 693 28 l 881 0 b 838 121 879 47 864 88 b 731 201 811 154 775 181 b 568 254 686 222 632 239 b 400 326 508 268 452 292 b 274 456 348 359 306 403 b 226 640 242 508 226 570 b 245 769 226 690 233 733 b 299 851 258 804 275 832 b 379 879 322 870 349 879 b 440 862 401 879 422 873 b 483 813 458 850 472 834 b 500 738 494 791 500 766 l 500 663 b 544 484 500 597 515 537 b 666 358 573 431 614 389 b 843 311 718 327 777 311 b 1024 358 910 311 970 327 b 1150 484 1077 389 1119 431 b 1196 663 1181 537 1196 597 b 1150 842 1196 728 1181 788 b 1026 969 1119 897 1078 939 b 856 1015 975 1000 918 1015 b 701 978 799 1015 747 1003 b 592 872 654 954 618 919 l 585 872 b 493 980 563 920 533 956 b 356 1015 453 1003 407 1015 b 201 969 298 1015 247 1000 b 92 838 155 938 119 894 b 51 643 65 781 51 716 b 87 472 51 581 63 524 b 181 340 110 420 142 376 b 308 258 219 304 262 277 l 308 253 l 174 253 l 174 133 z m 1032 663 b 1008 554 1032 624 1024 588 b 941 475 991 521 969 494 b 844 446 913 456 881 446 b 750 474 809 446 778 455 b 685 552 722 493 701 519 b 663 663 670 585 663 622 b 685 774 663 703 670 740 b 750 851 701 807 722 833 b 844 879 778 870 809 879 b 942 851 881 879 913 870 b 1008 774 970 833 993 807 b 1032 663 1024 740 1032 703 z "},"\u1c94":{"ha":828,"x_min":0,"x_max":0,"o":"m 49 276 b 92 118 49 216 63 163 b 214 13 120 73 161 38 b 397 -24 267 -11 328 -24 b 580 16 466 -24 527 -10 b 704 128 633 42 675 80 b 749 297 734 177 749 233 l 749 701 b 708 859 749 759 735 811 b 591 973 680 907 641 945 b 413 1015 541 1001 481 1015 b 238 976 347 1015 288 1002 b 119 873 187 950 147 916 b 78 732 92 830 78 783 b 89 651 78 700 81 674 l 260 651 b 251 722 254 675 251 698 b 270 799 251 749 258 775 b 326 856 283 823 301 842 b 413 878 350 871 379 878 b 501 853 447 878 476 869 b 556 785 525 836 544 814 b 574 692 568 757 574 726 l 574 301 b 553 203 574 264 567 232 b 492 138 539 175 519 153 b 399 114 466 122 435 114 b 306 135 363 114 333 121 b 244 197 280 150 259 170 b 222 293 230 224 222 256 b 226 354 222 316 224 337 b 240 415 229 372 234 392 l 74 415 b 49 276 57 375 49 329 z "},"\u1c95":{"ha":817,"x_min":0,"x_max":0,"o":"m 49 267 b 94 115 49 209 64 159 b 219 13 124 72 166 38 b 406 -24 273 -11 335 -24 b 588 15 472 -24 533 -11 b 717 122 642 41 685 77 b 764 271 748 166 764 216 b 740 391 764 316 756 356 b 678 477 725 426 704 454 b 596 526 653 500 625 516 l 596 532 b 695 613 637 548 670 575 b 733 750 721 652 733 697 b 691 883 733 798 719 843 b 575 980 663 924 624 956 b 410 1015 526 1003 471 1015 b 240 980 347 1015 290 1003 b 122 883 189 956 150 924 b 79 750 93 843 79 798 b 83 708 79 736 80 722 b 90 675 85 694 88 683 l 257 675 b 250 732 252 691 250 710 b 269 805 250 758 256 782 b 324 858 281 828 300 845 b 408 878 348 871 376 878 b 489 858 439 878 466 871 b 543 806 512 845 530 828 b 563 733 556 783 563 759 b 547 663 563 707 557 684 b 498 613 536 642 520 626 b 419 594 476 601 450 594 l 361 594 l 361 464 l 424 464 b 512 441 457 464 486 456 b 570 378 537 426 557 405 b 590 288 584 351 590 321 b 565 194 590 251 582 220 b 498 134 549 167 526 147 b 406 114 470 121 439 114 b 308 135 369 114 336 121 b 244 196 281 149 259 169 b 221 293 228 223 221 255 b 236 393 221 330 226 363 l 72 393 b 49 267 56 357 49 315 z "},"\u1c96":{"ha":888,"x_min":0,"x_max":0,"o":"m 110 310 b 158 138 110 246 126 188 b 290 19 191 87 234 47 b 472 -24 345 -9 406 -24 b 658 20 541 -24 603 -9 b 790 143 714 49 758 90 b 839 325 823 196 839 256 b 796 492 839 389 825 445 b 680 603 767 540 728 577 b 519 647 631 630 578 644 l 519 651 b 563 711 539 666 553 686 b 578 797 573 736 578 765 b 541 906 578 836 566 872 b 440 985 516 939 483 966 b 297 1015 398 1005 350 1015 b 156 985 245 1015 198 1005 b 57 899 114 964 81 936 b 21 768 33 862 21 818 b 45 663 21 730 29 695 b 114 585 61 631 84 605 b 217 547 144 564 178 552 l 217 543 b 136 440 181 517 154 483 b 110 310 119 398 110 354 z m 426 767 b 410 700 426 742 421 719 b 365 655 400 681 385 666 b 300 639 346 644 324 639 b 234 655 276 639 254 644 b 188 700 214 666 199 681 b 171 767 176 719 171 742 b 188 832 171 791 176 813 b 234 877 199 851 214 866 b 300 893 254 888 276 893 b 365 877 324 893 346 888 b 410 832 385 866 400 851 b 426 767 421 813 426 791 z m 667 324 b 642 214 667 282 659 245 b 574 140 626 182 603 158 b 472 114 544 123 510 114 b 374 140 435 114 402 123 b 307 214 345 158 323 182 b 283 325 291 245 283 282 b 308 434 283 367 292 403 b 378 506 325 465 348 489 b 478 531 407 522 441 531 b 578 506 516 531 549 522 b 644 434 606 489 628 465 b 667 324 659 403 667 366 z "},"\u1c97":{"ha":1297,"x_min":0,"x_max":0,"o":"m 1049 444 b 1020 201 1049 362 1039 281 b 943 0 1001 121 975 54 l 1119 0 b 1195 195 1151 49 1176 114 b 1224 450 1214 276 1224 361 l 1224 656 b 1185 849 1224 731 1211 795 b 1079 973 1160 903 1125 945 b 924 1015 1034 1001 982 1015 b 826 997 891 1015 859 1009 b 740 943 794 984 765 966 b 683 863 714 920 695 893 l 678 863 b 572 975 655 911 619 948 b 411 1015 525 1002 471 1015 b 238 969 346 1015 288 1000 b 118 837 187 939 147 895 b 75 631 89 779 75 710 l 75 360 b 121 153 75 280 90 211 b 246 22 151 96 193 52 b 426 -24 299 -9 359 -24 b 606 22 494 -24 554 -9 b 727 153 657 52 698 96 b 771 361 756 211 771 281 l 771 682 b 790 794 771 727 777 765 b 839 860 802 824 819 846 b 908 882 859 875 882 882 b 1011 827 952 882 986 864 b 1049 657 1036 791 1049 734 z m 600 368 b 557 178 600 285 586 222 b 426 114 528 135 485 114 b 294 179 368 114 324 136 b 249 368 264 223 249 286 l 249 624 b 294 812 249 705 264 768 b 426 878 324 856 368 878 b 558 813 487 878 531 856 b 600 622 586 770 600 706 z "},"\u1c98":{"ha":853,"x_min":0,"x_max":0,"o":"m 604 457 b 577 206 604 374 595 290 b 513 0 559 121 538 53 l 685 0 b 751 204 711 51 733 119 b 779 461 770 289 779 375 l 779 649 b 734 842 779 722 764 786 b 608 970 704 897 662 940 b 426 1015 555 1000 494 1015 b 245 971 359 1015 298 1000 b 120 843 192 941 150 899 b 75 650 90 788 75 723 l 75 461 b 102 203 75 374 84 288 b 168 0 120 118 142 50 l 340 0 b 276 206 315 54 294 122 b 249 457 258 290 249 374 l 249 640 b 269 762 249 686 255 726 b 328 847 282 797 302 826 b 426 878 355 867 388 878 b 525 847 465 878 498 867 b 585 762 552 826 572 797 b 604 640 598 726 604 686 z "},"\u1c99":{"ha":801,"x_min":0,"x_max":0,"o":"m 42 271 b 88 122 42 216 57 166 b 215 15 118 77 160 41 b 397 -24 269 -11 330 -24 b 578 17 464 -24 524 -10 b 706 131 633 45 675 82 b 753 292 737 179 753 232 b 708 468 753 361 738 420 b 585 574 678 516 637 551 l 585 579 b 677 651 624 593 654 617 b 711 774 700 684 711 725 b 678 888 711 816 700 854 b 584 969 657 921 625 948 b 436 1007 543 991 494 1003 l 436 875 b 519 837 472 870 500 858 b 547 758 538 816 547 790 b 516 672 547 722 537 694 b 421 640 495 651 463 640 l 328 640 l 328 504 l 397 504 b 491 478 432 504 464 496 b 555 406 518 461 540 437 b 578 301 570 375 578 340 b 555 201 578 263 570 229 b 491 136 540 172 518 151 b 397 114 464 121 432 114 b 302 136 362 114 330 121 b 235 197 274 151 252 171 b 211 288 219 223 211 253 b 215 341 211 308 213 326 b 228 392 218 356 222 373 l 65 392 b 42 271 50 356 42 316 z "},"\u1c9a":{"ha":1482,"x_min":0,"x_max":0,"o":"m 603 136 b 819 104 687 136 759 125 b 921 0 878 83 913 48 l 1106 0 b 1043 145 1102 57 1081 106 b 874 235 1005 184 949 214 b 622 271 825 248 741 260 b 592 274 612 272 602 273 b 565 276 583 275 574 275 b 406 331 512 282 459 300 b 276 458 354 361 311 403 b 225 647 242 512 225 575 b 241 772 225 695 230 737 b 286 851 252 806 267 833 b 354 879 306 870 328 879 b 435 840 388 879 415 866 b 464 732 454 813 464 777 l 464 479 l 626 479 l 626 735 b 641 809 626 763 631 787 b 681 860 651 831 664 848 b 742 879 698 873 719 879 b 824 840 776 879 803 866 b 856 735 845 814 856 779 l 856 479 l 1018 479 l 1018 733 b 1032 809 1018 762 1023 787 b 1072 860 1041 831 1055 848 b 1132 879 1090 873 1110 879 b 1224 819 1171 879 1201 859 b 1257 644 1246 778 1257 720 b 1204 357 1257 537 1239 441 l 1378 357 b 1431 650 1413 439 1431 537 b 1394 840 1431 721 1418 785 b 1292 969 1369 896 1335 939 b 1142 1015 1248 1000 1198 1015 b 1019 980 1095 1015 1055 1003 b 939 879 984 956 957 923 l 933 879 b 892 952 926 907 912 931 b 822 999 872 973 849 989 b 740 1015 795 1010 768 1015 b 662 999 714 1015 688 1010 b 592 952 635 989 612 973 b 550 879 572 931 558 907 l 544 879 b 464 978 529 921 502 954 b 340 1015 426 1003 385 1015 b 190 969 284 1015 234 1000 b 88 838 146 938 112 894 b 51 640 63 781 51 715 b 88 470 51 578 64 522 b 186 341 113 419 145 376 b 318 263 227 306 271 280 l 318 257 l 181 257 l 181 136 z "},"\u1c9b":{"ha":860,"x_min":0,"x_max":0,"o":"m 51 331 b 99 144 51 260 67 198 b 228 20 130 91 173 49 b 415 -24 284 -9 346 -24 b 604 20 486 -24 549 -9 b 734 144 660 49 703 91 b 781 329 765 198 781 260 l 781 703 b 736 867 781 765 766 819 b 611 976 706 914 665 950 b 425 1015 557 1002 495 1015 b 251 978 361 1015 303 1003 b 130 882 200 953 159 921 b 83 763 101 843 85 803 l 263 763 b 290 822 265 785 275 805 b 350 863 306 840 326 853 b 429 878 374 873 400 878 b 517 858 461 878 490 871 b 581 797 544 844 565 824 b 606 694 597 769 606 735 l 606 563 l 603 563 b 505 642 581 596 548 622 b 367 672 462 662 416 672 b 208 630 309 672 256 658 b 94 510 160 602 122 562 b 51 331 66 458 51 398 z m 611 324 b 585 213 611 281 603 244 b 515 140 568 181 545 157 b 415 114 486 122 452 114 b 318 140 379 114 347 122 b 251 213 289 157 267 181 b 226 324 234 245 226 282 b 250 435 226 366 234 403 b 316 509 266 467 288 492 b 415 535 344 526 377 535 b 517 509 453 535 487 526 b 586 435 546 492 569 467 b 611 324 603 403 611 366 z "},"\u1c9c":{"ha":860,"x_min":0,"x_max":0,"o":"m 79 329 b 126 144 79 260 95 198 b 256 20 157 91 200 49 b 444 -24 311 -9 374 -24 b 631 20 514 -24 576 -9 b 761 144 686 49 730 91 b 808 331 793 198 808 260 b 765 510 808 398 794 458 b 649 632 737 563 698 603 b 490 675 601 661 548 675 b 353 645 441 675 395 665 b 257 565 310 625 278 599 l 254 565 l 254 721 b 290 819 254 765 266 798 b 399 851 313 841 350 851 l 713 851 l 713 992 l 389 992 b 158 925 287 992 210 969 b 79 729 105 881 79 815 z m 633 324 b 609 213 633 281 625 244 b 542 140 593 181 570 157 b 444 114 513 122 481 114 b 343 140 406 114 373 122 b 274 213 313 157 290 181 b 249 324 257 244 249 281 b 274 437 249 367 257 405 b 343 510 290 469 313 493 b 444 536 373 528 406 536 b 543 510 481 536 514 528 b 610 436 572 493 594 469 b 633 324 625 404 633 366 z "},"\u1c9d":{"ha":1182,"x_min":0,"x_max":0,"o":"m 933 463 b 903 210 933 380 923 296 b 824 0 882 124 856 54 l 999 0 b 1077 201 1031 49 1057 116 b 1107 464 1097 287 1107 374 l 1107 657 b 1070 849 1107 731 1095 795 b 967 972 1046 902 1011 944 b 814 1015 922 1001 871 1015 b 679 981 765 1015 720 1004 b 592 878 638 957 609 923 l 588 878 b 503 981 571 923 543 957 b 367 1015 463 1004 418 1015 b 217 972 311 1015 261 1001 b 113 847 172 942 138 901 b 75 657 88 792 75 729 l 75 464 b 89 285 75 405 80 345 b 127 122 98 226 111 171 b 181 0 143 72 161 31 l 356 0 b 279 210 325 52 300 122 b 249 463 259 298 249 382 l 249 651 b 286 819 249 725 261 781 b 388 878 311 858 345 878 b 449 858 411 878 431 871 b 492 802 467 845 482 827 b 508 713 503 778 508 748 l 508 283 l 672 283 l 672 713 b 688 801 672 747 678 776 b 732 858 699 826 713 845 b 794 878 750 871 771 878 b 896 821 837 878 871 859 b 933 650 921 783 933 726 z "},"\u1c9e":{"ha":796,"x_min":0,"x_max":0,"o":"m 42 254 b 90 112 42 201 58 154 b 219 13 122 70 165 37 b 396 -24 273 -12 332 -24 b 572 14 460 -24 518 -11 b 697 117 625 39 667 73 b 743 267 728 161 743 211 b 719 386 743 312 735 352 b 659 469 704 420 684 448 b 581 514 634 491 608 506 l 581 519 b 674 581 621 532 652 553 b 706 678 695 608 706 641 b 682 769 706 714 698 744 b 626 826 666 793 647 813 b 536 875 604 840 574 856 b 474 908 510 888 490 899 b 433 942 459 916 445 928 b 410 992 420 956 413 972 l 236 992 b 264 890 238 951 247 917 b 328 825 281 863 302 842 b 424 776 354 808 386 792 b 486 747 450 765 470 755 b 524 713 502 738 515 727 b 539 665 534 700 539 684 b 510 608 539 642 529 623 b 431 586 491 594 465 586 l 338 586 l 338 450 l 401 450 b 492 428 437 450 467 443 b 549 366 517 413 536 392 b 569 276 563 340 569 310 b 547 194 569 247 562 219 b 484 135 531 169 510 150 b 396 114 458 121 428 114 b 304 134 363 114 332 121 b 240 190 276 147 255 166 b 217 269 224 214 217 241 b 219 315 217 287 218 302 b 229 360 221 328 225 343 l 61 360 b 42 254 48 325 42 290 z "},"\u1c9f":{"ha":843,"x_min":0,"x_max":0,"o":"m 51 272 b 97 118 51 214 66 163 b 222 14 127 74 168 39 b 403 -24 275 -11 335 -24 b 585 13 470 -24 531 -11 b 711 123 638 38 681 74 b 757 300 742 172 757 231 l 757 1000 l 572 1000 l 151 938 l 151 822 b 213 810 173 822 193 818 b 259 774 232 801 247 790 b 276 721 271 759 276 741 b 241 647 276 688 265 664 b 151 621 217 629 188 621 l 64 621 l 64 492 l 185 492 b 315 517 235 492 278 500 b 399 588 352 534 380 558 b 428 688 418 617 428 650 b 406 773 428 716 420 745 b 340 836 391 801 369 822 l 340 840 l 582 875 l 582 314 b 559 209 582 274 574 239 b 496 139 544 179 523 156 b 403 114 469 122 438 114 b 311 137 369 114 338 122 b 249 198 284 152 263 172 b 226 281 234 223 226 251 b 236 357 226 307 230 333 l 67 357 b 56 315 62 345 58 331 b 51 272 53 298 51 284 z "},"\u1ca0":{"ha":1083,"x_min":0,"x_max":0,"o":"m 857 336 b 833 160 857 273 849 215 b 761 0 818 106 794 53 l 933 0 b 1006 156 966 48 990 100 b 1031 347 1022 212 1031 276 b 993 519 1031 412 1018 469 b 892 633 968 568 934 606 b 751 674 850 660 803 674 b 628 641 706 674 665 663 b 544 549 592 619 564 588 l 540 549 b 471 641 525 588 501 619 b 367 674 440 663 406 674 b 267 648 334 674 301 665 b 190 574 234 631 208 606 l 186 574 b 290 723 200 639 234 689 b 493 794 345 757 413 781 l 615 814 b 776 874 688 826 742 846 b 836 992 809 903 830 942 l 663 992 b 635 963 658 980 649 970 b 583 947 622 956 605 951 l 454 922 b 158 769 328 898 230 847 b 51 414 87 691 51 572 b 75 173 51 316 59 235 b 149 0 91 110 115 53 l 321 0 b 249 160 289 50 266 103 b 225 339 233 217 225 277 b 243 456 225 387 231 426 b 290 521 255 486 271 508 b 356 540 310 534 331 540 b 432 501 387 540 413 527 b 461 393 451 475 461 439 l 461 179 l 621 179 l 621 394 b 635 471 621 423 625 449 b 673 522 644 493 657 510 b 729 540 689 534 708 540 b 822 489 767 540 798 523 b 857 336 845 455 857 404 z "},"\u1ca1":{"ha":842,"x_min":0,"x_max":0,"o":"m 86 304 b 131 128 86 237 101 178 b 257 15 161 79 203 41 b 439 -24 311 -11 371 -24 b 614 11 502 -24 560 -12 b 742 110 668 34 710 67 b 790 260 774 153 790 203 b 778 361 790 299 786 332 b 749 433 771 390 761 414 b 704 500 738 453 723 475 b 656 576 683 530 667 555 b 638 651 644 597 638 622 l 469 651 b 481 564 469 618 473 589 b 507 502 488 539 497 518 b 549 444 517 486 531 467 b 585 395 564 425 576 409 b 606 346 593 382 600 365 b 615 279 612 326 615 304 b 593 194 615 248 608 219 b 531 135 578 169 558 150 b 439 113 505 120 474 113 b 346 138 404 113 373 121 b 283 210 319 155 298 179 b 261 318 269 241 261 277 l 261 992 l 86 992 z "},"\u1ca2":{"ha":1033,"x_min":0,"x_max":0,"o":"m 51 478 b 113 206 51 372 72 282 b 281 35 154 131 210 74 b 517 -24 351 -4 430 -24 b 751 35 603 -24 681 -4 b 919 206 822 74 878 131 b 982 478 961 282 982 372 b 929 728 982 573 964 656 b 788 898 894 799 847 856 b 592 978 729 940 664 967 l 582 978 l 583 993 b 588 1029 586 1011 588 1023 l 444 1029 b 451 978 444 1009 447 992 l 440 978 b 244 897 369 966 304 939 b 103 728 185 856 138 799 b 51 478 69 656 51 573 z m 810 478 b 774 282 810 402 798 337 b 672 156 750 227 716 185 b 517 113 628 127 576 113 b 363 156 458 113 407 127 b 259 283 318 185 284 228 b 222 478 234 338 222 403 b 282 726 222 585 242 668 b 447 847 322 784 377 824 l 450 846 b 431 624 437 787 431 713 l 431 425 l 601 425 l 601 621 b 597 737 601 658 600 697 b 583 846 593 777 589 813 l 586 847 b 748 724 653 826 707 785 b 810 478 789 664 810 581 z "},"\u1ca3":{"ha":871,"x_min":0,"x_max":0,"o":"m 68 278 b 117 123 68 220 84 169 b 249 15 149 77 193 41 b 435 -24 305 -11 367 -24 b 619 18 503 -24 565 -10 b 749 134 674 46 717 84 b 796 304 780 184 796 240 l 796 756 b 763 894 796 808 785 854 b 670 984 741 933 710 963 b 532 1015 630 1005 584 1015 b 405 985 484 1015 441 1005 b 324 896 368 964 341 935 l 318 896 b 249 981 304 935 281 963 b 122 1007 216 998 174 1007 l 49 1007 l 49 863 l 124 863 b 210 832 162 863 191 852 b 240 749 230 812 240 784 l 240 604 l 406 604 l 406 742 b 433 841 406 783 415 816 b 513 878 452 866 478 878 b 594 839 548 878 575 865 b 622 736 613 813 622 779 l 622 313 b 598 205 622 271 614 235 b 531 137 582 175 559 152 b 435 114 503 122 471 114 b 334 137 397 114 363 122 b 267 200 305 152 282 173 b 243 290 251 227 243 257 b 248 350 243 309 245 329 b 261 407 251 371 256 390 l 93 407 b 68 278 76 361 68 318 z "},"\u1ca4":{"ha":1144,"x_min":0,"x_max":0,"o":"m 243 243 b 303 93 247 183 267 133 b 447 5 339 53 387 24 b 654 -24 507 -14 576 -24 b 866 10 733 -24 803 -12 b 1013 108 928 33 977 66 b 1065 253 1048 150 1065 198 b 1034 391 1065 306 1055 353 b 944 476 1013 429 983 458 l 944 482 b 1093 729 1044 522 1093 604 b 1056 876 1093 784 1081 833 b 956 978 1032 920 998 954 b 815 1015 914 1003 867 1015 b 676 978 763 1015 717 1003 b 588 876 636 954 606 920 l 582 876 b 486 982 558 925 526 960 b 342 1015 446 1004 398 1015 b 184 974 282 1015 230 1002 b 78 859 138 947 103 909 b 42 690 54 809 42 753 b 79 524 42 627 54 572 b 187 412 104 475 140 438 b 351 372 234 385 288 372 b 514 412 413 372 468 385 b 621 524 560 438 596 475 b 658 690 646 572 658 627 l 658 740 b 694 844 658 785 670 819 b 786 881 717 868 748 881 b 886 837 829 881 862 866 b 922 710 910 808 922 765 b 890 592 922 660 912 621 b 792 550 869 564 836 550 l 728 550 l 728 419 l 763 419 b 833 399 790 419 814 413 b 878 345 853 385 868 367 b 893 274 888 323 893 300 b 858 182 893 237 881 206 b 767 129 834 158 804 140 b 654 113 731 118 693 113 b 496 141 591 113 538 122 b 415 243 453 160 426 194 z m 507 692 b 466 553 507 634 493 588 b 350 501 439 519 400 501 b 238 553 302 501 264 519 b 197 692 211 588 197 634 b 238 833 197 751 211 798 b 351 885 264 867 302 885 b 465 833 400 885 438 867 b 507 692 493 798 507 751 z "},"\u1ca5":{"ha":833,"x_min":0,"x_max":0,"o":"m 49 272 b 92 117 49 213 63 161 b 214 13 122 72 162 38 b 393 -24 266 -11 325 -24 b 577 13 463 -24 524 -11 b 702 122 630 38 672 74 b 747 299 732 170 747 229 l 747 992 l 572 992 l 572 736 l 569 736 b 481 813 549 768 519 793 b 346 843 442 833 397 843 b 208 810 293 843 247 832 b 117 719 168 788 138 757 b 86 592 97 680 86 638 b 94 525 86 566 89 544 l 264 525 b 258 572 260 542 258 557 b 275 638 258 595 264 617 b 324 689 286 659 303 676 b 403 708 346 702 372 708 b 491 686 435 708 465 701 b 553 621 517 671 538 650 b 575 518 568 592 575 558 l 575 311 b 528 167 575 250 559 202 b 393 114 496 131 451 114 b 302 135 359 114 328 121 b 241 197 276 150 255 170 b 219 288 227 223 219 253 b 228 356 219 309 222 331 l 64 356 b 49 272 54 330 49 302 z "},"\u1ca6":{"ha":1118,"x_min":0,"x_max":0,"o":"m 411 133 b 535 117 460 133 502 128 b 613 69 569 106 595 90 b 643 0 631 49 641 26 l 828 0 b 752 169 825 72 800 129 b 549 258 704 210 637 240 b 393 324 494 269 442 291 b 273 453 344 356 304 399 b 226 643 242 506 226 570 b 263 819 226 718 238 777 b 365 882 287 861 321 882 b 447 844 400 882 427 869 b 478 736 468 819 478 783 l 478 476 l 639 476 l 639 736 b 653 814 639 766 644 792 b 694 865 663 836 677 853 b 753 882 712 876 731 882 b 855 822 796 882 830 862 b 892 644 879 781 892 722 b 836 358 892 538 873 443 l 1013 358 b 1067 651 1049 448 1067 546 b 1030 842 1067 723 1054 786 b 928 970 1005 897 971 940 b 778 1015 884 1000 834 1015 b 647 980 731 1015 687 1003 b 561 878 607 956 579 922 l 556 878 b 474 981 540 923 513 957 b 340 1015 436 1004 391 1015 b 191 969 285 1015 235 1000 b 88 840 147 939 113 896 b 51 644 64 784 51 719 b 85 472 51 581 63 524 b 176 340 107 420 137 376 b 307 258 214 304 258 277 l 307 253 l 174 253 l 174 133 z "},"\u1ca7":{"ha":851,"x_min":0,"x_max":0,"o":"m 64 238 b 113 95 64 182 80 134 b 242 6 146 56 189 26 b 410 -24 294 -14 350 -24 b 590 14 476 -24 537 -11 b 717 124 644 39 686 75 b 764 297 748 172 764 230 l 764 992 l 597 992 l 597 772 b 574 657 597 729 589 690 b 507 581 558 624 536 598 b 410 554 478 563 446 554 b 314 578 374 554 342 562 b 249 646 286 594 265 616 b 226 753 234 675 226 711 b 242 878 226 794 232 835 b 281 992 253 922 266 959 l 117 992 b 51 739 73 910 51 826 b 93 572 51 676 65 620 b 205 460 121 524 158 487 b 361 421 252 434 304 421 b 499 449 412 421 458 430 b 586 521 541 467 569 491 l 589 521 l 589 310 b 542 164 589 246 573 197 b 410 114 511 131 467 114 b 321 131 377 114 348 119 b 256 180 294 142 272 158 b 232 260 240 202 232 228 b 239 311 232 274 234 291 l 78 311 b 64 238 69 285 64 261 z "},"\u1ca8":{"ha":861,"x_min":0,"x_max":0,"o":"m 51 324 b 99 143 51 256 67 196 b 229 20 130 90 174 49 b 417 -24 285 -9 347 -24 b 606 20 487 -24 550 -9 b 735 142 661 49 704 90 b 781 324 765 195 781 255 l 781 756 b 749 899 781 812 770 860 b 662 986 728 938 699 967 b 532 1015 624 1006 581 1015 b 411 988 486 1015 445 1006 b 333 901 377 969 351 940 l 326 901 b 267 981 316 938 296 964 b 163 1007 237 998 202 1007 l 68 1007 l 68 868 l 144 868 b 222 844 179 868 204 860 b 247 779 239 829 247 807 l 247 746 l 407 746 l 407 781 b 419 830 407 798 411 815 b 452 867 427 845 438 857 b 504 881 466 876 484 881 b 580 843 538 881 563 868 b 606 739 597 818 606 783 l 606 549 l 603 549 b 507 628 581 582 550 609 b 371 658 464 648 419 658 b 211 617 313 658 260 644 b 94 499 162 589 123 550 b 51 324 66 448 51 389 z m 611 317 b 585 212 611 278 603 243 b 515 140 568 181 545 157 b 417 114 486 122 453 114 b 319 140 381 114 348 122 b 251 212 291 157 268 181 b 226 317 235 243 226 278 b 251 424 226 357 234 393 b 318 497 267 455 289 479 b 417 522 347 514 380 522 b 517 497 454 522 487 514 b 586 424 546 479 569 455 b 611 317 603 393 611 357 z "},"\u1ca9":{"ha":846,"x_min":0,"x_max":0,"o":"m 619 317 b 600 152 619 254 613 199 b 542 0 587 105 568 55 l 713 0 b 793 329 766 92 793 201 b 751 510 793 398 779 458 b 640 630 724 562 687 602 b 486 672 594 658 543 672 b 350 641 434 672 389 662 b 256 563 311 620 280 594 l 253 563 l 253 738 b 271 813 253 766 259 791 b 319 862 283 834 299 850 b 385 879 339 873 361 879 b 456 860 412 879 435 873 b 503 811 476 848 492 831 b 519 746 514 791 519 769 l 686 746 b 647 884 686 797 673 843 b 537 981 620 925 584 957 b 378 1015 490 1004 437 1015 b 228 983 323 1015 273 1004 b 119 888 182 961 146 929 b 79 742 93 846 79 797 l 79 0 l 249 0 l 249 314 b 274 431 249 358 257 397 b 341 506 290 464 313 489 b 435 532 369 523 400 532 b 529 508 470 532 501 524 b 595 436 557 493 579 469 b 619 317 611 404 619 364 z "},"\u1caa":{"ha":932,"x_min":0,"x_max":0,"o":"m 51 522 b 112 217 51 400 72 298 b 274 35 152 135 206 75 b 500 -24 341 -4 417 -24 b 694 17 571 -24 636 -10 b 830 126 752 44 797 80 b 879 279 863 172 879 223 b 857 402 879 325 872 366 b 798 492 842 439 822 469 b 717 544 773 516 746 533 l 717 550 b 814 615 759 565 792 586 b 847 713 836 643 847 675 b 835 781 847 738 843 761 b 805 831 826 800 816 817 b 758 878 793 844 778 860 b 706 934 735 899 718 918 b 682 992 694 950 686 969 l 519 992 b 533 922 520 965 525 941 b 563 872 542 902 551 885 b 607 828 574 859 588 844 b 642 793 622 815 634 803 b 665 758 651 783 659 771 b 674 710 671 744 674 728 b 642 638 674 679 663 655 b 551 613 620 621 590 613 l 453 613 l 453 478 l 536 478 b 625 455 569 478 599 470 b 685 390 651 440 671 418 b 706 292 699 361 706 329 b 678 200 706 257 697 227 b 603 137 660 173 635 152 b 499 114 572 122 537 114 b 361 158 448 114 402 128 b 263 293 320 187 288 232 b 226 526 239 354 226 432 b 264 776 226 613 239 696 b 361 992 289 857 321 929 l 197 992 b 92 776 155 930 120 858 b 51 522 65 695 51 610 z "},"\u1cab":{"ha":867,"x_min":0,"x_max":0,"o":"m 51 331 b 99 144 51 260 67 198 b 228 20 130 91 173 49 b 415 -24 284 -9 346 -24 b 604 20 486 -24 549 -9 b 734 144 660 49 703 91 b 781 329 765 198 781 260 l 781 992 l 606 992 l 606 565 l 603 565 b 506 645 581 599 548 625 b 369 675 463 665 418 675 b 210 632 312 675 259 661 b 94 510 162 603 123 563 b 51 331 66 458 51 398 z m 611 324 b 585 213 611 281 603 244 b 515 140 568 181 545 157 b 415 114 486 122 452 114 b 318 140 379 114 347 122 b 251 213 289 157 267 181 b 226 324 234 244 226 281 b 250 436 226 366 234 404 b 316 510 266 469 288 493 b 415 536 344 528 377 536 b 517 510 453 536 487 528 b 586 437 546 493 569 469 b 611 324 603 405 611 367 z "},"\u1cac":{"ha":865,"x_min":0,"x_max":0,"o":"m 85 324 b 131 142 85 255 100 195 b 261 20 162 90 206 49 b 450 -24 317 -9 380 -24 b 636 20 519 -24 581 -9 b 767 143 692 49 735 90 b 814 324 798 196 814 256 b 771 499 814 389 800 448 b 654 617 742 550 703 589 b 494 658 605 644 552 658 b 358 628 446 658 401 648 b 263 549 316 609 284 582 l 260 549 l 260 739 b 285 843 260 783 268 818 b 361 881 303 868 328 881 b 414 867 381 881 399 876 b 448 830 429 857 440 845 b 460 781 456 815 460 798 l 460 746 l 619 746 l 619 779 b 644 844 619 807 628 829 b 721 868 661 860 687 868 l 799 868 l 799 1007 l 703 1007 b 599 981 663 1007 628 998 b 539 901 569 964 549 938 l 533 901 b 455 988 516 940 490 969 b 333 1015 420 1006 380 1015 b 203 986 284 1015 241 1006 b 116 899 166 967 137 938 b 85 756 95 860 85 812 z m 639 317 b 615 211 639 277 631 242 b 547 140 598 181 576 157 b 449 114 517 122 485 114 b 350 140 413 114 380 122 b 280 212 320 157 297 181 b 254 317 263 243 254 278 b 279 424 254 357 263 393 b 349 497 296 455 319 479 b 450 522 379 514 413 522 b 549 497 487 522 520 514 b 615 424 577 479 600 455 b 639 317 631 393 639 357 z "},"\u1cad":{"ha":904,"x_min":0,"x_max":0,"o":"m 53 265 b 98 113 53 207 68 156 b 222 12 128 69 169 35 b 401 -24 275 -12 335 -24 b 581 15 468 -24 528 -11 b 706 128 634 40 676 78 b 751 313 736 179 751 240 l 751 743 l 883 743 l 883 868 l 751 868 l 751 992 l 578 992 l 578 868 l 357 868 b 209 842 302 868 253 859 b 106 765 165 824 131 798 b 68 642 81 731 68 690 b 108 522 68 594 81 554 b 210 447 134 489 168 464 b 342 422 251 431 295 422 b 441 437 376 422 409 427 b 524 475 473 447 500 459 b 575 525 547 491 564 507 l 578 525 l 578 297 b 531 162 578 239 562 194 b 401 114 499 130 456 114 b 310 134 367 114 337 121 b 247 191 283 147 262 166 b 225 275 232 216 225 244 b 227 302 225 282 226 291 b 232 329 228 313 230 322 l 65 329 b 56 298 62 320 59 309 b 53 265 54 286 53 275 z m 581 694 b 551 617 581 665 571 639 b 475 567 532 594 506 578 b 372 550 444 556 409 550 b 274 576 333 550 300 559 b 233 649 247 594 233 618 b 269 719 233 680 245 704 b 372 743 292 735 327 743 l 581 743 z "},"\u1cae":{"ha":868,"x_min":0,"x_max":0,"o":"m 86 331 b 133 144 86 260 102 198 b 263 20 164 91 207 49 b 451 -24 318 -9 381 -24 b 638 20 521 -24 583 -9 b 768 144 693 49 737 91 b 815 331 800 198 815 260 b 772 510 815 398 801 458 b 656 632 744 563 705 603 b 497 675 608 661 555 675 b 360 645 448 675 402 665 b 264 565 317 625 285 599 l 261 565 l 261 992 l 86 992 z m 640 324 b 616 213 640 281 632 244 b 549 140 600 181 577 157 b 451 114 520 122 488 114 b 351 140 414 114 381 122 b 281 213 322 157 298 181 b 256 324 264 244 256 281 b 281 437 256 367 264 405 b 350 510 297 469 320 493 b 451 536 380 528 413 536 b 550 510 488 536 521 528 b 617 436 579 493 601 469 b 640 324 632 404 640 366 z "},"\u1caf":{"ha":815,"x_min":0,"x_max":0,"o":"m 47 265 b 94 114 47 208 63 157 b 223 13 126 70 169 37 b 407 -24 277 -12 338 -24 b 589 16 474 -24 534 -10 b 718 125 644 42 687 79 b 765 283 750 171 765 224 b 727 450 765 347 753 403 b 624 561 702 497 667 534 b 476 613 580 588 531 605 l 476 743 l 732 743 l 732 868 l 476 868 l 476 1003 l 317 1003 l 317 868 l 61 868 l 61 743 l 317 743 l 317 483 l 407 483 b 501 460 442 483 474 476 b 566 394 529 445 551 423 b 589 292 581 365 589 331 b 566 195 589 254 581 222 b 502 135 551 169 529 149 b 407 114 475 121 443 114 b 310 135 371 114 338 121 b 243 195 281 150 259 170 b 219 282 227 221 219 250 b 229 356 219 306 223 331 l 64 356 b 47 265 53 327 47 297 z "},"\u1cb0":{"ha":814,"x_min":0,"x_max":0,"o":"m 40 215 b 91 86 40 165 57 122 b 224 4 125 50 169 23 b 400 -24 279 -14 338 -24 b 580 6 465 -24 525 -14 b 713 91 635 26 679 54 b 763 219 746 128 763 170 b 723 341 763 269 749 310 b 619 403 697 372 662 393 l 619 407 b 709 450 658 416 688 431 b 740 528 730 469 740 495 b 703 614 740 563 728 592 b 610 657 678 636 647 650 l 610 663 b 697 706 650 672 680 686 b 724 779 715 725 724 750 b 701 851 724 809 716 833 b 643 895 685 870 666 884 b 556 928 620 906 591 917 b 522 938 537 933 526 937 b 448 963 489 948 464 956 b 415 992 432 970 421 980 l 260 992 b 290 908 263 957 272 930 b 351 860 307 887 327 871 b 439 833 375 850 405 841 b 506 817 469 827 491 821 b 545 799 522 812 534 806 b 561 768 556 791 561 781 b 540 729 561 750 554 738 b 472 717 526 721 504 717 l 326 717 l 326 594 l 471 594 b 548 578 503 594 529 589 b 576 528 567 567 576 550 b 549 480 576 506 567 490 b 471 465 530 470 504 465 l 326 465 l 326 342 l 446 342 b 555 312 494 342 530 332 b 592 226 579 292 592 263 b 567 166 592 203 584 183 b 500 126 551 149 529 136 b 403 113 471 117 439 113 b 304 126 367 113 334 117 b 232 168 275 136 250 150 b 204 239 213 187 204 210 b 211 283 204 252 206 267 l 54 283 b 40 215 45 261 40 238 z "},"\u1cb1":{"ha":922,"x_min":0,"x_max":0,"o":"m 51 518 b 112 217 51 399 72 298 b 276 36 152 136 207 76 b 511 -24 345 -4 423 -24 b 692 6 577 -24 637 -14 b 824 90 747 26 791 54 b 874 217 857 126 874 169 b 854 304 874 249 867 278 b 802 369 841 330 824 352 b 729 406 780 386 756 398 l 729 411 b 818 453 768 419 798 433 b 849 533 838 472 849 499 b 812 621 849 569 836 599 b 719 663 787 643 756 657 l 719 668 b 808 711 760 677 790 692 b 835 778 826 731 835 753 b 823 835 835 800 831 819 b 796 874 815 852 806 865 b 751 911 786 884 771 896 b 710 949 734 925 720 938 b 688 992 700 961 692 975 l 524 992 b 539 928 525 967 531 945 b 568 887 547 910 557 897 b 610 857 579 877 593 867 b 655 822 630 844 645 832 b 669 782 665 812 669 799 b 651 742 669 764 663 751 b 586 728 639 732 618 728 l 460 728 l 460 603 l 585 603 b 656 585 615 603 639 597 b 681 533 672 574 681 556 b 657 485 681 511 673 495 b 585 469 641 475 617 469 l 460 469 l 460 346 l 561 346 b 665 315 606 346 640 335 b 701 229 689 294 701 265 b 647 144 701 192 683 164 b 511 114 611 124 566 114 b 365 156 457 114 409 128 b 261 290 322 184 287 229 b 222 522 235 351 222 429 b 256 767 222 606 233 687 b 347 992 278 846 308 921 l 183 992 b 51 518 95 844 51 687 z "},"\u1cb2":{"ha":849,"x_min":0,"x_max":0,"o":"m 425 82 b 760 -4 536 25 648 -4 l 760 132 b 648 141 725 132 687 135 b 547 167 609 147 575 156 l 547 172 b 677 274 595 195 639 229 b 767 430 716 318 745 370 b 799 621 788 490 799 553 b 749 826 799 698 782 766 b 613 965 715 885 670 932 b 425 1015 555 999 493 1015 b 237 965 356 1015 294 999 b 101 826 180 932 134 885 b 50 621 67 766 50 698 b 83 431 50 554 61 491 b 172 274 104 372 134 319 b 301 172 210 229 253 195 l 301 167 b 201 141 274 156 240 147 b 90 132 161 135 125 132 l 90 -4 b 261 18 149 -4 206 3 b 425 82 317 33 371 54 z m 625 610 b 573 388 625 527 608 453 b 425 228 538 322 489 269 b 276 388 360 269 310 322 b 224 610 241 453 224 527 b 248 747 224 661 232 706 b 318 843 264 788 288 820 b 425 878 349 866 384 878 b 531 843 466 878 501 866 b 601 747 561 820 584 788 b 625 610 617 706 625 661 z "},"\u1cb3":{"ha":813,"x_min":0,"x_max":0,"o":"m 47 268 b 94 119 47 213 63 164 b 224 15 126 75 169 40 b 407 -24 278 -11 339 -24 b 588 17 474 -24 534 -10 b 715 130 641 45 684 82 b 761 288 746 178 761 230 b 714 463 761 356 745 414 b 590 561 682 511 641 544 l 590 565 b 685 642 630 580 662 606 b 719 778 708 678 719 723 l 719 992 l 121 992 l 121 858 l 549 858 l 549 761 b 519 665 549 721 539 689 b 428 629 500 641 469 629 l 347 629 l 347 496 l 425 496 b 510 470 457 496 486 487 b 567 400 535 453 554 430 b 588 300 581 370 588 337 b 565 209 588 268 580 237 b 501 140 549 181 528 158 b 407 114 473 123 442 114 b 309 136 370 114 337 121 b 243 197 281 151 259 171 b 219 285 227 223 219 252 b 238 392 219 323 225 358 l 71 392 b 47 268 55 352 47 311 z "},"\u1cb4":{"ha":811,"x_min":0,"x_max":0,"o":"m 47 268 b 94 118 47 213 63 163 b 223 14 126 74 169 39 b 407 -24 277 -11 338 -24 b 586 15 473 -24 532 -11 b 713 118 640 40 682 75 b 760 264 744 162 760 210 b 713 424 760 331 744 384 b 589 504 682 463 641 490 l 589 510 b 685 585 630 525 662 550 b 719 718 708 621 719 665 l 719 878 l 415 878 b 309 906 366 878 331 887 b 274 992 287 925 275 954 l 106 992 b 142 857 107 939 119 894 b 233 774 164 820 194 792 b 368 746 272 755 317 746 l 546 746 l 546 700 b 517 608 546 661 536 630 b 425 574 497 585 467 574 l 354 574 l 354 439 l 424 439 b 508 419 455 439 483 432 b 566 363 533 406 553 388 b 586 276 579 338 586 309 b 564 194 586 247 579 219 b 501 135 549 169 528 150 b 408 114 475 121 444 114 b 310 137 371 114 338 122 b 242 198 281 152 259 172 b 218 282 226 223 218 251 b 232 374 218 311 223 341 l 65 374 b 47 268 53 340 47 305 z "},"\u1cb5":{"ha":875,"x_min":0,"x_max":0,"o":"m 51 213 b 98 84 51 163 67 120 b 219 3 129 48 169 22 b 378 -24 268 -15 321 -24 b 549 6 439 -24 496 -14 b 676 94 601 25 644 54 b 724 238 708 133 724 181 l 724 315 l 854 315 l 854 439 l 724 439 l 724 575 l 854 575 l 854 699 l 724 699 l 724 771 b 676 909 724 826 708 872 b 553 990 645 946 604 972 b 389 1015 502 1007 447 1015 b 228 991 331 1015 278 1007 b 109 917 179 975 139 950 b 64 792 79 883 64 842 b 140 630 64 720 89 666 b 356 575 191 593 263 575 l 557 575 l 557 439 l 354 439 b 194 413 293 439 240 430 b 89 336 149 396 114 370 b 51 213 64 302 51 261 z m 392 886 b 510 856 440 886 479 876 b 557 761 541 836 557 805 l 557 699 l 368 699 b 265 720 324 699 289 706 b 228 792 240 734 228 758 b 275 863 228 823 244 847 b 392 886 306 878 345 886 z m 557 235 b 508 138 557 190 541 158 b 385 108 476 118 435 108 b 303 120 355 108 328 112 b 242 156 278 128 258 140 b 219 213 227 171 219 190 b 259 289 219 246 233 271 b 363 315 285 306 320 315 l 557 315 z "},"\u1cb6":{"ha":1057,"x_min":0,"x_max":0,"o":"m 367 125 l 328 125 l 328 0 l 394 0 b 517 22 445 0 486 7 b 586 91 548 37 571 60 b 608 213 601 122 608 163 l 608 283 b 817 330 688 287 758 303 b 958 448 877 357 924 397 b 1008 638 991 499 1008 563 b 957 816 1008 706 991 766 b 815 935 923 866 875 906 b 604 988 754 965 684 982 l 608 1029 l 449 1029 l 454 988 b 246 938 376 981 307 964 b 101 822 185 911 137 872 b 49 638 66 771 49 710 b 156 384 49 528 84 444 b 449 282 227 324 325 290 l 449 215 b 441 159 449 190 446 172 b 416 133 436 147 428 138 b 367 125 404 128 388 125 z m 842 638 b 781 467 842 559 821 502 b 608 410 740 433 682 413 l 608 864 b 778 802 679 859 735 839 b 842 638 820 766 842 711 z m 215 638 b 279 800 215 709 237 763 b 449 863 322 837 378 858 l 449 410 b 277 469 375 414 318 434 b 215 638 236 503 215 560 z "},"\u1cb7":{"ha":814,"x_min":0,"x_max":0,"o":"m 42 282 b 92 121 42 221 58 167 b 225 14 125 75 169 39 b 404 -24 281 -11 340 -24 b 590 13 472 -24 534 -11 b 723 119 646 38 690 73 b 772 282 756 166 772 220 b 765 355 772 305 770 329 b 747 414 759 380 754 400 l 581 414 b 597 349 588 391 593 369 b 601 282 600 328 601 306 b 578 194 601 250 594 220 b 510 134 562 169 539 148 b 406 113 480 120 445 113 b 305 135 368 113 334 120 b 238 196 276 150 253 170 b 214 282 222 222 214 250 b 242 389 214 325 223 360 b 312 458 260 418 284 441 b 422 515 340 476 377 495 b 557 583 479 540 524 563 b 642 663 590 603 619 629 b 678 790 666 697 678 739 b 640 906 678 833 665 871 b 537 986 614 940 580 967 b 400 1015 494 1006 448 1015 b 265 983 352 1015 307 1005 b 163 894 222 962 189 932 b 125 764 138 856 125 813 l 290 764 b 306 826 290 788 295 809 b 347 867 316 844 329 857 b 403 881 364 876 382 881 b 458 867 423 881 442 876 b 498 832 475 859 488 847 b 513 781 508 817 513 800 b 489 718 513 756 505 736 b 431 674 473 700 454 686 b 333 631 409 663 376 648 b 188 555 278 607 229 582 b 83 447 146 528 111 491 b 42 282 56 402 42 347 z "},"\u1cb8":{"ha":851,"x_min":0,"x_max":0,"o":"m 86 297 b 133 124 86 230 102 172 b 260 14 164 75 206 39 b 440 -24 313 -11 374 -24 b 608 6 499 -24 554 -14 b 737 95 661 26 704 56 b 786 238 770 134 786 182 b 772 311 786 261 781 285 l 611 311 b 618 260 616 291 618 274 b 594 180 618 228 610 202 b 529 131 578 158 556 142 b 440 114 502 119 473 114 b 308 164 383 114 339 131 b 261 310 277 197 261 246 l 261 521 l 264 521 b 350 449 281 491 309 467 b 489 421 391 430 437 421 b 646 460 546 421 599 434 b 758 572 693 487 730 524 b 799 739 785 620 799 676 b 733 992 799 826 777 910 l 569 992 b 608 878 584 959 597 922 b 624 753 618 835 624 794 b 601 646 624 711 616 675 b 536 578 585 616 564 594 b 440 554 508 562 476 554 b 344 581 404 554 372 563 b 277 657 316 598 293 624 b 253 772 261 690 253 729 l 253 992 l 86 992 z "},"\u1cb9":{"ha":828,"x_min":0,"x_max":0,"o":"m 779 675 b 730 857 779 745 763 806 b 598 974 697 908 653 947 b 415 1014 543 1000 482 1014 b 230 974 348 1014 286 1000 b 97 857 174 947 130 908 b 49 675 65 806 49 745 b 78 534 49 624 59 577 b 164 426 98 491 127 455 b 296 368 201 397 245 377 l 296 364 b 199 298 256 348 224 326 b 163 189 175 270 163 233 b 197 80 163 149 174 113 b 294 3 220 47 253 21 b 433 -25 335 -16 381 -25 b 572 6 483 -25 529 -15 b 672 91 614 26 647 54 b 710 217 697 128 710 169 l 542 217 b 527 159 542 195 537 176 b 488 119 517 142 504 128 b 431 104 471 109 452 104 b 376 117 410 104 392 108 b 338 151 359 125 347 136 b 324 197 328 165 324 181 b 365 276 324 227 338 253 b 504 339 393 300 439 320 b 701 456 584 363 650 402 b 779 675 753 510 779 583 z m 219 674 b 244 781 219 714 228 750 b 314 851 261 811 284 835 b 415 876 344 868 377 876 b 513 851 451 876 484 868 b 581 781 542 835 565 811 b 606 674 597 750 606 714 b 581 559 606 629 597 591 b 513 485 565 527 542 503 b 415 460 484 468 451 460 b 314 485 377 460 344 468 b 244 559 284 503 261 527 b 219 674 228 591 219 629 z "},"\u1cba":{"ha":829,"x_min":0,"x_max":0,"o":"m 307 132 b 411 116 351 132 386 127 b 465 72 436 105 454 91 b 482 0 475 53 481 29 l 654 0 b 627 124 654 49 645 91 b 560 208 609 158 587 186 b 454 283 534 229 499 255 b 333 371 403 316 363 345 b 257 476 304 397 278 432 b 225 640 236 520 225 575 b 248 762 225 686 233 726 b 314 845 263 797 285 825 b 414 875 343 865 376 875 b 513 847 451 875 484 866 b 580 765 541 828 564 800 b 604 640 596 729 604 688 b 597 544 604 604 602 572 b 575 456 591 516 584 486 l 744 456 b 768 543 754 480 762 509 b 778 640 775 577 778 610 b 731 839 778 716 762 782 b 603 969 700 895 657 939 b 417 1015 548 1000 486 1015 b 229 969 347 1015 285 1000 b 99 838 174 939 130 895 b 51 640 67 781 51 715 b 120 404 51 546 74 467 b 297 258 166 341 225 293 l 297 253 l 150 253 l 150 132 z "},"\u1cbd":{"ha":918,"x_min":0,"x_max":0,"o":"m 839 699 b 789 867 839 763 822 820 b 653 977 756 915 710 952 b 458 1015 595 1003 531 1015 b 281 983 395 1015 336 1005 b 147 885 226 962 181 929 b 96 724 113 841 96 788 b 153 562 96 659 115 605 b 328 468 192 519 250 488 b 510 420 414 446 475 430 b 611 390 546 410 580 400 b 672 346 637 382 657 367 b 693 268 686 325 693 299 b 668 190 693 238 685 212 b 596 137 651 167 627 149 b 483 118 564 124 527 118 b 299 172 406 118 344 136 b 232 331 254 208 232 261 l 58 331 b 111 138 59 256 77 191 b 255 17 145 85 193 45 b 472 -24 316 -10 389 -24 b 678 14 550 -24 619 -11 b 817 122 738 39 784 75 b 867 288 850 168 867 224 b 835 413 867 336 856 378 b 756 499 813 449 787 478 b 661 544 724 521 693 536 l 396 614 b 301 663 353 625 322 641 b 269 744 280 684 269 711 b 320 840 269 785 286 817 b 451 874 354 862 398 874 b 604 830 518 874 569 859 b 665 699 639 801 660 757 z "},"\u1cbe":{"ha":849,"x_min":0,"x_max":0,"o":"m 50 371 b 101 166 50 294 67 226 b 238 26 134 106 180 60 b 425 -24 295 -7 357 -24 b 613 26 493 -24 555 -7 b 749 166 670 60 715 106 b 799 371 782 226 799 294 b 767 562 799 438 788 502 b 677 717 745 622 716 673 b 547 819 639 761 595 795 l 547 825 b 649 851 576 836 610 845 b 760 860 689 857 725 860 l 760 996 b 425 910 648 996 536 967 b 261 974 371 938 317 959 b 90 996 206 988 149 996 l 90 860 b 199 851 124 860 160 857 b 301 825 239 845 273 836 l 301 819 b 172 717 253 795 210 761 b 83 560 134 672 104 620 b 50 371 61 501 50 438 z m 625 382 b 601 244 625 331 617 285 b 531 149 584 204 561 172 b 425 114 501 125 466 114 b 318 149 384 114 349 125 b 248 244 288 172 264 204 b 224 382 232 285 224 331 b 276 604 224 464 241 538 b 425 764 310 670 360 723 b 573 604 489 723 538 670 b 625 382 608 538 625 464 z "},"\u1cbf":{"ha":978,"x_min":0,"x_max":0,"o":"m 39 496 b 94 229 39 397 57 308 b 252 44 131 150 184 89 b 489 -24 320 -1 399 -24 b 724 43 577 -24 655 -1 b 883 228 792 88 845 149 b 939 496 920 306 939 396 b 883 763 939 595 920 684 b 726 948 846 841 794 903 b 489 1015 658 993 579 1015 b 251 947 399 1015 320 993 b 94 760 183 902 130 840 b 39 496 57 681 39 593 z m 764 496 b 733 300 764 423 754 357 b 641 163 713 243 682 197 b 489 113 600 129 549 113 b 336 164 429 113 378 130 b 244 302 294 198 264 244 b 214 496 224 360 214 425 b 244 691 214 568 224 633 b 336 828 265 749 295 795 b 488 879 377 862 427 879 b 640 828 548 879 598 862 b 733 691 681 795 712 749 b 764 496 753 633 764 568 z "},"\u1e00":{"ha":926,"x_min":0,"x_max":0,"o":"m 371 992 l -10 0 l 169 0 l 263 263 l 658 263 l 751 0 l 938 0 l 556 992 z m 310 394 l 460 821 l 464 821 l 613 394 z m 381 -212 b 405 -151 381 -187 389 -167 b 464 -128 421 -136 441 -128 b 524 -151 488 -128 508 -136 b 547 -212 539 -167 547 -187 b 524 -273 547 -237 539 -257 b 464 -297 508 -289 488 -297 b 405 -273 441 -297 421 -289 b 381 -212 389 -257 381 -237 z m 464 -356 b 519 -345 483 -356 502 -352 b 565 -316 536 -338 551 -328 b 597 -271 579 -303 590 -288 b 608 -212 605 -253 608 -234 b 597 -154 608 -191 605 -172 b 565 -108 590 -137 579 -121 b 519 -79 551 -95 536 -86 b 464 -69 502 -73 483 -69 b 409 -79 444 -69 426 -73 b 363 -108 392 -86 377 -95 b 331 -154 350 -121 339 -137 b 319 -212 323 -172 319 -191 b 331 -271 319 -234 323 -253 b 362 -316 338 -288 348 -303 b 408 -345 375 -328 391 -338 b 464 -356 426 -352 444 -356 z "},"\u1e01":{"ha":772,"x_min":0,"x_max":0,"o":"m 685 160 l 685 529 b 660 626 685 567 676 599 b 594 690 643 652 621 674 b 501 726 566 707 536 719 b 397 738 467 734 432 738 b 281 726 357 738 319 734 b 178 688 243 719 209 706 b 104 614 148 669 124 644 b 71 499 85 583 74 545 l 229 499 b 278 585 233 538 249 566 b 388 613 306 603 343 613 b 438 609 403 613 420 611 b 485 595 455 607 471 602 b 522 565 500 588 512 578 b 536 515 531 552 536 536 b 519 463 536 492 530 475 b 472 438 507 452 491 443 b 403 426 452 432 429 428 b 321 414 377 423 350 419 b 222 398 288 410 254 405 b 133 364 189 391 159 380 b 69 299 106 348 85 326 b 44 190 53 271 44 235 b 65 98 44 155 51 124 b 119 33 78 72 96 50 b 197 -6 141 16 168 3 b 290 -19 227 -15 258 -19 b 423 1 333 -19 377 -12 b 539 68 469 15 507 38 b 581 0 545 36 559 13 b 661 -19 602 -13 629 -19 b 685 -18 668 -19 675 -19 b 713 -14 694 -17 703 -16 b 740 -8 722 -12 731 -10 b 761 -1 748 -5 756 -3 l 761 108 b 739 106 753 106 745 106 l 722 106 b 692 118 707 106 697 110 b 685 160 687 126 685 140 z m 526 360 l 526 242 b 508 178 526 217 520 196 b 463 136 496 161 481 147 b 406 113 445 125 426 117 b 349 106 385 108 366 106 b 302 110 335 106 319 107 b 255 124 285 113 269 117 b 218 153 241 131 228 141 b 203 197 208 165 203 180 b 213 249 203 218 206 235 b 242 284 220 264 230 275 b 283 305 254 293 268 300 b 332 317 299 310 315 314 b 438 331 367 323 402 328 b 526 360 473 334 502 344 z m 319 -232 b 344 -171 319 -207 328 -187 b 403 -147 360 -155 380 -147 b 463 -171 427 -147 447 -155 b 486 -232 478 -187 486 -207 b 463 -292 486 -256 478 -276 b 403 -317 447 -309 427 -317 b 344 -292 380 -317 360 -309 b 319 -232 328 -276 319 -256 z m 403 -375 b 458 -365 422 -375 441 -372 b 504 -335 475 -358 490 -348 b 536 -290 518 -323 529 -308 b 547 -232 544 -273 547 -253 b 536 -174 547 -211 544 -191 b 504 -128 529 -156 518 -141 b 458 -99 490 -115 475 -105 b 403 -89 441 -92 422 -89 b 348 -99 383 -89 365 -92 b 302 -128 331 -105 316 -115 b 270 -174 289 -141 278 -156 b 258 -232 262 -191 258 -211 b 269 -290 258 -253 262 -273 b 301 -335 277 -308 287 -323 b 347 -365 314 -348 330 -358 b 403 -375 365 -372 383 -375 z "},"\u1e02":{"ha":978,"x_min":0,"x_max":0,"o":"m 279 576 l 279 850 l 563 850 b 671 819 610 850 646 840 b 708 714 696 799 708 764 b 667 612 708 669 694 635 b 563 576 639 588 604 576 z m 106 992 l 106 0 l 561 0 b 726 22 625 0 680 7 b 840 80 773 36 811 55 b 906 167 870 104 892 134 b 926 276 919 201 926 238 b 879 445 926 344 911 400 b 740 532 848 490 801 519 l 740 535 b 845 617 786 554 821 582 b 882 746 870 653 882 696 b 801 931 882 828 855 890 b 588 992 748 971 676 992 z m 279 142 l 279 451 l 586 451 b 709 412 639 451 680 438 b 753 299 738 385 753 348 b 709 183 753 249 738 210 b 586 142 680 155 639 142 z m 436 1061 l 594 1061 l 594 1211 l 436 1211 z "},"\u1e03":{"ha":849,"x_min":0,"x_max":0,"o":"m 88 992 l 88 0 l 238 0 l 238 99 l 240 99 b 285 40 252 75 267 55 b 346 4 303 25 324 13 b 416 -15 368 -5 391 -11 b 489 -19 441 -18 465 -19 b 626 12 542 -19 588 -9 b 723 95 665 33 697 60 b 780 215 748 130 767 170 b 799 356 792 261 799 307 b 778 504 799 408 792 458 b 715 626 764 550 743 591 b 610 708 688 660 653 688 b 463 738 568 728 519 738 b 401 730 442 738 422 735 b 341 708 380 725 360 717 b 289 672 322 698 305 686 b 249 625 273 658 260 643 l 246 625 l 246 992 z m 640 358 b 630 266 640 327 637 296 b 595 185 623 236 611 209 b 533 128 579 162 558 143 b 442 106 508 113 478 106 b 356 125 409 106 381 112 b 293 178 332 138 311 156 b 253 258 275 200 262 227 b 240 358 245 289 240 322 b 291 543 240 435 257 497 b 442 613 325 589 375 613 b 528 591 474 613 503 605 b 590 534 553 577 574 558 b 628 453 607 510 619 483 b 640 358 636 422 640 391 z m 364 1061 l 522 1061 l 522 1211 l 364 1211 z "},"\u1e04":{"ha":978,"x_min":0,"x_max":0,"o":"m 279 576 l 279 850 l 563 850 b 671 819 610 850 646 840 b 708 714 696 799 708 764 b 667 612 708 669 694 635 b 563 576 639 588 604 576 z m 106 992 l 106 0 l 561 0 b 726 22 625 0 680 7 b 840 80 773 36 811 55 b 906 167 870 104 892 134 b 926 276 919 201 926 238 b 879 445 926 344 911 400 b 740 532 848 490 801 519 l 740 535 b 845 617 786 554 821 582 b 882 746 870 653 882 696 b 801 931 882 828 855 890 b 588 992 748 971 676 992 z m 279 142 l 279 451 l 586 451 b 709 412 639 451 680 438 b 753 299 738 385 753 348 b 709 183 753 249 738 210 b 586 142 680 155 639 142 z m 436 -219 l 594 -219 l 594 -69 l 436 -69 z "},"\u1e05":{"ha":849,"x_min":0,"x_max":0,"o":"m 88 992 l 88 0 l 238 0 l 238 99 l 240 99 b 285 40 252 75 267 55 b 346 4 303 25 324 13 b 416 -15 368 -5 391 -11 b 489 -19 441 -18 465 -19 b 626 12 542 -19 588 -9 b 723 95 665 33 697 60 b 780 215 748 130 767 170 b 799 356 792 261 799 307 b 778 504 799 408 792 458 b 715 626 764 550 743 591 b 610 708 688 660 653 688 b 463 738 568 728 519 738 b 401 730 442 738 422 735 b 341 708 380 725 360 717 b 289 672 322 698 305 686 b 249 625 273 658 260 643 l 246 625 l 246 992 z m 640 358 b 630 266 640 327 637 296 b 595 185 623 236 611 209 b 533 128 579 162 558 143 b 442 106 508 113 478 106 b 356 125 409 106 381 112 b 293 178 332 138 311 156 b 253 258 275 200 262 227 b 240 358 245 289 240 322 b 291 543 240 435 257 497 b 442 613 325 589 375 613 b 528 591 474 613 503 605 b 590 534 553 577 574 558 b 628 453 607 510 619 483 b 640 358 636 422 640 391 z m 364 -239 l 522 -239 l 522 -89 l 364 -89 z "},"\u1e06":{"ha":978,"x_min":0,"x_max":0,"o":"m 279 576 l 279 850 l 563 850 b 671 819 610 850 646 840 b 708 714 696 799 708 764 b 667 612 708 669 694 635 b 563 576 639 588 604 576 z m 106 992 l 106 0 l 561 0 b 726 22 625 0 680 7 b 840 80 773 36 811 55 b 906 167 870 104 892 134 b 926 276 919 201 926 238 b 879 445 926 344 911 400 b 740 532 848 490 801 519 l 740 535 b 845 617 786 554 821 582 b 882 746 870 653 882 696 b 801 931 882 828 855 890 b 588 992 748 971 676 992 z m 279 142 l 279 451 l 586 451 b 709 412 639 451 680 438 b 753 299 738 385 753 348 b 709 183 753 249 738 210 b 586 142 680 155 639 142 z m 315 -160 l 715 -160 l 715 -69 l 315 -69 z "},"\u1e07":{"ha":849,"x_min":0,"x_max":0,"o":"m 88 992 l 88 0 l 238 0 l 238 99 l 240 99 b 285 40 252 75 267 55 b 346 4 303 25 324 13 b 416 -15 368 -5 391 -11 b 489 -19 441 -18 465 -19 b 626 12 542 -19 588 -9 b 723 95 665 33 697 60 b 780 215 748 130 767 170 b 799 356 792 261 799 307 b 778 504 799 408 792 458 b 715 626 764 550 743 591 b 610 708 688 660 653 688 b 463 738 568 728 519 738 b 401 730 442 738 422 735 b 341 708 380 725 360 717 b 289 672 322 698 305 686 b 249 625 273 658 260 643 l 246 625 l 246 992 z m 640 358 b 630 266 640 327 637 296 b 595 185 623 236 611 209 b 533 128 579 162 558 143 b 442 106 508 113 478 106 b 356 125 409 106 381 112 b 293 178 332 138 311 156 b 253 258 275 200 262 227 b 240 358 245 289 240 322 b 291 543 240 435 257 497 b 442 613 325 589 375 613 b 528 591 474 613 503 605 b 590 534 553 577 574 558 b 628 453 607 510 619 483 b 640 358 636 422 640 391 z m 243 -179 l 643 -179 l 643 -89 l 243 -89 z "},"\u1e08":{"ha":1003,"x_min":0,"x_max":0,"o":"m 950 378 l 781 378 b 757 276 777 342 769 308 b 707 194 745 245 728 217 b 631 138 686 170 660 152 b 528 118 601 125 567 118 b 391 150 475 118 429 129 b 297 235 353 171 321 200 b 244 357 273 271 255 312 b 226 496 232 402 226 449 b 244 635 226 543 232 589 b 297 756 255 680 273 721 b 391 842 321 792 353 820 b 528 874 429 863 475 874 b 623 859 564 874 596 869 b 694 818 650 849 674 836 b 744 756 715 800 731 780 b 775 676 757 731 768 705 l 949 676 b 906 819 943 730 929 778 b 815 926 882 861 852 897 b 685 992 777 955 734 977 b 528 1015 636 1008 583 1015 b 328 974 454 1015 387 1001 b 179 861 270 946 220 908 b 85 696 138 814 107 759 b 53 496 64 633 53 566 b 81 307 53 429 62 366 b 164 148 100 248 128 195 b 297 33 200 101 244 63 b 474 -21 349 4 408 -14 l 397 -122 l 428 -149 b 482 -135 444 -139 462 -135 b 526 -148 498 -135 512 -139 b 546 -187 539 -157 546 -170 b 538 -217 546 -200 543 -209 b 518 -234 533 -224 526 -230 b 490 -242 510 -238 500 -241 b 461 -244 480 -244 470 -244 b 415 -237 445 -244 430 -242 b 371 -222 400 -232 386 -227 l 346 -278 b 415 -300 364 -288 388 -295 b 489 -307 443 -305 468 -307 b 549 -301 509 -307 529 -305 b 603 -280 569 -297 587 -290 b 642 -242 619 -270 631 -257 b 657 -182 652 -226 657 -206 b 646 -136 657 -164 653 -149 b 618 -104 638 -123 629 -112 b 581 -85 607 -96 594 -90 b 539 -79 567 -81 553 -79 b 513 -80 529 -79 520 -79 b 493 -83 505 -80 499 -81 l 493 -81 l 538 -22 b 699 8 596 -21 650 -11 b 826 90 748 28 790 55 b 913 217 863 125 891 168 b 950 378 934 266 946 319 z m 586 1279 l 461 1081 l 576 1081 l 774 1279 z "},"\u1e09":{"ha":772,"x_min":0,"x_max":0,"o":"m 265 -222 l 240 -278 b 308 -302 261 -289 283 -297 b 383 -310 332 -307 357 -310 b 444 -302 404 -310 424 -307 b 497 -280 464 -297 481 -290 b 536 -242 513 -270 526 -257 b 551 -182 546 -226 551 -206 b 540 -136 551 -164 548 -149 b 513 -103 533 -123 524 -112 b 475 -84 501 -95 489 -88 b 433 -78 461 -80 447 -78 b 407 -79 423 -78 414 -78 b 388 -83 400 -80 393 -81 l 386 -82 l 436 -18 b 619 54 511 -12 572 13 b 726 269 676 104 712 176 l 568 269 b 512 149 561 218 542 177 b 397 106 482 120 444 106 b 310 127 363 106 334 113 b 251 183 286 141 266 160 b 217 263 235 206 224 233 b 207 351 210 292 207 322 b 226 484 207 406 213 450 b 275 563 239 518 256 544 b 339 602 294 582 316 595 b 404 613 362 609 384 613 b 515 578 449 613 485 601 b 568 478 544 556 562 522 l 726 478 b 693 593 723 522 712 561 b 622 674 675 625 651 652 b 522 722 592 695 559 711 b 403 738 484 732 444 738 b 248 708 344 738 292 728 b 138 626 204 688 167 660 b 71 503 108 591 86 550 b 49 351 56 456 49 405 b 72 204 49 299 56 250 b 139 87 87 159 109 120 b 247 8 169 54 205 28 b 369 -18 283 -6 324 -15 l 292 -122 l 322 -149 b 376 -135 338 -139 356 -135 b 420 -148 392 -135 407 -139 b 440 -187 434 -157 440 -170 b 433 -217 440 -200 438 -209 b 413 -234 428 -224 421 -230 b 385 -242 404 -238 395 -241 b 356 -244 375 -244 365 -244 b 311 -239 340 -244 325 -243 b 265 -222 297 -235 282 -230 z m 451 1006 l 326 807 l 442 807 l 639 1006 z "},"\u1e0a":{"ha":1003,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 517 0 b 714 39 593 0 658 13 b 850 145 769 65 815 100 b 928 303 885 190 911 243 b 954 496 946 363 954 427 b 928 689 954 564 946 629 b 850 847 911 749 885 802 b 714 953 815 891 769 927 b 517 992 658 979 593 992 z m 279 142 l 279 850 l 450 850 b 616 823 518 850 573 841 b 717 748 659 805 693 780 b 767 635 742 716 759 678 b 781 496 776 592 781 546 b 767 356 781 446 776 399 b 717 244 759 313 742 276 b 616 169 693 212 659 187 b 450 142 573 151 518 142 z m 450 1061 l 608 1061 l 608 1211 l 450 1211 z "},"\u1e0b":{"ha":849,"x_min":0,"x_max":0,"o":"m 760 0 l 760 992 l 601 992 l 601 625 l 599 625 b 553 676 587 644 572 661 b 494 711 535 690 516 702 b 428 731 473 720 451 727 b 360 738 405 735 382 738 b 245 716 321 738 283 730 b 145 649 208 702 174 679 b 75 532 116 618 93 579 b 49 364 57 485 49 429 b 69 213 49 310 56 260 b 132 92 83 166 104 126 b 237 10 160 57 195 30 b 385 -19 279 -9 328 -19 b 514 8 430 -19 473 -10 b 607 97 555 26 586 56 l 610 97 l 610 0 z m 207 351 b 217 447 207 384 210 416 b 252 530 224 478 236 505 b 315 590 268 554 289 574 b 408 613 340 605 371 613 b 553 546 469 613 518 590 b 607 360 589 501 607 439 b 595 267 607 328 603 297 b 559 186 587 237 575 210 b 497 128 543 162 522 143 b 406 106 471 113 441 106 b 317 126 371 106 342 113 b 255 182 292 140 271 159 b 219 261 239 205 227 231 b 207 351 211 291 207 321 z m 325 1061 l 483 1061 l 483 1211 l 325 1211 z "},"\u1e0c":{"ha":1003,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 517 0 b 714 39 593 0 658 13 b 850 145 769 65 815 100 b 928 303 885 190 911 243 b 954 496 946 363 954 427 b 928 689 954 564 946 629 b 850 847 911 749 885 802 b 714 953 815 891 769 927 b 517 992 658 979 593 992 z m 279 142 l 279 850 l 450 850 b 616 823 518 850 573 841 b 717 748 659 805 693 780 b 767 635 742 716 759 678 b 781 496 776 592 781 546 b 767 356 781 446 776 399 b 717 244 759 313 742 276 b 616 169 693 212 659 187 b 450 142 573 151 518 142 z m 450 -219 l 608 -219 l 608 -69 l 450 -69 z "},"\u1e0d":{"ha":849,"x_min":0,"x_max":0,"o":"m 760 0 l 760 992 l 601 992 l 601 625 l 599 625 b 553 676 587 644 572 661 b 494 711 535 690 516 702 b 428 731 473 720 451 727 b 360 738 405 735 382 738 b 245 716 321 738 283 730 b 145 649 208 702 174 679 b 75 532 116 618 93 579 b 49 364 57 485 49 429 b 69 213 49 310 56 260 b 132 92 83 166 104 126 b 237 10 160 57 195 30 b 385 -19 279 -9 328 -19 b 514 8 430 -19 473 -10 b 607 97 555 26 586 56 l 610 97 l 610 0 z m 207 351 b 217 447 207 384 210 416 b 252 530 224 478 236 505 b 315 590 268 554 289 574 b 408 613 340 605 371 613 b 553 546 469 613 518 590 b 607 360 589 501 607 439 b 595 267 607 328 603 297 b 559 186 587 237 575 210 b 497 128 543 162 522 143 b 406 106 471 113 441 106 b 317 126 371 106 342 113 b 255 182 292 140 271 159 b 219 261 239 205 227 231 b 207 351 211 291 207 321 z m 325 -239 l 483 -239 l 483 -89 l 325 -89 z "},"\u1e0e":{"ha":1003,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 517 0 b 714 39 593 0 658 13 b 850 145 769 65 815 100 b 928 303 885 190 911 243 b 954 496 946 363 954 427 b 928 689 954 564 946 629 b 850 847 911 749 885 802 b 714 953 815 891 769 927 b 517 992 658 979 593 992 z m 279 142 l 279 850 l 450 850 b 616 823 518 850 573 841 b 717 748 659 805 693 780 b 767 635 742 716 759 678 b 781 496 776 592 781 546 b 767 356 781 446 776 399 b 717 244 759 313 742 276 b 616 169 693 212 659 187 b 450 142 573 151 518 142 z m 329 -160 l 729 -160 l 729 -69 l 329 -69 z "},"\u1e0f":{"ha":849,"x_min":0,"x_max":0,"o":"m 760 0 l 760 992 l 601 992 l 601 625 l 599 625 b 553 676 587 644 572 661 b 494 711 535 690 516 702 b 428 731 473 720 451 727 b 360 738 405 735 382 738 b 245 716 321 738 283 730 b 145 649 208 702 174 679 b 75 532 116 618 93 579 b 49 364 57 485 49 429 b 69 213 49 310 56 260 b 132 92 83 166 104 126 b 237 10 160 57 195 30 b 385 -19 279 -9 328 -19 b 514 8 430 -19 473 -10 b 607 97 555 26 586 56 l 610 97 l 610 0 z m 207 351 b 217 447 207 384 210 416 b 252 530 224 478 236 505 b 315 590 268 554 289 574 b 408 613 340 605 371 613 b 553 546 469 613 518 590 b 607 360 589 501 607 439 b 595 267 607 328 603 297 b 559 186 587 237 575 210 b 497 128 543 162 522 143 b 406 106 471 113 441 106 b 317 126 371 106 342 113 b 255 182 292 140 271 159 b 219 261 239 205 227 231 b 207 351 211 291 207 321 z m 204 -179 l 604 -179 l 604 -89 l 204 -89 z "},"\u1e10":{"ha":1003,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 517 0 b 714 39 593 0 658 13 b 850 145 769 65 815 100 b 928 303 885 190 911 243 b 954 496 946 363 954 427 b 928 689 954 564 946 629 b 850 847 911 749 885 802 b 714 953 815 891 769 927 b 517 992 658 979 593 992 z m 279 142 l 279 850 l 450 850 b 616 823 518 850 573 841 b 717 748 659 805 693 780 b 767 635 742 716 759 678 b 781 496 776 592 781 546 b 767 356 781 446 776 399 b 717 244 759 313 742 276 b 616 169 693 212 659 187 b 450 142 573 151 518 142 z m 357 -69 l 357 -207 l 440 -207 b 422 -242 438 -223 431 -234 b 378 -257 412 -249 397 -254 l 378 -310 b 478 -291 422 -308 456 -302 b 525 -248 500 -280 516 -266 b 539 -193 534 -230 539 -212 l 539 -69 z "},"\u1e11":{"ha":849,"x_min":0,"x_max":0,"o":"m 760 0 l 760 992 l 601 992 l 601 625 l 599 625 b 553 676 587 644 572 661 b 494 711 535 690 516 702 b 428 731 473 720 451 727 b 360 738 405 735 382 738 b 245 716 321 738 283 730 b 145 649 208 702 174 679 b 75 532 116 618 93 579 b 49 364 57 485 49 429 b 69 213 49 310 56 260 b 132 92 83 166 104 126 b 237 10 160 57 195 30 b 385 -19 279 -9 328 -19 b 514 8 430 -19 473 -10 b 607 97 555 26 586 56 l 610 97 l 610 0 z m 207 351 b 217 447 207 384 210 416 b 252 530 224 478 236 505 b 315 590 268 554 289 574 b 408 613 340 605 371 613 b 553 546 469 613 518 590 b 607 360 589 501 607 439 b 595 267 607 328 603 297 b 559 186 587 237 575 210 b 497 128 543 162 522 143 b 406 106 471 113 441 106 b 317 126 371 106 342 113 b 255 182 292 140 271 159 b 219 261 239 205 227 231 b 207 351 211 291 207 321 z m 335 -69 l 335 -207 l 418 -207 b 399 -242 415 -223 409 -234 b 356 -257 390 -249 375 -254 l 356 -310 b 456 -291 400 -308 433 -302 b 503 -248 478 -280 494 -266 b 517 -193 512 -230 517 -212 l 517 -69 z "},"\u1e12":{"ha":1003,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 517 0 b 714 39 593 0 658 13 b 850 145 769 65 815 100 b 928 303 885 190 911 243 b 954 496 946 363 954 427 b 928 689 954 564 946 629 b 850 847 911 749 885 802 b 714 953 815 891 769 927 b 517 992 658 979 593 992 z m 279 142 l 279 850 l 450 850 b 616 823 518 850 573 841 b 717 748 659 805 693 780 b 767 635 742 716 759 678 b 781 496 776 592 781 546 b 767 356 781 446 776 399 b 717 244 759 313 742 276 b 616 169 693 212 659 187 b 450 142 573 151 518 142 z m 431 -268 l 528 -143 l 626 -268 l 756 -268 l 606 -69 l 451 -69 l 303 -268 z "},"\u1e13":{"ha":849,"x_min":0,"x_max":0,"o":"m 760 0 l 760 992 l 601 992 l 601 625 l 599 625 b 553 676 587 644 572 661 b 494 711 535 690 516 702 b 428 731 473 720 451 727 b 360 738 405 735 382 738 b 245 716 321 738 283 730 b 145 649 208 702 174 679 b 75 532 116 618 93 579 b 49 364 57 485 49 429 b 69 213 49 310 56 260 b 132 92 83 166 104 126 b 237 10 160 57 195 30 b 385 -19 279 -9 328 -19 b 514 8 430 -19 473 -10 b 607 97 555 26 586 56 l 610 97 l 610 0 z m 207 351 b 217 447 207 384 210 416 b 252 530 224 478 236 505 b 315 590 268 554 289 574 b 408 613 340 605 371 613 b 553 546 469 613 518 590 b 607 360 589 501 607 439 b 595 267 607 328 603 297 b 559 186 587 237 575 210 b 497 128 543 162 522 143 b 406 106 471 113 441 106 b 317 126 371 106 342 113 b 255 182 292 140 271 159 b 219 261 239 205 227 231 b 207 351 211 291 207 321 z m 306 -287 l 403 -162 l 501 -287 l 631 -287 l 481 -89 l 326 -89 l 178 -287 z "},"\u1e14":{"ha":875,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 829 0 l 829 150 l 279 150 l 279 440 l 779 440 l 779 582 l 279 582 l 279 842 l 819 842 l 819 992 z m 267 1061 l 667 1061 l 667 1151 l 267 1151 z m 421 1415 l 235 1415 l 432 1217 l 547 1217 z "},"\u1e15":{"ha":772,"x_min":0,"x_max":0,"o":"m 576 422 l 207 422 b 223 497 208 449 213 474 b 262 558 233 520 246 541 b 320 598 278 575 297 588 b 396 613 343 608 368 613 b 469 597 423 613 447 607 b 524 555 491 586 509 572 b 560 494 540 538 552 518 b 576 422 569 471 575 447 z m 207 318 l 735 318 b 724 474 741 372 738 424 b 660 608 711 525 689 569 b 548 702 630 647 593 678 b 396 738 503 726 452 738 b 251 707 342 738 294 727 b 142 624 209 687 172 659 b 73 503 112 590 89 549 b 49 358 57 458 49 409 b 72 206 49 303 56 252 b 140 86 87 159 109 119 b 250 8 170 53 206 27 b 400 -19 294 -10 344 -19 b 512 -3 439 -19 476 -14 b 608 44 547 7 580 23 b 682 121 637 65 662 90 b 725 225 702 151 717 186 l 575 225 b 512 135 561 185 540 155 b 400 106 484 116 446 106 b 314 123 367 106 338 111 b 254 169 290 134 270 150 b 219 238 238 189 227 212 b 207 318 211 263 207 290 z m 196 807 l 596 807 l 596 897 l 196 897 z m 358 1165 l 172 1165 l 369 967 l 485 967 z "},"\u1e16":{"ha":875,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 829 0 l 829 150 l 279 150 l 279 440 l 779 440 l 779 582 l 279 582 l 279 842 l 819 842 l 819 992 z m 267 1061 l 667 1061 l 667 1151 l 267 1151 z m 539 1419 l 414 1221 l 529 1221 l 726 1419 z "},"\u1e17":{"ha":772,"x_min":0,"x_max":0,"o":"m 576 422 l 207 422 b 223 497 208 449 213 474 b 262 558 233 520 246 541 b 320 598 278 575 297 588 b 396 613 343 608 368 613 b 469 597 423 613 447 607 b 524 555 491 586 509 572 b 560 494 540 538 552 518 b 576 422 569 471 575 447 z m 207 318 l 735 318 b 724 474 741 372 738 424 b 660 608 711 525 689 569 b 548 702 630 647 593 678 b 396 738 503 726 452 738 b 251 707 342 738 294 727 b 142 624 209 687 172 659 b 73 503 112 590 89 549 b 49 358 57 458 49 409 b 72 206 49 303 56 252 b 140 86 87 159 109 119 b 250 8 170 53 206 27 b 400 -19 294 -10 344 -19 b 512 -3 439 -19 476 -14 b 608 44 547 7 580 23 b 682 121 637 65 662 90 b 725 225 702 151 717 186 l 575 225 b 512 135 561 185 540 155 b 400 106 484 116 446 106 b 314 123 367 106 338 111 b 254 169 290 134 270 150 b 219 238 238 189 227 212 b 207 318 211 263 207 290 z m 196 807 l 596 807 l 596 897 l 196 897 z m 464 1174 l 339 975 l 454 975 l 651 1174 z "},"\u1e18":{"ha":875,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 829 0 l 829 150 l 279 150 l 279 440 l 779 440 l 779 582 l 279 582 l 279 842 l 819 842 l 819 992 z m 368 -268 l 465 -143 l 564 -268 l 693 -268 l 543 -69 l 389 -69 l 240 -268 z "},"\u1e19":{"ha":772,"x_min":0,"x_max":0,"o":"m 576 422 l 207 422 b 223 497 208 449 213 474 b 262 558 233 520 246 541 b 320 598 278 575 297 588 b 396 613 343 608 368 613 b 469 597 423 613 447 607 b 524 555 491 586 509 572 b 560 494 540 538 552 518 b 576 422 569 471 575 447 z m 207 318 l 735 318 b 724 474 741 372 738 424 b 660 608 711 525 689 569 b 548 702 630 647 593 678 b 396 738 503 726 452 738 b 251 707 342 738 294 727 b 142 624 209 687 172 659 b 73 503 112 590 89 549 b 49 358 57 458 49 409 b 72 206 49 303 56 252 b 140 86 87 159 109 119 b 250 8 170 53 206 27 b 400 -19 294 -10 344 -19 b 512 -3 439 -19 476 -14 b 608 44 547 7 580 23 b 682 121 637 65 662 90 b 725 225 702 151 717 186 l 575 225 b 512 135 561 185 540 155 b 400 106 484 116 446 106 b 314 123 367 106 338 111 b 254 169 290 134 270 150 b 219 238 238 189 227 212 b 207 318 211 263 207 290 z m 297 -287 l 394 -162 l 493 -287 l 622 -287 l 472 -89 l 318 -89 l 169 -287 z "},"\u1e1a":{"ha":875,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 829 0 l 829 150 l 279 150 l 279 440 l 779 440 l 779 582 l 279 582 l 279 842 l 819 842 l 819 992 z m 713 -69 l 635 -69 b 612 -114 630 -88 622 -103 b 565 -131 601 -125 586 -131 b 527 -124 552 -131 540 -128 b 479 -106 515 -120 499 -114 b 415 -83 450 -94 429 -86 b 367 -78 400 -79 384 -78 b 310 -92 345 -78 326 -83 b 267 -130 293 -102 279 -115 b 238 -181 255 -145 245 -162 b 222 -235 230 -199 225 -217 l 301 -235 b 322 -192 305 -216 312 -202 b 361 -178 331 -183 344 -178 b 404 -183 377 -178 391 -180 b 456 -203 417 -187 434 -194 b 508 -222 473 -210 491 -216 b 558 -229 526 -227 543 -229 b 622 -217 583 -229 605 -225 b 667 -182 640 -208 655 -197 b 697 -132 680 -168 690 -151 b 713 -69 703 -112 709 -92 z "},"\u1e1b":{"ha":772,"x_min":0,"x_max":0,"o":"m 576 422 l 207 422 b 223 497 208 449 213 474 b 262 558 233 520 246 541 b 320 598 278 575 297 588 b 396 613 343 608 368 613 b 469 597 423 613 447 607 b 524 555 491 586 509 572 b 560 494 540 538 552 518 b 576 422 569 471 575 447 z m 207 318 l 735 318 b 724 474 741 372 738 424 b 660 608 711 525 689 569 b 548 702 630 647 593 678 b 396 738 503 726 452 738 b 251 707 342 738 294 727 b 142 624 209 687 172 659 b 73 503 112 590 89 549 b 49 358 57 458 49 409 b 72 206 49 303 56 252 b 140 86 87 159 109 119 b 250 8 170 53 206 27 b 400 -19 294 -10 344 -19 b 512 -3 439 -19 476 -14 b 608 44 547 7 580 23 b 682 121 637 65 662 90 b 725 225 702 151 717 186 l 575 225 b 512 135 561 185 540 155 b 400 106 484 116 446 106 b 314 123 367 106 338 111 b 254 169 290 134 270 150 b 219 238 238 189 227 212 b 207 318 211 263 207 290 z m 642 -89 l 564 -89 b 541 -133 559 -107 552 -122 b 494 -150 530 -144 515 -150 b 456 -144 481 -150 469 -148 b 408 -125 444 -140 428 -133 b 344 -102 380 -113 358 -105 b 296 -97 329 -99 313 -97 b 239 -112 275 -97 256 -102 b 196 -149 222 -122 208 -134 b 167 -200 184 -165 174 -181 b 151 -254 159 -219 154 -237 l 231 -254 b 251 -212 234 -236 241 -222 b 290 -197 260 -202 274 -197 b 333 -203 306 -197 320 -199 b 385 -222 346 -206 363 -213 b 438 -241 402 -230 420 -236 b 488 -249 455 -246 472 -249 b 551 -236 513 -249 534 -244 b 596 -201 569 -228 584 -216 b 626 -151 609 -187 619 -171 b 642 -89 633 -132 638 -111 z "},"\u1e1c":{"ha":875,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 829 0 l 829 150 l 279 150 l 279 440 l 779 440 l 779 582 l 279 582 l 279 842 l 819 842 l 819 992 z m 324 1257 l 243 1257 b 308 1111 249 1193 270 1144 b 461 1061 346 1078 397 1061 b 619 1110 525 1061 578 1077 b 692 1257 660 1142 684 1191 l 613 1257 b 563 1178 605 1222 589 1195 b 472 1151 538 1160 507 1151 b 376 1175 435 1151 403 1159 b 324 1257 348 1191 331 1218 z m 336 -222 l 311 -278 b 378 -302 331 -289 354 -297 b 454 -310 403 -307 428 -310 b 515 -302 475 -310 495 -307 b 568 -280 534 -297 552 -290 b 607 -242 584 -270 597 -257 b 622 -182 617 -226 622 -206 b 611 -136 622 -164 619 -149 b 583 -103 604 -123 594 -112 b 546 -84 572 -95 560 -88 b 504 -78 532 -80 518 -78 b 478 -79 494 -78 485 -78 b 458 -83 470 -80 464 -81 l 457 -82 l 521 0 l 454 0 l 363 -122 l 393 -149 b 447 -135 409 -139 427 -135 b 491 -148 463 -135 478 -139 b 511 -187 504 -157 511 -170 b 503 -217 511 -200 509 -209 b 483 -234 498 -224 492 -230 b 456 -242 475 -238 466 -241 b 426 -244 445 -244 436 -244 b 382 -239 411 -244 396 -243 b 336 -222 368 -235 353 -230 z "},"\u1e1d":{"ha":772,"x_min":0,"x_max":0,"o":"m 576 422 l 207 422 b 223 497 208 449 213 474 b 262 558 233 520 246 541 b 320 598 278 575 297 588 b 396 613 343 608 368 613 b 469 597 423 613 447 607 b 524 555 491 586 509 572 b 560 494 540 538 552 518 b 576 422 569 471 575 447 z m 207 318 l 735 318 b 724 474 741 372 738 424 b 660 608 711 525 689 569 b 548 702 630 647 593 678 b 396 738 503 726 452 738 b 251 707 342 738 294 727 b 142 624 209 687 172 659 b 73 503 112 590 89 549 b 49 358 57 458 49 409 b 72 206 49 303 56 252 b 140 86 87 159 109 119 b 250 8 170 53 206 27 b 400 -19 294 -10 344 -19 b 512 -3 439 -19 476 -14 b 608 44 547 7 580 23 b 682 121 637 65 662 90 b 725 225 702 151 717 186 l 575 225 b 512 135 561 185 540 155 b 400 106 484 116 446 106 b 314 123 367 106 338 111 b 254 169 290 134 270 150 b 219 238 238 189 227 212 b 207 318 211 263 207 290 z m 253 1003 l 172 1003 b 238 857 178 939 200 890 b 390 807 275 824 326 807 b 548 856 454 807 507 823 b 621 1003 589 888 613 937 l 542 1003 b 492 924 534 968 518 941 b 401 897 467 906 437 897 b 305 921 364 897 332 905 b 253 1003 278 937 260 964 z m 265 -242 l 240 -297 b 308 -322 261 -308 283 -316 b 383 -329 332 -327 357 -329 b 444 -322 404 -329 424 -327 b 497 -299 464 -316 481 -309 b 536 -261 513 -290 526 -277 b 551 -201 546 -245 551 -225 b 540 -156 551 -184 548 -169 b 513 -123 533 -143 524 -132 b 475 -103 501 -114 489 -108 b 433 -97 461 -99 447 -97 b 407 -99 423 -97 414 -98 b 388 -103 400 -100 393 -101 l 386 -101 l 450 -19 l 383 -19 l 292 -142 l 322 -168 b 376 -154 338 -159 356 -154 b 420 -167 392 -154 407 -159 b 440 -207 434 -176 440 -189 b 433 -236 440 -219 438 -229 b 413 -253 428 -244 421 -249 b 385 -262 404 -258 395 -260 b 356 -264 375 -263 365 -264 b 311 -258 340 -264 325 -262 b 265 -242 297 -255 282 -249 z "},"\u1e1e":{"ha":824,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 279 0 l 279 440 l 728 440 l 728 582 l 279 582 l 279 842 l 790 842 l 790 992 z m 368 1061 l 526 1061 l 526 1211 l 368 1211 z "},"\u1e1f":{"ha":438,"x_min":0,"x_max":0,"o":"m 13 718 l 13 600 l 131 600 l 131 0 l 289 0 l 289 600 l 424 600 l 424 718 l 289 718 l 289 792 b 312 851 289 821 297 841 b 367 867 327 862 345 867 b 408 865 382 867 396 866 b 440 858 419 863 430 861 l 440 982 b 329 992 417 988 380 992 b 255 984 303 992 278 989 b 192 953 231 979 210 969 b 147 888 173 938 158 916 b 131 778 136 860 131 823 l 131 718 z m 147 1061 l 306 1061 l 306 1211 l 147 1211 z "},"\u1e20":{"ha":1054,"x_min":0,"x_max":0,"o":"m 971 0 l 971 522 l 549 522 l 549 390 l 813 390 b 793 276 812 349 805 311 b 740 190 781 242 763 213 b 653 135 716 166 687 148 b 535 118 619 123 579 117 b 398 150 482 118 436 129 b 304 235 359 171 328 200 b 251 357 280 271 262 312 b 233 496 239 402 233 449 b 251 635 233 543 239 589 b 304 756 262 680 280 721 b 398 842 328 792 359 820 b 535 874 436 863 482 874 b 625 861 566 874 596 869 b 703 824 654 853 680 840 b 760 762 726 807 745 786 b 790 676 776 737 786 709 l 960 676 b 913 824 953 732 938 781 b 818 930 888 866 856 902 b 688 994 780 958 737 979 b 535 1015 640 1008 588 1015 b 335 974 461 1015 394 1001 b 186 861 277 946 227 908 b 92 696 145 814 114 759 b 60 496 71 633 60 566 b 92 294 60 425 71 357 b 186 129 114 231 145 176 b 335 17 227 82 277 45 b 535 -24 394 -10 461 -24 b 694 7 595 -24 648 -13 b 833 117 741 27 787 64 l 860 0 z m 315 1085 l 715 1085 l 715 1175 l 315 1175 z "},"\u1e21":{"ha":824,"x_min":0,"x_max":0,"o":"m 747 38 l 747 718 l 589 718 l 589 619 l 586 619 b 499 709 566 660 537 690 b 374 738 461 728 419 738 b 237 708 323 738 277 728 b 135 630 197 689 163 663 b 71 515 107 597 86 559 b 49 378 56 472 49 426 b 67 232 49 326 55 277 b 124 112 79 187 98 147 b 224 30 151 77 184 50 b 371 0 265 10 313 0 b 495 33 415 0 457 11 b 586 126 534 56 564 87 l 589 126 l 589 17 b 544 -119 589 -43 574 -88 b 404 -167 515 -151 468 -167 b 346 -163 384 -167 364 -166 b 295 -148 327 -161 310 -156 b 256 -115 280 -140 267 -129 b 232 -61 244 -101 237 -83 l 74 -61 b 110 -167 77 -103 89 -138 b 185 -236 130 -195 155 -219 b 285 -274 216 -254 249 -266 b 394 -285 322 -281 358 -285 b 656 -205 508 -285 596 -258 b 747 38 717 -152 747 -71 z m 396 125 b 310 146 363 125 334 132 b 252 200 287 160 267 178 b 218 276 237 222 225 247 b 207 363 211 304 207 333 b 217 452 207 392 210 422 b 249 533 223 482 234 509 b 307 590 263 556 283 575 b 396 613 331 605 361 613 b 484 593 430 613 459 606 b 544 540 509 580 528 563 b 578 464 559 518 570 493 b 589 375 585 435 589 406 b 578 284 589 344 585 314 b 545 203 572 254 560 227 b 485 147 530 180 510 161 b 396 125 461 132 431 125 z m 197 807 l 597 807 l 597 897 l 197 897 z "},"\u1e22":{"ha":1003,"x_min":0,"x_max":0,"o":"m 101 992 l 101 0 l 275 0 l 275 447 l 726 447 l 726 0 l 900 0 l 900 992 l 726 992 l 726 597 l 275 597 l 275 992 z m 421 1061 l 579 1061 l 579 1211 l 421 1211 z "},"\u1e23":{"ha":797,"x_min":0,"x_max":0,"o":"m 83 992 l 83 0 l 242 0 l 242 424 b 254 497 242 450 246 474 b 289 558 263 520 274 541 b 343 598 304 575 322 588 b 415 613 364 608 388 613 b 519 574 463 613 497 600 b 556 451 542 549 554 508 l 556 0 l 714 0 l 714 493 b 646 676 714 575 691 636 b 460 738 600 717 538 738 b 331 705 413 738 370 727 b 244 624 293 683 264 656 l 242 624 l 242 992 z m 319 1061 l 478 1061 l 478 1211 l 319 1211 z "},"\u1e24":{"ha":1003,"x_min":0,"x_max":0,"o":"m 101 992 l 101 0 l 275 0 l 275 447 l 726 447 l 726 0 l 900 0 l 900 992 l 726 992 l 726 597 l 275 597 l 275 992 z m 421 -219 l 579 -219 l 579 -69 l 421 -69 z "},"\u1e25":{"ha":797,"x_min":0,"x_max":0,"o":"m 83 992 l 83 0 l 242 0 l 242 424 b 254 497 242 450 246 474 b 289 558 263 520 274 541 b 343 598 304 575 322 588 b 415 613 364 608 388 613 b 519 574 463 613 497 600 b 556 451 542 549 554 508 l 556 0 l 714 0 l 714 493 b 646 676 714 575 691 636 b 460 738 600 717 538 738 b 331 705 413 738 370 727 b 244 624 293 683 264 656 l 242 624 l 242 992 z m 319 -219 l 478 -219 l 478 -69 l 319 -69 z "},"\u1e26":{"ha":1003,"x_min":0,"x_max":0,"o":"m 101 992 l 101 0 l 275 0 l 275 447 l 726 447 l 726 0 l 900 0 l 900 992 l 726 992 l 726 597 l 275 597 l 275 992 z m 301 1061 l 460 1061 l 460 1211 l 301 1211 z m 699 1211 l 540 1211 l 540 1061 l 699 1061 z "},"\u1e27":{"ha":797,"x_min":0,"x_max":0,"o":"m 83 992 l 83 0 l 242 0 l 242 424 b 254 497 242 450 246 474 b 289 558 263 520 274 541 b 343 598 304 575 322 588 b 415 613 364 608 388 613 b 519 574 463 613 497 600 b 556 451 542 549 554 508 l 556 0 l 714 0 l 714 493 b 646 676 714 575 691 636 b 460 738 600 717 538 738 b 331 705 413 738 370 727 b 244 624 293 683 264 656 l 242 624 l 242 992 z m 200 1061 l 358 1061 l 358 1211 l 200 1211 z m 597 1211 l 439 1211 l 439 1061 l 597 1061 z "},"\u1e28":{"ha":1003,"x_min":0,"x_max":0,"o":"m 101 992 l 101 0 l 275 0 l 275 447 l 726 447 l 726 0 l 900 0 l 900 992 l 726 992 l 726 597 l 275 597 l 275 992 z m -8 -222 l -33 -278 b 34 -302 -13 -289 9 -297 b 110 -310 59 -307 84 -310 b 170 -302 130 -310 150 -307 b 224 -280 190 -297 208 -290 b 263 -242 239 -270 252 -257 b 278 -182 273 -226 278 -206 b 267 -136 278 -164 274 -149 b 239 -103 259 -123 250 -112 b 201 -84 228 -95 215 -88 b 160 -78 188 -80 174 -78 b 133 -79 150 -78 141 -78 b 114 -83 126 -80 119 -81 l 113 -82 l 176 0 l 110 0 l 18 -122 l 49 -149 b 103 -135 64 -139 82 -135 b 147 -148 119 -135 133 -139 b 167 -187 160 -157 167 -170 b 159 -217 167 -200 164 -209 b 139 -234 154 -224 147 -230 b 111 -242 131 -238 121 -241 b 82 -244 101 -244 91 -244 b 38 -239 66 -244 51 -243 b -8 -222 24 -235 8 -230 z "},"\u1e29":{"ha":797,"x_min":0,"x_max":0,"o":"m 83 992 l 83 0 l 242 0 l 242 424 b 254 497 242 450 246 474 b 289 558 263 520 274 541 b 343 598 304 575 322 588 b 415 613 364 608 388 613 b 519 574 463 613 497 600 b 556 451 542 549 554 508 l 556 0 l 714 0 l 714 493 b 646 676 714 575 691 636 b 460 738 600 717 538 738 b 331 705 413 738 370 727 b 244 624 293 683 264 656 l 242 624 l 242 992 z m -29 -222 l -54 -278 b 13 -302 -34 -289 -11 -297 b 89 -310 38 -307 63 -310 b 149 -302 109 -310 129 -307 b 203 -280 169 -297 187 -290 b 242 -242 219 -270 231 -257 b 257 -182 252 -226 257 -206 b 246 -136 257 -164 253 -149 b 218 -103 238 -123 229 -112 b 181 -84 207 -95 194 -88 b 139 -78 167 -80 153 -78 b 113 -79 129 -78 120 -78 b 93 -83 105 -80 99 -81 l 92 -82 l 156 0 l 89 0 l -3 -122 l 28 -149 b 82 -135 44 -139 62 -135 b 126 -148 98 -135 112 -139 b 146 -187 139 -157 146 -170 b 138 -217 146 -200 143 -209 b 118 -234 133 -224 126 -230 b 90 -242 110 -238 100 -241 b 61 -244 80 -244 70 -244 b 17 -239 45 -244 31 -243 b -29 -222 3 -235 -12 -230 z "},"\u1e2a":{"ha":1003,"x_min":0,"x_max":0,"o":"m 101 992 l 101 0 l 275 0 l 275 447 l 726 447 l 726 0 l 900 0 l 900 992 l 726 992 l 726 597 l 275 597 l 275 992 z m 357 -69 l 276 -69 b 342 -215 282 -133 304 -182 b 494 -265 380 -249 431 -265 b 652 -217 558 -265 611 -249 b 725 -69 693 -184 718 -135 l 646 -69 b 597 -149 638 -105 622 -131 b 506 -175 571 -166 541 -175 b 409 -151 469 -175 436 -167 b 357 -69 382 -136 364 -108 z "},"\u1e2b":{"ha":797,"x_min":0,"x_max":0,"o":"m 83 992 l 83 0 l 242 0 l 242 424 b 254 497 242 450 246 474 b 289 558 263 520 274 541 b 343 598 304 575 322 588 b 415 613 364 608 388 613 b 519 574 463 613 497 600 b 556 451 542 549 554 508 l 556 0 l 714 0 l 714 493 b 646 676 714 575 691 636 b 460 738 600 717 538 738 b 331 705 413 738 370 727 b 244 624 293 683 264 656 l 242 624 l 242 992 z m 256 -69 l 175 -69 b 240 -215 181 -133 202 -182 b 393 -265 278 -249 329 -265 b 551 -217 457 -265 509 -249 b 624 -69 592 -184 616 -135 l 544 -69 b 495 -149 537 -105 521 -131 b 404 -175 470 -166 439 -175 b 308 -151 367 -175 335 -167 b 256 -69 280 -136 263 -108 z "},"\u1e2c":{"ha":386,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 279 0 l 279 992 z m 438 -69 l 360 -69 b 337 -114 355 -88 347 -103 b 290 -131 326 -125 311 -131 b 252 -124 277 -131 265 -128 b 204 -106 240 -120 224 -114 b 140 -83 175 -94 154 -86 b 92 -78 125 -79 109 -78 b 35 -92 70 -78 51 -83 b -8 -130 18 -102 4 -115 b -37 -181 -20 -145 -30 -162 b -53 -235 -45 -199 -50 -217 l 26 -235 b 47 -192 30 -216 37 -202 b 86 -178 56 -183 69 -178 b 129 -183 102 -178 116 -180 b 181 -203 142 -187 159 -194 b 233 -222 198 -210 216 -216 b 283 -229 251 -227 268 -229 b 347 -217 308 -229 330 -225 b 392 -182 365 -208 380 -197 b 422 -132 405 -168 415 -151 b 438 -69 428 -112 434 -92 z "},"\u1e2d":{"ha":335,"x_min":0,"x_max":0,"o":"m 88 992 l 88 842 l 246 842 l 246 992 z m 88 718 l 88 0 l 246 0 l 246 718 z m 413 -69 l 335 -69 b 312 -114 330 -88 322 -103 b 265 -131 301 -125 286 -131 b 227 -124 252 -131 240 -128 b 179 -106 215 -120 199 -114 b 115 -83 150 -94 129 -86 b 67 -78 100 -79 84 -78 b 10 -92 45 -78 26 -83 b -33 -130 -7 -102 -21 -115 b -62 -181 -45 -145 -55 -162 b -78 -235 -70 -199 -75 -217 l 1 -235 b 22 -192 5 -216 12 -202 b 61 -178 31 -183 44 -178 b 104 -183 77 -178 91 -180 b 156 -203 117 -187 134 -194 b 208 -222 173 -210 191 -216 b 258 -229 226 -227 243 -229 b 322 -217 283 -229 305 -225 b 367 -182 340 -208 355 -197 b 397 -132 380 -168 390 -151 b 413 -69 403 -112 409 -92 z "},"\u1e2e":{"ha":386,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 279 0 l 279 992 z m -7 1061 l 151 1061 l 151 1211 l -7 1211 z m 390 1211 l 232 1211 l 232 1061 l 390 1061 z m 232 1479 l 107 1281 l 222 1281 l 419 1479 z "},"\u1e2f":{"ha":335,"x_min":0,"x_max":0,"o":"m 88 0 l 246 0 l 246 718 l 88 718 z m -32 788 l 126 788 l 126 938 l -32 938 z m 365 938 l 207 938 l 207 788 l 365 788 z m 211 1206 l 86 1007 l 201 1007 l 399 1206 z "},"\u1e30":{"ha":951,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 279 0 l 279 333 l 421 474 l 746 0 l 963 0 l 539 596 l 935 992 l 721 992 l 279 540 l 279 992 z m 539 1260 l 414 1061 l 529 1061 l 726 1260 z "},"\u1e31":{"ha":746,"x_min":0,"x_max":0,"o":"m 88 992 l 88 0 l 246 0 l 246 257 l 340 349 l 560 0 l 753 0 l 451 454 l 726 718 l 532 718 l 246 428 l 246 992 z m 476 1260 l 351 1061 l 467 1061 l 664 1260 z "},"\u1e32":{"ha":951,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 279 0 l 279 333 l 421 474 l 746 0 l 963 0 l 539 596 l 935 992 l 721 992 l 279 540 l 279 992 z m 454 -219 l 613 -219 l 613 -69 l 454 -69 z "},"\u1e33":{"ha":746,"x_min":0,"x_max":0,"o":"m 88 992 l 88 0 l 246 0 l 246 257 l 340 349 l 560 0 l 753 0 l 451 454 l 726 718 l 532 718 l 246 428 l 246 992 z m 340 -219 l 499 -219 l 499 -69 l 340 -69 z "},"\u1e34":{"ha":951,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 279 0 l 279 333 l 421 474 l 746 0 l 963 0 l 539 596 l 935 992 l 721 992 l 279 540 l 279 992 z m 333 -160 l 733 -160 l 733 -69 l 333 -69 z "},"\u1e35":{"ha":746,"x_min":0,"x_max":0,"o":"m 88 992 l 88 0 l 246 0 l 246 257 l 340 349 l 560 0 l 753 0 l 451 454 l 726 718 l 532 718 l 246 428 l 246 992 z m 219 -160 l 619 -160 l 619 -69 l 219 -69 z "},"\u1e36":{"ha":797,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 783 0 l 783 150 l 279 150 l 279 992 z m 365 -219 l 524 -219 l 524 -69 l 365 -69 z "},"\u1e37":{"ha":335,"x_min":0,"x_max":0,"o":"m 88 992 l 88 0 l 246 0 l 246 992 z m 88 -219 l 246 -219 l 246 -69 l 88 -69 z "},"\u1e38":{"ha":797,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 783 0 l 783 150 l 279 150 l 279 992 z m 365 -219 l 524 -219 l 524 -69 l 365 -69 z m -11 1061 l 389 1061 l 389 1151 l -11 1151 z "},"\u1e39":{"ha":335,"x_min":0,"x_max":0,"o":"m 88 992 l 88 0 l 246 0 l 246 992 z m 88 -219 l 246 -219 l 246 -69 l 88 -69 z m -33 1061 l 367 1061 l 367 1151 l -33 1151 z "},"\u1e3a":{"ha":797,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 783 0 l 783 150 l 279 150 l 279 992 z m 244 -160 l 644 -160 l 644 -69 l 244 -69 z "},"\u1e3b":{"ha":335,"x_min":0,"x_max":0,"o":"m 88 992 l 88 0 l 246 0 l 246 992 z m -33 -160 l 367 -160 l 367 -69 l -33 -69 z "},"\u1e3c":{"ha":797,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 783 0 l 783 150 l 279 150 l 279 992 z m 346 -268 l 443 -143 l 542 -268 l 671 -268 l 521 -69 l 367 -69 l 218 -268 z "},"\u1e3d":{"ha":335,"x_min":0,"x_max":0,"o":"m 88 992 l 88 0 l 246 0 l 246 992 z m 68 -268 l 165 -143 l 264 -268 l 393 -268 l 243 -69 l 89 -69 l -60 -268 z "},"\u1e3e":{"ha":1235,"x_min":0,"x_max":0,"o":"m 103 992 l 103 0 l 268 0 l 268 765 l 271 765 l 546 0 l 689 0 l 964 765 l 967 765 l 967 0 l 1132 0 l 1132 992 l 890 992 l 624 215 l 621 215 l 347 992 z m 681 1257 l 556 1058 l 671 1058 l 868 1257 z "},"\u1e3f":{"ha":1208,"x_min":0,"x_max":0,"o":"m 83 718 l 83 0 l 242 0 l 242 426 b 255 506 242 456 246 482 b 290 564 264 529 275 548 b 340 600 304 580 321 592 b 399 613 359 608 378 613 b 498 574 447 613 480 600 b 525 461 516 549 525 511 l 525 0 l 683 0 l 683 421 b 719 563 683 482 695 529 b 836 613 744 596 782 613 b 908 599 867 613 891 608 b 948 559 926 589 939 576 b 964 498 957 542 962 522 b 967 419 966 474 967 448 l 967 0 l 1125 0 l 1125 496 b 1062 682 1125 583 1104 645 b 885 738 1020 719 961 738 b 753 706 832 738 788 727 b 660 618 718 684 687 655 b 580 708 644 659 617 689 b 458 738 542 728 502 738 b 382 728 430 738 404 734 b 323 704 360 722 340 714 b 276 667 306 694 290 681 b 238 618 263 652 250 636 l 233 618 l 233 718 z m 708 1018 l 583 819 l 699 819 l 896 1018 z "},"\u1e40":{"ha":1235,"x_min":0,"x_max":0,"o":"m 103 992 l 103 0 l 268 0 l 268 765 l 271 765 l 546 0 l 689 0 l 964 765 l 967 765 l 967 0 l 1132 0 l 1132 992 l 890 992 l 624 215 l 621 215 l 347 992 z m 538 1061 l 696 1061 l 696 1211 l 538 1211 z "},"\u1e41":{"ha":1208,"x_min":0,"x_max":0,"o":"m 83 718 l 83 0 l 242 0 l 242 426 b 255 506 242 456 246 482 b 290 564 264 529 275 548 b 340 600 304 580 321 592 b 399 613 359 608 378 613 b 498 574 447 613 480 600 b 525 461 516 549 525 511 l 525 0 l 683 0 l 683 421 b 719 563 683 482 695 529 b 836 613 744 596 782 613 b 908 599 867 613 891 608 b 948 559 926 589 939 576 b 964 498 957 542 962 522 b 967 419 966 474 967 448 l 967 0 l 1125 0 l 1125 496 b 1062 682 1125 583 1104 645 b 885 738 1020 719 961 738 b 753 706 832 738 788 727 b 660 618 718 684 687 655 b 580 708 644 659 617 689 b 458 738 542 728 502 738 b 382 728 430 738 404 734 b 323 704 360 722 340 714 b 276 667 306 694 290 681 b 238 618 263 652 250 636 l 233 618 l 233 718 z m 525 807 l 683 807 l 683 957 l 525 957 z "},"\u1e42":{"ha":1235,"x_min":0,"x_max":0,"o":"m 103 992 l 103 0 l 268 0 l 268 765 l 271 765 l 546 0 l 689 0 l 964 765 l 967 765 l 967 0 l 1132 0 l 1132 992 l 890 992 l 624 215 l 621 215 l 347 992 z m 538 -219 l 696 -219 l 696 -69 l 538 -69 z "},"\u1e43":{"ha":1208,"x_min":0,"x_max":0,"o":"m 83 718 l 83 0 l 242 0 l 242 426 b 255 506 242 456 246 482 b 290 564 264 529 275 548 b 340 600 304 580 321 592 b 399 613 359 608 378 613 b 498 574 447 613 480 600 b 525 461 516 549 525 511 l 525 0 l 683 0 l 683 421 b 719 563 683 482 695 529 b 836 613 744 596 782 613 b 908 599 867 613 891 608 b 948 559 926 589 939 576 b 964 498 957 542 962 522 b 967 419 966 474 967 448 l 967 0 l 1125 0 l 1125 496 b 1062 682 1125 583 1104 645 b 885 738 1020 719 961 738 b 753 706 832 738 788 727 b 660 618 718 684 687 655 b 580 708 644 659 617 689 b 458 738 542 728 502 738 b 382 728 430 738 404 734 b 323 704 360 722 340 714 b 276 667 306 694 290 681 b 238 618 263 652 250 636 l 233 618 l 233 718 z m 525 -219 l 683 -219 l 683 -69 l 525 -69 z "},"\u1e44":{"ha":1003,"x_min":0,"x_max":0,"o":"m 99 992 l 99 0 l 264 0 l 264 729 l 268 729 l 719 0 l 903 0 l 903 992 l 738 992 l 738 261 l 735 261 l 282 992 z m 451 1061 l 610 1061 l 610 1211 l 451 1211 z "},"\u1e45":{"ha":797,"x_min":0,"x_max":0,"o":"m 83 718 l 83 0 l 242 0 l 242 424 b 254 497 242 450 246 474 b 289 558 263 520 274 541 b 343 598 304 575 322 588 b 415 613 364 608 388 613 b 519 574 463 613 497 600 b 556 451 542 549 554 508 l 556 0 l 714 0 l 714 493 b 646 676 714 575 691 636 b 460 738 600 717 538 738 b 331 703 413 738 369 726 b 236 610 292 681 260 650 l 233 613 l 233 718 z m 319 807 l 478 807 l 478 957 l 319 957 z "},"\u1e46":{"ha":1003,"x_min":0,"x_max":0,"o":"m 99 992 l 99 0 l 264 0 l 264 729 l 268 729 l 719 0 l 903 0 l 903 992 l 738 992 l 738 261 l 735 261 l 282 992 z m 421 -219 l 579 -219 l 579 -69 l 421 -69 z "},"\u1e47":{"ha":797,"x_min":0,"x_max":0,"o":"m 83 718 l 83 0 l 242 0 l 242 424 b 254 497 242 450 246 474 b 289 558 263 520 274 541 b 343 598 304 575 322 588 b 415 613 364 608 388 613 b 519 574 463 613 497 600 b 556 451 542 549 554 508 l 556 0 l 714 0 l 714 493 b 646 676 714 575 691 636 b 460 738 600 717 538 738 b 331 703 413 738 369 726 b 236 610 292 681 260 650 l 233 613 l 233 718 z m 319 -219 l 478 -219 l 478 -69 l 319 -69 z "},"\u1e48":{"ha":1003,"x_min":0,"x_max":0,"o":"m 99 992 l 99 0 l 264 0 l 264 729 l 268 729 l 719 0 l 903 0 l 903 992 l 738 992 l 738 261 l 735 261 l 282 992 z m 300 -160 l 700 -160 l 700 -69 l 300 -69 z "},"\u1e49":{"ha":797,"x_min":0,"x_max":0,"o":"m 83 718 l 83 0 l 242 0 l 242 424 b 254 497 242 450 246 474 b 289 558 263 520 274 541 b 343 598 304 575 322 588 b 415 613 364 608 388 613 b 519 574 463 613 497 600 b 556 451 542 549 554 508 l 556 0 l 714 0 l 714 493 b 646 676 714 575 691 636 b 460 738 600 717 538 738 b 331 703 413 738 369 726 b 236 610 292 681 260 650 l 233 613 l 233 718 z m 199 -160 l 599 -160 l 599 -69 l 199 -69 z "},"\u1e4a":{"ha":1003,"x_min":0,"x_max":0,"o":"m 99 992 l 99 0 l 264 0 l 264 729 l 268 729 l 719 0 l 903 0 l 903 992 l 738 992 l 738 261 l 735 261 l 282 992 z m 401 -268 l 499 -143 l 597 -268 l 726 -268 l 576 -69 l 422 -69 l 274 -268 z "},"\u1e4b":{"ha":797,"x_min":0,"x_max":0,"o":"m 83 718 l 83 0 l 242 0 l 242 424 b 254 497 242 450 246 474 b 289 558 263 520 274 541 b 343 598 304 575 322 588 b 415 613 364 608 388 613 b 519 574 463 613 497 600 b 556 451 542 549 554 508 l 556 0 l 714 0 l 714 493 b 646 676 714 575 691 636 b 460 738 600 717 538 738 b 331 703 413 738 369 726 b 236 610 292 681 260 650 l 233 613 l 233 718 z m 300 -268 l 397 -143 l 496 -268 l 625 -268 l 475 -69 l 321 -69 l 172 -268 z "},"\u1e4c":{"ha":1056,"x_min":0,"x_max":0,"o":"m 528 874 b 665 842 581 874 626 863 b 758 756 703 820 734 792 b 812 635 782 721 800 680 b 829 496 823 589 829 543 b 812 357 829 449 823 402 b 758 235 800 312 782 271 b 665 150 734 200 703 171 b 528 118 626 129 581 118 b 391 150 475 118 429 129 b 297 235 353 171 321 200 b 244 357 273 271 255 312 b 226 496 232 402 226 449 b 244 635 226 543 232 589 b 297 756 255 680 273 721 b 391 842 321 792 353 820 b 528 874 429 863 475 874 z m 528 1015 b 328 974 454 1015 387 1001 b 179 861 270 946 220 908 b 85 696 138 814 107 759 b 53 496 64 633 53 566 b 85 294 53 425 64 357 b 179 129 107 231 138 176 b 328 17 220 82 270 45 b 528 -24 387 -10 454 -24 b 727 17 602 -24 668 -10 b 876 129 786 45 836 82 b 970 294 917 176 948 231 b 1003 496 992 357 1003 425 b 970 696 1003 566 992 633 b 876 861 948 759 917 814 b 727 974 836 908 786 946 b 528 1015 668 1001 602 1015 z m 774 1250 l 696 1250 b 673 1206 691 1231 684 1217 b 626 1189 662 1194 647 1189 b 588 1195 613 1189 601 1191 b 540 1214 576 1199 560 1206 b 476 1237 512 1226 490 1234 b 428 1242 461 1240 445 1242 b 371 1227 406 1242 388 1237 b 328 1190 354 1217 340 1205 b 299 1139 316 1174 306 1157 b 283 1085 291 1120 286 1102 l 363 1085 b 383 1127 366 1103 373 1117 b 422 1142 392 1137 406 1142 b 465 1136 438 1142 452 1140 b 517 1117 478 1132 495 1126 b 569 1098 534 1109 552 1103 b 619 1090 587 1093 604 1090 b 683 1103 644 1090 666 1094 b 728 1138 701 1111 716 1123 b 758 1188 741 1151 751 1168 b 774 1250 765 1207 770 1228 z m 560 1522 l 435 1324 l 550 1324 l 747 1522 z "},"\u1e4d":{"ha":824,"x_min":0,"x_max":0,"o":"m 413 -19 b 566 9 470 -19 521 -10 b 680 88 611 28 649 54 b 751 207 711 121 734 161 b 775 360 767 253 775 304 b 751 511 775 414 767 465 b 680 631 734 557 711 597 b 566 709 649 664 611 690 b 413 738 521 728 470 738 b 259 709 355 738 304 728 b 145 631 214 690 176 664 b 74 511 114 597 91 557 b 50 360 58 465 50 414 b 74 207 50 304 58 253 b 145 88 91 161 114 121 b 259 9 176 54 214 28 b 413 -19 304 -10 355 -19 z m 413 106 b 321 128 377 106 347 113 b 257 186 295 143 274 162 b 220 267 240 210 228 237 b 208 360 212 297 208 328 b 220 451 208 390 212 421 b 257 533 228 482 240 509 b 321 590 274 556 295 575 b 413 613 347 605 377 613 b 504 590 448 613 478 605 b 568 533 530 575 551 556 b 605 451 585 509 597 482 b 617 360 613 421 617 390 b 605 267 617 328 613 297 b 568 186 597 237 585 210 b 504 128 551 162 530 143 b 413 106 478 113 448 106 z m 658 972 l 581 972 b 558 928 576 954 568 939 b 511 911 547 917 531 911 b 473 917 498 911 485 913 b 425 936 460 922 444 928 b 360 959 396 948 375 956 b 313 964 346 962 330 964 b 256 949 291 964 272 959 b 213 912 239 940 225 927 b 183 861 200 897 191 880 b 168 807 176 843 171 825 l 247 807 b 267 849 251 825 258 840 b 307 864 277 859 290 864 b 350 858 323 864 337 862 b 401 839 363 855 380 848 b 454 820 419 831 437 825 b 504 813 472 815 488 813 b 568 825 529 813 550 817 b 613 860 586 833 600 845 b 642 910 625 874 635 890 b 658 972 649 929 655 950 z m 457 1244 l 332 1046 l 447 1046 l 644 1244 z "},"\u1e4e":{"ha":1056,"x_min":0,"x_max":0,"o":"m 528 874 b 665 842 581 874 626 863 b 758 756 703 820 734 792 b 812 635 782 721 800 680 b 829 496 823 589 829 543 b 812 357 829 449 823 402 b 758 235 800 312 782 271 b 665 150 734 200 703 171 b 528 118 626 129 581 118 b 391 150 475 118 429 129 b 297 235 353 171 321 200 b 244 357 273 271 255 312 b 226 496 232 402 226 449 b 244 635 226 543 232 589 b 297 756 255 680 273 721 b 391 842 321 792 353 820 b 528 874 429 863 475 874 z m 528 1015 b 328 974 454 1015 387 1001 b 179 861 270 946 220 908 b 85 696 138 814 107 759 b 53 496 64 633 53 566 b 85 294 53 425 64 357 b 179 129 107 231 138 176 b 328 17 220 82 270 45 b 528 -24 387 -10 454 -24 b 727 17 602 -24 668 -10 b 876 129 786 45 836 82 b 970 294 917 176 948 231 b 1003 496 992 357 1003 425 b 970 696 1003 566 992 633 b 876 861 948 759 917 814 b 727 974 836 908 786 946 b 528 1015 668 1001 602 1015 z m 774 1250 l 696 1250 b 673 1206 691 1231 684 1217 b 626 1189 662 1194 647 1189 b 588 1195 613 1189 601 1191 b 540 1214 576 1199 560 1206 b 476 1237 512 1226 490 1234 b 428 1242 461 1240 445 1242 b 371 1227 406 1242 388 1237 b 328 1190 354 1217 340 1205 b 299 1139 316 1174 306 1157 b 283 1085 291 1120 286 1102 l 363 1085 b 383 1127 366 1103 373 1117 b 422 1142 392 1137 406 1142 b 465 1136 438 1142 452 1140 b 517 1117 478 1132 495 1126 b 569 1098 534 1109 552 1103 b 619 1090 587 1093 604 1090 b 683 1103 644 1090 666 1094 b 728 1138 701 1111 716 1123 b 758 1188 741 1151 751 1168 b 774 1250 765 1207 770 1228 z m 329 1319 l 488 1319 l 488 1469 l 329 1469 z m 726 1469 l 568 1469 l 568 1319 l 726 1319 z "},"\u1e4f":{"ha":824,"x_min":0,"x_max":0,"o":"m 413 -19 b 566 9 470 -19 521 -10 b 680 88 611 28 649 54 b 751 207 711 121 734 161 b 775 360 767 253 775 304 b 751 511 775 414 767 465 b 680 631 734 557 711 597 b 566 709 649 664 611 690 b 413 738 521 728 470 738 b 259 709 355 738 304 728 b 145 631 214 690 176 664 b 74 511 114 597 91 557 b 50 360 58 465 50 414 b 74 207 50 304 58 253 b 145 88 91 161 114 121 b 259 9 176 54 214 28 b 413 -19 304 -10 355 -19 z m 413 106 b 321 128 377 106 347 113 b 257 186 295 143 274 162 b 220 267 240 210 228 237 b 208 360 212 297 208 328 b 220 451 208 390 212 421 b 257 533 228 482 240 509 b 321 590 274 556 295 575 b 413 613 347 605 377 613 b 504 590 448 613 478 605 b 568 533 530 575 551 556 b 605 451 585 509 597 482 b 617 360 613 421 617 390 b 605 267 617 328 613 297 b 568 186 597 237 585 210 b 504 128 551 162 530 143 b 413 106 478 113 448 106 z m 658 972 l 581 972 b 558 928 576 954 568 939 b 511 911 547 917 531 911 b 473 917 498 911 485 913 b 425 936 460 922 444 928 b 360 959 396 948 375 956 b 313 964 346 962 330 964 b 256 949 291 964 272 959 b 213 912 239 940 225 927 b 183 861 200 897 191 880 b 168 807 176 843 171 825 l 247 807 b 267 849 251 825 258 840 b 307 864 277 859 290 864 b 350 858 323 864 337 862 b 401 839 363 855 380 848 b 454 820 419 831 437 825 b 504 813 472 815 488 813 b 568 825 529 813 550 817 b 613 860 586 833 600 845 b 642 910 625 874 635 890 b 658 972 649 929 655 950 z m 214 1042 l 372 1042 l 372 1192 l 214 1192 z m 611 1192 l 453 1192 l 453 1042 l 611 1042 z "},"\u1e50":{"ha":1056,"x_min":0,"x_max":0,"o":"m 528 874 b 665 842 581 874 626 863 b 758 756 703 820 734 792 b 812 635 782 721 800 680 b 829 496 823 589 829 543 b 812 357 829 449 823 402 b 758 235 800 312 782 271 b 665 150 734 200 703 171 b 528 118 626 129 581 118 b 391 150 475 118 429 129 b 297 235 353 171 321 200 b 244 357 273 271 255 312 b 226 496 232 402 226 449 b 244 635 226 543 232 589 b 297 756 255 680 273 721 b 391 842 321 792 353 820 b 528 874 429 863 475 874 z m 528 1015 b 328 974 454 1015 387 1001 b 179 861 270 946 220 908 b 85 696 138 814 107 759 b 53 496 64 633 53 566 b 85 294 53 425 64 357 b 179 129 107 231 138 176 b 328 17 220 82 270 45 b 528 -24 387 -10 454 -24 b 727 17 602 -24 668 -10 b 876 129 786 45 836 82 b 970 294 917 176 948 231 b 1003 496 992 357 1003 425 b 970 696 1003 566 992 633 b 876 861 948 759 917 814 b 727 974 836 908 786 946 b 528 1015 668 1001 602 1015 z m 328 1085 l 728 1085 l 728 1175 l 328 1175 z m 496 1431 l 310 1431 l 507 1232 l 622 1232 z "},"\u1e51":{"ha":824,"x_min":0,"x_max":0,"o":"m 413 -19 b 566 9 470 -19 521 -10 b 680 88 611 28 649 54 b 751 207 711 121 734 161 b 775 360 767 253 775 304 b 751 511 775 414 767 465 b 680 631 734 557 711 597 b 566 709 649 664 611 690 b 413 738 521 728 470 738 b 259 709 355 738 304 728 b 145 631 214 690 176 664 b 74 511 114 597 91 557 b 50 360 58 465 50 414 b 74 207 50 304 58 253 b 145 88 91 161 114 121 b 259 9 176 54 214 28 b 413 -19 304 -10 355 -19 z m 413 106 b 321 128 377 106 347 113 b 257 186 295 143 274 162 b 220 267 240 210 228 237 b 208 360 212 297 208 328 b 220 451 208 390 212 421 b 257 533 228 482 240 509 b 321 590 274 556 295 575 b 413 613 347 605 377 613 b 504 590 448 613 478 605 b 568 533 530 575 551 556 b 605 451 585 509 597 482 b 617 360 613 421 617 390 b 605 267 617 328 613 297 b 568 186 597 237 585 210 b 504 128 551 162 530 143 b 413 106 478 113 448 106 z m 213 807 l 613 807 l 613 897 l 213 897 z m 379 1176 l 193 1176 l 390 978 l 506 978 z "},"\u1e52":{"ha":1056,"x_min":0,"x_max":0,"o":"m 528 874 b 665 842 581 874 626 863 b 758 756 703 820 734 792 b 812 635 782 721 800 680 b 829 496 823 589 829 543 b 812 357 829 449 823 402 b 758 235 800 312 782 271 b 665 150 734 200 703 171 b 528 118 626 129 581 118 b 391 150 475 118 429 129 b 297 235 353 171 321 200 b 244 357 273 271 255 312 b 226 496 232 402 226 449 b 244 635 226 543 232 589 b 297 756 255 680 273 721 b 391 842 321 792 353 820 b 528 874 429 863 475 874 z m 528 1015 b 328 974 454 1015 387 1001 b 179 861 270 946 220 908 b 85 696 138 814 107 759 b 53 496 64 633 53 566 b 85 294 53 425 64 357 b 179 129 107 231 138 176 b 328 17 220 82 270 45 b 528 -24 387 -10 454 -24 b 727 17 602 -24 668 -10 b 876 129 786 45 836 82 b 970 294 917 176 948 231 b 1003 496 992 357 1003 425 b 970 696 1003 566 992 633 b 876 861 948 759 917 814 b 727 974 836 908 786 946 b 528 1015 668 1001 602 1015 z m 328 1085 l 728 1085 l 728 1175 l 328 1175 z m 589 1439 l 464 1240 l 579 1240 l 776 1439 z "},"\u1e53":{"ha":824,"x_min":0,"x_max":0,"o":"m 413 -19 b 566 9 470 -19 521 -10 b 680 88 611 28 649 54 b 751 207 711 121 734 161 b 775 360 767 253 775 304 b 751 511 775 414 767 465 b 680 631 734 557 711 597 b 566 709 649 664 611 690 b 413 738 521 728 470 738 b 259 709 355 738 304 728 b 145 631 214 690 176 664 b 74 511 114 597 91 557 b 50 360 58 465 50 414 b 74 207 50 304 58 253 b 145 88 91 161 114 121 b 259 9 176 54 214 28 b 413 -19 304 -10 355 -19 z m 413 106 b 321 128 377 106 347 113 b 257 186 295 143 274 162 b 220 267 240 210 228 237 b 208 360 212 297 208 328 b 220 451 208 390 212 421 b 257 533 228 482 240 509 b 321 590 274 556 295 575 b 413 613 347 605 377 613 b 504 590 448 613 478 605 b 568 533 530 575 551 556 b 605 451 585 509 597 482 b 617 360 613 421 617 390 b 605 267 617 328 613 297 b 568 186 597 237 585 210 b 504 128 551 162 530 143 b 413 106 478 113 448 106 z m 213 807 l 613 807 l 613 897 l 213 897 z m 450 1169 l 325 971 l 440 971 l 638 1169 z "},"\u1e54":{"ha":926,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 279 0 l 279 381 l 543 381 b 715 410 613 381 671 391 b 818 486 760 430 794 456 b 867 585 842 517 859 550 b 881 685 876 621 881 654 b 867 785 881 715 876 749 b 818 885 859 821 842 854 b 715 961 794 915 760 941 b 543 992 671 981 613 992 z m 279 522 l 279 850 l 536 850 b 601 843 559 850 581 848 b 656 817 622 838 640 830 b 693 767 671 805 684 788 b 707 686 702 745 707 719 b 691 608 707 655 702 628 b 649 558 680 587 666 570 b 593 531 632 545 613 536 b 533 522 573 525 553 522 z m 463 1260 l 338 1061 l 453 1061 l 650 1260 z "},"\u1e55":{"ha":849,"x_min":0,"x_max":0,"o":"m 88 718 l 88 -265 l 246 -265 l 246 93 l 249 93 b 294 42 261 74 276 57 b 353 7 312 28 331 16 b 419 -13 374 -2 396 -9 b 489 -19 443 -17 466 -19 b 626 12 542 -19 588 -9 b 723 95 665 33 697 60 b 780 215 748 130 767 170 b 799 356 792 261 799 307 b 778 504 799 408 792 458 b 715 626 764 550 743 591 b 610 708 688 660 653 688 b 463 738 568 728 519 738 b 333 710 416 738 373 728 b 240 621 294 692 263 663 l 238 621 l 238 718 z m 640 358 b 630 266 640 327 637 296 b 595 185 623 236 611 209 b 533 128 579 162 558 143 b 442 106 508 113 478 106 b 356 125 409 106 381 112 b 293 178 332 138 311 156 b 253 258 275 200 262 227 b 240 358 245 289 240 322 b 291 543 240 435 257 497 b 442 613 325 589 375 613 b 528 591 474 613 503 605 b 590 534 553 577 574 558 b 628 453 607 510 619 483 b 640 358 636 422 640 391 z m 492 1010 l 367 811 l 482 811 l 679 1010 z "},"\u1e56":{"ha":926,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 279 0 l 279 381 l 543 381 b 715 410 613 381 671 391 b 818 486 760 430 794 456 b 867 585 842 517 859 550 b 881 685 876 621 881 654 b 867 785 881 715 876 749 b 818 885 859 821 842 854 b 715 961 794 915 760 941 b 543 992 671 981 613 992 z m 279 522 l 279 850 l 536 850 b 601 843 559 850 581 848 b 656 817 622 838 640 830 b 693 767 671 805 684 788 b 707 686 702 745 707 719 b 691 608 707 655 702 628 b 649 558 680 587 666 570 b 593 531 632 545 613 536 b 533 522 573 525 553 522 z m 414 1061 l 572 1061 l 572 1211 l 414 1211 z "},"\u1e57":{"ha":849,"x_min":0,"x_max":0,"o":"m 88 718 l 88 -265 l 246 -265 l 246 93 l 249 93 b 294 42 261 74 276 57 b 353 7 312 28 331 16 b 419 -13 374 -2 396 -9 b 489 -19 443 -17 466 -19 b 626 12 542 -19 588 -9 b 723 95 665 33 697 60 b 780 215 748 130 767 170 b 799 356 792 261 799 307 b 778 504 799 408 792 458 b 715 626 764 550 743 591 b 610 708 688 660 653 688 b 463 738 568 728 519 738 b 333 710 416 738 373 728 b 240 621 294 692 263 663 l 238 621 l 238 718 z m 640 358 b 630 266 640 327 637 296 b 595 185 623 236 611 209 b 533 128 579 162 558 143 b 442 106 508 113 478 106 b 356 125 409 106 381 112 b 293 178 332 138 311 156 b 253 258 275 200 262 227 b 240 358 245 289 240 322 b 291 543 240 435 257 497 b 442 613 325 589 375 613 b 528 591 474 613 503 605 b 590 534 553 577 574 558 b 628 453 607 510 619 483 b 640 358 636 422 640 391 z m 364 807 l 522 807 l 522 957 l 364 957 z "},"\u1e58":{"ha":978,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 279 0 l 279 408 l 535 408 b 633 393 575 408 607 403 b 693 345 658 383 678 367 b 724 263 708 323 718 296 b 732 146 729 230 732 191 b 735 71 732 122 733 97 b 758 0 738 45 745 21 l 944 0 b 903 102 926 20 912 54 b 890 261 895 150 890 203 b 876 358 890 300 885 332 b 839 422 866 384 854 405 b 791 457 824 438 808 450 b 743 471 774 464 758 469 l 743 474 b 783 490 751 476 765 482 b 838 531 801 499 819 512 b 886 606 856 550 872 575 b 907 724 900 637 907 676 b 825 921 907 808 880 874 b 579 992 770 968 688 992 z m 279 540 l 279 850 l 561 850 b 626 844 583 850 605 848 b 681 822 647 841 665 833 b 719 776 697 811 710 796 b 733 699 729 756 733 730 b 690 580 733 646 719 606 b 564 540 662 553 619 540 z m 446 1061 l 604 1061 l 604 1211 l 446 1211 z "},"\u1e59":{"ha":489,"x_min":0,"x_max":0,"o":"m 83 718 l 83 0 l 242 0 l 242 342 b 257 447 242 381 247 417 b 299 524 267 478 281 503 b 360 572 316 545 337 561 b 436 588 384 582 409 588 b 470 585 447 588 459 587 b 504 581 482 584 493 582 l 504 733 b 483 736 497 734 490 735 b 444 738 476 737 463 738 b 374 724 420 738 397 733 b 310 687 350 714 329 702 b 262 636 291 672 275 655 b 235 579 248 618 239 599 l 232 579 l 232 718 z m 214 807 l 372 807 l 372 957 l 214 957 z "},"\u1e5a":{"ha":978,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 279 0 l 279 408 l 535 408 b 633 393 575 408 607 403 b 693 345 658 383 678 367 b 724 263 708 323 718 296 b 732 146 729 230 732 191 b 735 71 732 122 733 97 b 758 0 738 45 745 21 l 944 0 b 903 102 926 20 912 54 b 890 261 895 150 890 203 b 876 358 890 300 885 332 b 839 422 866 384 854 405 b 791 457 824 438 808 450 b 743 471 774 464 758 469 l 743 474 b 783 490 751 476 765 482 b 838 531 801 499 819 512 b 886 606 856 550 872 575 b 907 724 900 637 907 676 b 825 921 907 808 880 874 b 579 992 770 968 688 992 z m 279 540 l 279 850 l 561 850 b 626 844 583 850 605 848 b 681 822 647 841 665 833 b 719 776 697 811 710 796 b 733 699 729 756 733 730 b 690 580 733 646 719 606 b 564 540 662 553 619 540 z m 446 -219 l 604 -219 l 604 -69 l 446 -69 z "},"\u1e5b":{"ha":489,"x_min":0,"x_max":0,"o":"m 83 718 l 83 0 l 242 0 l 242 342 b 257 447 242 381 247 417 b 299 524 267 478 281 503 b 360 572 316 545 337 561 b 436 588 384 582 409 588 b 470 585 447 588 459 587 b 504 581 482 584 493 582 l 504 733 b 483 736 497 734 490 735 b 444 738 476 737 463 738 b 374 724 420 738 397 733 b 310 687 350 714 329 702 b 262 636 291 672 275 655 b 235 579 248 618 239 599 l 232 579 l 232 718 z m 214 -219 l 372 -219 l 372 -69 l 214 -69 z "},"\u1e5c":{"ha":978,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 279 0 l 279 408 l 535 408 b 633 393 575 408 607 403 b 693 345 658 383 678 367 b 724 263 708 323 718 296 b 732 146 729 230 732 191 b 735 71 732 122 733 97 b 758 0 738 45 745 21 l 944 0 b 903 102 926 20 912 54 b 890 261 895 150 890 203 b 876 358 890 300 885 332 b 839 422 866 384 854 405 b 791 457 824 438 808 450 b 743 471 774 464 758 469 l 743 474 b 783 490 751 476 765 482 b 838 531 801 499 819 512 b 886 606 856 550 872 575 b 907 724 900 637 907 676 b 825 921 907 808 880 874 b 579 992 770 968 688 992 z m 279 540 l 279 850 l 561 850 b 626 844 583 850 605 848 b 681 822 647 841 665 833 b 719 776 697 811 710 796 b 733 699 729 756 733 730 b 690 580 733 646 719 606 b 564 540 662 553 619 540 z m 325 1061 l 725 1061 l 725 1151 l 325 1151 z m 446 -219 l 604 -219 l 604 -69 l 446 -69 z "},"\u1e5d":{"ha":489,"x_min":0,"x_max":0,"o":"m 83 718 l 83 0 l 242 0 l 242 342 b 257 447 242 381 247 417 b 299 524 267 478 281 503 b 360 572 316 545 337 561 b 436 588 384 582 409 588 b 470 585 447 588 459 587 b 504 581 482 584 493 582 l 504 733 b 483 736 497 734 490 735 b 444 738 476 737 463 738 b 374 724 420 738 397 733 b 310 687 350 714 329 702 b 262 636 291 672 275 655 b 235 579 248 618 239 599 l 232 579 l 232 718 z m 93 807 l 493 807 l 493 897 l 93 897 z m 214 -219 l 372 -219 l 372 -69 l 214 -69 z "},"\u1e5e":{"ha":978,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 279 0 l 279 408 l 535 408 b 633 393 575 408 607 403 b 693 345 658 383 678 367 b 724 263 708 323 718 296 b 732 146 729 230 732 191 b 735 71 732 122 733 97 b 758 0 738 45 745 21 l 944 0 b 903 102 926 20 912 54 b 890 261 895 150 890 203 b 876 358 890 300 885 332 b 839 422 866 384 854 405 b 791 457 824 438 808 450 b 743 471 774 464 758 469 l 743 474 b 783 490 751 476 765 482 b 838 531 801 499 819 512 b 886 606 856 550 872 575 b 907 724 900 637 907 676 b 825 921 907 808 880 874 b 579 992 770 968 688 992 z m 279 540 l 279 850 l 561 850 b 626 844 583 850 605 848 b 681 822 647 841 665 833 b 719 776 697 811 710 796 b 733 699 729 756 733 730 b 690 580 733 646 719 606 b 564 540 662 553 619 540 z m 325 -160 l 725 -160 l 725 -69 l 325 -69 z "},"\u1e5f":{"ha":489,"x_min":0,"x_max":0,"o":"m 83 718 l 83 0 l 242 0 l 242 342 b 257 447 242 381 247 417 b 299 524 267 478 281 503 b 360 572 316 545 337 561 b 436 588 384 582 409 588 b 470 585 447 588 459 587 b 504 581 482 584 493 582 l 504 733 b 483 736 497 734 490 735 b 444 738 476 737 463 738 b 374 724 420 738 397 733 b 310 687 350 714 329 702 b 262 636 291 672 275 655 b 235 579 248 618 239 599 l 232 579 l 232 718 z m 93 -160 l 493 -160 l 493 -69 l 93 -69 z "},"\u1e60":{"ha":900,"x_min":0,"x_max":0,"o":"m 219 331 l 46 331 b 81 172 47 269 58 216 b 169 61 103 127 132 90 b 300 -3 206 32 250 11 b 460 -24 350 -17 403 -24 b 604 -6 509 -24 557 -18 b 731 49 651 5 694 24 b 820 145 768 74 797 106 b 854 288 843 184 854 232 b 842 365 854 313 850 339 b 806 438 834 391 822 416 b 746 499 790 461 770 481 b 661 540 722 516 694 530 b 597 558 648 544 627 550 b 504 582 566 566 536 574 b 419 605 473 590 444 598 b 375 617 393 612 379 616 b 290 662 340 627 311 642 b 257 744 268 682 257 709 b 274 807 257 769 263 790 b 318 847 286 824 300 837 b 376 867 336 856 355 863 b 439 874 398 872 419 874 b 588 834 499 874 549 860 b 653 699 626 808 648 763 l 826 699 b 796 835 826 750 816 796 b 713 935 775 875 748 908 b 592 995 678 962 638 982 b 446 1015 547 1009 498 1015 b 314 998 401 1015 357 1009 b 197 944 270 986 231 969 b 115 853 163 920 135 890 b 83 724 94 817 83 774 b 94 647 83 698 87 672 b 129 576 101 622 113 599 b 197 516 146 554 168 534 b 303 472 225 498 260 483 b 476 427 371 454 429 439 b 599 390 522 416 563 403 b 655 352 619 383 638 370 b 681 268 672 334 681 306 b 669 213 681 250 677 231 b 633 165 662 195 650 179 b 568 131 617 151 595 140 b 471 118 541 122 509 118 b 373 130 436 118 403 122 b 293 167 343 138 316 150 b 239 233 270 184 252 206 b 219 331 226 260 219 293 z m 371 1085 l 529 1085 l 529 1235 l 371 1235 z "},"\u1e61":{"ha":721,"x_min":0,"x_max":0,"o":"m 203 231 l 44 231 b 70 120 45 188 54 151 b 137 42 86 89 109 63 b 237 -4 165 22 198 6 b 363 -19 275 -14 317 -19 b 475 -7 400 -19 437 -15 b 578 33 513 1 547 15 b 654 106 609 52 635 76 b 683 214 674 135 683 171 b 663 303 683 249 677 279 b 610 363 650 327 632 347 b 536 400 589 378 564 391 b 451 424 508 409 480 417 b 365 442 422 430 393 436 b 291 462 338 447 313 454 b 238 492 269 470 252 480 b 218 539 225 504 218 519 b 232 577 218 555 223 567 b 266 599 241 587 253 594 b 309 610 279 604 294 608 b 349 613 324 612 338 613 b 442 593 384 613 415 606 b 494 517 470 580 487 555 l 660 517 b 626 619 655 556 644 591 b 558 688 608 647 585 670 b 466 726 530 705 500 718 b 360 738 432 734 397 738 b 258 728 327 738 293 734 b 160 694 222 721 190 710 b 88 630 131 678 107 656 b 60 532 69 603 60 571 b 79 441 60 496 66 466 b 131 381 92 416 109 396 b 205 343 153 365 178 352 b 290 319 232 334 261 326 b 375 301 319 313 347 307 b 449 281 403 296 428 289 b 503 250 471 273 489 263 b 525 200 517 237 524 220 b 510 151 526 180 521 163 b 469 122 500 138 486 129 b 416 109 453 116 435 111 b 365 106 397 107 380 106 b 256 133 323 106 286 115 b 203 231 225 152 207 184 z m 285 807 l 443 807 l 443 957 l 285 957 z "},"\u1e62":{"ha":900,"x_min":0,"x_max":0,"o":"m 219 331 l 46 331 b 81 172 47 269 58 216 b 169 61 103 127 132 90 b 300 -3 206 32 250 11 b 460 -24 350 -17 403 -24 b 604 -6 509 -24 557 -18 b 731 49 651 5 694 24 b 820 145 768 74 797 106 b 854 288 843 184 854 232 b 842 365 854 313 850 339 b 806 438 834 391 822 416 b 746 499 790 461 770 481 b 661 540 722 516 694 530 b 597 558 648 544 627 550 b 504 582 566 566 536 574 b 419 605 473 590 444 598 b 375 617 393 612 379 616 b 290 662 340 627 311 642 b 257 744 268 682 257 709 b 274 807 257 769 263 790 b 318 847 286 824 300 837 b 376 867 336 856 355 863 b 439 874 398 872 419 874 b 588 834 499 874 549 860 b 653 699 626 808 648 763 l 826 699 b 796 835 826 750 816 796 b 713 935 775 875 748 908 b 592 995 678 962 638 982 b 446 1015 547 1009 498 1015 b 314 998 401 1015 357 1009 b 197 944 270 986 231 969 b 115 853 163 920 135 890 b 83 724 94 817 83 774 b 94 647 83 698 87 672 b 129 576 101 622 113 599 b 197 516 146 554 168 534 b 303 472 225 498 260 483 b 476 427 371 454 429 439 b 599 390 522 416 563 403 b 655 352 619 383 638 370 b 681 268 672 334 681 306 b 669 213 681 250 677 231 b 633 165 662 195 650 179 b 568 131 617 151 595 140 b 471 118 541 122 509 118 b 373 130 436 118 403 122 b 293 167 343 138 316 150 b 239 233 270 184 252 206 b 219 331 226 260 219 293 z m 371 -243 l 529 -243 l 529 -93 l 371 -93 z "},"\u1e63":{"ha":721,"x_min":0,"x_max":0,"o":"m 203 231 l 44 231 b 70 120 45 188 54 151 b 137 42 86 89 109 63 b 237 -4 165 22 198 6 b 363 -19 275 -14 317 -19 b 475 -7 400 -19 437 -15 b 578 33 513 1 547 15 b 654 106 609 52 635 76 b 683 214 674 135 683 171 b 663 303 683 249 677 279 b 610 363 650 327 632 347 b 536 400 589 378 564 391 b 451 424 508 409 480 417 b 365 442 422 430 393 436 b 291 462 338 447 313 454 b 238 492 269 470 252 480 b 218 539 225 504 218 519 b 232 577 218 555 223 567 b 266 599 241 587 253 594 b 309 610 279 604 294 608 b 349 613 324 612 338 613 b 442 593 384 613 415 606 b 494 517 470 580 487 555 l 660 517 b 626 619 655 556 644 591 b 558 688 608 647 585 670 b 466 726 530 705 500 718 b 360 738 432 734 397 738 b 258 728 327 738 293 734 b 160 694 222 721 190 710 b 88 630 131 678 107 656 b 60 532 69 603 60 571 b 79 441 60 496 66 466 b 131 381 92 416 109 396 b 205 343 153 365 178 352 b 290 319 232 334 261 326 b 375 301 319 313 347 307 b 449 281 403 296 428 289 b 503 250 471 273 489 263 b 525 200 517 237 524 220 b 510 151 526 180 521 163 b 469 122 500 138 486 129 b 416 109 453 116 435 111 b 365 106 397 107 380 106 b 256 133 323 106 286 115 b 203 231 225 152 207 184 z m 285 -239 l 443 -239 l 443 -89 l 285 -89 z "},"\u1e64":{"ha":900,"x_min":0,"x_max":0,"o":"m 219 331 l 46 331 b 81 172 47 269 58 216 b 169 61 103 127 132 90 b 300 -3 206 32 250 11 b 460 -24 350 -17 403 -24 b 604 -6 509 -24 557 -18 b 731 49 651 5 694 24 b 820 145 768 74 797 106 b 854 288 843 184 854 232 b 842 365 854 313 850 339 b 806 438 834 391 822 416 b 746 499 790 461 770 481 b 661 540 722 516 694 530 b 597 558 648 544 627 550 b 504 582 566 566 536 574 b 419 605 473 590 444 598 b 375 617 393 612 379 616 b 290 662 340 627 311 642 b 257 744 268 682 257 709 b 274 807 257 769 263 790 b 318 847 286 824 300 837 b 376 867 336 856 355 863 b 439 874 398 872 419 874 b 588 834 499 874 549 860 b 653 699 626 808 648 763 l 826 699 b 796 835 826 750 816 796 b 713 935 775 875 748 908 b 592 995 678 962 638 982 b 446 1015 547 1009 498 1015 b 314 998 401 1015 357 1009 b 197 944 270 986 231 969 b 115 853 163 920 135 890 b 83 724 94 817 83 774 b 94 647 83 698 87 672 b 129 576 101 622 113 599 b 197 516 146 554 168 534 b 303 472 225 498 260 483 b 476 427 371 454 429 439 b 599 390 522 416 563 403 b 655 352 619 383 638 370 b 681 268 672 334 681 306 b 669 213 681 250 677 231 b 633 165 662 195 650 179 b 568 131 617 151 595 140 b 471 118 541 122 509 118 b 373 130 436 118 403 122 b 293 167 343 138 316 150 b 239 233 270 184 252 206 b 219 331 226 260 219 293 z m 419 1283 l 294 1085 l 410 1085 l 607 1283 z m 426 1353 l 585 1353 l 585 1503 l 426 1503 z "},"\u1e65":{"ha":721,"x_min":0,"x_max":0,"o":"m 203 231 l 44 231 b 70 120 45 188 54 151 b 137 42 86 89 109 63 b 237 -4 165 22 198 6 b 363 -19 275 -14 317 -19 b 475 -7 400 -19 437 -15 b 578 33 513 1 547 15 b 654 106 609 52 635 76 b 683 214 674 135 683 171 b 663 303 683 249 677 279 b 610 363 650 327 632 347 b 536 400 589 378 564 391 b 451 424 508 409 480 417 b 365 442 422 430 393 436 b 291 462 338 447 313 454 b 238 492 269 470 252 480 b 218 539 225 504 218 519 b 232 577 218 555 223 567 b 266 599 241 587 253 594 b 309 610 279 604 294 608 b 349 613 324 612 338 613 b 442 593 384 613 415 606 b 494 517 470 580 487 555 l 660 517 b 626 619 655 556 644 591 b 558 688 608 647 585 670 b 466 726 530 705 500 718 b 360 738 432 734 397 738 b 258 728 327 738 293 734 b 160 694 222 721 190 710 b 88 630 131 678 107 656 b 60 532 69 603 60 571 b 79 441 60 496 66 466 b 131 381 92 416 109 396 b 205 343 153 365 178 352 b 290 319 232 334 261 326 b 375 301 319 313 347 307 b 449 281 403 296 428 289 b 503 250 471 273 489 263 b 525 200 517 237 524 220 b 510 151 526 180 521 163 b 469 122 500 138 486 129 b 416 109 453 116 435 111 b 365 106 397 107 380 106 b 256 133 323 106 286 115 b 203 231 225 152 207 184 z m 333 1006 l 208 807 l 324 807 l 521 1006 z m 321 1075 l 479 1075 l 479 1225 l 321 1225 z "},"\u1e66":{"ha":900,"x_min":0,"x_max":0,"o":"m 219 331 l 46 331 b 81 172 47 269 58 216 b 169 61 103 127 132 90 b 300 -3 206 32 250 11 b 460 -24 350 -17 403 -24 b 604 -6 509 -24 557 -18 b 731 49 651 5 694 24 b 820 145 768 74 797 106 b 854 288 843 184 854 232 b 842 365 854 313 850 339 b 806 438 834 391 822 416 b 746 499 790 461 770 481 b 661 540 722 516 694 530 b 597 558 648 544 627 550 b 504 582 566 566 536 574 b 419 605 473 590 444 598 b 375 617 393 612 379 616 b 290 662 340 627 311 642 b 257 744 268 682 257 709 b 274 807 257 769 263 790 b 318 847 286 824 300 837 b 376 867 336 856 355 863 b 439 874 398 872 419 874 b 588 834 499 874 549 860 b 653 699 626 808 648 763 l 826 699 b 796 835 826 750 816 796 b 713 935 775 875 748 908 b 592 995 678 962 638 982 b 446 1015 547 1009 498 1015 b 314 998 401 1015 357 1009 b 197 944 270 986 231 969 b 115 853 163 920 135 890 b 83 724 94 817 83 774 b 94 647 83 698 87 672 b 129 576 101 622 113 599 b 197 516 146 554 168 534 b 303 472 225 498 260 483 b 476 427 371 454 429 439 b 599 390 522 416 563 403 b 655 352 619 383 638 370 b 681 268 672 334 681 306 b 669 213 681 250 677 231 b 633 165 662 195 650 179 b 568 131 617 151 595 140 b 471 118 541 122 509 118 b 373 130 436 118 403 122 b 293 167 343 138 316 150 b 239 233 270 184 252 206 b 219 331 226 260 219 293 z m 526 1085 l 676 1283 l 547 1283 l 449 1160 l 351 1283 l 224 1283 l 372 1085 z m 371 1353 l 529 1353 l 529 1503 l 371 1503 z "},"\u1e67":{"ha":721,"x_min":0,"x_max":0,"o":"m 203 231 l 44 231 b 70 120 45 188 54 151 b 137 42 86 89 109 63 b 237 -4 165 22 198 6 b 363 -19 275 -14 317 -19 b 475 -7 400 -19 437 -15 b 578 33 513 1 547 15 b 654 106 609 52 635 76 b 683 214 674 135 683 171 b 663 303 683 249 677 279 b 610 363 650 327 632 347 b 536 400 589 378 564 391 b 451 424 508 409 480 417 b 365 442 422 430 393 436 b 291 462 338 447 313 454 b 238 492 269 470 252 480 b 218 539 225 504 218 519 b 232 577 218 555 223 567 b 266 599 241 587 253 594 b 309 610 279 604 294 608 b 349 613 324 612 338 613 b 442 593 384 613 415 606 b 494 517 470 580 487 555 l 660 517 b 626 619 655 556 644 591 b 558 688 608 647 585 670 b 466 726 530 705 500 718 b 360 738 432 734 397 738 b 258 728 327 738 293 734 b 160 694 222 721 190 710 b 88 630 131 678 107 656 b 60 532 69 603 60 571 b 79 441 60 496 66 466 b 131 381 92 416 109 396 b 205 343 153 365 178 352 b 290 319 232 334 261 326 b 375 301 319 313 347 307 b 449 281 403 296 428 289 b 503 250 471 273 489 263 b 525 200 517 237 524 220 b 510 151 526 180 521 163 b 469 122 500 138 486 129 b 416 109 453 116 435 111 b 365 106 397 107 380 106 b 256 133 323 106 286 115 b 203 231 225 152 207 184 z m 440 807 l 590 1006 l 461 1006 l 363 882 l 265 1006 l 138 1006 l 286 807 z m 285 1075 l 443 1075 l 443 1225 l 285 1225 z "},"\u1e68":{"ha":900,"x_min":0,"x_max":0,"o":"m 219 331 l 46 331 b 81 172 47 269 58 216 b 169 61 103 127 132 90 b 300 -3 206 32 250 11 b 460 -24 350 -17 403 -24 b 604 -6 509 -24 557 -18 b 731 49 651 5 694 24 b 820 145 768 74 797 106 b 854 288 843 184 854 232 b 842 365 854 313 850 339 b 806 438 834 391 822 416 b 746 499 790 461 770 481 b 661 540 722 516 694 530 b 597 558 648 544 627 550 b 504 582 566 566 536 574 b 419 605 473 590 444 598 b 375 617 393 612 379 616 b 290 662 340 627 311 642 b 257 744 268 682 257 709 b 274 807 257 769 263 790 b 318 847 286 824 300 837 b 376 867 336 856 355 863 b 439 874 398 872 419 874 b 588 834 499 874 549 860 b 653 699 626 808 648 763 l 826 699 b 796 835 826 750 816 796 b 713 935 775 875 748 908 b 592 995 678 962 638 982 b 446 1015 547 1009 498 1015 b 314 998 401 1015 357 1009 b 197 944 270 986 231 969 b 115 853 163 920 135 890 b 83 724 94 817 83 774 b 94 647 83 698 87 672 b 129 576 101 622 113 599 b 197 516 146 554 168 534 b 303 472 225 498 260 483 b 476 427 371 454 429 439 b 599 390 522 416 563 403 b 655 352 619 383 638 370 b 681 268 672 334 681 306 b 669 213 681 250 677 231 b 633 165 662 195 650 179 b 568 131 617 151 595 140 b 471 118 541 122 509 118 b 373 130 436 118 403 122 b 293 167 343 138 316 150 b 239 233 270 184 252 206 b 219 331 226 260 219 293 z m 371 -243 l 529 -243 l 529 -93 l 371 -93 z m 371 1085 l 529 1085 l 529 1235 l 371 1235 z "},"\u1e69":{"ha":721,"x_min":0,"x_max":0,"o":"m 203 231 l 44 231 b 70 120 45 188 54 151 b 137 42 86 89 109 63 b 237 -4 165 22 198 6 b 363 -19 275 -14 317 -19 b 475 -7 400 -19 437 -15 b 578 33 513 1 547 15 b 654 106 609 52 635 76 b 683 214 674 135 683 171 b 663 303 683 249 677 279 b 610 363 650 327 632 347 b 536 400 589 378 564 391 b 451 424 508 409 480 417 b 365 442 422 430 393 436 b 291 462 338 447 313 454 b 238 492 269 470 252 480 b 218 539 225 504 218 519 b 232 577 218 555 223 567 b 266 599 241 587 253 594 b 309 610 279 604 294 608 b 349 613 324 612 338 613 b 442 593 384 613 415 606 b 494 517 470 580 487 555 l 660 517 b 626 619 655 556 644 591 b 558 688 608 647 585 670 b 466 726 530 705 500 718 b 360 738 432 734 397 738 b 258 728 327 738 293 734 b 160 694 222 721 190 710 b 88 630 131 678 107 656 b 60 532 69 603 60 571 b 79 441 60 496 66 466 b 131 381 92 416 109 396 b 205 343 153 365 178 352 b 290 319 232 334 261 326 b 375 301 319 313 347 307 b 449 281 403 296 428 289 b 503 250 471 273 489 263 b 525 200 517 237 524 220 b 510 151 526 180 521 163 b 469 122 500 138 486 129 b 416 109 453 116 435 111 b 365 106 397 107 380 106 b 256 133 323 106 286 115 b 203 231 225 152 207 184 z m 285 -239 l 443 -239 l 443 -89 l 285 -89 z m 285 807 l 443 807 l 443 957 l 285 957 z "},"\u1e6a":{"ha":824,"x_min":0,"x_max":0,"o":"m 11 992 l 11 842 l 325 842 l 325 0 l 499 0 l 499 842 l 814 842 l 814 992 z m 333 1061 l 492 1061 l 492 1211 l 333 1211 z "},"\u1e6b":{"ha":463,"x_min":0,"x_max":0,"o":"m 11 718 l 11 600 l 131 600 l 131 176 b 140 97 131 147 134 120 b 169 40 145 74 154 55 b 228 5 183 24 203 13 b 329 -7 254 -3 288 -7 b 381 -4 347 -7 364 -6 b 432 1 397 -2 414 0 l 432 124 b 399 119 421 121 410 119 b 365 118 388 118 376 118 b 324 124 348 118 334 120 b 301 143 313 128 306 135 b 291 174 296 151 292 162 b 289 217 290 186 289 200 l 289 600 l 432 600 l 432 718 l 289 718 l 289 933 l 131 933 l 131 718 z m 125 1003 l 283 1003 l 283 1153 l 125 1153 z "},"\u1e6c":{"ha":824,"x_min":0,"x_max":0,"o":"m 11 992 l 11 842 l 325 842 l 325 0 l 499 0 l 499 842 l 814 842 l 814 992 z m 333 -219 l 492 -219 l 492 -69 l 333 -69 z "},"\u1e6d":{"ha":463,"x_min":0,"x_max":0,"o":"m 11 718 l 11 600 l 131 600 l 131 176 b 140 97 131 147 134 120 b 169 40 145 74 154 55 b 228 5 183 24 203 13 b 329 -7 254 -3 288 -7 b 381 -4 347 -7 364 -6 b 432 1 397 -2 414 0 l 432 124 b 399 119 421 121 410 119 b 365 118 388 118 376 118 b 324 124 348 118 334 120 b 301 143 313 128 306 135 b 291 174 296 151 292 162 b 289 217 290 186 289 200 l 289 600 l 432 600 l 432 718 l 289 718 l 289 933 l 131 933 l 131 718 z m 142 -226 l 300 -226 l 300 -76 l 142 -76 z "},"\u1e6e":{"ha":824,"x_min":0,"x_max":0,"o":"m 11 992 l 11 842 l 325 842 l 325 0 l 499 0 l 499 842 l 814 842 l 814 992 z m 213 -160 l 613 -160 l 613 -69 l 213 -69 z "},"\u1e6f":{"ha":463,"x_min":0,"x_max":0,"o":"m 11 718 l 11 600 l 131 600 l 131 176 b 140 97 131 147 134 120 b 169 40 145 74 154 55 b 228 5 183 24 203 13 b 329 -7 254 -3 288 -7 b 381 -4 347 -7 364 -6 b 432 1 397 -2 414 0 l 432 124 b 399 119 421 121 410 119 b 365 118 388 118 376 118 b 324 124 348 118 334 120 b 301 143 313 128 306 135 b 291 174 296 151 292 162 b 289 217 290 186 289 200 l 289 600 l 432 600 l 432 718 l 289 718 l 289 933 l 131 933 l 131 718 z m 21 -167 l 421 -167 l 421 -76 l 21 -76 z "},"\u1e70":{"ha":824,"x_min":0,"x_max":0,"o":"m 11 992 l 11 842 l 325 842 l 325 0 l 499 0 l 499 842 l 814 842 l 814 992 z m 314 -268 l 411 -143 l 510 -268 l 639 -268 l 489 -69 l 335 -69 l 186 -268 z "},"\u1e71":{"ha":463,"x_min":0,"x_max":0,"o":"m 11 718 l 11 600 l 131 600 l 131 176 b 140 97 131 147 134 120 b 169 40 145 74 154 55 b 228 5 183 24 203 13 b 329 -7 254 -3 288 -7 b 381 -4 347 -7 364 -6 b 432 1 397 -2 414 0 l 432 124 b 399 119 421 121 410 119 b 365 118 388 118 376 118 b 324 124 348 118 334 120 b 301 143 313 128 306 135 b 291 174 296 151 292 162 b 289 217 290 186 289 200 l 289 600 l 432 600 l 432 718 l 289 718 l 289 933 l 131 933 l 131 718 z m 122 -275 l 219 -150 l 318 -275 l 447 -275 l 297 -76 l 143 -76 l -6 -275 z "},"\u1e72":{"ha":1003,"x_min":0,"x_max":0,"o":"m 94 992 l 94 357 b 124 190 94 293 104 238 b 206 72 143 143 171 103 b 335 0 242 40 285 16 b 501 -24 385 -16 440 -24 b 668 0 563 -24 618 -16 b 797 72 718 16 761 40 b 879 190 832 103 860 143 b 908 357 899 238 908 293 l 908 992 l 735 992 l 735 414 b 730 313 735 381 733 347 b 702 220 727 278 717 247 b 633 153 687 193 664 170 b 501 126 602 135 558 126 b 370 153 445 126 401 135 b 301 220 339 170 316 193 b 273 313 285 247 276 278 b 268 414 270 347 268 381 l 268 992 z m 303 -243 l 461 -243 l 461 -93 l 303 -93 z m 700 -93 l 542 -93 l 542 -243 l 700 -243 z "},"\u1e73":{"ha":797,"x_min":0,"x_max":0,"o":"m 714 0 l 714 718 l 556 718 l 556 301 b 547 224 556 274 553 248 b 517 162 541 200 531 179 b 463 121 503 145 485 131 b 379 106 440 111 413 106 b 278 144 336 106 302 119 b 242 278 254 170 242 215 l 242 718 l 83 718 l 83 263 b 147 51 83 168 104 97 b 351 -19 189 4 257 -19 b 469 13 391 -19 430 -9 b 556 100 507 35 536 64 l 558 100 l 558 0 z m 200 -239 l 358 -239 l 358 -89 l 200 -89 z m 597 -89 l 439 -89 l 439 -239 l 597 -239 z "},"\u1e74":{"ha":1003,"x_min":0,"x_max":0,"o":"m 94 992 l 94 357 b 124 190 94 293 104 238 b 206 72 143 143 171 103 b 335 0 242 40 285 16 b 501 -24 385 -16 440 -24 b 668 0 563 -24 618 -16 b 797 72 718 16 761 40 b 879 190 832 103 860 143 b 908 357 899 238 908 293 l 908 992 l 735 992 l 735 414 b 730 313 735 381 733 347 b 702 220 727 278 717 247 b 633 153 687 193 664 170 b 501 126 602 135 558 126 b 370 153 445 126 401 135 b 301 220 339 170 316 193 b 273 313 285 247 276 278 b 268 414 270 347 268 381 l 268 992 z m 747 -93 l 669 -93 b 647 -137 665 -112 657 -126 b 600 -154 636 -149 620 -154 b 562 -148 587 -154 574 -152 b 514 -129 549 -144 533 -137 b 449 -106 485 -117 464 -109 b 401 -101 435 -103 419 -101 b 344 -116 380 -101 361 -106 b 301 -153 328 -126 313 -138 b 272 -204 289 -169 280 -186 b 257 -258 265 -223 260 -241 l 336 -258 b 356 -216 340 -240 347 -226 b 396 -201 366 -206 379 -201 b 439 -207 412 -201 426 -203 b 490 -226 452 -211 469 -217 b 543 -245 508 -234 525 -240 b 593 -253 561 -250 577 -253 b 657 -240 618 -253 639 -249 b 701 -206 675 -232 689 -220 b 731 -156 714 -192 724 -175 b 747 -93 738 -136 744 -115 z "},"\u1e75":{"ha":797,"x_min":0,"x_max":0,"o":"m 714 0 l 714 718 l 556 718 l 556 301 b 547 224 556 274 553 248 b 517 162 541 200 531 179 b 463 121 503 145 485 131 b 379 106 440 111 413 106 b 278 144 336 106 302 119 b 242 278 254 170 242 215 l 242 718 l 83 718 l 83 263 b 147 51 83 168 104 97 b 351 -19 189 4 257 -19 b 469 13 391 -19 430 -9 b 556 100 507 35 536 64 l 558 100 l 558 0 z m 644 -89 l 567 -89 b 544 -133 562 -107 554 -122 b 497 -150 533 -144 518 -150 b 459 -144 484 -150 472 -148 b 411 -125 447 -140 431 -133 b 347 -102 382 -113 361 -105 b 299 -97 332 -99 316 -97 b 242 -112 277 -97 258 -102 b 199 -149 225 -122 211 -134 b 169 -200 187 -165 177 -181 b 154 -254 162 -219 157 -237 l 233 -254 b 253 -212 237 -236 244 -222 b 293 -197 263 -202 276 -197 b 336 -203 309 -197 323 -199 b 388 -222 349 -206 366 -213 b 440 -241 405 -230 423 -236 b 490 -249 458 -246 475 -249 b 554 -236 515 -249 537 -244 b 599 -201 572 -228 587 -216 b 628 -151 612 -187 622 -171 b 644 -89 635 -132 641 -111 z "},"\u1e76":{"ha":1003,"x_min":0,"x_max":0,"o":"m 94 992 l 94 357 b 124 190 94 293 104 238 b 206 72 143 143 171 103 b 335 0 242 40 285 16 b 501 -24 385 -16 440 -24 b 668 0 563 -24 618 -16 b 797 72 718 16 761 40 b 879 190 832 103 860 143 b 908 357 899 238 908 293 l 908 992 l 735 992 l 735 414 b 730 313 735 381 733 347 b 702 220 727 278 717 247 b 633 153 687 193 664 170 b 501 126 602 135 558 126 b 370 153 445 126 401 135 b 301 220 339 170 316 193 b 273 313 285 247 276 278 b 268 414 270 347 268 381 l 268 992 z m 403 -292 l 500 -167 l 599 -292 l 728 -292 l 578 -93 l 424 -93 l 275 -292 z "},"\u1e77":{"ha":797,"x_min":0,"x_max":0,"o":"m 714 0 l 714 718 l 556 718 l 556 301 b 547 224 556 274 553 248 b 517 162 541 200 531 179 b 463 121 503 145 485 131 b 379 106 440 111 413 106 b 278 144 336 106 302 119 b 242 278 254 170 242 215 l 242 718 l 83 718 l 83 263 b 147 51 83 168 104 97 b 351 -19 189 4 257 -19 b 469 13 391 -19 430 -9 b 556 100 507 35 536 64 l 558 100 l 558 0 z m 300 -287 l 397 -162 l 496 -287 l 625 -287 l 475 -89 l 321 -89 l 172 -287 z "},"\u1e78":{"ha":1003,"x_min":0,"x_max":0,"o":"m 94 992 l 94 357 b 124 190 94 293 104 238 b 206 72 143 143 171 103 b 335 0 242 40 285 16 b 501 -24 385 -16 440 -24 b 668 0 563 -24 618 -16 b 797 72 718 16 761 40 b 879 190 832 103 860 143 b 908 357 899 238 908 293 l 908 992 l 735 992 l 735 414 b 730 313 735 381 733 347 b 702 220 727 278 717 247 b 633 153 687 193 664 170 b 501 126 602 135 558 126 b 370 153 445 126 401 135 b 301 220 339 170 316 193 b 273 313 285 247 276 278 b 268 414 270 347 268 381 l 268 992 z m 747 1226 l 669 1226 b 647 1182 665 1208 657 1193 b 600 1165 636 1171 620 1165 b 562 1172 587 1165 574 1167 b 514 1190 549 1176 533 1182 b 449 1213 485 1202 464 1210 b 401 1218 435 1216 419 1218 b 344 1203 380 1218 361 1213 b 301 1166 328 1194 313 1181 b 272 1115 289 1151 280 1134 b 257 1061 265 1097 260 1079 l 336 1061 b 356 1103 340 1080 347 1094 b 396 1118 366 1113 379 1118 b 439 1113 412 1118 426 1116 b 490 1093 452 1109 469 1102 b 543 1074 508 1086 525 1079 b 593 1067 561 1069 577 1067 b 657 1079 618 1067 639 1071 b 701 1114 675 1088 689 1099 b 731 1164 714 1128 724 1144 b 747 1226 738 1183 744 1204 z m 553 1492 l 428 1293 l 543 1293 l 740 1492 z "},"\u1e79":{"ha":797,"x_min":0,"x_max":0,"o":"m 714 0 l 714 718 l 556 718 l 556 301 b 547 224 556 274 553 248 b 517 162 541 200 531 179 b 463 121 503 145 485 131 b 379 106 440 111 413 106 b 278 144 336 106 302 119 b 242 278 254 170 242 215 l 242 718 l 83 718 l 83 263 b 147 51 83 168 104 97 b 351 -19 189 4 257 -19 b 469 13 391 -19 430 -9 b 556 100 507 35 536 64 l 558 100 l 558 0 z m 644 953 l 567 953 b 544 908 562 934 554 919 b 497 892 533 897 518 892 b 459 898 484 892 472 894 b 411 917 447 902 431 908 b 347 940 382 929 361 936 b 299 944 332 943 316 944 b 242 930 277 944 258 940 b 199 892 225 920 211 908 b 169 842 187 877 177 860 b 154 788 162 823 157 805 l 233 788 b 253 830 237 806 244 820 b 293 844 263 840 276 844 b 336 839 309 844 323 843 b 388 819 349 835 366 829 b 440 801 405 812 423 806 b 490 793 458 796 475 793 b 554 806 515 793 537 797 b 599 840 572 814 587 825 b 628 890 612 854 622 871 b 644 953 635 910 641 931 z m 447 1221 l 322 1022 l 438 1022 l 635 1221 z "},"\u1e7a":{"ha":1003,"x_min":0,"x_max":0,"o":"m 94 992 l 94 357 b 124 190 94 293 104 238 b 206 72 143 143 171 103 b 335 0 242 40 285 16 b 501 -24 385 -16 440 -24 b 668 0 563 -24 618 -16 b 797 72 718 16 761 40 b 879 190 832 103 860 143 b 908 357 899 238 908 293 l 908 992 l 735 992 l 735 414 b 730 313 735 381 733 347 b 702 220 727 278 717 247 b 633 153 687 193 664 170 b 501 126 602 135 558 126 b 370 153 445 126 401 135 b 301 220 339 170 316 193 b 273 313 285 247 276 278 b 268 414 270 347 268 381 l 268 992 z m 301 1061 l 701 1061 l 701 1151 l 301 1151 z m 303 1221 l 461 1221 l 461 1371 l 303 1371 z m 700 1371 l 542 1371 l 542 1221 l 700 1221 z "},"\u1e7b":{"ha":797,"x_min":0,"x_max":0,"o":"m 714 0 l 714 718 l 556 718 l 556 301 b 547 224 556 274 553 248 b 517 162 541 200 531 179 b 463 121 503 145 485 131 b 379 106 440 111 413 106 b 278 144 336 106 302 119 b 242 278 254 170 242 215 l 242 718 l 83 718 l 83 263 b 147 51 83 168 104 97 b 351 -19 189 4 257 -19 b 469 13 391 -19 430 -9 b 556 100 507 35 536 64 l 558 100 l 558 0 z m 199 788 l 599 788 l 599 878 l 199 878 z m 200 947 l 358 947 l 358 1097 l 200 1097 z m 597 1097 l 439 1097 l 439 947 l 597 947 z "},"\u1e7c":{"ha":849,"x_min":0,"x_max":0,"o":"m -7 992 l 324 0 l 517 0 l 856 992 l 679 992 l 425 207 l 422 207 l 174 992 z m 669 1226 l 592 1226 b 569 1182 587 1208 579 1193 b 522 1165 558 1171 543 1165 b 484 1172 509 1165 497 1167 b 436 1190 472 1176 456 1182 b 372 1213 407 1202 386 1210 b 324 1218 357 1216 341 1218 b 267 1203 302 1218 283 1213 b 224 1166 250 1194 236 1181 b 194 1115 212 1151 202 1134 b 179 1061 187 1097 182 1079 l 258 1061 b 278 1103 262 1080 269 1094 b 318 1118 288 1113 301 1118 b 361 1113 334 1118 348 1116 b 413 1093 374 1109 391 1102 b 465 1074 430 1086 448 1079 b 515 1067 483 1069 500 1067 b 579 1079 540 1067 562 1071 b 624 1114 597 1088 612 1099 b 653 1164 637 1128 647 1144 b 669 1226 660 1183 666 1204 z "},"\u1e7d":{"ha":721,"x_min":0,"x_max":0,"o":"m 13 718 l 274 0 l 451 0 l 708 718 l 544 718 l 369 167 l 367 167 l 185 718 z m 606 953 l 528 953 b 505 908 523 934 516 919 b 458 892 494 897 479 892 b 420 898 445 892 433 894 b 372 917 408 902 392 908 b 308 940 344 929 322 936 b 260 944 293 943 277 944 b 203 930 238 944 219 940 b 160 892 186 920 172 908 b 131 842 148 877 138 860 b 115 788 123 823 118 805 l 194 788 b 215 830 198 806 205 820 b 254 844 224 840 238 844 b 297 839 270 844 284 843 b 349 819 310 835 327 829 b 401 801 366 812 384 806 b 451 793 419 796 436 793 b 515 806 476 793 498 797 b 560 840 533 814 548 825 b 590 890 573 854 583 871 b 606 953 597 910 602 931 z "},"\u1e7e":{"ha":849,"x_min":0,"x_max":0,"o":"m -7 992 l 324 0 l 517 0 l 856 992 l 679 992 l 425 207 l 422 207 l 174 992 z m 344 -219 l 503 -219 l 503 -69 l 344 -69 z "},"\u1e7f":{"ha":721,"x_min":0,"x_max":0,"o":"m 13 718 l 274 0 l 451 0 l 708 718 l 544 718 l 369 167 l 367 167 l 185 718 z m 281 -219 l 439 -219 l 439 -69 l 281 -69 z "},"\u1e80":{"ha":1311,"x_min":0,"x_max":0,"o":"m 8 992 l 269 0 l 449 0 l 651 758 l 654 758 l 853 0 l 1029 0 l 1303 992 l 1126 992 l 942 233 l 939 233 l 744 992 l 567 992 l 367 233 l 364 233 l 185 992 z m 599 1260 l 413 1260 l 610 1061 l 725 1061 z "},"\u1e81":{"ha":1081,"x_min":0,"x_max":0,"o":"m 18 718 l 240 0 l 407 0 l 539 533 l 542 533 l 675 0 l 838 0 l 1063 718 l 901 718 l 756 182 l 753 182 l 624 718 l 464 718 l 329 182 l 326 182 l 186 718 z m 472 990 l 286 990 l 483 792 l 599 792 z "},"\u1e82":{"ha":1311,"x_min":0,"x_max":0,"o":"m 8 992 l 269 0 l 449 0 l 651 758 l 654 758 l 853 0 l 1029 0 l 1303 992 l 1126 992 l 942 233 l 939 233 l 744 992 l 567 992 l 367 233 l 364 233 l 185 992 z m 704 1268 l 579 1069 l 694 1069 l 892 1268 z "},"\u1e83":{"ha":1081,"x_min":0,"x_max":0,"o":"m 18 718 l 240 0 l 407 0 l 539 533 l 542 533 l 675 0 l 838 0 l 1063 718 l 901 718 l 756 182 l 753 182 l 624 718 l 464 718 l 329 182 l 326 182 l 186 718 z m 593 997 l 468 799 l 583 799 l 781 997 z "},"\u1e84":{"ha":1311,"x_min":0,"x_max":0,"o":"m 8 992 l 269 0 l 449 0 l 651 758 l 654 758 l 853 0 l 1029 0 l 1303 992 l 1126 992 l 942 233 l 939 233 l 744 992 l 567 992 l 367 233 l 364 233 l 185 992 z m 457 1061 l 615 1061 l 615 1211 l 457 1211 z m 854 1211 l 696 1211 l 696 1061 l 854 1061 z "},"\u1e85":{"ha":1081,"x_min":0,"x_max":0,"o":"m 18 718 l 240 0 l 407 0 l 539 533 l 542 533 l 675 0 l 838 0 l 1063 718 l 901 718 l 756 182 l 753 182 l 624 718 l 464 718 l 329 182 l 326 182 l 186 718 z m 342 788 l 500 788 l 500 938 l 342 938 z m 739 938 l 581 938 l 581 788 l 739 788 z "},"\u1e86":{"ha":1311,"x_min":0,"x_max":0,"o":"m 8 992 l 269 0 l 449 0 l 651 758 l 654 758 l 853 0 l 1029 0 l 1303 992 l 1126 992 l 942 233 l 939 233 l 744 992 l 567 992 l 367 233 l 364 233 l 185 992 z m 576 1061 l 735 1061 l 735 1211 l 576 1211 z "},"\u1e87":{"ha":1081,"x_min":0,"x_max":0,"o":"m 18 718 l 240 0 l 407 0 l 539 533 l 542 533 l 675 0 l 838 0 l 1063 718 l 901 718 l 756 182 l 753 182 l 624 718 l 464 718 l 329 182 l 326 182 l 186 718 z m 461 788 l 619 788 l 619 938 l 461 938 z "},"\u1e88":{"ha":1311,"x_min":0,"x_max":0,"o":"m 8 992 l 269 0 l 449 0 l 651 758 l 654 758 l 853 0 l 1029 0 l 1303 992 l 1126 992 l 942 233 l 939 233 l 744 992 l 567 992 l 367 233 l 364 233 l 185 992 z m 576 -219 l 735 -219 l 735 -69 l 576 -69 z "},"\u1e89":{"ha":1081,"x_min":0,"x_max":0,"o":"m 18 718 l 240 0 l 407 0 l 539 533 l 542 533 l 675 0 l 838 0 l 1063 718 l 901 718 l 756 182 l 753 182 l 624 718 l 464 718 l 329 182 l 326 182 l 186 718 z m 461 -219 l 619 -219 l 619 -69 l 461 -69 z "},"\u1e8a":{"ha":900,"x_min":0,"x_max":0,"o":"m 19 992 l 347 514 l -4 0 l 194 0 l 446 379 l 693 0 l 904 0 l 553 514 l 881 992 l 686 992 l 451 642 l 226 992 z m 371 1061 l 529 1061 l 529 1211 l 371 1211 z "},"\u1e8b":{"ha":746,"x_min":0,"x_max":0,"o":"m 276 378 l 6 0 l 192 0 l 368 265 l 550 0 l 740 0 l 465 386 l 710 718 l 526 718 l 369 497 l 219 718 l 28 718 z m 293 788 l 451 788 l 451 938 l 293 938 z "},"\u1e8c":{"ha":900,"x_min":0,"x_max":0,"o":"m 19 992 l 347 514 l -4 0 l 194 0 l 446 379 l 693 0 l 904 0 l 553 514 l 881 992 l 686 992 l 451 642 l 226 992 z m 251 1061 l 410 1061 l 410 1211 l 251 1211 z m 649 1211 l 490 1211 l 490 1061 l 649 1061 z "},"\u1e8d":{"ha":746,"x_min":0,"x_max":0,"o":"m 276 378 l 6 0 l 192 0 l 368 265 l 550 0 l 740 0 l 465 386 l 710 718 l 526 718 l 369 497 l 219 718 l 28 718 z m 174 788 l 332 788 l 332 938 l 174 938 z m 571 938 l 413 938 l 413 788 l 571 788 z "},"\u1e8e":{"ha":900,"x_min":0,"x_max":0,"o":"m 364 389 l 364 0 l 538 0 l 538 389 l 908 992 l 714 992 l 456 547 l 193 992 l -8 992 z m 371 1061 l 529 1061 l 529 1211 l 371 1211 z "},"\u1e8f":{"ha":721,"x_min":0,"x_max":0,"o":"m 4 718 l 276 3 l 258 -53 b 243 -94 254 -69 249 -82 b 223 -126 238 -106 231 -117 b 193 -146 215 -134 205 -141 b 147 -153 181 -150 166 -153 b 110 -149 134 -153 122 -152 b 72 -143 98 -147 85 -145 l 72 -276 b 182 -285 108 -282 145 -285 b 285 -265 224 -285 258 -278 b 352 -210 312 -251 334 -233 b 398 -132 370 -188 385 -162 b 436 -39 410 -102 423 -71 l 715 718 l 550 718 l 368 182 l 365 182 l 178 718 z m 281 788 l 439 788 l 439 938 l 281 938 z "},"\u1e90":{"ha":875,"x_min":0,"x_max":0,"o":"m 76 992 l 76 842 l 610 842 l 32 142 l 32 0 l 844 0 l 844 150 l 253 150 l 831 860 l 831 992 z m 339 1061 l 436 1186 l 535 1061 l 664 1061 l 514 1260 l 360 1260 l 211 1061 z "},"\u1e91":{"ha":694,"x_min":0,"x_max":0,"o":"m 58 718 l 58 593 l 428 593 l 31 111 l 31 0 l 663 0 l 663 125 l 231 125 l 642 607 l 642 718 z m 247 788 l 344 913 l 443 788 l 572 788 l 422 986 l 268 986 l 119 788 z "},"\u1e92":{"ha":875,"x_min":0,"x_max":0,"o":"m 76 992 l 76 842 l 610 842 l 32 142 l 32 0 l 844 0 l 844 150 l 253 150 l 831 860 l 831 992 z m 358 -219 l 517 -219 l 517 -69 l 358 -69 z "},"\u1e93":{"ha":694,"x_min":0,"x_max":0,"o":"m 58 718 l 58 593 l 428 593 l 31 111 l 31 0 l 663 0 l 663 125 l 231 125 l 642 607 l 642 718 z m 267 -219 l 425 -219 l 425 -69 l 267 -69 z "},"\u1e94":{"ha":875,"x_min":0,"x_max":0,"o":"m 76 992 l 76 842 l 610 842 l 32 142 l 32 0 l 844 0 l 844 150 l 253 150 l 831 860 l 831 992 z m 238 -160 l 638 -160 l 638 -69 l 238 -69 z "},"\u1e95":{"ha":694,"x_min":0,"x_max":0,"o":"m 58 718 l 58 593 l 428 593 l 31 111 l 31 0 l 663 0 l 663 125 l 231 125 l 642 607 l 642 718 z m 146 -160 l 546 -160 l 546 -69 l 146 -69 z "},"\u1e96":{"ha":797,"x_min":0,"x_max":0,"o":"m 83 992 l 83 0 l 242 0 l 242 424 b 254 497 242 450 246 474 b 289 558 263 520 274 541 b 343 598 304 575 322 588 b 415 613 364 608 388 613 b 519 574 463 613 497 600 b 556 451 542 549 554 508 l 556 0 l 714 0 l 714 493 b 646 676 714 575 691 636 b 460 738 600 717 538 738 b 331 705 413 738 370 727 b 244 624 293 683 264 656 l 242 624 l 242 992 z m 199 -160 l 599 -160 l 599 -69 l 199 -69 z "},"\u1e97":{"ha":463,"x_min":0,"x_max":0,"o":"m 11 718 l 11 600 l 131 600 l 131 176 b 140 97 131 147 134 120 b 169 40 145 74 154 55 b 228 5 183 24 203 13 b 329 -7 254 -3 288 -7 b 381 -4 347 -7 364 -6 b 432 1 397 -2 414 0 l 432 124 b 399 119 421 121 410 119 b 365 118 388 118 376 118 b 324 124 348 118 334 120 b 301 143 313 128 306 135 b 291 174 296 151 292 162 b 289 217 290 186 289 200 l 289 600 l 432 600 l 432 718 l 289 718 l 289 933 l 131 933 l 131 718 z m 22 1003 l 181 1003 l 181 1153 l 22 1153 z m 419 1153 l 261 1153 l 261 1003 l 419 1003 z "},"\u1e98":{"ha":1081,"x_min":0,"x_max":0,"o":"m 18 718 l 240 0 l 407 0 l 539 533 l 542 533 l 675 0 l 838 0 l 1063 718 l 901 718 l 756 182 l 753 182 l 624 718 l 464 718 l 329 182 l 326 182 l 186 718 z m 457 931 b 481 992 457 956 465 976 b 540 1015 497 1007 517 1015 b 600 992 564 1015 584 1007 b 624 931 616 976 624 956 b 600 870 624 906 616 886 b 540 846 584 854 564 846 b 481 870 517 846 497 854 b 457 931 465 886 457 906 z m 540 788 b 595 798 560 788 578 791 b 642 827 612 805 628 815 b 674 872 656 840 666 855 b 685 931 681 890 685 909 b 674 989 685 952 681 971 b 642 1035 666 1006 656 1022 b 595 1064 628 1048 612 1057 b 540 1074 578 1070 560 1074 b 485 1064 521 1074 503 1070 b 440 1035 468 1057 453 1048 b 408 989 426 1022 416 1006 b 396 931 400 971 396 952 b 407 872 396 909 400 890 b 438 827 414 855 425 840 b 485 798 452 815 467 805 b 540 788 502 791 521 788 z "},"\u1e99":{"ha":721,"x_min":0,"x_max":0,"o":"m 4 718 l 276 3 l 258 -53 b 243 -94 254 -69 249 -82 b 223 -126 238 -106 231 -117 b 193 -146 215 -134 205 -141 b 147 -153 181 -150 166 -153 b 110 -149 134 -153 122 -152 b 72 -143 98 -147 85 -145 l 72 -276 b 182 -285 108 -282 145 -285 b 285 -265 224 -285 258 -278 b 352 -210 312 -251 334 -233 b 398 -132 370 -188 385 -162 b 436 -39 410 -102 423 -71 l 715 718 l 550 718 l 368 182 l 365 182 l 178 718 z m 276 931 b 301 992 276 956 284 976 b 360 1015 317 1007 337 1015 b 419 992 384 1015 404 1007 b 443 931 435 976 443 956 b 419 870 443 906 435 886 b 360 846 404 854 384 846 b 301 870 337 846 317 854 b 276 931 284 886 276 906 z m 360 788 b 415 798 379 788 397 791 b 461 827 432 805 447 815 b 493 872 475 840 486 855 b 504 931 500 890 504 909 b 493 989 504 952 500 971 b 461 1035 486 1006 475 1022 b 415 1064 447 1048 432 1057 b 360 1074 397 1070 379 1074 b 305 1064 340 1074 322 1070 b 259 1035 288 1057 272 1048 b 227 989 246 1022 235 1006 b 215 931 219 971 215 952 b 226 872 215 909 219 890 b 258 827 234 855 244 840 b 304 798 271 815 287 805 b 360 788 322 791 340 788 z "},"\u1ea0":{"ha":926,"x_min":0,"x_max":0,"o":"m 371 992 l -10 0 l 169 0 l 263 263 l 658 263 l 751 0 l 938 0 l 556 992 z m 310 394 l 460 821 l 464 821 l 613 394 z m 385 -219 l 543 -219 l 543 -69 l 385 -69 z "},"\u1ea1":{"ha":772,"x_min":0,"x_max":0,"o":"m 685 160 l 685 529 b 660 626 685 567 676 599 b 594 690 643 652 621 674 b 501 726 566 707 536 719 b 397 738 467 734 432 738 b 281 726 357 738 319 734 b 178 688 243 719 209 706 b 104 614 148 669 124 644 b 71 499 85 583 74 545 l 229 499 b 278 585 233 538 249 566 b 388 613 306 603 343 613 b 438 609 403 613 420 611 b 485 595 455 607 471 602 b 522 565 500 588 512 578 b 536 515 531 552 536 536 b 519 463 536 492 530 475 b 472 438 507 452 491 443 b 403 426 452 432 429 428 b 321 414 377 423 350 419 b 222 398 288 410 254 405 b 133 364 189 391 159 380 b 69 299 106 348 85 326 b 44 190 53 271 44 235 b 65 98 44 155 51 124 b 119 33 78 72 96 50 b 197 -6 141 16 168 3 b 290 -19 227 -15 258 -19 b 423 1 333 -19 377 -12 b 539 68 469 15 507 38 b 581 0 545 36 559 13 b 661 -19 602 -13 629 -19 b 685 -18 668 -19 675 -19 b 713 -14 694 -17 703 -16 b 740 -8 722 -12 731 -10 b 761 -1 748 -5 756 -3 l 761 108 b 739 106 753 106 745 106 l 722 106 b 692 118 707 106 697 110 b 685 160 687 126 685 140 z m 526 360 l 526 242 b 508 178 526 217 520 196 b 463 136 496 161 481 147 b 406 113 445 125 426 117 b 349 106 385 108 366 106 b 302 110 335 106 319 107 b 255 124 285 113 269 117 b 218 153 241 131 228 141 b 203 197 208 165 203 180 b 213 249 203 218 206 235 b 242 284 220 264 230 275 b 283 305 254 293 268 300 b 332 317 299 310 315 314 b 438 331 367 323 402 328 b 526 360 473 334 502 344 z m 324 -239 l 482 -239 l 482 -89 l 324 -89 z "},"\u1ea2":{"ha":926,"x_min":0,"x_max":0,"o":"m 371 992 l -10 0 l 169 0 l 263 263 l 658 263 l 751 0 l 938 0 l 556 992 z m 310 394 l 460 821 l 464 821 l 613 394 z m 397 1364 l 400 1296 b 449 1301 415 1300 431 1301 b 502 1288 474 1301 491 1297 b 518 1243 513 1279 518 1264 b 501 1207 518 1231 512 1219 b 431 1185 489 1195 466 1188 l 431 1125 l 507 1125 l 510 1156 b 586 1196 548 1164 573 1177 b 606 1253 599 1214 606 1233 b 591 1308 606 1275 601 1294 b 555 1344 581 1323 569 1335 b 508 1363 541 1353 525 1359 b 461 1368 491 1366 475 1368 b 397 1364 444 1368 422 1367 z "},"\u1ea3":{"ha":772,"x_min":0,"x_max":0,"o":"m 685 160 l 685 529 b 660 626 685 567 676 599 b 594 690 643 652 621 674 b 501 726 566 707 536 719 b 397 738 467 734 432 738 b 281 726 357 738 319 734 b 178 688 243 719 209 706 b 104 614 148 669 124 644 b 71 499 85 583 74 545 l 229 499 b 278 585 233 538 249 566 b 388 613 306 603 343 613 b 438 609 403 613 420 611 b 485 595 455 607 471 602 b 522 565 500 588 512 578 b 536 515 531 552 536 536 b 519 463 536 492 530 475 b 472 438 507 452 491 443 b 403 426 452 432 429 428 b 321 414 377 423 350 419 b 222 398 288 410 254 405 b 133 364 189 391 159 380 b 69 299 106 348 85 326 b 44 190 53 271 44 235 b 65 98 44 155 51 124 b 119 33 78 72 96 50 b 197 -6 141 16 168 3 b 290 -19 227 -15 258 -19 b 423 1 333 -19 377 -12 b 539 68 469 15 507 38 b 581 0 545 36 559 13 b 661 -19 602 -13 629 -19 b 685 -18 668 -19 675 -19 b 713 -14 694 -17 703 -16 b 740 -8 722 -12 731 -10 b 761 -1 748 -5 756 -3 l 761 108 b 739 106 753 106 745 106 l 722 106 b 692 118 707 106 697 110 b 685 160 687 126 685 140 z m 526 360 l 526 242 b 508 178 526 217 520 196 b 463 136 496 161 481 147 b 406 113 445 125 426 117 b 349 106 385 108 366 106 b 302 110 335 106 319 107 b 255 124 285 113 269 117 b 218 153 241 131 228 141 b 203 197 208 165 203 180 b 213 249 203 218 206 235 b 242 284 220 264 230 275 b 283 305 254 293 268 300 b 332 317 299 310 315 314 b 438 331 367 323 402 328 b 526 360 473 334 502 344 z m 313 1090 l 315 1022 b 364 1028 330 1026 346 1028 b 417 1015 389 1028 407 1023 b 433 969 428 1006 433 991 b 416 933 433 957 428 945 b 346 911 404 921 381 914 l 346 851 l 422 851 l 425 882 b 501 922 463 890 488 904 b 521 979 514 941 521 960 b 506 1035 521 1001 516 1020 b 470 1070 497 1050 484 1061 b 423 1089 456 1079 440 1085 b 376 1094 406 1093 390 1094 b 313 1090 359 1094 338 1093 z "},"\u1ea4":{"ha":926,"x_min":0,"x_max":0,"o":"m 371 992 l -10 0 l 169 0 l 263 263 l 658 263 l 751 0 l 938 0 l 556 992 z m 310 394 l 460 821 l 464 821 l 613 394 z m 365 1061 l 463 1186 l 561 1061 l 690 1061 l 540 1260 l 386 1260 l 238 1061 z m 747 1374 l 622 1175 l 738 1175 l 935 1374 z "},"\u1ea5":{"ha":772,"x_min":0,"x_max":0,"o":"m 685 160 l 685 529 b 660 626 685 567 676 599 b 594 690 643 652 621 674 b 501 726 566 707 536 719 b 397 738 467 734 432 738 b 281 726 357 738 319 734 b 178 688 243 719 209 706 b 104 614 148 669 124 644 b 71 499 85 583 74 545 l 229 499 b 278 585 233 538 249 566 b 388 613 306 603 343 613 b 438 609 403 613 420 611 b 485 595 455 607 471 602 b 522 565 500 588 512 578 b 536 515 531 552 536 536 b 519 463 536 492 530 475 b 472 438 507 452 491 443 b 403 426 452 432 429 428 b 321 414 377 423 350 419 b 222 398 288 410 254 405 b 133 364 189 391 159 380 b 69 299 106 348 85 326 b 44 190 53 271 44 235 b 65 98 44 155 51 124 b 119 33 78 72 96 50 b 197 -6 141 16 168 3 b 290 -19 227 -15 258 -19 b 423 1 333 -19 377 -12 b 539 68 469 15 507 38 b 581 0 545 36 559 13 b 661 -19 602 -13 629 -19 b 685 -18 668 -19 675 -19 b 713 -14 694 -17 703 -16 b 740 -8 722 -12 731 -10 b 761 -1 748 -5 756 -3 l 761 108 b 739 106 753 106 745 106 l 722 106 b 692 118 707 106 697 110 b 685 160 687 126 685 140 z m 526 360 l 526 242 b 508 178 526 217 520 196 b 463 136 496 161 481 147 b 406 113 445 125 426 117 b 349 106 385 108 366 106 b 302 110 335 106 319 107 b 255 124 285 113 269 117 b 218 153 241 131 228 141 b 203 197 208 165 203 180 b 213 249 203 218 206 235 b 242 284 220 264 230 275 b 283 305 254 293 268 300 b 332 317 299 310 315 314 b 438 331 367 323 402 328 b 526 360 473 334 502 344 z m 304 807 l 401 932 l 500 807 l 629 807 l 479 1006 l 325 1006 l 176 807 z m 650 1121 l 525 922 l 640 922 l 838 1121 z "},"\u1ea6":{"ha":926,"x_min":0,"x_max":0,"o":"m 371 992 l -10 0 l 169 0 l 263 263 l 658 263 l 751 0 l 938 0 l 556 992 z m 310 394 l 460 821 l 464 821 l 613 394 z m 365 1061 l 463 1186 l 561 1061 l 690 1061 l 540 1260 l 386 1260 l 238 1061 z m 704 1382 l 518 1382 l 715 1183 l 831 1183 z "},"\u1ea7":{"ha":772,"x_min":0,"x_max":0,"o":"m 685 160 l 685 529 b 660 626 685 567 676 599 b 594 690 643 652 621 674 b 501 726 566 707 536 719 b 397 738 467 734 432 738 b 281 726 357 738 319 734 b 178 688 243 719 209 706 b 104 614 148 669 124 644 b 71 499 85 583 74 545 l 229 499 b 278 585 233 538 249 566 b 388 613 306 603 343 613 b 438 609 403 613 420 611 b 485 595 455 607 471 602 b 522 565 500 588 512 578 b 536 515 531 552 536 536 b 519 463 536 492 530 475 b 472 438 507 452 491 443 b 403 426 452 432 429 428 b 321 414 377 423 350 419 b 222 398 288 410 254 405 b 133 364 189 391 159 380 b 69 299 106 348 85 326 b 44 190 53 271 44 235 b 65 98 44 155 51 124 b 119 33 78 72 96 50 b 197 -6 141 16 168 3 b 290 -19 227 -15 258 -19 b 423 1 333 -19 377 -12 b 539 68 469 15 507 38 b 581 0 545 36 559 13 b 661 -19 602 -13 629 -19 b 685 -18 668 -19 675 -19 b 713 -14 694 -17 703 -16 b 740 -8 722 -12 731 -10 b 761 -1 748 -5 756 -3 l 761 108 b 739 106 753 106 745 106 l 722 106 b 692 118 707 106 697 110 b 685 160 687 126 685 140 z m 526 360 l 526 242 b 508 178 526 217 520 196 b 463 136 496 161 481 147 b 406 113 445 125 426 117 b 349 106 385 108 366 106 b 302 110 335 106 319 107 b 255 124 285 113 269 117 b 218 153 241 131 228 141 b 203 197 208 165 203 180 b 213 249 203 218 206 235 b 242 284 220 264 230 275 b 283 305 254 293 268 300 b 332 317 299 310 315 314 b 438 331 367 323 402 328 b 526 360 473 334 502 344 z m 304 807 l 401 932 l 500 807 l 629 807 l 479 1006 l 325 1006 l 176 807 z m 643 1128 l 457 1128 l 654 929 l 769 929 z "},"\u1ea8":{"ha":926,"x_min":0,"x_max":0,"o":"m 371 992 l -10 0 l 169 0 l 263 263 l 658 263 l 751 0 l 938 0 l 556 992 z m 310 394 l 460 821 l 464 821 l 613 394 z m 364 1092 l 461 1217 l 560 1092 l 689 1092 l 539 1290 l 385 1290 l 236 1092 z m 669 1364 l 672 1296 b 721 1301 687 1300 703 1301 b 774 1288 746 1301 764 1297 b 790 1243 785 1279 790 1264 b 773 1207 790 1231 784 1219 b 703 1185 761 1195 738 1188 l 703 1125 l 779 1125 l 782 1156 b 858 1196 820 1164 845 1177 b 878 1253 871 1214 878 1233 b 863 1308 878 1275 873 1294 b 827 1344 853 1323 841 1335 b 780 1363 813 1353 797 1359 b 733 1368 763 1366 747 1368 b 669 1364 716 1368 694 1367 z "},"\u1ea9":{"ha":772,"x_min":0,"x_max":0,"o":"m 685 160 l 685 529 b 660 626 685 567 676 599 b 594 690 643 652 621 674 b 501 726 566 707 536 719 b 397 738 467 734 432 738 b 281 726 357 738 319 734 b 178 688 243 719 209 706 b 104 614 148 669 124 644 b 71 499 85 583 74 545 l 229 499 b 278 585 233 538 249 566 b 388 613 306 603 343 613 b 438 609 403 613 420 611 b 485 595 455 607 471 602 b 522 565 500 588 512 578 b 536 515 531 552 536 536 b 519 463 536 492 530 475 b 472 438 507 452 491 443 b 403 426 452 432 429 428 b 321 414 377 423 350 419 b 222 398 288 410 254 405 b 133 364 189 391 159 380 b 69 299 106 348 85 326 b 44 190 53 271 44 235 b 65 98 44 155 51 124 b 119 33 78 72 96 50 b 197 -6 141 16 168 3 b 290 -19 227 -15 258 -19 b 423 1 333 -19 377 -12 b 539 68 469 15 507 38 b 581 0 545 36 559 13 b 661 -19 602 -13 629 -19 b 685 -18 668 -19 675 -19 b 713 -14 694 -17 703 -16 b 740 -8 722 -12 731 -10 b 761 -1 748 -5 756 -3 l 761 108 b 739 106 753 106 745 106 l 722 106 b 692 118 707 106 697 110 b 685 160 687 126 685 140 z m 526 360 l 526 242 b 508 178 526 217 520 196 b 463 136 496 161 481 147 b 406 113 445 125 426 117 b 349 106 385 108 366 106 b 302 110 335 106 319 107 b 255 124 285 113 269 117 b 218 153 241 131 228 141 b 203 197 208 165 203 180 b 213 249 203 218 206 235 b 242 284 220 264 230 275 b 283 305 254 293 268 300 b 332 317 299 310 315 314 b 438 331 367 323 402 328 b 526 360 473 334 502 344 z m 288 818 l 385 943 l 483 818 l 613 818 l 463 1017 l 308 1017 l 160 818 z m 532 1169 l 535 1101 b 583 1107 550 1105 566 1107 b 637 1094 608 1107 626 1103 b 653 1049 647 1085 653 1070 b 635 1013 653 1037 647 1025 b 565 990 624 1000 600 993 l 565 931 l 642 931 l 644 961 b 721 1001 682 969 708 983 b 740 1058 734 1020 740 1039 b 726 1114 740 1081 735 1099 b 690 1149 716 1129 704 1141 b 642 1168 675 1158 659 1164 b 596 1174 625 1172 610 1174 b 532 1169 578 1174 557 1172 z "},"\u1eaa":{"ha":926,"x_min":0,"x_max":0,"o":"m 371 992 l -10 0 l 169 0 l 263 263 l 658 263 l 751 0 l 938 0 l 556 992 z m 310 394 l 460 821 l 464 821 l 613 394 z m 365 1061 l 463 1186 l 561 1061 l 690 1061 l 540 1260 l 386 1260 l 238 1061 z m 710 1494 l 632 1494 b 609 1450 627 1476 620 1461 b 563 1433 598 1439 583 1433 b 524 1440 550 1433 537 1435 b 476 1458 512 1444 496 1450 b 412 1481 448 1470 426 1478 b 364 1486 397 1484 381 1486 b 307 1472 343 1486 324 1481 b 264 1434 290 1462 276 1449 b 235 1383 252 1419 242 1402 b 219 1329 227 1365 222 1347 l 299 1329 b 319 1372 302 1348 309 1362 b 358 1386 328 1381 342 1386 b 401 1381 374 1386 388 1384 b 453 1361 414 1377 431 1370 b 506 1342 470 1354 488 1347 b 556 1335 523 1337 540 1335 b 619 1347 581 1335 602 1339 b 664 1382 637 1356 652 1367 b 694 1432 677 1396 687 1413 b 710 1494 701 1451 706 1472 z "},"\u1eab":{"ha":772,"x_min":0,"x_max":0,"o":"m 685 160 l 685 529 b 660 626 685 567 676 599 b 594 690 643 652 621 674 b 501 726 566 707 536 719 b 397 738 467 734 432 738 b 281 726 357 738 319 734 b 178 688 243 719 209 706 b 104 614 148 669 124 644 b 71 499 85 583 74 545 l 229 499 b 278 585 233 538 249 566 b 388 613 306 603 343 613 b 438 609 403 613 420 611 b 485 595 455 607 471 602 b 522 565 500 588 512 578 b 536 515 531 552 536 536 b 519 463 536 492 530 475 b 472 438 507 452 491 443 b 403 426 452 432 429 428 b 321 414 377 423 350 419 b 222 398 288 410 254 405 b 133 364 189 391 159 380 b 69 299 106 348 85 326 b 44 190 53 271 44 235 b 65 98 44 155 51 124 b 119 33 78 72 96 50 b 197 -6 141 16 168 3 b 290 -19 227 -15 258 -19 b 423 1 333 -19 377 -12 b 539 68 469 15 507 38 b 581 0 545 36 559 13 b 661 -19 602 -13 629 -19 b 685 -18 668 -19 675 -19 b 713 -14 694 -17 703 -16 b 740 -8 722 -12 731 -10 b 761 -1 748 -5 756 -3 l 761 108 b 739 106 753 106 745 106 l 722 106 b 692 118 707 106 697 110 b 685 160 687 126 685 140 z m 526 360 l 526 242 b 508 178 526 217 520 196 b 463 136 496 161 481 147 b 406 113 445 125 426 117 b 349 106 385 108 366 106 b 302 110 335 106 319 107 b 255 124 285 113 269 117 b 218 153 241 131 228 141 b 203 197 208 165 203 180 b 213 249 203 218 206 235 b 242 284 220 264 230 275 b 283 305 254 293 268 300 b 332 317 299 310 315 314 b 438 331 367 323 402 328 b 526 360 473 334 502 344 z m 304 807 l 401 932 l 500 807 l 629 807 l 479 1006 l 325 1006 l 176 807 z m 649 1240 l 571 1240 b 548 1196 566 1222 559 1207 b 501 1179 537 1185 522 1179 b 463 1185 488 1179 476 1181 b 415 1204 451 1190 435 1196 b 351 1227 387 1216 365 1224 b 303 1232 336 1230 320 1232 b 246 1217 281 1232 263 1227 b 203 1180 229 1208 215 1195 b 174 1129 191 1165 181 1148 b 158 1075 166 1111 161 1093 l 238 1075 b 258 1117 241 1094 248 1108 b 297 1132 267 1127 281 1132 b 340 1126 313 1132 327 1130 b 392 1107 353 1123 370 1116 b 444 1088 409 1100 427 1093 b 494 1081 462 1083 479 1081 b 558 1093 519 1081 541 1085 b 603 1128 576 1101 591 1113 b 633 1178 616 1142 626 1158 b 649 1240 640 1197 645 1218 z "},"\u1eac":{"ha":926,"x_min":0,"x_max":0,"o":"m 371 992 l -10 0 l 169 0 l 263 263 l 658 263 l 751 0 l 938 0 l 556 992 z m 310 394 l 460 821 l 464 821 l 613 394 z m 365 1061 l 463 1186 l 561 1061 l 690 1061 l 540 1260 l 386 1260 l 238 1061 z m 385 -219 l 543 -219 l 543 -69 l 385 -69 z "},"\u1ead":{"ha":772,"x_min":0,"x_max":0,"o":"m 685 160 l 685 529 b 660 626 685 567 676 599 b 594 690 643 652 621 674 b 501 726 566 707 536 719 b 397 738 467 734 432 738 b 281 726 357 738 319 734 b 178 688 243 719 209 706 b 104 614 148 669 124 644 b 71 499 85 583 74 545 l 229 499 b 278 585 233 538 249 566 b 388 613 306 603 343 613 b 438 609 403 613 420 611 b 485 595 455 607 471 602 b 522 565 500 588 512 578 b 536 515 531 552 536 536 b 519 463 536 492 530 475 b 472 438 507 452 491 443 b 403 426 452 432 429 428 b 321 414 377 423 350 419 b 222 398 288 410 254 405 b 133 364 189 391 159 380 b 69 299 106 348 85 326 b 44 190 53 271 44 235 b 65 98 44 155 51 124 b 119 33 78 72 96 50 b 197 -6 141 16 168 3 b 290 -19 227 -15 258 -19 b 423 1 333 -19 377 -12 b 539 68 469 15 507 38 b 581 0 545 36 559 13 b 661 -19 602 -13 629 -19 b 685 -18 668 -19 675 -19 b 713 -14 694 -17 703 -16 b 740 -8 722 -12 731 -10 b 761 -1 748 -5 756 -3 l 761 108 b 739 106 753 106 745 106 l 722 106 b 692 118 707 106 697 110 b 685 160 687 126 685 140 z m 526 360 l 526 242 b 508 178 526 217 520 196 b 463 136 496 161 481 147 b 406 113 445 125 426 117 b 349 106 385 108 366 106 b 302 110 335 106 319 107 b 255 124 285 113 269 117 b 218 153 241 131 228 141 b 203 197 208 165 203 180 b 213 249 203 218 206 235 b 242 284 220 264 230 275 b 283 305 254 293 268 300 b 332 317 299 310 315 314 b 438 331 367 323 402 328 b 526 360 473 334 502 344 z m 304 807 l 401 932 l 500 807 l 629 807 l 479 1006 l 325 1006 l 176 807 z m 324 -239 l 482 -239 l 482 -89 l 324 -89 z "},"\u1eae":{"ha":926,"x_min":0,"x_max":0,"o":"m 371 992 l -10 0 l 169 0 l 263 263 l 658 263 l 751 0 l 938 0 l 556 992 z m 310 394 l 460 821 l 464 821 l 613 394 z m 321 1257 l 240 1257 b 306 1111 246 1193 268 1144 b 458 1061 344 1078 394 1061 b 616 1110 522 1061 575 1077 b 689 1257 657 1142 681 1191 l 610 1257 b 560 1178 602 1222 586 1195 b 469 1151 535 1160 505 1151 b 373 1175 432 1151 400 1159 b 321 1257 346 1191 328 1218 z m 517 1481 l 392 1282 l 507 1282 l 704 1481 z "},"\u1eaf":{"ha":772,"x_min":0,"x_max":0,"o":"m 685 160 l 685 529 b 660 626 685 567 676 599 b 594 690 643 652 621 674 b 501 726 566 707 536 719 b 397 738 467 734 432 738 b 281 726 357 738 319 734 b 178 688 243 719 209 706 b 104 614 148 669 124 644 b 71 499 85 583 74 545 l 229 499 b 278 585 233 538 249 566 b 388 613 306 603 343 613 b 438 609 403 613 420 611 b 485 595 455 607 471 602 b 522 565 500 588 512 578 b 536 515 531 552 536 536 b 519 463 536 492 530 475 b 472 438 507 452 491 443 b 403 426 452 432 429 428 b 321 414 377 423 350 419 b 222 398 288 410 254 405 b 133 364 189 391 159 380 b 69 299 106 348 85 326 b 44 190 53 271 44 235 b 65 98 44 155 51 124 b 119 33 78 72 96 50 b 197 -6 141 16 168 3 b 290 -19 227 -15 258 -19 b 423 1 333 -19 377 -12 b 539 68 469 15 507 38 b 581 0 545 36 559 13 b 661 -19 602 -13 629 -19 b 685 -18 668 -19 675 -19 b 713 -14 694 -17 703 -16 b 740 -8 722 -12 731 -10 b 761 -1 748 -5 756 -3 l 761 108 b 739 106 753 106 745 106 l 722 106 b 692 118 707 106 697 110 b 685 160 687 126 685 140 z m 526 360 l 526 242 b 508 178 526 217 520 196 b 463 136 496 161 481 147 b 406 113 445 125 426 117 b 349 106 385 108 366 106 b 302 110 335 106 319 107 b 255 124 285 113 269 117 b 218 153 241 131 228 141 b 203 197 208 165 203 180 b 213 249 203 218 206 235 b 242 284 220 264 230 275 b 283 305 254 293 268 300 b 332 317 299 310 315 314 b 438 331 367 323 402 328 b 526 360 473 334 502 344 z m 260 1003 l 179 1003 b 244 857 185 939 206 890 b 397 807 282 824 333 807 b 555 856 461 807 514 823 b 628 1003 596 888 620 937 l 549 1003 b 499 924 541 968 525 941 b 408 897 474 906 444 897 b 312 921 371 897 339 905 b 260 1003 284 937 267 964 z m 486 1235 l 361 1036 l 476 1036 l 674 1235 z "},"\u1eb0":{"ha":926,"x_min":0,"x_max":0,"o":"m 371 992 l -10 0 l 169 0 l 263 263 l 658 263 l 751 0 l 938 0 l 556 992 z m 310 394 l 460 821 l 464 821 l 613 394 z m 321 1257 l 240 1257 b 306 1111 246 1193 268 1144 b 458 1061 344 1078 394 1061 b 616 1110 522 1061 575 1077 b 689 1257 657 1142 681 1191 l 610 1257 b 560 1178 602 1222 586 1195 b 469 1151 535 1160 505 1151 b 373 1175 432 1151 400 1159 b 321 1257 346 1191 328 1218 z m 407 1478 l 221 1478 l 418 1279 l 533 1279 z "},"\u1eb1":{"ha":772,"x_min":0,"x_max":0,"o":"m 685 160 l 685 529 b 660 626 685 567 676 599 b 594 690 643 652 621 674 b 501 726 566 707 536 719 b 397 738 467 734 432 738 b 281 726 357 738 319 734 b 178 688 243 719 209 706 b 104 614 148 669 124 644 b 71 499 85 583 74 545 l 229 499 b 278 585 233 538 249 566 b 388 613 306 603 343 613 b 438 609 403 613 420 611 b 485 595 455 607 471 602 b 522 565 500 588 512 578 b 536 515 531 552 536 536 b 519 463 536 492 530 475 b 472 438 507 452 491 443 b 403 426 452 432 429 428 b 321 414 377 423 350 419 b 222 398 288 410 254 405 b 133 364 189 391 159 380 b 69 299 106 348 85 326 b 44 190 53 271 44 235 b 65 98 44 155 51 124 b 119 33 78 72 96 50 b 197 -6 141 16 168 3 b 290 -19 227 -15 258 -19 b 423 1 333 -19 377 -12 b 539 68 469 15 507 38 b 581 0 545 36 559 13 b 661 -19 602 -13 629 -19 b 685 -18 668 -19 675 -19 b 713 -14 694 -17 703 -16 b 740 -8 722 -12 731 -10 b 761 -1 748 -5 756 -3 l 761 108 b 739 106 753 106 745 106 l 722 106 b 692 118 707 106 697 110 b 685 160 687 126 685 140 z m 526 360 l 526 242 b 508 178 526 217 520 196 b 463 136 496 161 481 147 b 406 113 445 125 426 117 b 349 106 385 108 366 106 b 302 110 335 106 319 107 b 255 124 285 113 269 117 b 218 153 241 131 228 141 b 203 197 208 165 203 180 b 213 249 203 218 206 235 b 242 284 220 264 230 275 b 283 305 254 293 268 300 b 332 317 299 310 315 314 b 438 331 367 323 402 328 b 526 360 473 334 502 344 z m 260 1003 l 179 1003 b 244 857 185 939 206 890 b 397 807 282 824 333 807 b 555 856 461 807 514 823 b 628 1003 596 888 620 937 l 549 1003 b 499 924 541 968 525 941 b 408 897 474 906 444 897 b 312 921 371 897 339 905 b 260 1003 284 937 267 964 z m 351 1235 l 165 1235 l 363 1036 l 478 1036 z "},"\u1eb2":{"ha":926,"x_min":0,"x_max":0,"o":"m 371 992 l -10 0 l 169 0 l 263 263 l 658 263 l 751 0 l 938 0 l 556 992 z m 310 394 l 460 821 l 464 821 l 613 394 z m 319 1219 l 239 1219 b 304 1074 244 1156 266 1107 b 457 1024 342 1040 393 1024 b 615 1072 521 1024 573 1040 b 688 1219 656 1105 680 1154 l 608 1219 b 559 1140 601 1184 584 1158 b 468 1114 534 1123 503 1114 b 372 1138 431 1114 399 1122 b 319 1219 344 1153 327 1181 z m 382 1390 l 385 1322 b 433 1328 400 1326 416 1328 b 487 1315 458 1328 476 1323 b 503 1269 497 1306 503 1291 b 485 1233 503 1257 497 1245 b 415 1211 474 1221 450 1214 l 415 1151 l 492 1151 l 494 1182 b 571 1222 532 1190 558 1204 b 590 1279 584 1241 590 1260 b 576 1335 590 1301 585 1320 b 540 1370 566 1350 554 1361 b 492 1389 525 1379 509 1385 b 446 1394 475 1393 460 1394 b 382 1390 428 1394 407 1393 z "},"\u1eb3":{"ha":772,"x_min":0,"x_max":0,"o":"m 685 160 l 685 529 b 660 626 685 567 676 599 b 594 690 643 652 621 674 b 501 726 566 707 536 719 b 397 738 467 734 432 738 b 281 726 357 738 319 734 b 178 688 243 719 209 706 b 104 614 148 669 124 644 b 71 499 85 583 74 545 l 229 499 b 278 585 233 538 249 566 b 388 613 306 603 343 613 b 438 609 403 613 420 611 b 485 595 455 607 471 602 b 522 565 500 588 512 578 b 536 515 531 552 536 536 b 519 463 536 492 530 475 b 472 438 507 452 491 443 b 403 426 452 432 429 428 b 321 414 377 423 350 419 b 222 398 288 410 254 405 b 133 364 189 391 159 380 b 69 299 106 348 85 326 b 44 190 53 271 44 235 b 65 98 44 155 51 124 b 119 33 78 72 96 50 b 197 -6 141 16 168 3 b 290 -19 227 -15 258 -19 b 423 1 333 -19 377 -12 b 539 68 469 15 507 38 b 581 0 545 36 559 13 b 661 -19 602 -13 629 -19 b 685 -18 668 -19 675 -19 b 713 -14 694 -17 703 -16 b 740 -8 722 -12 731 -10 b 761 -1 748 -5 756 -3 l 761 108 b 739 106 753 106 745 106 l 722 106 b 692 118 707 106 697 110 b 685 160 687 126 685 140 z m 526 360 l 526 242 b 508 178 526 217 520 196 b 463 136 496 161 481 147 b 406 113 445 125 426 117 b 349 106 385 108 366 106 b 302 110 335 106 319 107 b 255 124 285 113 269 117 b 218 153 241 131 228 141 b 203 197 208 165 203 180 b 213 249 203 218 206 235 b 242 284 220 264 230 275 b 283 305 254 293 268 300 b 332 317 299 310 315 314 b 438 331 367 323 402 328 b 526 360 473 334 502 344 z m 242 1015 l 161 1015 b 226 869 167 951 188 903 b 379 819 264 836 315 819 b 537 868 443 819 496 836 b 610 1015 578 900 602 950 l 531 1015 b 481 936 523 980 507 954 b 390 910 456 919 425 910 b 294 933 353 910 321 918 b 242 1015 266 949 249 976 z m 306 1201 l 308 1133 b 357 1139 323 1137 339 1139 b 410 1126 382 1139 400 1134 b 426 1081 421 1117 426 1102 b 409 1044 426 1069 421 1056 b 339 1022 397 1032 374 1025 l 339 963 l 415 963 l 418 993 b 494 1033 456 1001 481 1015 b 514 1090 507 1052 514 1071 b 499 1146 514 1113 509 1131 b 463 1181 490 1161 478 1172 b 416 1200 449 1190 433 1196 b 369 1206 399 1204 383 1206 b 306 1201 352 1206 331 1204 z "},"\u1eb4":{"ha":926,"x_min":0,"x_max":0,"o":"m 371 992 l -10 0 l 169 0 l 263 263 l 658 263 l 751 0 l 938 0 l 556 992 z m 310 394 l 460 821 l 464 821 l 613 394 z m 321 1257 l 240 1257 b 306 1111 246 1193 268 1144 b 458 1061 344 1078 394 1061 b 616 1110 522 1061 575 1077 b 689 1257 657 1142 681 1191 l 610 1257 b 560 1178 602 1222 586 1195 b 469 1151 535 1160 505 1151 b 373 1175 432 1151 400 1159 b 321 1257 346 1191 328 1218 z m 710 1492 l 632 1492 b 609 1447 627 1473 620 1458 b 563 1431 598 1436 583 1431 b 524 1437 550 1431 537 1433 b 476 1456 512 1441 496 1447 b 412 1478 448 1468 426 1475 b 364 1483 397 1482 381 1483 b 307 1469 343 1483 324 1478 b 264 1431 290 1459 276 1447 b 235 1381 252 1416 242 1399 b 219 1326 227 1362 222 1344 l 299 1326 b 319 1369 302 1345 309 1359 b 358 1383 328 1378 342 1383 b 401 1378 374 1383 388 1381 b 453 1358 414 1374 431 1368 b 506 1340 470 1351 488 1345 b 556 1332 523 1334 540 1332 b 619 1344 581 1332 602 1336 b 664 1379 637 1353 652 1364 b 694 1429 677 1393 687 1410 b 710 1492 701 1449 706 1469 z "},"\u1eb5":{"ha":772,"x_min":0,"x_max":0,"o":"m 685 160 l 685 529 b 660 626 685 567 676 599 b 594 690 643 652 621 674 b 501 726 566 707 536 719 b 397 738 467 734 432 738 b 281 726 357 738 319 734 b 178 688 243 719 209 706 b 104 614 148 669 124 644 b 71 499 85 583 74 545 l 229 499 b 278 585 233 538 249 566 b 388 613 306 603 343 613 b 438 609 403 613 420 611 b 485 595 455 607 471 602 b 522 565 500 588 512 578 b 536 515 531 552 536 536 b 519 463 536 492 530 475 b 472 438 507 452 491 443 b 403 426 452 432 429 428 b 321 414 377 423 350 419 b 222 398 288 410 254 405 b 133 364 189 391 159 380 b 69 299 106 348 85 326 b 44 190 53 271 44 235 b 65 98 44 155 51 124 b 119 33 78 72 96 50 b 197 -6 141 16 168 3 b 290 -19 227 -15 258 -19 b 423 1 333 -19 377 -12 b 539 68 469 15 507 38 b 581 0 545 36 559 13 b 661 -19 602 -13 629 -19 b 685 -18 668 -19 675 -19 b 713 -14 694 -17 703 -16 b 740 -8 722 -12 731 -10 b 761 -1 748 -5 756 -3 l 761 108 b 739 106 753 106 745 106 l 722 106 b 692 118 707 106 697 110 b 685 160 687 126 685 140 z m 526 360 l 526 242 b 508 178 526 217 520 196 b 463 136 496 161 481 147 b 406 113 445 125 426 117 b 349 106 385 108 366 106 b 302 110 335 106 319 107 b 255 124 285 113 269 117 b 218 153 241 131 228 141 b 203 197 208 165 203 180 b 213 249 203 218 206 235 b 242 284 220 264 230 275 b 283 305 254 293 268 300 b 332 317 299 310 315 314 b 438 331 367 323 402 328 b 526 360 473 334 502 344 z m 260 1003 l 179 1003 b 244 857 185 939 206 890 b 397 807 282 824 333 807 b 555 856 461 807 514 823 b 628 1003 596 888 620 937 l 549 1003 b 499 924 541 968 525 941 b 408 897 474 906 444 897 b 312 921 371 897 339 905 b 260 1003 284 937 267 964 z m 649 1238 l 571 1238 b 548 1193 566 1219 559 1204 b 501 1176 537 1182 522 1176 b 463 1183 488 1176 476 1178 b 415 1201 451 1187 435 1193 b 351 1224 387 1213 365 1221 b 303 1229 336 1228 320 1229 b 246 1215 281 1229 263 1224 b 203 1177 229 1205 215 1192 b 174 1126 191 1162 181 1145 b 158 1072 166 1108 161 1090 l 238 1072 b 258 1115 241 1091 248 1105 b 297 1129 267 1124 281 1129 b 340 1124 313 1129 327 1127 b 392 1104 353 1120 370 1113 b 444 1085 409 1097 427 1091 b 494 1078 462 1080 479 1078 b 558 1090 519 1078 541 1082 b 603 1125 576 1099 591 1110 b 633 1175 616 1139 626 1156 b 649 1238 640 1194 645 1215 z "},"\u1eb6":{"ha":926,"x_min":0,"x_max":0,"o":"m 371 992 l -10 0 l 169 0 l 263 263 l 658 263 l 751 0 l 938 0 l 556 992 z m 310 394 l 460 821 l 464 821 l 613 394 z m 321 1257 l 240 1257 b 306 1111 246 1193 268 1144 b 458 1061 344 1078 394 1061 b 616 1110 522 1061 575 1077 b 689 1257 657 1142 681 1191 l 610 1257 b 560 1178 602 1222 586 1195 b 469 1151 535 1160 505 1151 b 373 1175 432 1151 400 1159 b 321 1257 346 1191 328 1218 z m 385 -219 l 543 -219 l 543 -69 l 385 -69 z "},"\u1eb7":{"ha":772,"x_min":0,"x_max":0,"o":"m 685 160 l 685 529 b 660 626 685 567 676 599 b 594 690 643 652 621 674 b 501 726 566 707 536 719 b 397 738 467 734 432 738 b 281 726 357 738 319 734 b 178 688 243 719 209 706 b 104 614 148 669 124 644 b 71 499 85 583 74 545 l 229 499 b 278 585 233 538 249 566 b 388 613 306 603 343 613 b 438 609 403 613 420 611 b 485 595 455 607 471 602 b 522 565 500 588 512 578 b 536 515 531 552 536 536 b 519 463 536 492 530 475 b 472 438 507 452 491 443 b 403 426 452 432 429 428 b 321 414 377 423 350 419 b 222 398 288 410 254 405 b 133 364 189 391 159 380 b 69 299 106 348 85 326 b 44 190 53 271 44 235 b 65 98 44 155 51 124 b 119 33 78 72 96 50 b 197 -6 141 16 168 3 b 290 -19 227 -15 258 -19 b 423 1 333 -19 377 -12 b 539 68 469 15 507 38 b 581 0 545 36 559 13 b 661 -19 602 -13 629 -19 b 685 -18 668 -19 675 -19 b 713 -14 694 -17 703 -16 b 740 -8 722 -12 731 -10 b 761 -1 748 -5 756 -3 l 761 108 b 739 106 753 106 745 106 l 722 106 b 692 118 707 106 697 110 b 685 160 687 126 685 140 z m 526 360 l 526 242 b 508 178 526 217 520 196 b 463 136 496 161 481 147 b 406 113 445 125 426 117 b 349 106 385 108 366 106 b 302 110 335 106 319 107 b 255 124 285 113 269 117 b 218 153 241 131 228 141 b 203 197 208 165 203 180 b 213 249 203 218 206 235 b 242 284 220 264 230 275 b 283 305 254 293 268 300 b 332 317 299 310 315 314 b 438 331 367 323 402 328 b 526 360 473 334 502 344 z m 260 1003 l 179 1003 b 244 857 185 939 206 890 b 397 807 282 824 333 807 b 555 856 461 807 514 823 b 628 1003 596 888 620 937 l 549 1003 b 499 924 541 968 525 941 b 408 897 474 906 444 897 b 312 921 371 897 339 905 b 260 1003 284 937 267 964 z m 324 -239 l 482 -239 l 482 -89 l 324 -89 z "},"\u1eb8":{"ha":875,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 829 0 l 829 150 l 279 150 l 279 440 l 779 440 l 779 582 l 279 582 l 279 842 l 819 842 l 819 992 z m 388 -219 l 546 -219 l 546 -69 l 388 -69 z "},"\u1eb9":{"ha":772,"x_min":0,"x_max":0,"o":"m 576 422 l 207 422 b 223 497 208 449 213 474 b 262 558 233 520 246 541 b 320 598 278 575 297 588 b 396 613 343 608 368 613 b 469 597 423 613 447 607 b 524 555 491 586 509 572 b 560 494 540 538 552 518 b 576 422 569 471 575 447 z m 207 318 l 735 318 b 724 474 741 372 738 424 b 660 608 711 525 689 569 b 548 702 630 647 593 678 b 396 738 503 726 452 738 b 251 707 342 738 294 727 b 142 624 209 687 172 659 b 73 503 112 590 89 549 b 49 358 57 458 49 409 b 72 206 49 303 56 252 b 140 86 87 159 109 119 b 250 8 170 53 206 27 b 400 -19 294 -10 344 -19 b 512 -3 439 -19 476 -14 b 608 44 547 7 580 23 b 682 121 637 65 662 90 b 725 225 702 151 717 186 l 575 225 b 512 135 561 185 540 155 b 400 106 484 116 446 106 b 314 123 367 106 338 111 b 254 169 290 134 270 150 b 219 238 238 189 227 212 b 207 318 211 263 207 290 z m 317 -239 l 475 -239 l 475 -89 l 317 -89 z "},"\u1eba":{"ha":875,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 829 0 l 829 150 l 279 150 l 279 440 l 779 440 l 779 582 l 279 582 l 279 842 l 819 842 l 819 992 z m 392 1364 l 394 1296 b 443 1301 409 1300 425 1301 b 497 1288 468 1301 486 1297 b 513 1243 507 1279 513 1264 b 495 1207 513 1231 507 1219 b 425 1185 484 1195 460 1188 l 425 1125 l 501 1125 l 504 1156 b 581 1196 542 1164 568 1177 b 600 1253 594 1214 600 1233 b 585 1308 600 1275 595 1294 b 549 1344 576 1323 564 1335 b 502 1363 535 1353 519 1359 b 456 1368 485 1366 469 1368 b 392 1364 438 1368 417 1367 z "},"\u1ebb":{"ha":772,"x_min":0,"x_max":0,"o":"m 576 422 l 207 422 b 223 497 208 449 213 474 b 262 558 233 520 246 541 b 320 598 278 575 297 588 b 396 613 343 608 368 613 b 469 597 423 613 447 607 b 524 555 491 586 509 572 b 560 494 540 538 552 518 b 576 422 569 471 575 447 z m 207 318 l 735 318 b 724 474 741 372 738 424 b 660 608 711 525 689 569 b 548 702 630 647 593 678 b 396 738 503 726 452 738 b 251 707 342 738 294 727 b 142 624 209 687 172 659 b 73 503 112 590 89 549 b 49 358 57 458 49 409 b 72 206 49 303 56 252 b 140 86 87 159 109 119 b 250 8 170 53 206 27 b 400 -19 294 -10 344 -19 b 512 -3 439 -19 476 -14 b 608 44 547 7 580 23 b 682 121 637 65 662 90 b 725 225 702 151 717 186 l 575 225 b 512 135 561 185 540 155 b 400 106 484 116 446 106 b 314 123 367 106 338 111 b 254 169 290 134 270 150 b 219 238 238 189 227 212 b 207 318 211 263 207 290 z m 331 1090 l 333 1022 b 382 1028 348 1026 364 1028 b 435 1015 407 1028 425 1023 b 451 969 446 1006 451 991 b 434 933 451 957 446 945 b 364 911 422 921 399 914 l 364 851 l 440 851 l 443 882 b 519 922 481 890 506 904 b 539 979 532 941 539 960 b 524 1035 539 1001 534 1020 b 488 1070 515 1050 503 1061 b 441 1089 474 1079 458 1085 b 394 1094 424 1093 408 1094 b 331 1090 377 1094 356 1093 z "},"\u1ebc":{"ha":875,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 829 0 l 829 150 l 279 150 l 279 440 l 779 440 l 779 582 l 279 582 l 279 842 l 819 842 l 819 992 z m 713 1226 l 635 1226 b 612 1182 630 1208 622 1193 b 565 1165 601 1171 586 1165 b 527 1172 552 1165 540 1167 b 479 1190 515 1176 499 1182 b 415 1213 450 1202 429 1210 b 367 1218 400 1216 384 1218 b 310 1203 345 1218 326 1213 b 267 1166 293 1194 279 1181 b 238 1115 255 1151 245 1134 b 222 1061 230 1097 225 1079 l 301 1061 b 322 1103 305 1080 312 1094 b 361 1118 331 1113 344 1118 b 404 1113 377 1118 391 1116 b 456 1093 417 1109 434 1102 b 508 1074 473 1086 491 1079 b 558 1067 526 1069 543 1067 b 622 1079 583 1067 605 1071 b 667 1114 640 1088 655 1099 b 697 1164 680 1128 690 1144 b 713 1226 703 1183 709 1204 z "},"\u1ebd":{"ha":772,"x_min":0,"x_max":0,"o":"m 576 422 l 207 422 b 223 497 208 449 213 474 b 262 558 233 520 246 541 b 320 598 278 575 297 588 b 396 613 343 608 368 613 b 469 597 423 613 447 607 b 524 555 491 586 509 572 b 560 494 540 538 552 518 b 576 422 569 471 575 447 z m 207 318 l 735 318 b 724 474 741 372 738 424 b 660 608 711 525 689 569 b 548 702 630 647 593 678 b 396 738 503 726 452 738 b 251 707 342 738 294 727 b 142 624 209 687 172 659 b 73 503 112 590 89 549 b 49 358 57 458 49 409 b 72 206 49 303 56 252 b 140 86 87 159 109 119 b 250 8 170 53 206 27 b 400 -19 294 -10 344 -19 b 512 -3 439 -19 476 -14 b 608 44 547 7 580 23 b 682 121 637 65 662 90 b 725 225 702 151 717 186 l 575 225 b 512 135 561 185 540 155 b 400 106 484 116 446 106 b 314 123 367 106 338 111 b 254 169 290 134 270 150 b 219 238 238 189 227 212 b 207 318 211 263 207 290 z m 642 972 l 564 972 b 541 928 559 954 552 939 b 494 911 530 917 515 911 b 456 917 481 911 469 913 b 408 936 444 922 428 928 b 344 959 380 948 358 956 b 296 964 329 962 313 964 b 239 949 275 964 256 959 b 196 912 222 940 208 927 b 167 861 184 897 174 880 b 151 807 159 843 154 825 l 231 807 b 251 849 234 825 241 840 b 290 864 260 859 274 864 b 333 858 306 864 320 862 b 385 839 346 855 363 848 b 438 820 402 831 420 825 b 488 813 455 815 472 813 b 551 825 513 813 534 817 b 596 860 569 833 584 845 b 626 910 609 874 619 890 b 642 972 633 929 638 950 z "},"\u1ebe":{"ha":875,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 829 0 l 829 150 l 279 150 l 279 440 l 779 440 l 779 582 l 279 582 l 279 842 l 819 842 l 819 992 z m 368 1061 l 465 1186 l 564 1061 l 693 1061 l 543 1260 l 389 1260 l 240 1061 z m 742 1367 l 617 1168 l 732 1168 l 929 1367 z "},"\u1ebf":{"ha":772,"x_min":0,"x_max":0,"o":"m 576 422 l 207 422 b 223 497 208 449 213 474 b 262 558 233 520 246 541 b 320 598 278 575 297 588 b 396 613 343 608 368 613 b 469 597 423 613 447 607 b 524 555 491 586 509 572 b 560 494 540 538 552 518 b 576 422 569 471 575 447 z m 207 318 l 735 318 b 724 474 741 372 738 424 b 660 608 711 525 689 569 b 548 702 630 647 593 678 b 396 738 503 726 452 738 b 251 707 342 738 294 727 b 142 624 209 687 172 659 b 73 503 112 590 89 549 b 49 358 57 458 49 409 b 72 206 49 303 56 252 b 140 86 87 159 109 119 b 250 8 170 53 206 27 b 400 -19 294 -10 344 -19 b 512 -3 439 -19 476 -14 b 608 44 547 7 580 23 b 682 121 637 65 662 90 b 725 225 702 151 717 186 l 575 225 b 512 135 561 185 540 155 b 400 106 484 116 446 106 b 314 123 367 106 338 111 b 254 169 290 134 270 150 b 219 238 238 189 227 212 b 207 318 211 263 207 290 z m 297 807 l 394 932 l 493 807 l 622 807 l 472 1006 l 318 1006 l 169 807 z m 679 1117 l 554 918 l 669 918 l 867 1117 z "},"\u1ec0":{"ha":875,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 829 0 l 829 150 l 279 150 l 279 440 l 779 440 l 779 582 l 279 582 l 279 842 l 819 842 l 819 992 z m 368 1061 l 465 1186 l 564 1061 l 693 1061 l 543 1260 l 389 1260 l 240 1061 z m 707 1382 l 521 1382 l 718 1183 l 833 1183 z "},"\u1ec1":{"ha":772,"x_min":0,"x_max":0,"o":"m 576 422 l 207 422 b 223 497 208 449 213 474 b 262 558 233 520 246 541 b 320 598 278 575 297 588 b 396 613 343 608 368 613 b 469 597 423 613 447 607 b 524 555 491 586 509 572 b 560 494 540 538 552 518 b 576 422 569 471 575 447 z m 207 318 l 735 318 b 724 474 741 372 738 424 b 660 608 711 525 689 569 b 548 702 630 647 593 678 b 396 738 503 726 452 738 b 251 707 342 738 294 727 b 142 624 209 687 172 659 b 73 503 112 590 89 549 b 49 358 57 458 49 409 b 72 206 49 303 56 252 b 140 86 87 159 109 119 b 250 8 170 53 206 27 b 400 -19 294 -10 344 -19 b 512 -3 439 -19 476 -14 b 608 44 547 7 580 23 b 682 121 637 65 662 90 b 725 225 702 151 717 186 l 575 225 b 512 135 561 185 540 155 b 400 106 484 116 446 106 b 314 123 367 106 338 111 b 254 169 290 134 270 150 b 219 238 238 189 227 212 b 207 318 211 263 207 290 z m 297 807 l 394 932 l 493 807 l 622 807 l 472 1006 l 318 1006 l 169 807 z m 636 1128 l 450 1128 l 647 929 l 763 929 z "},"\u1ec2":{"ha":875,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 829 0 l 829 150 l 279 150 l 279 440 l 779 440 l 779 582 l 279 582 l 279 842 l 819 842 l 819 992 z m 381 1092 l 478 1217 l 576 1092 l 706 1092 l 556 1290 l 401 1290 l 253 1092 z m 697 1364 l 700 1296 b 749 1301 715 1300 731 1301 b 802 1288 774 1301 791 1297 b 818 1243 813 1279 818 1264 b 801 1207 818 1231 812 1219 b 731 1185 789 1195 766 1188 l 731 1125 l 807 1125 l 810 1156 b 886 1196 848 1164 873 1177 b 906 1253 899 1214 906 1233 b 891 1308 906 1275 901 1294 b 855 1344 881 1323 869 1335 b 808 1363 841 1353 825 1359 b 761 1368 791 1366 775 1368 b 697 1364 744 1368 722 1367 z "},"\u1ec3":{"ha":772,"x_min":0,"x_max":0,"o":"m 576 422 l 207 422 b 223 497 208 449 213 474 b 262 558 233 520 246 541 b 320 598 278 575 297 588 b 396 613 343 608 368 613 b 469 597 423 613 447 607 b 524 555 491 586 509 572 b 560 494 540 538 552 518 b 576 422 569 471 575 447 z m 207 318 l 735 318 b 724 474 741 372 738 424 b 660 608 711 525 689 569 b 548 702 630 647 593 678 b 396 738 503 726 452 738 b 251 707 342 738 294 727 b 142 624 209 687 172 659 b 73 503 112 590 89 549 b 49 358 57 458 49 409 b 72 206 49 303 56 252 b 140 86 87 159 109 119 b 250 8 170 53 206 27 b 400 -19 294 -10 344 -19 b 512 -3 439 -19 476 -14 b 608 44 547 7 580 23 b 682 121 637 65 662 90 b 725 225 702 151 717 186 l 575 225 b 512 135 561 185 540 155 b 400 106 484 116 446 106 b 314 123 367 106 338 111 b 254 169 290 134 270 150 b 219 238 238 189 227 212 b 207 318 211 263 207 290 z m 288 818 l 385 943 l 483 818 l 613 818 l 463 1017 l 308 1017 l 160 818 z m 532 1169 l 535 1101 b 583 1107 550 1105 566 1107 b 637 1094 608 1107 626 1103 b 653 1049 647 1085 653 1070 b 635 1013 653 1037 647 1025 b 565 990 624 1000 600 993 l 565 931 l 642 931 l 644 961 b 721 1001 682 969 708 983 b 740 1058 734 1020 740 1039 b 726 1114 740 1081 735 1099 b 690 1149 716 1129 704 1141 b 642 1168 675 1158 659 1164 b 596 1174 625 1172 610 1174 b 532 1169 578 1174 557 1172 z "},"\u1ec4":{"ha":875,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 829 0 l 829 150 l 279 150 l 279 440 l 779 440 l 779 582 l 279 582 l 279 842 l 819 842 l 819 992 z m 368 1061 l 465 1186 l 564 1061 l 693 1061 l 543 1260 l 389 1260 l 240 1061 z m 713 1494 l 635 1494 b 612 1450 630 1476 622 1461 b 565 1433 601 1439 586 1433 b 527 1440 552 1433 540 1435 b 479 1458 515 1444 499 1450 b 415 1481 450 1470 429 1478 b 367 1486 400 1484 384 1486 b 310 1472 345 1486 326 1481 b 267 1434 293 1462 279 1449 b 238 1383 255 1419 245 1402 b 222 1329 230 1365 225 1347 l 301 1329 b 322 1372 305 1348 312 1362 b 361 1386 331 1381 344 1386 b 404 1381 377 1386 391 1384 b 456 1361 417 1377 434 1370 b 508 1342 473 1354 491 1347 b 558 1335 526 1337 543 1335 b 622 1347 583 1335 605 1339 b 667 1382 640 1356 655 1367 b 697 1432 680 1396 690 1413 b 713 1494 703 1451 709 1472 z "},"\u1ec5":{"ha":772,"x_min":0,"x_max":0,"o":"m 576 422 l 207 422 b 223 497 208 449 213 474 b 262 558 233 520 246 541 b 320 598 278 575 297 588 b 396 613 343 608 368 613 b 469 597 423 613 447 607 b 524 555 491 586 509 572 b 560 494 540 538 552 518 b 576 422 569 471 575 447 z m 207 318 l 735 318 b 724 474 741 372 738 424 b 660 608 711 525 689 569 b 548 702 630 647 593 678 b 396 738 503 726 452 738 b 251 707 342 738 294 727 b 142 624 209 687 172 659 b 73 503 112 590 89 549 b 49 358 57 458 49 409 b 72 206 49 303 56 252 b 140 86 87 159 109 119 b 250 8 170 53 206 27 b 400 -19 294 -10 344 -19 b 512 -3 439 -19 476 -14 b 608 44 547 7 580 23 b 682 121 637 65 662 90 b 725 225 702 151 717 186 l 575 225 b 512 135 561 185 540 155 b 400 106 484 116 446 106 b 314 123 367 106 338 111 b 254 169 290 134 270 150 b 219 238 238 189 227 212 b 207 318 211 263 207 290 z m 297 807 l 394 932 l 493 807 l 622 807 l 472 1006 l 318 1006 l 169 807 z m 642 1240 l 564 1240 b 541 1196 559 1222 552 1207 b 494 1179 530 1185 515 1179 b 456 1185 481 1179 469 1181 b 408 1204 444 1190 428 1196 b 344 1227 380 1216 358 1224 b 296 1232 329 1230 313 1232 b 239 1217 275 1232 256 1227 b 196 1180 222 1208 208 1195 b 167 1129 184 1165 174 1148 b 151 1075 159 1111 154 1093 l 231 1075 b 251 1117 234 1094 241 1108 b 290 1132 260 1127 274 1132 b 333 1126 306 1132 320 1130 b 385 1107 346 1123 363 1116 b 438 1088 402 1100 420 1093 b 488 1081 455 1083 472 1081 b 551 1093 513 1081 534 1085 b 596 1128 569 1101 584 1113 b 626 1178 609 1142 619 1158 b 642 1240 633 1197 638 1218 z "},"\u1ec6":{"ha":875,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 829 0 l 829 150 l 279 150 l 279 440 l 779 440 l 779 582 l 279 582 l 279 842 l 819 842 l 819 992 z m 368 1061 l 465 1186 l 564 1061 l 693 1061 l 543 1260 l 389 1260 l 240 1061 z m 388 -219 l 546 -219 l 546 -69 l 388 -69 z "},"\u1ec7":{"ha":772,"x_min":0,"x_max":0,"o":"m 576 422 l 207 422 b 223 497 208 449 213 474 b 262 558 233 520 246 541 b 320 598 278 575 297 588 b 396 613 343 608 368 613 b 469 597 423 613 447 607 b 524 555 491 586 509 572 b 560 494 540 538 552 518 b 576 422 569 471 575 447 z m 207 318 l 735 318 b 724 474 741 372 738 424 b 660 608 711 525 689 569 b 548 702 630 647 593 678 b 396 738 503 726 452 738 b 251 707 342 738 294 727 b 142 624 209 687 172 659 b 73 503 112 590 89 549 b 49 358 57 458 49 409 b 72 206 49 303 56 252 b 140 86 87 159 109 119 b 250 8 170 53 206 27 b 400 -19 294 -10 344 -19 b 512 -3 439 -19 476 -14 b 608 44 547 7 580 23 b 682 121 637 65 662 90 b 725 225 702 151 717 186 l 575 225 b 512 135 561 185 540 155 b 400 106 484 116 446 106 b 314 123 367 106 338 111 b 254 169 290 134 270 150 b 219 238 238 189 227 212 b 207 318 211 263 207 290 z m 297 807 l 394 932 l 493 807 l 622 807 l 472 1006 l 318 1006 l 169 807 z m 317 -239 l 475 -239 l 475 -89 l 317 -89 z "},"\u1ec8":{"ha":386,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 279 0 l 279 992 z m 125 1364 l 128 1296 b 176 1301 143 1300 159 1301 b 230 1288 201 1301 219 1297 b 246 1243 241 1279 246 1264 b 228 1207 246 1231 240 1219 b 158 1185 217 1195 194 1188 l 158 1125 l 235 1125 l 238 1156 b 314 1196 275 1164 301 1177 b 333 1253 327 1214 333 1233 b 319 1308 333 1275 328 1294 b 283 1344 309 1323 297 1335 b 235 1363 268 1353 253 1359 b 189 1368 218 1366 203 1368 b 125 1364 171 1368 150 1367 z "},"\u1ec9":{"ha":335,"x_min":0,"x_max":0,"o":"m 88 0 l 246 0 l 246 718 l 88 718 z m 94 1090 l 97 1022 b 146 1028 112 1026 128 1028 b 199 1015 171 1028 189 1023 b 215 969 210 1006 215 991 b 198 933 215 957 209 945 b 128 911 186 921 163 914 l 128 851 l 204 851 l 207 882 b 283 922 245 890 270 904 b 303 979 296 941 303 960 b 288 1035 303 1001 298 1020 b 252 1070 278 1050 266 1061 b 205 1089 238 1079 222 1085 b 158 1094 188 1093 172 1094 b 94 1090 141 1094 119 1093 z "},"\u1eca":{"ha":386,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 279 0 l 279 992 z m 113 -219 l 271 -219 l 271 -69 l 113 -69 z "},"\u1ecb":{"ha":335,"x_min":0,"x_max":0,"o":"m 88 992 l 88 842 l 246 842 l 246 992 z m 88 718 l 88 0 l 246 0 l 246 718 z m 88 -219 l 246 -219 l 246 -69 l 88 -69 z "},"\u1ecc":{"ha":1056,"x_min":0,"x_max":0,"o":"m 528 874 b 665 842 581 874 626 863 b 758 756 703 820 734 792 b 812 635 782 721 800 680 b 829 496 823 589 829 543 b 812 357 829 449 823 402 b 758 235 800 312 782 271 b 665 150 734 200 703 171 b 528 118 626 129 581 118 b 391 150 475 118 429 129 b 297 235 353 171 321 200 b 244 357 273 271 255 312 b 226 496 232 402 226 449 b 244 635 226 543 232 589 b 297 756 255 680 273 721 b 391 842 321 792 353 820 b 528 874 429 863 475 874 z m 528 1015 b 328 974 454 1015 387 1001 b 179 861 270 946 220 908 b 85 696 138 814 107 759 b 53 496 64 633 53 566 b 85 294 53 425 64 357 b 179 129 107 231 138 176 b 328 17 220 82 270 45 b 528 -24 387 -10 454 -24 b 727 17 602 -24 668 -10 b 876 129 786 45 836 82 b 970 294 917 176 948 231 b 1003 496 992 357 1003 425 b 970 696 1003 566 992 633 b 876 861 948 759 917 814 b 727 974 836 908 786 946 b 528 1015 668 1001 602 1015 z m 449 -243 l 607 -243 l 607 -93 l 449 -93 z "},"\u1ecd":{"ha":824,"x_min":0,"x_max":0,"o":"m 413 -19 b 566 9 470 -19 521 -10 b 680 88 611 28 649 54 b 751 207 711 121 734 161 b 775 360 767 253 775 304 b 751 511 775 414 767 465 b 680 631 734 557 711 597 b 566 709 649 664 611 690 b 413 738 521 728 470 738 b 259 709 355 738 304 728 b 145 631 214 690 176 664 b 74 511 114 597 91 557 b 50 360 58 465 50 414 b 74 207 50 304 58 253 b 145 88 91 161 114 121 b 259 9 176 54 214 28 b 413 -19 304 -10 355 -19 z m 413 106 b 321 128 377 106 347 113 b 257 186 295 143 274 162 b 220 267 240 210 228 237 b 208 360 212 297 208 328 b 220 451 208 390 212 421 b 257 533 228 482 240 509 b 321 590 274 556 295 575 b 413 613 347 605 377 613 b 504 590 448 613 478 605 b 568 533 530 575 551 556 b 605 451 585 509 597 482 b 617 360 613 421 617 390 b 605 267 617 328 613 297 b 568 186 597 237 585 210 b 504 128 551 162 530 143 b 413 106 478 113 448 106 z m 333 -239 l 492 -239 l 492 -89 l 333 -89 z "},"\u1ece":{"ha":1056,"x_min":0,"x_max":0,"o":"m 528 874 b 665 842 581 874 626 863 b 758 756 703 820 734 792 b 812 635 782 721 800 680 b 829 496 823 589 829 543 b 812 357 829 449 823 402 b 758 235 800 312 782 271 b 665 150 734 200 703 171 b 528 118 626 129 581 118 b 391 150 475 118 429 129 b 297 235 353 171 321 200 b 244 357 273 271 255 312 b 226 496 232 402 226 449 b 244 635 226 543 232 589 b 297 756 255 680 273 721 b 391 842 321 792 353 820 b 528 874 429 863 475 874 z m 528 1015 b 328 974 454 1015 387 1001 b 179 861 270 946 220 908 b 85 696 138 814 107 759 b 53 496 64 633 53 566 b 85 294 53 425 64 357 b 179 129 107 231 138 176 b 328 17 220 82 270 45 b 528 -24 387 -10 454 -24 b 727 17 602 -24 668 -10 b 876 129 786 45 836 82 b 970 294 917 176 948 231 b 1003 496 992 357 1003 425 b 970 696 1003 566 992 633 b 876 861 948 759 917 814 b 727 974 836 908 786 946 b 528 1015 668 1001 602 1015 z m 465 1364 l 468 1296 b 517 1301 483 1300 499 1301 b 570 1288 542 1301 559 1297 b 586 1243 581 1279 586 1264 b 569 1207 586 1231 580 1219 b 499 1185 557 1195 534 1188 l 499 1125 l 575 1125 l 578 1156 b 654 1196 616 1164 641 1177 b 674 1253 667 1214 674 1233 b 659 1308 674 1275 669 1294 b 623 1344 649 1323 637 1335 b 576 1363 609 1353 593 1359 b 529 1368 559 1366 543 1368 b 465 1364 512 1368 490 1367 z "},"\u1ecf":{"ha":824,"x_min":0,"x_max":0,"o":"m 413 -19 b 566 9 470 -19 521 -10 b 680 88 611 28 649 54 b 751 207 711 121 734 161 b 775 360 767 253 775 304 b 751 511 775 414 767 465 b 680 631 734 557 711 597 b 566 709 649 664 611 690 b 413 738 521 728 470 738 b 259 709 355 738 304 728 b 145 631 214 690 176 664 b 74 511 114 597 91 557 b 50 360 58 465 50 414 b 74 207 50 304 58 253 b 145 88 91 161 114 121 b 259 9 176 54 214 28 b 413 -19 304 -10 355 -19 z m 413 106 b 321 128 377 106 347 113 b 257 186 295 143 274 162 b 220 267 240 210 228 237 b 208 360 212 297 208 328 b 220 451 208 390 212 421 b 257 533 228 482 240 509 b 321 590 274 556 295 575 b 413 613 347 605 377 613 b 504 590 448 613 478 605 b 568 533 530 575 551 556 b 605 451 585 509 597 482 b 617 360 613 421 617 390 b 605 267 617 328 613 297 b 568 186 597 237 585 210 b 504 128 551 162 530 143 b 413 106 478 113 448 106 z m 350 1090 l 353 1022 b 401 1028 368 1026 384 1028 b 455 1015 426 1028 444 1023 b 471 969 466 1006 471 991 b 453 933 471 957 465 945 b 383 911 442 921 419 914 l 383 851 l 460 851 l 463 882 b 539 922 500 890 526 904 b 558 979 552 941 558 960 b 544 1035 558 1001 553 1020 b 508 1070 534 1050 522 1061 b 460 1089 493 1079 478 1085 b 414 1094 443 1093 428 1094 b 350 1090 396 1094 375 1093 z "},"\u1ed0":{"ha":1056,"x_min":0,"x_max":0,"o":"m 528 874 b 665 842 581 874 626 863 b 758 756 703 820 734 792 b 812 635 782 721 800 680 b 829 496 823 589 829 543 b 812 357 829 449 823 402 b 758 235 800 312 782 271 b 665 150 734 200 703 171 b 528 118 626 129 581 118 b 391 150 475 118 429 129 b 297 235 353 171 321 200 b 244 357 273 271 255 312 b 226 496 232 402 226 449 b 244 635 226 543 232 589 b 297 756 255 680 273 721 b 391 842 321 792 353 820 b 528 874 429 863 475 874 z m 528 1015 b 328 974 454 1015 387 1001 b 179 861 270 946 220 908 b 85 696 138 814 107 759 b 53 496 64 633 53 566 b 85 294 53 425 64 357 b 179 129 107 231 138 176 b 328 17 220 82 270 45 b 528 -24 387 -10 454 -24 b 727 17 602 -24 668 -10 b 876 129 786 45 836 82 b 970 294 917 176 948 231 b 1003 496 992 357 1003 425 b 970 696 1003 566 992 633 b 876 861 948 759 917 814 b 727 974 836 908 786 946 b 528 1015 668 1001 602 1015 z m 429 1085 l 526 1210 l 625 1085 l 754 1085 l 604 1283 l 450 1283 l 301 1085 z m 806 1394 l 681 1196 l 796 1196 l 993 1394 z "},"\u1ed1":{"ha":824,"x_min":0,"x_max":0,"o":"m 413 -19 b 566 9 470 -19 521 -10 b 680 88 611 28 649 54 b 751 207 711 121 734 161 b 775 360 767 253 775 304 b 751 511 775 414 767 465 b 680 631 734 557 711 597 b 566 709 649 664 611 690 b 413 738 521 728 470 738 b 259 709 355 738 304 728 b 145 631 214 690 176 664 b 74 511 114 597 91 557 b 50 360 58 465 50 414 b 74 207 50 304 58 253 b 145 88 91 161 114 121 b 259 9 176 54 214 28 b 413 -19 304 -10 355 -19 z m 413 106 b 321 128 377 106 347 113 b 257 186 295 143 274 162 b 220 267 240 210 228 237 b 208 360 212 297 208 328 b 220 451 208 390 212 421 b 257 533 228 482 240 509 b 321 590 274 556 295 575 b 413 613 347 605 377 613 b 504 590 448 613 478 605 b 568 533 530 575 551 556 b 605 451 585 509 597 482 b 617 360 613 421 617 390 b 605 267 617 328 613 297 b 568 186 597 237 585 210 b 504 128 551 162 530 143 b 413 106 478 113 448 106 z m 314 807 l 411 932 l 510 807 l 639 807 l 489 1006 l 335 1006 l 186 807 z m 703 1106 l 578 907 l 693 907 l 890 1106 z "},"\u1ed2":{"ha":1056,"x_min":0,"x_max":0,"o":"m 528 874 b 665 842 581 874 626 863 b 758 756 703 820 734 792 b 812 635 782 721 800 680 b 829 496 823 589 829 543 b 812 357 829 449 823 402 b 758 235 800 312 782 271 b 665 150 734 200 703 171 b 528 118 626 129 581 118 b 391 150 475 118 429 129 b 297 235 353 171 321 200 b 244 357 273 271 255 312 b 226 496 232 402 226 449 b 244 635 226 543 232 589 b 297 756 255 680 273 721 b 391 842 321 792 353 820 b 528 874 429 863 475 874 z m 528 1015 b 328 974 454 1015 387 1001 b 179 861 270 946 220 908 b 85 696 138 814 107 759 b 53 496 64 633 53 566 b 85 294 53 425 64 357 b 179 129 107 231 138 176 b 328 17 220 82 270 45 b 528 -24 387 -10 454 -24 b 727 17 602 -24 668 -10 b 876 129 786 45 836 82 b 970 294 917 176 948 231 b 1003 496 992 357 1003 425 b 970 696 1003 566 992 633 b 876 861 948 759 917 814 b 727 974 836 908 786 946 b 528 1015 668 1001 602 1015 z m 429 1085 l 526 1210 l 625 1085 l 754 1085 l 604 1283 l 450 1283 l 301 1085 z m 768 1406 l 582 1406 l 779 1207 l 894 1207 z "},"\u1ed3":{"ha":824,"x_min":0,"x_max":0,"o":"m 413 -19 b 566 9 470 -19 521 -10 b 680 88 611 28 649 54 b 751 207 711 121 734 161 b 775 360 767 253 775 304 b 751 511 775 414 767 465 b 680 631 734 557 711 597 b 566 709 649 664 611 690 b 413 738 521 728 470 738 b 259 709 355 738 304 728 b 145 631 214 690 176 664 b 74 511 114 597 91 557 b 50 360 58 465 50 414 b 74 207 50 304 58 253 b 145 88 91 161 114 121 b 259 9 176 54 214 28 b 413 -19 304 -10 355 -19 z m 413 106 b 321 128 377 106 347 113 b 257 186 295 143 274 162 b 220 267 240 210 228 237 b 208 360 212 297 208 328 b 220 451 208 390 212 421 b 257 533 228 482 240 509 b 321 590 274 556 295 575 b 413 613 347 605 377 613 b 504 590 448 613 478 605 b 568 533 530 575 551 556 b 605 451 585 509 597 482 b 617 360 613 421 617 390 b 605 267 617 328 613 297 b 568 186 597 237 585 210 b 504 128 551 162 530 143 b 413 106 478 113 448 106 z m 314 807 l 411 932 l 510 807 l 639 807 l 489 1006 l 335 1006 l 186 807 z m 651 1128 l 465 1128 l 663 929 l 778 929 z "},"\u1ed4":{"ha":1056,"x_min":0,"x_max":0,"o":"m 528 874 b 665 842 581 874 626 863 b 758 756 703 820 734 792 b 812 635 782 721 800 680 b 829 496 823 589 829 543 b 812 357 829 449 823 402 b 758 235 800 312 782 271 b 665 150 734 200 703 171 b 528 118 626 129 581 118 b 391 150 475 118 429 129 b 297 235 353 171 321 200 b 244 357 273 271 255 312 b 226 496 232 402 226 449 b 244 635 226 543 232 589 b 297 756 255 680 273 721 b 391 842 321 792 353 820 b 528 874 429 863 475 874 z m 528 1015 b 328 974 454 1015 387 1001 b 179 861 270 946 220 908 b 85 696 138 814 107 759 b 53 496 64 633 53 566 b 85 294 53 425 64 357 b 179 129 107 231 138 176 b 328 17 220 82 270 45 b 528 -24 387 -10 454 -24 b 727 17 602 -24 668 -10 b 876 129 786 45 836 82 b 970 294 917 176 948 231 b 1003 496 992 357 1003 425 b 970 696 1003 566 992 633 b 876 861 948 759 917 814 b 727 974 836 908 786 946 b 528 1015 668 1001 602 1015 z m 429 1092 l 526 1217 l 625 1092 l 754 1092 l 604 1290 l 450 1290 l 301 1092 z m 735 1364 l 738 1296 b 786 1301 752 1300 769 1301 b 840 1288 811 1301 829 1297 b 856 1243 850 1279 856 1264 b 838 1207 856 1231 850 1219 b 768 1185 827 1195 803 1188 l 768 1125 l 844 1125 l 847 1156 b 924 1196 885 1164 911 1177 b 943 1253 937 1214 943 1233 b 928 1308 943 1275 938 1294 b 892 1344 919 1323 907 1335 b 845 1363 878 1353 862 1359 b 799 1368 828 1366 813 1368 b 735 1364 781 1368 760 1367 z "},"\u1ed5":{"ha":824,"x_min":0,"x_max":0,"o":"m 413 -19 b 566 9 470 -19 521 -10 b 680 88 611 28 649 54 b 751 207 711 121 734 161 b 775 360 767 253 775 304 b 751 511 775 414 767 465 b 680 631 734 557 711 597 b 566 709 649 664 611 690 b 413 738 521 728 470 738 b 259 709 355 738 304 728 b 145 631 214 690 176 664 b 74 511 114 597 91 557 b 50 360 58 465 50 414 b 74 207 50 304 58 253 b 145 88 91 161 114 121 b 259 9 176 54 214 28 b 413 -19 304 -10 355 -19 z m 413 106 b 321 128 377 106 347 113 b 257 186 295 143 274 162 b 220 267 240 210 228 237 b 208 360 212 297 208 328 b 220 451 208 390 212 421 b 257 533 228 482 240 509 b 321 590 274 556 295 575 b 413 613 347 605 377 613 b 504 590 448 613 478 605 b 568 533 530 575 551 556 b 605 451 585 509 597 482 b 617 360 613 421 617 390 b 605 267 617 328 613 297 b 568 186 597 237 585 210 b 504 128 551 162 530 143 b 413 106 478 113 448 106 z m 313 818 l 410 943 l 508 818 l 638 818 l 488 1017 l 333 1017 l 185 818 z m 557 1169 l 560 1101 b 608 1107 575 1105 591 1107 b 662 1094 633 1107 651 1103 b 678 1049 672 1085 678 1070 b 660 1013 678 1037 672 1025 b 590 990 649 1000 625 993 l 590 931 l 667 931 l 669 961 b 746 1001 707 969 733 983 b 765 1058 759 1020 765 1039 b 751 1114 765 1081 760 1099 b 715 1149 741 1129 729 1141 b 667 1168 700 1158 684 1164 b 621 1174 650 1172 635 1174 b 557 1169 603 1174 582 1172 z "},"\u1ed6":{"ha":1056,"x_min":0,"x_max":0,"o":"m 528 874 b 665 842 581 874 626 863 b 758 756 703 820 734 792 b 812 635 782 721 800 680 b 829 496 823 589 829 543 b 812 357 829 449 823 402 b 758 235 800 312 782 271 b 665 150 734 200 703 171 b 528 118 626 129 581 118 b 391 150 475 118 429 129 b 297 235 353 171 321 200 b 244 357 273 271 255 312 b 226 496 232 402 226 449 b 244 635 226 543 232 589 b 297 756 255 680 273 721 b 391 842 321 792 353 820 b 528 874 429 863 475 874 z m 528 1015 b 328 974 454 1015 387 1001 b 179 861 270 946 220 908 b 85 696 138 814 107 759 b 53 496 64 633 53 566 b 85 294 53 425 64 357 b 179 129 107 231 138 176 b 328 17 220 82 270 45 b 528 -24 387 -10 454 -24 b 727 17 602 -24 668 -10 b 876 129 786 45 836 82 b 970 294 917 176 948 231 b 1003 496 992 357 1003 425 b 970 696 1003 566 992 633 b 876 861 948 759 917 814 b 727 974 836 908 786 946 b 528 1015 668 1001 602 1015 z m 429 1085 l 526 1210 l 625 1085 l 754 1085 l 604 1283 l 450 1283 l 301 1085 z m 774 1518 l 696 1518 b 673 1474 691 1500 684 1485 b 626 1457 662 1463 647 1457 b 588 1463 613 1457 601 1459 b 540 1482 576 1467 560 1474 b 476 1505 512 1494 490 1502 b 428 1510 461 1508 445 1510 b 371 1495 406 1510 388 1505 b 328 1458 354 1485 340 1473 b 299 1407 316 1442 306 1425 b 283 1353 291 1388 286 1370 l 363 1353 b 383 1395 366 1371 373 1385 b 422 1410 392 1405 406 1410 b 465 1404 438 1410 452 1408 b 517 1385 478 1400 495 1394 b 569 1366 534 1377 552 1371 b 619 1358 587 1361 604 1358 b 683 1371 644 1358 666 1363 b 728 1406 701 1379 716 1391 b 758 1456 741 1419 751 1436 b 774 1518 765 1475 770 1496 z "},"\u1ed7":{"ha":824,"x_min":0,"x_max":0,"o":"m 413 -19 b 566 9 470 -19 521 -10 b 680 88 611 28 649 54 b 751 207 711 121 734 161 b 775 360 767 253 775 304 b 751 511 775 414 767 465 b 680 631 734 557 711 597 b 566 709 649 664 611 690 b 413 738 521 728 470 738 b 259 709 355 738 304 728 b 145 631 214 690 176 664 b 74 511 114 597 91 557 b 50 360 58 465 50 414 b 74 207 50 304 58 253 b 145 88 91 161 114 121 b 259 9 176 54 214 28 b 413 -19 304 -10 355 -19 z m 413 106 b 321 128 377 106 347 113 b 257 186 295 143 274 162 b 220 267 240 210 228 237 b 208 360 212 297 208 328 b 220 451 208 390 212 421 b 257 533 228 482 240 509 b 321 590 274 556 295 575 b 413 613 347 605 377 613 b 504 590 448 613 478 605 b 568 533 530 575 551 556 b 605 451 585 509 597 482 b 617 360 613 421 617 390 b 605 267 617 328 613 297 b 568 186 597 237 585 210 b 504 128 551 162 530 143 b 413 106 478 113 448 106 z m 314 807 l 411 932 l 510 807 l 639 807 l 489 1006 l 335 1006 l 186 807 z m 658 1240 l 581 1240 b 558 1196 576 1222 568 1207 b 511 1179 547 1185 531 1179 b 473 1185 498 1179 485 1181 b 425 1204 460 1190 444 1196 b 360 1227 396 1216 375 1224 b 313 1232 346 1230 330 1232 b 256 1217 291 1232 272 1227 b 213 1180 239 1208 225 1195 b 183 1129 200 1165 191 1148 b 168 1075 176 1111 171 1093 l 247 1075 b 267 1117 251 1094 258 1108 b 307 1132 277 1127 290 1132 b 350 1126 323 1132 337 1130 b 401 1107 363 1123 380 1116 b 454 1088 419 1100 437 1093 b 504 1081 472 1083 488 1081 b 568 1093 529 1081 550 1085 b 613 1128 586 1101 600 1113 b 642 1178 625 1142 635 1158 b 658 1240 649 1197 655 1218 z "},"\u1ed8":{"ha":1056,"x_min":0,"x_max":0,"o":"m 528 874 b 665 842 581 874 626 863 b 758 756 703 820 734 792 b 812 635 782 721 800 680 b 829 496 823 589 829 543 b 812 357 829 449 823 402 b 758 235 800 312 782 271 b 665 150 734 200 703 171 b 528 118 626 129 581 118 b 391 150 475 118 429 129 b 297 235 353 171 321 200 b 244 357 273 271 255 312 b 226 496 232 402 226 449 b 244 635 226 543 232 589 b 297 756 255 680 273 721 b 391 842 321 792 353 820 b 528 874 429 863 475 874 z m 528 1015 b 328 974 454 1015 387 1001 b 179 861 270 946 220 908 b 85 696 138 814 107 759 b 53 496 64 633 53 566 b 85 294 53 425 64 357 b 179 129 107 231 138 176 b 328 17 220 82 270 45 b 528 -24 387 -10 454 -24 b 727 17 602 -24 668 -10 b 876 129 786 45 836 82 b 970 294 917 176 948 231 b 1003 496 992 357 1003 425 b 970 696 1003 566 992 633 b 876 861 948 759 917 814 b 727 974 836 908 786 946 b 528 1015 668 1001 602 1015 z m 429 1085 l 526 1210 l 625 1085 l 754 1085 l 604 1283 l 450 1283 l 301 1085 z m 449 -243 l 607 -243 l 607 -93 l 449 -93 z "},"\u1ed9":{"ha":824,"x_min":0,"x_max":0,"o":"m 413 -19 b 566 9 470 -19 521 -10 b 680 88 611 28 649 54 b 751 207 711 121 734 161 b 775 360 767 253 775 304 b 751 511 775 414 767 465 b 680 631 734 557 711 597 b 566 709 649 664 611 690 b 413 738 521 728 470 738 b 259 709 355 738 304 728 b 145 631 214 690 176 664 b 74 511 114 597 91 557 b 50 360 58 465 50 414 b 74 207 50 304 58 253 b 145 88 91 161 114 121 b 259 9 176 54 214 28 b 413 -19 304 -10 355 -19 z m 413 106 b 321 128 377 106 347 113 b 257 186 295 143 274 162 b 220 267 240 210 228 237 b 208 360 212 297 208 328 b 220 451 208 390 212 421 b 257 533 228 482 240 509 b 321 590 274 556 295 575 b 413 613 347 605 377 613 b 504 590 448 613 478 605 b 568 533 530 575 551 556 b 605 451 585 509 597 482 b 617 360 613 421 617 390 b 605 267 617 328 613 297 b 568 186 597 237 585 210 b 504 128 551 162 530 143 b 413 106 478 113 448 106 z m 314 807 l 411 932 l 510 807 l 639 807 l 489 1006 l 335 1006 l 186 807 z m 333 -239 l 492 -239 l 492 -89 l 333 -89 z "},"\u1eda":{"ha":1186,"x_min":0,"x_max":0,"o":"m 1136 982 l 1017 914 l 1063 836 b 1001 808 1038 823 1018 814 b 956 799 984 802 969 799 b 914 811 937 799 923 803 b 756 960 873 873 820 923 b 528 1015 691 997 615 1015 b 328 974 454 1015 387 1001 b 179 861 270 946 220 908 b 85 696 138 814 107 759 b 53 496 64 633 53 566 b 85 294 53 425 64 357 b 179 129 107 231 138 176 b 328 17 220 82 270 45 b 528 -24 387 -10 454 -24 b 727 17 602 -24 668 -10 b 876 129 786 45 836 82 b 970 294 917 176 948 231 b 1003 496 992 357 1003 425 b 960 721 1003 575 988 650 b 972 719 964 720 969 719 l 985 719 b 1051 732 1006 719 1028 724 b 1119 764 1075 740 1097 751 l 1226 825 z m 528 874 b 665 842 581 874 626 863 b 758 756 703 820 734 792 b 812 635 782 721 800 680 b 829 496 823 589 829 543 b 812 357 829 449 823 402 b 758 235 800 312 782 271 b 665 150 734 200 703 171 b 528 118 626 129 581 118 b 391 150 475 118 429 129 b 297 235 353 171 321 200 b 244 357 273 271 255 312 b 226 496 232 402 226 449 b 244 635 226 543 232 589 b 297 756 255 680 273 721 b 391 842 321 792 353 820 b 528 874 429 863 475 874 z m 547 1290 l 422 1092 l 538 1092 l 735 1290 z "},"\u1edb":{"ha":951,"x_min":0,"x_max":0,"o":"m 901 774 l 782 706 l 828 628 b 765 599 804 615 783 605 b 710 590 747 593 728 590 b 590 699 680 637 640 673 b 413 738 539 725 480 738 b 259 709 355 738 304 728 b 145 631 214 690 176 664 b 74 511 114 597 91 557 b 50 360 58 465 50 414 b 74 207 50 304 58 253 b 145 88 91 161 114 121 b 259 9 176 54 214 28 b 413 -19 304 -10 355 -19 b 566 9 470 -19 521 -10 b 680 88 611 28 649 54 b 751 207 711 121 734 161 b 775 360 767 253 775 304 b 750 511 775 414 767 465 b 817 524 771 511 794 515 b 885 556 840 532 863 543 l 992 617 z m 413 106 b 321 128 377 106 347 113 b 257 186 295 143 274 162 b 220 267 240 210 228 237 b 208 360 212 297 208 328 b 220 451 208 390 212 421 b 257 533 228 482 240 509 b 321 590 274 556 295 575 b 413 613 347 605 377 613 b 504 590 448 613 478 605 b 568 533 530 575 551 556 b 605 451 585 509 597 482 b 617 360 613 421 617 390 b 605 267 617 328 613 297 b 568 186 597 237 585 210 b 504 128 551 162 530 143 b 413 106 478 113 448 106 z m 425 1017 l 300 818 l 415 818 l 613 1017 z "},"\u1edc":{"ha":1186,"x_min":0,"x_max":0,"o":"m 1136 982 l 1017 914 l 1063 836 b 1001 808 1038 823 1018 814 b 956 799 984 802 969 799 b 914 811 937 799 923 803 b 756 960 873 873 820 923 b 528 1015 691 997 615 1015 b 328 974 454 1015 387 1001 b 179 861 270 946 220 908 b 85 696 138 814 107 759 b 53 496 64 633 53 566 b 85 294 53 425 64 357 b 179 129 107 231 138 176 b 328 17 220 82 270 45 b 528 -24 387 -10 454 -24 b 727 17 602 -24 668 -10 b 876 129 786 45 836 82 b 970 294 917 176 948 231 b 1003 496 992 357 1003 425 b 960 721 1003 575 988 650 b 972 719 964 720 969 719 l 985 719 b 1051 732 1006 719 1028 724 b 1119 764 1075 740 1097 751 l 1226 825 z m 528 874 b 665 842 581 874 626 863 b 758 756 703 820 734 792 b 812 635 782 721 800 680 b 829 496 823 589 829 543 b 812 357 829 449 823 402 b 758 235 800 312 782 271 b 665 150 734 200 703 171 b 528 118 626 129 581 118 b 391 150 475 118 429 129 b 297 235 353 171 321 200 b 244 357 273 271 255 312 b 226 496 232 402 226 449 b 244 635 226 543 232 589 b 297 756 255 680 273 721 b 391 842 321 792 353 820 b 528 874 429 863 475 874 z m 525 1290 l 339 1290 l 536 1092 l 651 1092 z "},"\u1edd":{"ha":951,"x_min":0,"x_max":0,"o":"m 901 774 l 782 706 l 828 628 b 765 599 804 615 783 605 b 710 590 747 593 728 590 b 590 699 680 637 640 673 b 413 738 539 725 480 738 b 259 709 355 738 304 728 b 145 631 214 690 176 664 b 74 511 114 597 91 557 b 50 360 58 465 50 414 b 74 207 50 304 58 253 b 145 88 91 161 114 121 b 259 9 176 54 214 28 b 413 -19 304 -10 355 -19 b 566 9 470 -19 521 -10 b 680 88 611 28 649 54 b 751 207 711 121 734 161 b 775 360 767 253 775 304 b 750 511 775 414 767 465 b 817 524 771 511 794 515 b 885 556 840 532 863 543 l 992 617 z m 413 106 b 321 128 377 106 347 113 b 257 186 295 143 274 162 b 220 267 240 210 228 237 b 208 360 212 297 208 328 b 220 451 208 390 212 421 b 257 533 228 482 240 509 b 321 590 274 556 295 575 b 413 613 347 605 377 613 b 504 590 448 613 478 605 b 568 533 530 575 551 556 b 605 451 585 509 597 482 b 617 360 613 421 617 390 b 605 267 617 328 613 297 b 568 186 597 237 585 210 b 504 128 551 162 530 143 b 413 106 478 113 448 106 z m 401 1017 l 215 1017 l 413 818 l 528 818 z "},"\u1ede":{"ha":1186,"x_min":0,"x_max":0,"o":"m 1136 982 l 1017 914 l 1063 836 b 1001 808 1038 823 1018 814 b 956 799 984 802 969 799 b 914 811 937 799 923 803 b 756 960 873 873 820 923 b 528 1015 691 997 615 1015 b 328 974 454 1015 387 1001 b 179 861 270 946 220 908 b 85 696 138 814 107 759 b 53 496 64 633 53 566 b 85 294 53 425 64 357 b 179 129 107 231 138 176 b 328 17 220 82 270 45 b 528 -24 387 -10 454 -24 b 727 17 602 -24 668 -10 b 876 129 786 45 836 82 b 970 294 917 176 948 231 b 1003 496 992 357 1003 425 b 960 721 1003 575 988 650 b 972 719 964 720 969 719 l 985 719 b 1051 732 1006 719 1028 724 b 1119 764 1075 740 1097 751 l 1226 825 z m 528 874 b 665 842 581 874 626 863 b 758 756 703 820 734 792 b 812 635 782 721 800 680 b 829 496 823 589 829 543 b 812 357 829 449 823 402 b 758 235 800 312 782 271 b 665 150 734 200 703 171 b 528 118 626 129 581 118 b 391 150 475 118 429 129 b 297 235 353 171 321 200 b 244 357 273 271 255 312 b 226 496 232 402 226 449 b 244 635 226 543 232 589 b 297 756 255 680 273 721 b 391 842 321 792 353 820 b 528 874 429 863 475 874 z m 467 1364 l 469 1296 b 518 1301 484 1300 500 1301 b 572 1288 543 1301 561 1297 b 588 1243 582 1279 588 1264 b 570 1207 588 1231 582 1219 b 500 1185 559 1195 535 1188 l 500 1125 l 576 1125 l 579 1156 b 656 1196 617 1164 643 1177 b 675 1253 669 1214 675 1233 b 660 1308 675 1275 670 1294 b 624 1344 651 1323 639 1335 b 577 1363 610 1353 594 1359 b 531 1368 560 1366 544 1368 b 467 1364 513 1368 492 1367 z "},"\u1edf":{"ha":951,"x_min":0,"x_max":0,"o":"m 901 774 l 782 706 l 828 628 b 765 599 804 615 783 605 b 710 590 747 593 728 590 b 590 699 680 637 640 673 b 413 738 539 725 480 738 b 259 709 355 738 304 728 b 145 631 214 690 176 664 b 74 511 114 597 91 557 b 50 360 58 465 50 414 b 74 207 50 304 58 253 b 145 88 91 161 114 121 b 259 9 176 54 214 28 b 413 -19 304 -10 355 -19 b 566 9 470 -19 521 -10 b 680 88 611 28 649 54 b 751 207 711 121 734 161 b 775 360 767 253 775 304 b 750 511 775 414 767 465 b 817 524 771 511 794 515 b 885 556 840 532 863 543 l 992 617 z m 413 106 b 321 128 377 106 347 113 b 257 186 295 143 274 162 b 220 267 240 210 228 237 b 208 360 212 297 208 328 b 220 451 208 390 212 421 b 257 533 228 482 240 509 b 321 590 274 556 295 575 b 413 613 347 605 377 613 b 504 590 448 613 478 605 b 568 533 530 575 551 556 b 605 451 585 509 597 482 b 617 360 613 421 617 390 b 605 267 617 328 613 297 b 568 186 597 237 585 210 b 504 128 551 162 530 143 b 413 106 478 113 448 106 z m 346 1090 l 349 1022 b 397 1028 363 1026 380 1028 b 451 1015 422 1028 440 1023 b 467 969 461 1006 467 991 b 449 933 467 957 461 945 b 379 911 438 921 414 914 l 379 851 l 456 851 l 458 882 b 535 922 496 890 522 904 b 554 979 548 941 554 960 b 540 1035 554 1001 549 1020 b 503 1070 530 1050 518 1061 b 456 1089 489 1079 473 1085 b 410 1094 439 1093 424 1094 b 346 1090 392 1094 371 1093 z "},"\u1ee0":{"ha":1186,"x_min":0,"x_max":0,"o":"m 1136 982 l 1017 914 l 1063 836 b 1001 808 1038 823 1018 814 b 956 799 984 802 969 799 b 914 811 937 799 923 803 b 756 960 873 873 820 923 b 528 1015 691 997 615 1015 b 328 974 454 1015 387 1001 b 179 861 270 946 220 908 b 85 696 138 814 107 759 b 53 496 64 633 53 566 b 85 294 53 425 64 357 b 179 129 107 231 138 176 b 328 17 220 82 270 45 b 528 -24 387 -10 454 -24 b 727 17 602 -24 668 -10 b 876 129 786 45 836 82 b 970 294 917 176 948 231 b 1003 496 992 357 1003 425 b 960 721 1003 575 988 650 b 972 719 964 720 969 719 l 985 719 b 1051 732 1006 719 1028 724 b 1119 764 1075 740 1097 751 l 1226 825 z m 528 874 b 665 842 581 874 626 863 b 758 756 703 820 734 792 b 812 635 782 721 800 680 b 829 496 823 589 829 543 b 812 357 829 449 823 402 b 758 235 800 312 782 271 b 665 150 734 200 703 171 b 528 118 626 129 581 118 b 391 150 475 118 429 129 b 297 235 353 171 321 200 b 244 357 273 271 255 312 b 226 496 232 402 226 449 b 244 635 226 543 232 589 b 297 756 255 680 273 721 b 391 842 321 792 353 820 b 528 874 429 863 475 874 z m 782 1274 l 704 1274 b 681 1229 700 1255 692 1240 b 635 1213 671 1218 655 1213 b 597 1219 622 1213 609 1215 b 549 1238 584 1223 568 1229 b 484 1260 520 1250 498 1257 b 436 1265 470 1264 454 1265 b 379 1251 415 1265 396 1260 b 336 1213 363 1241 348 1228 b 307 1163 324 1198 314 1181 b 292 1108 300 1144 294 1126 l 371 1108 b 391 1151 375 1127 381 1141 b 431 1165 401 1160 414 1165 b 474 1160 446 1165 461 1163 b 525 1140 487 1156 504 1150 b 578 1122 543 1133 560 1127 b 628 1114 595 1116 612 1114 b 692 1126 653 1114 674 1118 b 736 1161 709 1135 724 1146 b 766 1211 749 1175 759 1192 b 782 1274 773 1231 778 1251 z "},"\u1ee1":{"ha":951,"x_min":0,"x_max":0,"o":"m 901 774 l 782 706 l 828 628 b 765 599 804 615 783 605 b 710 590 747 593 728 590 b 590 699 680 637 640 673 b 413 738 539 725 480 738 b 259 709 355 738 304 728 b 145 631 214 690 176 664 b 74 511 114 597 91 557 b 50 360 58 465 50 414 b 74 207 50 304 58 253 b 145 88 91 161 114 121 b 259 9 176 54 214 28 b 413 -19 304 -10 355 -19 b 566 9 470 -19 521 -10 b 680 88 611 28 649 54 b 751 207 711 121 734 161 b 775 360 767 253 775 304 b 750 511 775 414 767 465 b 817 524 771 511 794 515 b 885 556 840 532 863 543 l 992 617 z m 413 106 b 321 128 377 106 347 113 b 257 186 295 143 274 162 b 220 267 240 210 228 237 b 208 360 212 297 208 328 b 220 451 208 390 212 421 b 257 533 228 482 240 509 b 321 590 274 556 295 575 b 413 613 347 605 377 613 b 504 590 448 613 478 605 b 568 533 530 575 551 556 b 605 451 585 509 597 482 b 617 360 613 421 617 390 b 605 267 617 328 613 297 b 568 186 597 237 585 210 b 504 128 551 162 530 143 b 413 106 478 113 448 106 z m 660 1000 l 582 1000 b 559 956 577 981 570 967 b 513 939 548 944 533 939 b 474 945 500 939 487 941 b 426 964 462 949 446 956 b 362 987 398 976 376 984 b 314 992 347 990 331 992 b 257 977 293 992 274 987 b 214 940 240 967 226 955 b 185 889 202 924 192 907 b 169 835 177 870 172 852 l 249 835 b 269 877 252 853 259 867 b 308 892 278 887 292 892 b 351 886 324 892 338 890 b 403 867 364 882 381 876 b 456 848 420 859 438 853 b 506 840 473 843 490 840 b 569 853 531 840 552 844 b 614 888 587 861 602 873 b 644 938 627 901 637 918 b 660 1000 651 957 656 978 z "},"\u1ee2":{"ha":1186,"x_min":0,"x_max":0,"o":"m 1136 982 l 1017 914 l 1063 836 b 1001 808 1038 823 1018 814 b 956 799 984 802 969 799 b 914 811 937 799 923 803 b 756 960 873 873 820 923 b 528 1015 691 997 615 1015 b 328 974 454 1015 387 1001 b 179 861 270 946 220 908 b 85 696 138 814 107 759 b 53 496 64 633 53 566 b 85 294 53 425 64 357 b 179 129 107 231 138 176 b 328 17 220 82 270 45 b 528 -24 387 -10 454 -24 b 727 17 602 -24 668 -10 b 876 129 786 45 836 82 b 970 294 917 176 948 231 b 1003 496 992 357 1003 425 b 960 721 1003 575 988 650 b 972 719 964 720 969 719 l 985 719 b 1051 732 1006 719 1028 724 b 1119 764 1075 740 1097 751 l 1226 825 z m 528 874 b 665 842 581 874 626 863 b 758 756 703 820 734 792 b 812 635 782 721 800 680 b 829 496 823 589 829 543 b 812 357 829 449 823 402 b 758 235 800 312 782 271 b 665 150 734 200 703 171 b 528 118 626 129 581 118 b 391 150 475 118 429 129 b 297 235 353 171 321 200 b 244 357 273 271 255 312 b 226 496 232 402 226 449 b 244 635 226 543 232 589 b 297 756 255 680 273 721 b 391 842 321 792 353 820 b 528 874 429 863 475 874 z m 451 -275 l 610 -275 l 610 -125 l 451 -125 z "},"\u1ee3":{"ha":951,"x_min":0,"x_max":0,"o":"m 901 774 l 782 706 l 828 628 b 765 599 804 615 783 605 b 710 590 747 593 728 590 b 590 699 680 637 640 673 b 413 738 539 725 480 738 b 259 709 355 738 304 728 b 145 631 214 690 176 664 b 74 511 114 597 91 557 b 50 360 58 465 50 414 b 74 207 50 304 58 253 b 145 88 91 161 114 121 b 259 9 176 54 214 28 b 413 -19 304 -10 355 -19 b 566 9 470 -19 521 -10 b 680 88 611 28 649 54 b 751 207 711 121 734 161 b 775 360 767 253 775 304 b 750 511 775 414 767 465 b 817 524 771 511 794 515 b 885 556 840 532 863 543 l 992 617 z m 413 106 b 321 128 377 106 347 113 b 257 186 295 143 274 162 b 220 267 240 210 228 237 b 208 360 212 297 208 328 b 220 451 208 390 212 421 b 257 533 228 482 240 509 b 321 590 274 556 295 575 b 413 613 347 605 377 613 b 504 590 448 613 478 605 b 568 533 530 575 551 556 b 605 451 585 509 597 482 b 617 360 613 421 617 390 b 605 267 617 328 613 297 b 568 186 597 237 585 210 b 504 128 551 162 530 143 b 413 106 478 113 448 106 z m 335 -275 l 493 -275 l 493 -125 l 335 -125 z "},"\u1ee4":{"ha":1003,"x_min":0,"x_max":0,"o":"m 94 992 l 94 357 b 124 190 94 293 104 238 b 206 72 143 143 171 103 b 335 0 242 40 285 16 b 501 -24 385 -16 440 -24 b 668 0 563 -24 618 -16 b 797 72 718 16 761 40 b 879 190 832 103 860 143 b 908 357 899 238 908 293 l 908 992 l 735 992 l 735 414 b 730 313 735 381 733 347 b 702 220 727 278 717 247 b 633 153 687 193 664 170 b 501 126 602 135 558 126 b 370 153 445 126 401 135 b 301 220 339 170 316 193 b 273 313 285 247 276 278 b 268 414 270 347 268 381 l 268 992 z m 422 -243 l 581 -243 l 581 -93 l 422 -93 z "},"\u1ee5":{"ha":797,"x_min":0,"x_max":0,"o":"m 714 0 l 714 718 l 556 718 l 556 301 b 547 224 556 274 553 248 b 517 162 541 200 531 179 b 463 121 503 145 485 131 b 379 106 440 111 413 106 b 278 144 336 106 302 119 b 242 278 254 170 242 215 l 242 718 l 83 718 l 83 263 b 147 51 83 168 104 97 b 351 -19 189 4 257 -19 b 469 13 391 -19 430 -9 b 556 100 507 35 536 64 l 558 100 l 558 0 z m 319 -239 l 478 -239 l 478 -89 l 319 -89 z "},"\u1ee6":{"ha":1003,"x_min":0,"x_max":0,"o":"m 94 992 l 94 357 b 124 190 94 293 104 238 b 206 72 143 143 171 103 b 335 0 242 40 285 16 b 501 -24 385 -16 440 -24 b 668 0 563 -24 618 -16 b 797 72 718 16 761 40 b 879 190 832 103 860 143 b 908 357 899 238 908 293 l 908 992 l 735 992 l 735 414 b 730 313 735 381 733 347 b 702 220 727 278 717 247 b 633 153 687 193 664 170 b 501 126 602 135 558 126 b 370 153 445 126 401 135 b 301 220 339 170 316 193 b 273 313 285 247 276 278 b 268 414 270 347 268 381 l 268 992 z m 442 1364 l 444 1296 b 493 1301 459 1300 475 1301 b 547 1288 518 1301 536 1297 b 563 1243 557 1279 563 1264 b 545 1207 563 1231 557 1219 b 475 1185 534 1195 510 1188 l 475 1125 l 551 1125 l 554 1156 b 631 1196 592 1164 618 1177 b 650 1253 644 1214 650 1233 b 635 1308 650 1275 645 1294 b 599 1344 626 1323 614 1335 b 552 1363 585 1353 569 1359 b 506 1368 535 1366 519 1368 b 442 1364 488 1368 467 1367 z "},"\u1ee7":{"ha":797,"x_min":0,"x_max":0,"o":"m 714 0 l 714 718 l 556 718 l 556 301 b 547 224 556 274 553 248 b 517 162 541 200 531 179 b 463 121 503 145 485 131 b 379 106 440 111 413 106 b 278 144 336 106 302 119 b 242 278 254 170 242 215 l 242 718 l 83 718 l 83 263 b 147 51 83 168 104 97 b 351 -19 189 4 257 -19 b 469 13 391 -19 430 -9 b 556 100 507 35 536 64 l 558 100 l 558 0 z m 332 1090 l 335 1022 b 383 1028 350 1026 366 1028 b 437 1015 408 1028 426 1023 b 453 969 447 1006 453 991 b 435 933 453 957 447 945 b 365 911 424 921 400 914 l 365 851 l 442 851 l 444 882 b 521 922 482 890 508 904 b 540 979 534 941 540 960 b 526 1035 540 1001 535 1020 b 490 1070 516 1050 504 1061 b 442 1089 475 1079 459 1085 b 396 1094 425 1093 410 1094 b 332 1090 378 1094 357 1093 z "},"\u1ee8":{"ha":1147,"x_min":0,"x_max":0,"o":"m 1097 982 l 978 914 l 1024 836 b 960 808 1000 823 978 814 b 908 799 942 802 925 799 l 908 992 l 735 992 l 735 414 b 730 313 735 381 733 347 b 702 220 727 278 717 247 b 633 153 687 193 664 170 b 501 126 602 135 558 126 b 370 153 445 126 401 135 b 301 220 339 170 316 193 b 273 313 285 247 276 278 b 268 414 270 347 268 381 l 268 992 l 94 992 l 94 357 b 124 190 94 293 104 238 b 206 72 143 143 171 103 b 335 0 242 40 285 16 b 501 -24 385 -16 440 -24 b 668 0 563 -24 618 -16 b 797 72 718 16 761 40 b 879 190 832 103 860 143 b 908 357 899 238 908 293 l 908 724 b 944 719 919 721 931 719 b 1015 733 969 719 992 724 b 1081 764 1037 741 1059 752 l 1188 825 z m 519 1290 l 394 1092 l 510 1092 l 707 1290 z "},"\u1ee9":{"ha":942,"x_min":0,"x_max":0,"o":"m 892 774 l 772 706 l 818 628 b 758 599 795 615 775 605 b 714 590 742 593 727 590 l 714 718 l 556 718 l 556 301 b 547 224 556 274 553 248 b 517 162 541 200 531 179 b 463 121 503 145 485 131 b 379 106 440 111 413 106 b 278 144 336 106 302 119 b 242 278 254 170 242 215 l 242 718 l 83 718 l 83 263 b 147 51 83 168 104 97 b 351 -19 189 4 257 -19 b 469 13 391 -19 430 -9 b 556 100 507 35 536 64 l 558 100 l 558 0 l 714 0 l 714 514 b 727 512 719 513 723 512 b 740 511 731 511 736 511 b 807 524 762 511 784 515 b 875 556 830 532 853 543 l 982 617 z m 414 1017 l 289 818 l 404 818 l 601 1017 z "},"\u1eea":{"ha":1147,"x_min":0,"x_max":0,"o":"m 1097 982 l 978 914 l 1024 836 b 960 808 1000 823 978 814 b 908 799 942 802 925 799 l 908 992 l 735 992 l 735 414 b 730 313 735 381 733 347 b 702 220 727 278 717 247 b 633 153 687 193 664 170 b 501 126 602 135 558 126 b 370 153 445 126 401 135 b 301 220 339 170 316 193 b 273 313 285 247 276 278 b 268 414 270 347 268 381 l 268 992 l 94 992 l 94 357 b 124 190 94 293 104 238 b 206 72 143 143 171 103 b 335 0 242 40 285 16 b 501 -24 385 -16 440 -24 b 668 0 563 -24 618 -16 b 797 72 718 16 761 40 b 879 190 832 103 860 143 b 908 357 899 238 908 293 l 908 724 b 944 719 919 721 931 719 b 1015 733 969 719 992 724 b 1081 764 1037 741 1059 752 l 1188 825 z m 499 1290 l 313 1290 l 510 1092 l 625 1092 z "},"\u1eeb":{"ha":942,"x_min":0,"x_max":0,"o":"m 892 774 l 772 706 l 818 628 b 758 599 795 615 775 605 b 714 590 742 593 727 590 l 714 718 l 556 718 l 556 301 b 547 224 556 274 553 248 b 517 162 541 200 531 179 b 463 121 503 145 485 131 b 379 106 440 111 413 106 b 278 144 336 106 302 119 b 242 278 254 170 242 215 l 242 718 l 83 718 l 83 263 b 147 51 83 168 104 97 b 351 -19 189 4 257 -19 b 469 13 391 -19 430 -9 b 556 100 507 35 536 64 l 558 100 l 558 0 l 714 0 l 714 514 b 727 512 719 513 723 512 b 740 511 731 511 736 511 b 807 524 762 511 784 515 b 875 556 830 532 853 543 l 982 617 z m 389 1017 l 203 1017 l 400 818 l 515 818 z "},"\u1eec":{"ha":1147,"x_min":0,"x_max":0,"o":"m 1097 982 l 978 914 l 1024 836 b 960 808 1000 823 978 814 b 908 799 942 802 925 799 l 908 992 l 735 992 l 735 414 b 730 313 735 381 733 347 b 702 220 727 278 717 247 b 633 153 687 193 664 170 b 501 126 602 135 558 126 b 370 153 445 126 401 135 b 301 220 339 170 316 193 b 273 313 285 247 276 278 b 268 414 270 347 268 381 l 268 992 l 94 992 l 94 357 b 124 190 94 293 104 238 b 206 72 143 143 171 103 b 335 0 242 40 285 16 b 501 -24 385 -16 440 -24 b 668 0 563 -24 618 -16 b 797 72 718 16 761 40 b 879 190 832 103 860 143 b 908 357 899 238 908 293 l 908 724 b 944 719 919 721 931 719 b 1015 733 969 719 992 724 b 1081 764 1037 741 1059 752 l 1188 825 z m 439 1364 l 442 1296 b 490 1301 456 1300 473 1301 b 544 1288 515 1301 533 1297 b 560 1243 554 1279 560 1264 b 542 1207 560 1231 554 1219 b 472 1185 531 1195 507 1188 l 472 1125 l 549 1125 l 551 1156 b 628 1196 589 1164 615 1177 b 647 1253 641 1214 647 1233 b 633 1308 647 1275 642 1294 b 597 1344 623 1323 611 1335 b 549 1363 582 1353 566 1359 b 503 1368 532 1366 517 1368 b 439 1364 485 1368 464 1367 z "},"\u1eed":{"ha":942,"x_min":0,"x_max":0,"o":"m 892 774 l 772 706 l 818 628 b 758 599 795 615 775 605 b 714 590 742 593 727 590 l 714 718 l 556 718 l 556 301 b 547 224 556 274 553 248 b 517 162 541 200 531 179 b 463 121 503 145 485 131 b 379 106 440 111 413 106 b 278 144 336 106 302 119 b 242 278 254 170 242 215 l 242 718 l 83 718 l 83 263 b 147 51 83 168 104 97 b 351 -19 189 4 257 -19 b 469 13 391 -19 430 -9 b 556 100 507 35 536 64 l 558 100 l 558 0 l 714 0 l 714 514 b 727 512 719 513 723 512 b 740 511 731 511 736 511 b 807 524 762 511 784 515 b 875 556 830 532 853 543 l 982 617 z m 333 1090 l 336 1022 b 385 1028 351 1026 367 1028 b 438 1015 410 1028 428 1023 b 454 969 449 1006 454 991 b 437 933 454 957 448 945 b 367 911 425 921 402 914 l 367 851 l 443 851 l 446 882 b 522 922 484 890 509 904 b 542 979 535 941 542 960 b 527 1035 542 1001 537 1020 b 491 1070 517 1050 505 1061 b 444 1089 477 1079 461 1085 b 397 1094 427 1093 411 1094 b 333 1090 380 1094 358 1093 z "},"\u1eee":{"ha":1147,"x_min":0,"x_max":0,"o":"m 1097 982 l 978 914 l 1024 836 b 960 808 1000 823 978 814 b 908 799 942 802 925 799 l 908 992 l 735 992 l 735 414 b 730 313 735 381 733 347 b 702 220 727 278 717 247 b 633 153 687 193 664 170 b 501 126 602 135 558 126 b 370 153 445 126 401 135 b 301 220 339 170 316 193 b 273 313 285 247 276 278 b 268 414 270 347 268 381 l 268 992 l 94 992 l 94 357 b 124 190 94 293 104 238 b 206 72 143 143 171 103 b 335 0 242 40 285 16 b 501 -24 385 -16 440 -24 b 668 0 563 -24 618 -16 b 797 72 718 16 761 40 b 879 190 832 103 860 143 b 908 357 899 238 908 293 l 908 724 b 944 719 919 721 931 719 b 1015 733 969 719 992 724 b 1081 764 1037 741 1059 752 l 1188 825 z m 746 1274 l 668 1274 b 645 1229 663 1255 656 1240 b 599 1213 634 1218 619 1213 b 560 1219 586 1213 573 1215 b 513 1238 548 1223 532 1229 b 448 1260 484 1250 462 1257 b 400 1265 434 1264 418 1265 b 343 1251 379 1265 360 1260 b 300 1213 326 1241 312 1228 b 271 1163 288 1198 278 1181 b 256 1108 263 1144 258 1126 l 335 1108 b 355 1151 338 1127 345 1141 b 394 1165 365 1160 378 1165 b 438 1160 410 1165 425 1163 b 489 1140 450 1156 468 1150 b 542 1122 506 1133 524 1127 b 592 1114 559 1116 576 1114 b 656 1126 617 1114 638 1118 b 700 1161 673 1135 688 1146 b 730 1211 713 1175 723 1192 b 746 1274 737 1231 742 1251 z "},"\u1eef":{"ha":942,"x_min":0,"x_max":0,"o":"m 892 774 l 772 706 l 818 628 b 758 599 795 615 775 605 b 714 590 742 593 727 590 l 714 718 l 556 718 l 556 301 b 547 224 556 274 553 248 b 517 162 541 200 531 179 b 463 121 503 145 485 131 b 379 106 440 111 413 106 b 278 144 336 106 302 119 b 242 278 254 170 242 215 l 242 718 l 83 718 l 83 263 b 147 51 83 168 104 97 b 351 -19 189 4 257 -19 b 469 13 391 -19 430 -9 b 556 100 507 35 536 64 l 558 100 l 558 0 l 714 0 l 714 514 b 727 512 719 513 723 512 b 740 511 731 511 736 511 b 807 524 762 511 784 515 b 875 556 830 532 853 543 l 982 617 z m 643 1000 l 565 1000 b 542 956 561 981 553 967 b 496 939 532 944 516 939 b 458 945 483 939 470 941 b 410 964 445 949 429 956 b 345 987 381 976 359 984 b 297 992 331 990 315 992 b 240 977 276 992 257 987 b 197 940 224 967 209 955 b 168 889 185 924 175 907 b 153 835 161 870 156 852 l 232 835 b 252 877 236 853 242 867 b 292 892 262 887 275 892 b 335 886 307 892 322 890 b 386 867 348 882 365 876 b 439 848 404 859 421 853 b 489 840 456 843 473 840 b 553 853 514 840 535 844 b 597 888 570 861 585 873 b 627 938 610 901 620 918 b 643 1000 634 957 639 978 z "},"\u1ef0":{"ha":1147,"x_min":0,"x_max":0,"o":"m 1097 982 l 978 914 l 1024 836 b 960 808 1000 823 978 814 b 908 799 942 802 925 799 l 908 992 l 735 992 l 735 414 b 730 313 735 381 733 347 b 702 220 727 278 717 247 b 633 153 687 193 664 170 b 501 126 602 135 558 126 b 370 153 445 126 401 135 b 301 220 339 170 316 193 b 273 313 285 247 276 278 b 268 414 270 347 268 381 l 268 992 l 94 992 l 94 357 b 124 190 94 293 104 238 b 206 72 143 143 171 103 b 335 0 242 40 285 16 b 501 -24 385 -16 440 -24 b 668 0 563 -24 618 -16 b 797 72 718 16 761 40 b 879 190 832 103 860 143 b 908 357 899 238 908 293 l 908 724 b 944 719 919 721 931 719 b 1015 733 969 719 992 724 b 1081 764 1037 741 1059 752 l 1188 825 z m 425 -275 l 583 -275 l 583 -125 l 425 -125 z "},"\u1ef1":{"ha":942,"x_min":0,"x_max":0,"o":"m 892 774 l 772 706 l 818 628 b 758 599 795 615 775 605 b 714 590 742 593 727 590 l 714 718 l 556 718 l 556 301 b 547 224 556 274 553 248 b 517 162 541 200 531 179 b 463 121 503 145 485 131 b 379 106 440 111 413 106 b 278 144 336 106 302 119 b 242 278 254 170 242 215 l 242 718 l 83 718 l 83 263 b 147 51 83 168 104 97 b 351 -19 189 4 257 -19 b 469 13 391 -19 430 -9 b 556 100 507 35 536 64 l 558 100 l 558 0 l 714 0 l 714 514 b 727 512 719 513 723 512 b 740 511 731 511 736 511 b 807 524 762 511 784 515 b 875 556 830 532 853 543 l 982 617 z m 319 -275 l 478 -275 l 478 -125 l 319 -125 z "},"\u1ef2":{"ha":900,"x_min":0,"x_max":0,"o":"m 364 389 l 364 0 l 538 0 l 538 389 l 908 992 l 714 992 l 456 547 l 193 992 l -8 992 z m 390 1260 l 204 1260 l 401 1061 l 517 1061 z "},"\u1ef3":{"ha":721,"x_min":0,"x_max":0,"o":"m 4 718 l 276 3 l 258 -53 b 243 -94 254 -69 249 -82 b 223 -126 238 -106 231 -117 b 193 -146 215 -134 205 -141 b 147 -153 181 -150 166 -153 b 110 -149 134 -153 122 -152 b 72 -143 98 -147 85 -145 l 72 -276 b 182 -285 108 -282 145 -285 b 285 -265 224 -285 258 -278 b 352 -210 312 -251 334 -233 b 398 -132 370 -188 385 -162 b 436 -39 410 -102 423 -71 l 715 718 l 550 718 l 368 182 l 365 182 l 178 718 z m 324 982 l 138 982 l 335 783 l 450 783 z "},"\u1ef4":{"ha":900,"x_min":0,"x_max":0,"o":"m 364 389 l 364 0 l 538 0 l 538 389 l 908 992 l 714 992 l 456 547 l 193 992 l -8 992 z m 371 -219 l 529 -219 l 529 -69 l 371 -69 z "},"\u1ef5":{"ha":721,"x_min":0,"x_max":0,"o":"m 4 718 l 276 3 l 258 -53 b 243 -94 254 -69 249 -82 b 223 -126 238 -106 231 -117 b 193 -146 215 -134 205 -141 b 147 -153 181 -150 166 -153 b 110 -149 134 -153 122 -152 b 72 -143 98 -147 85 -145 l 72 -276 b 182 -285 108 -282 145 -285 b 285 -265 224 -285 258 -278 b 352 -210 312 -251 334 -233 b 398 -132 370 -188 385 -162 b 436 -39 410 -102 423 -71 l 715 718 l 550 718 l 368 182 l 365 182 l 178 718 z m 472 -353 l 631 -353 l 631 -203 l 472 -203 z "},"\u1ef6":{"ha":900,"x_min":0,"x_max":0,"o":"m 364 389 l 364 0 l 538 0 l 538 389 l 908 992 l 714 992 l 456 547 l 193 992 l -8 992 z m 385 1364 l 388 1296 b 436 1301 402 1300 419 1301 b 490 1288 461 1301 479 1297 b 506 1243 500 1279 506 1264 b 488 1207 506 1231 500 1219 b 418 1185 477 1195 453 1188 l 418 1125 l 494 1125 l 497 1156 b 574 1196 535 1164 561 1177 b 593 1253 587 1214 593 1233 b 578 1308 593 1275 588 1294 b 542 1344 569 1323 557 1335 b 495 1363 528 1353 512 1359 b 449 1368 478 1366 463 1368 b 385 1364 431 1368 410 1367 z "},"\u1ef7":{"ha":721,"x_min":0,"x_max":0,"o":"m 4 718 l 276 3 l 258 -53 b 243 -94 254 -69 249 -82 b 223 -126 238 -106 231 -117 b 193 -146 215 -134 205 -141 b 147 -153 181 -150 166 -153 b 110 -149 134 -153 122 -152 b 72 -143 98 -147 85 -145 l 72 -276 b 182 -285 108 -282 145 -285 b 285 -265 224 -285 258 -278 b 352 -210 312 -251 334 -233 b 398 -132 370 -188 385 -162 b 436 -39 410 -102 423 -71 l 715 718 l 550 718 l 368 182 l 365 182 l 178 718 z m 294 1090 l 297 1022 b 346 1028 312 1026 328 1028 b 399 1015 371 1028 389 1023 b 415 969 410 1006 415 991 b 398 933 415 957 409 945 b 328 911 386 921 363 914 l 328 851 l 404 851 l 407 882 b 483 922 445 890 470 904 b 503 979 496 941 503 960 b 488 1035 503 1001 498 1020 b 452 1070 478 1050 466 1061 b 405 1089 438 1079 422 1085 b 358 1094 388 1093 372 1094 b 294 1090 341 1094 319 1093 z "},"\u1ef8":{"ha":900,"x_min":0,"x_max":0,"o":"m 364 389 l 364 0 l 538 0 l 538 389 l 908 992 l 714 992 l 456 547 l 193 992 l -8 992 z m 696 1226 l 618 1226 b 595 1182 613 1208 606 1193 b 549 1165 584 1171 569 1165 b 510 1172 536 1165 523 1167 b 463 1190 498 1176 482 1182 b 398 1213 434 1202 412 1210 b 350 1218 384 1216 368 1218 b 293 1203 329 1218 310 1213 b 250 1166 276 1194 262 1181 b 221 1115 238 1151 228 1134 b 206 1061 213 1097 208 1079 l 285 1061 b 305 1103 288 1080 295 1094 b 344 1118 315 1113 328 1118 b 388 1113 360 1118 375 1116 b 439 1093 400 1109 418 1102 b 492 1074 456 1086 474 1079 b 542 1067 509 1069 526 1067 b 606 1079 567 1067 588 1071 b 650 1114 623 1088 638 1099 b 680 1164 663 1128 673 1144 b 696 1226 687 1183 692 1204 z "},"\u1ef9":{"ha":721,"x_min":0,"x_max":0,"o":"m 4 718 l 276 3 l 258 -53 b 243 -94 254 -69 249 -82 b 223 -126 238 -106 231 -117 b 193 -146 215 -134 205 -141 b 147 -153 181 -150 166 -153 b 110 -149 134 -153 122 -152 b 72 -143 98 -147 85 -145 l 72 -276 b 182 -285 108 -282 145 -285 b 285 -265 224 -285 258 -278 b 352 -210 312 -251 334 -233 b 398 -132 370 -188 385 -162 b 436 -39 410 -102 423 -71 l 715 718 l 550 718 l 368 182 l 365 182 l 178 718 z m 606 953 l 528 953 b 505 908 523 934 516 919 b 458 892 494 897 479 892 b 420 898 445 892 433 894 b 372 917 408 902 392 908 b 308 940 344 929 322 936 b 260 944 293 943 277 944 b 203 930 238 944 219 940 b 160 892 186 920 172 908 b 131 842 148 877 138 860 b 115 788 123 823 118 805 l 194 788 b 215 830 198 806 205 820 b 254 844 224 840 238 844 b 297 839 270 844 284 843 b 349 819 310 835 327 829 b 401 801 366 812 384 806 b 451 793 419 796 436 793 b 515 806 476 793 498 797 b 560 840 533 814 548 825 b 590 890 573 854 583 871 b 606 953 597 910 602 931 z "},"\u2013":{"ha":694,"x_min":0,"x_max":0,"o":"m 694 454 l 0 454 l 0 310 l 694 310 z "},"\u2014":{"ha":1389,"x_min":0,"x_max":0,"o":"m 1389 454 l 0 454 l 0 310 l 1389 310 z "},"\u2015":{"ha":2161,"x_min":0,"x_max":0,"o":"m 68 453 l 68 303 l 2093 303 l 2093 453 z "},"\u2018":{"ha":386,"x_min":0,"x_max":0,"o":"m 93 607 l 283 607 l 283 790 l 193 790 b 283 925 196 862 226 906 l 283 1007 b 93 760 156 985 93 902 z "},"\u2019":{"ha":386,"x_min":0,"x_max":0,"o":"m 292 989 l 101 989 l 101 806 l 192 806 b 101 671 189 734 159 689 l 101 589 b 292 836 228 611 292 694 z "},"\u201a":{"ha":386,"x_min":0,"x_max":0,"o":"m 281 178 l 107 178 l 107 0 l 193 0 b 170 -87 191 -37 184 -66 b 107 -137 157 -109 136 -125 l 107 -215 b 281 39 223 -189 281 -105 z "},"\u201c":{"ha":617,"x_min":0,"x_max":0,"o":"m 82 613 l 257 613 l 257 790 l 172 790 b 257 926 172 860 200 905 l 257 1006 b 133 931 209 996 168 972 b 82 783 99 891 82 842 z m 356 613 l 531 613 l 531 790 l 446 790 b 531 926 446 860 474 905 l 531 1006 b 407 931 482 996 441 972 b 356 783 373 891 356 842 z "},"\u201d":{"ha":617,"x_min":0,"x_max":0,"o":"m 532 989 l 357 989 l 357 811 l 442 811 b 357 675 442 742 413 696 l 357 596 b 481 670 405 605 446 630 b 532 818 515 710 532 760 z m 258 989 l 83 989 l 83 811 l 168 811 b 83 675 168 742 140 696 l 83 596 b 207 670 131 605 173 630 b 258 818 241 710 258 760 z "},"\u201e":{"ha":617,"x_min":0,"x_max":0,"o":"m 533 178 l 358 178 l 358 0 l 443 0 b 358 -136 443 -69 415 -115 l 358 -215 b 482 -141 406 -206 448 -181 b 533 7 516 -101 533 -51 z m 260 178 l 85 178 l 85 0 l 169 0 b 85 -136 169 -69 141 -115 l 85 -215 b 208 -141 133 -206 174 -181 b 260 7 243 -101 260 -51 z "},"\u2020":{"ha":772,"x_min":0,"x_max":0,"o":"m 726 710 l 461 710 l 461 989 l 308 989 l 308 710 l 46 710 l 46 575 l 308 575 l 308 -222 l 461 -222 l 461 575 l 726 575 z "},"\u2021":{"ha":772,"x_min":0,"x_max":0,"o":"m 726 719 l 460 719 l 460 989 l 310 989 l 310 719 l 46 719 l 46 586 l 310 586 l 310 181 l 46 181 l 46 47 l 310 47 l 310 -221 l 460 -221 l 460 47 l 726 47 l 726 181 l 460 181 l 460 586 l 726 586 z "},"\u2022":{"ha":694,"x_min":0,"x_max":0,"o":"m 347 742 b 172 669 279 742 220 718 b 100 494 124 621 100 563 b 172 319 100 426 124 368 b 347 247 220 271 279 247 b 522 319 416 247 474 271 b 594 494 570 368 594 426 b 522 669 594 563 570 621 b 347 742 474 718 416 742 z "},"\u2026":{"ha":1389,"x_min":0,"x_max":0,"o":"m 150 0 l 313 0 l 313 181 l 150 181 z m 613 0 l 775 0 l 775 181 l 613 181 z m 1075 0 l 1239 0 l 1239 181 l 1075 181 z "},"\u2030":{"ha":1594,"x_min":0,"x_max":0,"o":"m 913 1007 l 813 1007 l 181 -43 l 283 -43 z m 804 456 b 652 395 738 456 687 435 b 600 217 617 355 600 295 b 804 -17 600 61 668 -17 b 953 46 869 -17 919 4 b 1004 226 987 88 1004 148 b 952 396 1004 300 987 356 b 804 456 917 436 868 456 z m 1283 457 b 1133 395 1218 457 1167 436 b 1081 217 1098 354 1081 294 b 1283 -17 1081 61 1148 -17 b 1433 46 1348 -17 1398 4 b 1485 225 1467 88 1485 147 b 1433 397 1485 300 1467 357 b 1283 457 1398 437 1348 457 z m 313 982 b 162 920 247 982 197 961 b 110 743 127 879 110 820 b 161 569 110 667 127 609 b 310 508 195 528 245 508 b 460 571 375 508 425 529 b 514 747 496 613 514 671 b 463 922 514 823 497 881 b 313 982 428 962 378 982 z m 803 374 b 890 224 861 374 890 324 b 804 67 890 119 862 67 b 735 103 773 67 750 79 b 713 217 720 127 713 165 b 803 374 713 321 743 374 z m 1282 374 b 1371 222 1341 374 1371 323 b 1283 67 1371 119 1342 67 b 1192 217 1222 67 1192 117 b 1282 374 1192 321 1222 374 z m 311 899 b 400 746 370 899 400 848 b 311 593 400 644 370 593 b 222 739 252 593 222 642 b 311 899 222 845 252 899 z "},"\u2032":{"ha":456,"x_min":0,"x_max":0,"o":"m 381 1018 l 218 1018 l 94 625 l 203 625 z "},"\u2033":{"ha":771,"x_min":0,"x_max":0,"o":"m 390 1018 l 228 1018 l 104 625 l 213 625 z m 676 1018 l 514 1018 l 390 625 l 499 625 z "},"\u2034":{"ha":1053,"x_min":0,"x_max":0,"o":"m 381 1018 l 218 1018 l 94 625 l 203 625 z m 667 1018 l 504 1018 l 381 625 l 489 625 z m 954 1018 l 792 1018 l 668 625 l 776 625 z "},"\u2039":{"ha":360,"x_min":0,"x_max":0,"o":"m 274 611 l 60 443 l 60 292 l 274 121 l 274 265 l 143 368 l 274 468 z "},"\u203a":{"ha":360,"x_min":0,"x_max":0,"o":"m 85 613 l 85 468 l 217 365 l 85 265 l 85 124 l 299 289 l 299 443 z "},"\u2044":{"ha":232,"x_min":0,"x_max":0,"o":"m -229 -33 l -119 -33 l 461 1006 l 353 1006 z "},"\u2070":{"ha":485,"x_min":0,"x_max":0,"o":"m 22 682 b 40 532 22 622 28 572 b 87 435 51 492 67 460 b 157 383 107 411 130 393 b 242 367 184 372 212 367 b 326 383 271 367 300 372 b 397 435 353 393 377 411 b 445 532 418 460 434 492 b 463 682 457 572 463 622 b 445 828 463 740 457 789 b 397 924 434 868 418 900 b 326 976 377 948 353 965 b 242 992 300 986 271 992 b 157 976 212 992 184 986 b 87 924 130 965 107 948 b 40 828 67 900 51 868 b 22 682 28 789 22 740 z m 144 682 l 144 718 b 147 764 144 733 145 748 b 156 810 149 780 152 795 b 173 850 160 825 166 838 b 201 879 180 862 189 872 b 242 890 212 887 226 890 b 283 879 258 890 272 887 b 312 850 294 872 304 862 b 329 810 320 838 325 825 b 338 764 333 795 336 780 b 340 718 339 748 340 733 l 340 682 b 339 619 340 664 340 644 b 328 549 338 595 334 572 b 299 492 322 527 313 507 b 242 468 285 476 266 468 b 185 492 217 468 198 476 b 156 549 172 507 162 527 b 146 619 150 572 147 595 b 144 682 145 644 144 664 z "},"\u2074":{"ha":493,"x_min":0,"x_max":0,"o":"m 276 826 l 276 618 l 118 618 l 274 826 z m 276 518 l 276 379 l 392 379 l 392 518 l 471 518 l 471 618 l 392 618 l 392 979 l 282 979 l 22 629 l 22 518 z "},"\u2075":{"ha":490,"x_min":0,"x_max":0,"o":"m 436 879 l 436 979 l 100 979 l 42 647 l 151 647 b 190 684 163 664 176 676 b 243 696 203 692 221 696 b 286 687 259 696 273 693 b 319 663 299 681 310 673 b 339 627 328 652 334 641 b 346 583 344 614 346 599 b 339 540 346 569 344 554 b 318 503 334 526 327 514 b 285 477 309 492 298 483 b 243 468 273 471 259 468 b 176 492 216 468 194 476 b 144 557 158 509 147 530 l 22 557 b 42 474 23 525 30 498 b 91 415 54 451 70 431 b 162 379 112 400 135 388 b 246 367 188 371 216 367 b 331 383 275 367 304 372 b 401 428 357 393 381 408 b 450 497 422 447 438 470 b 468 583 462 524 468 553 b 456 663 468 611 464 638 b 419 727 447 688 435 709 b 362 771 404 745 384 760 b 283 788 339 782 313 788 b 219 776 259 788 238 784 b 165 740 200 769 182 757 l 164 743 l 188 879 z "},"\u2076":{"ha":485,"x_min":0,"x_max":0,"o":"m 249 690 b 290 681 264 690 278 687 b 318 655 301 674 311 666 b 335 619 325 644 331 632 b 340 578 338 605 340 592 b 335 537 340 564 338 550 b 317 501 331 523 325 512 b 288 477 309 491 300 483 b 249 468 277 471 263 468 b 208 477 234 468 220 471 b 178 502 196 483 186 491 b 159 538 169 513 163 525 b 153 579 155 552 153 565 b 158 622 153 594 155 608 b 176 657 162 635 168 647 b 207 681 185 667 195 675 b 249 690 219 687 233 690 z m 336 825 l 453 825 b 389 948 445 878 424 919 b 258 992 354 977 310 992 b 149 963 215 992 178 982 b 76 890 119 944 95 920 b 35 788 57 859 43 826 b 22 678 26 751 22 714 b 33 565 22 640 26 602 b 69 465 40 528 52 495 b 140 394 87 436 111 412 b 253 367 170 376 207 367 b 338 384 284 367 313 372 b 404 431 364 396 386 411 b 447 501 423 451 437 474 b 463 586 457 527 463 556 b 451 658 463 610 459 634 b 417 721 444 681 432 702 b 353 765 399 739 378 754 b 278 782 329 776 304 782 b 201 767 249 782 224 777 b 143 715 179 756 160 739 l 142 717 b 148 774 142 733 144 752 b 167 833 152 795 158 815 b 201 881 175 852 186 868 b 256 900 215 894 233 900 b 309 877 277 900 295 892 b 336 825 323 862 332 844 z "},"\u2077":{"ha":454,"x_min":0,"x_max":0,"o":"m 432 875 l 432 979 l 22 979 l 22 865 l 307 865 b 168 638 250 797 203 721 b 106 379 133 554 112 468 l 236 379 b 249 508 236 419 241 462 b 288 646 258 555 271 600 b 349 774 304 691 325 734 b 432 875 373 813 400 847 z "},"\u2078":{"ha":496,"x_min":0,"x_max":0,"o":"m 157 817 b 185 878 157 844 166 864 b 249 900 203 893 225 900 b 295 891 268 900 284 897 b 322 869 307 885 316 878 b 335 842 329 861 333 852 b 339 817 338 833 339 824 b 313 758 339 791 330 771 b 249 738 295 744 274 738 b 214 742 237 738 225 739 b 185 758 203 746 193 751 b 165 782 176 765 170 773 b 157 817 159 791 157 803 z m 47 828 b 69 749 47 798 55 772 b 135 704 84 727 106 712 l 135 703 b 52 651 100 694 72 676 b 22 554 32 625 22 593 b 41 471 22 522 28 494 b 92 413 53 448 71 428 b 165 378 114 397 138 385 b 250 367 192 370 220 367 b 332 378 278 367 305 371 b 404 414 359 386 383 398 b 455 473 425 430 442 449 b 474 556 467 497 474 524 b 444 651 474 594 464 625 b 363 703 425 677 398 694 l 363 704 b 427 751 390 713 412 729 b 450 831 442 774 450 800 b 440 880 450 844 447 861 b 406 933 433 899 421 916 b 343 974 390 949 369 963 b 249 992 317 986 286 992 b 176 981 225 992 200 988 b 111 950 152 974 131 964 b 65 899 92 936 76 919 b 47 828 53 878 47 855 z m 143 561 b 174 631 143 592 153 615 b 250 656 195 647 220 656 b 290 649 264 656 277 653 b 322 629 302 644 313 638 b 344 599 331 621 339 611 b 353 560 350 588 353 575 b 345 519 353 545 350 531 b 323 487 340 506 333 496 b 290 466 313 478 302 471 b 250 458 277 461 264 458 b 208 466 235 458 221 461 b 175 487 195 471 184 478 b 152 519 166 496 158 506 b 143 561 146 531 143 545 z "},"\u2079":{"ha":485,"x_min":0,"x_max":0,"o":"m 236 668 b 195 678 220 668 207 671 b 167 703 184 684 174 693 b 150 740 159 714 154 726 b 144 781 146 753 144 767 b 150 822 144 794 146 808 b 167 857 154 835 159 847 b 197 881 175 867 185 875 b 236 890 208 887 221 890 b 276 881 251 890 264 887 b 307 856 288 875 299 867 b 326 820 315 846 322 834 b 332 779 330 807 332 793 b 326 737 332 764 330 750 b 308 701 323 723 317 712 b 278 677 300 691 290 683 b 236 668 266 671 252 668 z m 149 533 l 32 533 b 96 410 39 481 61 440 b 226 367 131 381 175 367 b 336 395 270 367 306 376 b 409 469 366 414 390 439 b 450 570 428 499 442 533 b 463 681 458 608 463 644 b 452 793 463 719 459 756 b 415 893 445 830 433 863 b 344 965 398 923 374 947 b 232 992 315 983 277 992 b 147 974 200 992 172 986 b 81 927 121 963 99 947 b 38 858 62 907 48 884 b 22 772 27 831 22 803 b 33 701 22 748 26 724 b 68 638 41 677 52 656 b 131 593 86 619 107 604 b 207 576 156 582 181 576 b 283 592 236 576 261 581 b 342 643 306 602 325 619 l 343 642 b 336 585 342 625 340 606 b 318 525 332 563 326 544 b 284 478 310 506 298 491 b 229 458 270 465 251 458 b 176 481 208 458 190 466 b 149 533 161 495 152 513 z "},"\u2080":{"ha":485,"x_min":0,"x_max":0,"o":"m 22 303 b 40 153 22 243 28 193 b 87 56 51 113 67 81 b 157 3 107 32 130 14 b 242 -12 184 -7 212 -12 b 326 3 271 -12 300 -7 b 397 56 353 14 377 32 b 445 153 418 81 434 113 b 463 303 457 193 463 243 b 445 449 463 361 457 410 b 397 544 434 489 418 520 b 326 597 377 569 353 586 b 242 613 300 607 271 613 b 157 597 212 613 184 607 b 87 544 130 586 107 569 b 40 449 67 520 51 489 b 22 303 28 410 22 361 z m 144 303 l 144 339 b 147 385 144 354 145 369 b 156 431 149 400 152 416 b 173 471 160 445 166 459 b 201 500 180 483 189 493 b 242 511 212 507 226 511 b 283 500 258 511 272 507 b 312 471 294 493 304 483 b 329 431 320 459 325 445 b 338 385 333 416 336 400 b 340 339 339 369 340 354 l 340 303 b 339 240 340 285 340 264 b 328 170 338 216 334 193 b 299 113 322 147 313 128 b 242 89 285 97 266 89 b 185 113 217 89 198 97 b 156 170 172 128 162 147 b 146 240 150 193 147 216 b 144 303 145 264 144 285 z "},"\u2081":{"ha":500,"x_min":0,"x_max":0,"o":"m 50 503 l 50 422 l 218 422 l 218 0 l 339 0 l 339 600 l 242 600 b 217 556 237 582 229 568 b 174 526 206 544 191 534 b 117 508 157 518 138 512 b 50 503 95 505 73 503 z "},"\u2082":{"ha":500,"x_min":0,"x_max":0,"o":"m 467 0 l 467 97 l 171 97 b 194 135 175 111 183 124 b 234 169 206 147 219 158 b 284 202 249 181 266 191 b 339 236 302 213 320 224 b 391 273 356 247 374 259 b 437 317 408 286 423 301 b 469 369 450 332 461 350 b 481 432 477 388 481 409 b 463 514 481 463 475 491 b 416 570 452 537 436 556 b 347 602 396 584 373 595 b 264 613 320 609 293 613 b 97 552 194 613 138 592 b 36 386 56 512 36 456 l 157 386 b 164 434 158 403 160 419 b 181 475 168 449 173 463 b 211 504 188 487 198 497 b 258 515 224 512 240 515 b 329 494 285 515 309 508 b 360 429 350 481 360 459 b 340 369 359 407 352 387 b 294 321 328 352 313 336 b 233 278 276 306 255 292 b 168 238 210 265 188 251 b 67 141 125 211 92 178 b 29 0 43 103 30 56 z "},"\u2083":{"ha":500,"x_min":0,"x_max":0,"o":"m 203 361 l 203 281 b 263 279 223 281 243 281 b 316 266 283 277 301 273 b 353 236 331 259 344 249 b 368 183 363 223 368 206 b 333 111 368 153 356 129 b 250 85 310 94 282 85 b 161 119 211 85 181 96 b 133 203 141 143 131 170 l 22 203 b 81 44 24 135 44 82 b 250 -12 118 6 174 -12 b 339 0 281 -12 311 -8 b 412 37 367 8 391 21 b 461 97 433 53 449 73 b 479 178 473 120 479 147 b 449 275 479 217 469 249 b 365 324 428 301 400 317 l 365 326 b 432 374 395 337 417 353 b 454 451 447 396 454 422 b 437 526 454 481 448 506 b 390 576 425 547 410 563 b 324 604 371 589 349 599 b 249 613 300 610 275 613 b 96 559 185 613 134 595 b 35 410 58 523 38 474 l 146 410 b 172 485 144 440 153 466 b 247 515 192 505 217 515 b 281 511 258 515 269 514 b 311 499 292 508 302 504 b 334 477 320 493 328 486 b 343 446 340 468 343 458 b 331 404 343 429 339 415 b 299 378 322 393 312 384 b 254 364 286 371 271 367 b 203 361 238 361 220 360 z "},"\u2084":{"ha":493,"x_min":0,"x_max":0,"o":"m 276 447 l 276 239 l 118 239 l 274 447 z m 276 139 l 276 0 l 392 0 l 392 139 l 471 139 l 471 239 l 392 239 l 392 600 l 282 600 l 22 250 l 22 139 z "},"\u2085":{"ha":490,"x_min":0,"x_max":0,"o":"m 436 500 l 436 600 l 100 600 l 42 268 l 151 268 b 190 305 163 285 176 297 b 243 317 203 313 221 317 b 286 308 259 317 273 314 b 319 283 299 302 310 294 b 339 248 328 273 334 261 b 346 204 344 234 346 220 b 339 161 346 189 344 175 b 318 124 334 147 327 135 b 285 98 309 113 298 104 b 243 89 273 92 259 89 b 176 113 216 89 194 97 b 144 178 158 129 147 151 l 22 178 b 42 95 23 146 30 119 b 91 36 54 72 70 52 b 162 0 112 20 135 8 b 246 -12 188 -8 216 -12 b 331 3 275 -12 304 -7 b 401 49 357 14 381 29 b 450 118 422 68 438 91 b 468 204 462 145 468 174 b 456 283 468 232 464 258 b 419 348 447 308 435 330 b 362 392 404 366 384 381 b 283 408 339 403 313 408 b 219 397 259 408 238 405 b 165 361 200 390 182 378 l 164 364 l 188 500 z "},"\u2086":{"ha":485,"x_min":0,"x_max":0,"o":"m 249 311 b 290 301 264 311 278 308 b 318 276 301 295 311 286 b 335 240 325 265 331 253 b 340 199 338 226 340 213 b 335 158 340 185 338 171 b 317 122 331 144 325 132 b 288 98 309 112 300 104 b 249 89 277 92 263 89 b 208 98 234 89 220 92 b 178 123 196 104 186 112 b 159 159 169 134 163 146 b 153 200 155 172 153 186 b 158 242 153 215 155 229 b 176 278 162 256 168 268 b 207 302 185 288 195 296 b 249 311 219 308 233 311 z m 336 446 l 453 446 b 389 569 445 499 424 540 b 258 613 354 598 310 613 b 149 584 215 613 178 603 b 76 510 119 565 95 541 b 35 409 57 480 43 447 b 22 299 26 372 22 335 b 33 186 22 261 26 223 b 69 86 40 149 52 116 b 140 15 87 56 111 33 b 253 -12 170 -3 207 -12 b 338 5 284 -12 313 -7 b 404 52 364 16 386 32 b 447 122 423 72 437 95 b 463 207 457 148 463 176 b 451 278 463 231 459 255 b 417 342 444 302 432 323 b 353 386 399 360 378 375 b 278 403 329 397 304 403 b 201 388 249 403 224 398 b 143 336 179 377 160 360 l 142 338 b 148 394 142 354 144 373 b 167 454 152 416 158 436 b 201 501 175 473 186 488 b 256 521 215 514 233 521 b 309 498 277 521 295 513 b 336 446 323 483 332 465 z "},"\u2087":{"ha":454,"x_min":0,"x_max":0,"o":"m 432 496 l 432 600 l 22 600 l 22 486 l 307 486 b 168 258 250 418 203 342 b 106 0 133 175 112 89 l 236 0 b 249 129 236 40 241 83 b 288 267 258 175 271 221 b 349 394 304 312 325 355 b 432 496 373 434 400 468 z "},"\u2088":{"ha":496,"x_min":0,"x_max":0,"o":"m 157 438 b 185 499 157 464 166 485 b 249 521 203 514 225 521 b 295 512 268 521 284 518 b 322 490 307 506 316 499 b 335 463 329 482 333 473 b 339 438 338 453 339 445 b 313 378 339 412 330 392 b 249 358 295 365 274 358 b 214 363 237 358 225 360 b 185 378 203 366 193 372 b 165 403 176 385 170 394 b 157 438 159 412 157 424 z m 47 449 b 69 370 47 419 55 393 b 135 325 84 347 106 332 l 135 324 b 52 272 100 314 72 297 b 22 175 32 246 22 214 b 41 92 22 143 28 115 b 92 33 53 69 71 49 b 165 -1 114 18 138 6 b 250 -12 192 -9 220 -12 b 332 -1 278 -12 305 -9 b 404 35 359 7 383 19 b 455 94 425 50 442 70 b 474 176 467 117 474 145 b 444 272 474 214 464 246 b 363 324 425 298 398 315 l 363 325 b 427 372 390 334 412 350 b 450 451 442 394 450 421 b 440 501 450 465 447 482 b 406 553 433 520 421 537 b 343 595 390 570 369 584 b 249 613 317 607 286 613 b 176 602 225 613 200 609 b 111 571 152 595 131 585 b 65 519 92 557 76 540 b 47 449 53 499 47 475 z m 143 182 b 174 252 143 213 153 236 b 250 276 195 268 220 276 b 290 269 264 276 277 274 b 322 250 302 265 313 258 b 344 220 331 242 339 232 b 353 181 350 209 353 195 b 345 140 353 166 350 152 b 323 108 340 127 333 116 b 290 87 313 99 302 92 b 250 79 277 82 264 79 b 208 87 235 79 221 82 b 175 108 195 92 184 99 b 152 140 166 116 158 127 b 143 182 146 152 143 166 z "},"\u2089":{"ha":485,"x_min":0,"x_max":0,"o":"m 236 289 b 195 299 220 289 207 292 b 167 324 184 305 174 314 b 150 360 159 335 154 347 b 144 401 146 374 144 388 b 150 442 144 415 146 429 b 167 478 154 456 159 468 b 197 502 175 488 185 496 b 236 511 208 508 221 511 b 276 502 251 511 264 508 b 307 477 288 496 299 488 b 326 441 315 466 322 454 b 332 400 330 428 332 414 b 326 358 332 385 330 371 b 308 322 323 344 317 332 b 278 298 300 312 290 304 b 236 289 266 292 252 289 z m 149 154 l 32 154 b 96 31 39 101 61 60 b 226 -12 131 2 175 -12 b 336 16 270 -12 306 -3 b 409 90 366 35 390 59 b 450 191 428 120 442 153 b 463 301 458 228 463 265 b 452 414 463 339 459 377 b 415 514 445 451 433 484 b 344 585 398 544 374 567 b 232 613 315 603 277 613 b 147 595 200 613 172 607 b 81 548 121 584 99 568 b 38 478 62 528 48 505 b 22 393 27 452 22 424 b 33 322 22 369 26 345 b 68 258 41 298 52 277 b 131 214 86 240 107 225 b 207 197 156 203 181 197 b 283 213 236 197 261 202 b 342 264 306 223 325 240 l 343 263 b 336 206 342 246 340 227 b 318 146 332 184 326 164 b 284 99 310 127 298 112 b 229 79 270 86 251 79 b 176 101 208 79 190 87 b 149 154 161 116 152 134 z "},"\u20ab":{"ha":861,"x_min":0,"x_max":0,"o":"m 760 0 l 760 811 l 869 811 l 869 901 l 760 901 l 760 992 l 601 992 l 601 901 l 389 901 l 389 811 l 601 811 l 601 625 l 599 625 b 553 676 587 644 572 661 b 494 711 535 690 516 702 b 428 731 473 720 451 727 b 360 738 405 735 382 738 b 245 716 321 738 283 730 b 145 649 208 702 174 679 b 75 532 116 618 93 579 b 49 364 57 485 49 429 b 69 213 49 310 56 260 b 132 92 83 166 104 126 b 237 10 160 57 195 30 b 385 -19 279 -9 328 -19 b 514 8 430 -19 473 -10 b 607 97 555 26 586 56 l 610 97 l 610 0 z m 207 351 b 217 447 207 384 210 416 b 252 530 224 478 236 505 b 315 590 268 554 289 574 b 408 613 340 605 371 613 b 553 546 469 613 518 590 b 607 360 589 501 607 439 b 595 267 607 328 603 297 b 559 186 587 237 575 210 b 497 128 543 162 522 143 b 406 106 471 113 441 106 b 317 126 371 106 342 113 b 255 182 292 140 271 159 b 219 261 239 205 227 231 b 207 351 211 291 207 321 z m 67 -236 l 767 -236 l 767 -94 l 67 -94 z "},"\u20ac":{"ha":772,"x_min":0,"x_max":0,"o":"m 788 906 b 540 992 702 963 620 992 b 267 885 429 992 338 956 b 140 632 206 823 163 738 l 67 632 l 31 543 l 131 543 b 128 493 129 515 128 499 b 131 449 128 480 129 465 l 68 449 l 31 361 l 138 361 b 250 96 153 249 191 161 b 540 -18 319 20 416 -18 b 750 43 617 -18 687 2 l 750 197 b 656 128 715 165 683 142 b 540 106 626 113 588 106 b 371 185 469 106 413 132 b 300 361 335 228 311 287 l 579 361 l 614 449 l 293 449 b 292 492 292 451 292 466 l 292 524 b 293 543 292 534 292 540 l 633 543 l 669 632 l 303 632 b 374 794 316 698 339 752 b 529 868 415 844 467 868 b 724 779 600 868 664 838 z "},"\u20b4":{"ha":900,"x_min":0,"x_max":0,"o":"m 13 653 l 13 549 l 318 549 b 208 506 279 536 242 521 b 117 447 173 490 143 470 l 13 447 l 13 343 l 53 343 b 48 316 51 334 49 325 b 46 288 47 307 46 298 b 80 145 46 232 57 184 b 169 49 103 106 132 74 b 296 -6 206 24 249 5 b 440 -24 343 -18 391 -24 b 655 -1 526 -24 598 -16 b 776 43 712 15 752 29 l 776 211 b 649 144 747 184 704 162 b 429 118 593 127 520 118 b 332 131 391 118 359 122 b 267 165 305 140 283 151 b 231 213 250 179 238 195 b 219 268 223 231 219 250 b 236 343 219 297 225 322 l 851 343 l 851 447 l 408 447 b 492 467 435 455 463 461 b 577 487 520 473 549 480 b 658 512 605 494 632 502 b 728 549 683 522 706 534 l 851 549 l 851 653 l 807 653 b 814 686 810 663 812 674 b 817 724 816 698 817 711 b 785 853 817 774 806 817 b 703 944 765 890 737 920 b 586 998 669 969 630 986 b 454 1015 543 1009 499 1015 b 356 1009 423 1015 390 1013 b 257 992 321 1005 288 999 b 172 969 225 985 197 978 b 117 942 147 960 129 951 l 117 786 b 259 845 155 806 202 826 b 461 874 316 864 383 874 b 524 867 481 874 502 872 b 582 847 545 863 564 856 b 626 807 600 837 614 824 b 643 744 637 790 643 769 b 629 693 643 725 638 708 b 592 653 620 678 607 665 z "},"\u20b8":{"ha":772,"x_min":0,"x_max":0,"o":"m 308 581 l 308 0 l 464 0 l 464 581 l 739 581 l 739 724 l 33 724 l 33 581 z m 739 829 l 739 972 l 33 972 l 33 829 z "},"\u20b9":{"ha":760,"x_min":0,"x_max":0,"o":"m 510 639 l 660 639 l 701 757 l 514 757 b 482 854 510 791 500 824 l 660 854 l 701 972 l 92 972 l 50 854 l 217 854 b 309 826 256 852 286 843 b 354 757 332 810 347 787 l 92 757 l 50 639 l 351 639 b 281 556 338 601 315 573 b 157 531 247 539 206 531 l 75 531 l 75 429 b 135 405 99 429 119 421 b 200 326 152 389 173 363 l 446 0 l 621 0 l 289 438 b 426 508 339 451 385 475 b 510 639 468 541 496 584 z "},"\u20ba":{"ha":772,"x_min":0,"x_max":0,"o":"m 322 519 l 578 628 l 578 718 l 322 610 l 322 711 l 578 819 l 578 910 l 322 801 l 322 999 l 182 999 l 182 742 l 44 683 l 44 593 l 182 651 l 182 550 l 44 492 l 44 401 l 182 460 l 182 -4 l 247 -4 b 601 106 409 -4 527 32 b 711 429 674 179 711 287 l 575 429 b 561 313 575 388 570 349 b 517 220 552 278 537 247 b 439 158 497 194 471 173 b 322 136 406 144 368 136 z "},"\u20bc":{"ha":772,"x_min":0,"x_max":0,"o":"m 444 903 l 444 999 l 328 999 l 328 901 b 193 850 274 895 229 878 b 106 722 157 822 128 779 b 60 496 84 664 69 588 b 46 154 50 403 46 289 l 46 0 l 206 0 l 206 136 b 210 436 206 257 207 357 b 227 625 213 515 218 578 b 264 727 236 672 248 706 b 328 768 280 748 301 762 l 328 97 l 444 97 l 444 768 b 508 728 470 763 491 749 b 545 626 524 708 536 674 b 563 438 554 579 560 516 b 567 136 565 359 567 258 l 567 0 l 726 0 l 726 154 b 713 497 726 290 722 405 b 666 723 703 590 688 665 b 579 851 644 781 615 824 b 444 903 543 879 498 896 z "},"\u20bd":{"ha":772,"x_min":0,"x_max":0,"o":"m 472 147 l 472 272 l 290 272 l 290 381 l 389 381 b 559 408 457 381 514 390 b 667 477 604 426 640 449 b 723 572 694 505 712 537 b 739 674 734 606 739 640 b 725 778 739 708 734 743 b 672 874 716 813 698 845 b 566 946 646 903 611 927 b 393 974 521 964 463 974 l 131 974 l 131 522 l 29 522 l 29 383 l 131 383 l 131 272 l 29 272 l 29 147 l 131 147 l 131 0 l 290 0 l 290 147 z m 290 522 l 290 832 l 394 832 b 462 826 418 832 440 830 b 521 802 484 822 503 814 b 563 754 538 791 553 775 b 579 675 574 734 579 707 b 561 598 579 644 573 618 b 515 551 549 578 534 563 b 453 528 496 540 475 533 b 392 522 432 524 411 522 z "},"\u20be":{"ha":833,"x_min":0,"x_max":0,"o":"m 528 864 b 581 858 546 864 564 862 l 581 496 l 661 496 l 661 836 b 781 708 717 807 756 765 b 817 496 805 651 817 580 l 982 496 b 944 706 982 570 969 640 b 833 874 918 771 881 828 b 661 972 784 921 727 954 l 661 1125 l 581 1125 l 581 989 b 528 992 556 991 539 992 b 476 989 514 992 497 991 l 476 1125 l 396 1125 l 396 972 b 227 879 332 955 276 924 b 115 720 178 835 141 782 b 76 524 89 659 76 593 b 97 376 76 475 83 426 b 162 236 111 325 133 279 b 271 136 191 194 227 160 l 271 131 l 135 131 l 135 0 l 885 0 l 885 136 l 557 136 b 388 183 491 136 435 152 b 279 312 340 215 304 258 b 242 496 254 366 242 427 b 277 708 242 580 253 651 b 396 836 301 765 340 807 l 396 496 l 476 496 l 476 858 b 528 864 497 862 514 864 z "},"\u2103":{"ha":1558,"x_min":0,"x_max":0,"o":"m 147 783 b 158 834 147 801 151 818 b 185 876 165 850 174 864 b 226 903 197 887 211 897 b 278 914 242 910 259 914 b 328 903 295 914 312 910 b 370 876 345 897 359 887 b 398 834 382 864 391 850 b 408 783 405 818 408 801 b 398 732 408 765 405 748 b 370 691 391 716 382 703 b 328 663 359 679 345 670 b 278 653 312 656 295 653 b 226 663 259 653 242 656 b 185 691 211 670 197 679 b 158 732 174 703 165 716 b 147 783 151 748 147 765 z m 69 783 b 86 702 69 755 75 728 b 131 636 97 677 112 655 b 197 592 149 618 171 603 b 278 575 222 581 249 575 b 359 592 306 575 334 581 b 425 636 384 603 406 618 b 469 702 444 655 458 677 b 486 783 481 728 486 755 b 469 865 486 812 481 839 b 425 931 458 890 444 912 b 359 975 406 949 384 964 b 278 992 334 986 306 992 b 197 975 249 992 222 986 b 131 931 171 964 149 949 b 86 865 112 912 97 890 b 69 783 75 839 69 812 z m 1331 676 l 1504 676 b 1461 819 1499 730 1484 778 b 1370 926 1438 861 1408 897 b 1240 992 1333 955 1289 977 b 1083 1015 1191 1008 1139 1015 b 884 974 1009 1015 943 1001 b 735 861 825 946 775 908 b 641 696 694 814 663 759 b 608 496 619 633 608 566 b 641 294 608 425 619 357 b 735 129 663 231 694 176 b 884 17 775 82 825 45 b 1083 -24 943 -10 1009 -24 b 1249 6 1144 -24 1199 -14 b 1379 88 1299 25 1342 53 b 1467 215 1416 124 1446 166 b 1506 378 1489 264 1502 319 l 1336 378 b 1313 276 1332 342 1325 308 b 1263 194 1300 245 1284 217 b 1186 138 1241 170 1216 152 b 1083 118 1156 125 1122 118 b 947 150 1031 118 985 129 b 853 235 908 171 877 200 b 799 357 829 271 811 312 b 782 496 788 402 782 449 b 799 635 782 543 788 589 b 853 756 811 680 829 721 b 947 842 877 792 908 820 b 1083 874 985 863 1031 874 b 1178 859 1119 874 1151 869 b 1250 818 1206 849 1230 836 b 1300 756 1270 800 1287 780 b 1331 676 1313 731 1323 705 z "},"\u2109":{"ha":1379,"x_min":0,"x_max":0,"o":"m 147 783 b 158 834 147 801 151 818 b 185 876 165 850 174 864 b 226 903 197 887 211 897 b 278 914 242 910 259 914 b 328 903 295 914 312 910 b 370 876 345 897 359 887 b 398 834 382 864 391 850 b 408 783 405 818 408 801 b 398 732 408 765 405 748 b 370 691 391 716 382 703 b 328 663 359 679 345 670 b 278 653 312 656 295 653 b 226 663 259 653 242 656 b 185 691 211 670 197 679 b 158 732 174 703 165 716 b 147 783 151 748 147 765 z m 69 783 b 86 702 69 755 75 728 b 131 636 97 677 112 655 b 197 592 149 618 171 603 b 278 575 222 581 249 575 b 359 592 306 575 334 581 b 425 636 384 603 406 618 b 469 702 444 655 458 677 b 486 783 481 728 486 755 b 469 865 486 812 481 839 b 425 931 458 890 444 912 b 359 975 406 949 384 964 b 278 992 334 986 306 992 b 197 975 249 992 222 986 b 131 931 171 964 149 949 b 86 865 112 912 97 890 b 69 783 75 839 69 812 z m 661 992 l 661 0 l 835 0 l 835 440 l 1283 440 l 1283 582 l 835 582 l 835 842 l 1346 842 l 1346 992 z "},"\u2113":{"ha":694,"x_min":0,"x_max":0,"o":"m 611 67 l 558 147 l 556 147 b 433 94 512 112 471 94 b 369 119 408 94 387 103 b 342 199 351 135 342 162 l 342 374 b 596 804 511 528 596 672 b 545 947 596 863 579 911 b 410 1001 511 983 466 1001 b 249 928 345 1001 291 977 b 186 740 207 880 186 817 l 186 399 l 51 281 l 106 197 l 108 197 l 188 271 l 188 174 b 243 33 188 114 206 67 b 396 -19 280 -2 331 -19 b 611 67 474 -19 545 9 z m 469 794 b 342 506 469 695 427 599 l 342 769 b 361 863 342 809 348 841 b 408 897 374 886 390 897 b 452 868 426 897 441 888 b 469 794 464 849 469 824 z "},"\u2116":{"ha":1483,"x_min":0,"x_max":0,"o":"m 1394 388 b 1334 543 1394 453 1374 505 b 1168 600 1294 581 1238 600 b 1001 543 1097 600 1041 581 b 942 383 962 505 942 452 b 1001 224 942 315 961 262 b 1168 168 1040 187 1096 168 b 1336 225 1241 168 1297 187 b 1394 388 1375 263 1394 317 z m 861 0 l 861 967 l 696 967 l 696 261 l 282 967 l 99 967 l 99 0 l 264 0 l 264 704 l 678 0 z m 1274 383 b 1243 293 1274 346 1263 316 b 1168 258 1223 270 1198 258 b 1092 292 1138 258 1112 270 b 1063 383 1072 315 1063 345 b 1092 475 1063 421 1072 452 b 1168 510 1112 498 1138 510 b 1243 474 1198 510 1223 498 b 1274 383 1263 451 1274 420 z m 1394 0 l 1394 118 l 943 118 l 943 0 z "},"\u2117":{"ha":1111,"x_min":0,"x_max":0,"o":"m 954 496 b 924 322 954 432 944 374 b 839 186 903 269 875 224 b 713 98 803 148 761 119 b 557 67 664 77 613 67 b 390 101 495 67 439 78 b 265 193 341 123 299 154 b 185 329 230 232 203 277 b 157 496 166 381 157 437 b 188 669 157 559 167 617 b 272 806 208 722 236 768 b 399 894 308 844 351 873 b 557 925 448 915 500 925 b 713 894 613 925 664 915 b 839 806 761 873 803 844 b 924 669 875 768 903 722 b 954 496 944 617 954 559 z m 1065 496 b 1024 708 1065 574 1052 644 b 913 872 997 772 960 827 b 751 978 866 918 812 953 b 557 1015 689 1003 625 1015 b 361 978 488 1015 423 1003 b 198 872 299 953 245 918 b 87 708 151 827 114 772 b 46 496 59 644 46 574 b 84 290 46 422 59 353 b 190 125 109 226 145 171 b 351 16 234 79 288 42 b 557 -24 413 -10 482 -24 b 751 14 625 -24 689 -11 b 913 119 812 39 866 74 b 1024 283 960 165 997 219 b 1065 496 1052 347 1065 418 z m 350 772 l 350 196 l 450 196 l 450 417 l 604 417 b 705 434 646 417 679 422 b 764 478 730 446 750 460 b 792 535 778 495 787 515 b 800 594 797 556 800 576 b 792 652 800 612 797 631 b 764 710 787 673 778 692 b 705 754 750 727 730 742 b 604 772 679 766 646 772 z m 450 500 l 450 689 l 600 689 b 638 685 613 689 625 688 b 669 670 650 682 660 677 b 692 642 679 663 686 654 b 700 594 697 630 700 614 b 690 549 700 576 697 561 b 666 519 684 537 676 527 b 633 504 656 512 645 507 b 597 500 620 501 608 500 z "},"\u2122":{"ha":1375,"x_min":0,"x_max":0,"o":"m 303 494 l 400 494 l 400 913 l 558 913 l 558 989 l 143 989 l 143 913 l 303 913 z m 639 494 l 728 494 l 728 901 l 871 494 l 946 494 l 1089 901 l 1089 494 l 1176 494 l 1176 989 l 1033 989 l 910 640 l 785 989 l 639 989 z "},"\u2126":{"ha":1051,"x_min":0,"x_max":0,"o":"m 969 0 l 969 126 l 714 126 l 714 192 b 904 331 797 217 861 263 b 969 568 948 398 969 477 b 839 881 969 696 926 800 b 517 1001 752 961 644 1001 b 195 877 390 1001 283 960 b 64 564 108 794 64 690 b 129 331 64 475 86 397 b 318 192 173 265 236 219 l 318 126 l 64 126 l 64 0 l 440 0 l 440 261 b 276 363 368 278 313 312 b 221 553 239 413 221 477 b 304 774 221 641 249 715 b 518 864 360 834 431 864 b 731 775 604 864 675 834 b 814 556 786 716 814 643 b 756 363 814 481 794 417 b 592 261 717 309 662 275 l 592 0 z "},"\u212a":{"ha":951,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 279 0 l 279 333 l 421 474 l 746 0 l 963 0 l 539 596 l 935 992 l 721 992 l 279 540 l 279 992 z "},"\u212b":{"ha":926,"x_min":0,"x_max":0,"o":"m 371 992 l -10 0 l 169 0 l 263 263 l 658 263 l 751 0 l 938 0 l 556 992 z m 310 394 l 460 821 l 464 821 l 613 394 z m 379 1149 b 403 1210 379 1174 387 1194 b 463 1233 420 1225 439 1233 b 522 1210 487 1233 506 1225 b 546 1149 538 1194 546 1174 b 522 1088 546 1125 538 1104 b 463 1064 506 1072 487 1064 b 403 1088 439 1064 420 1072 b 379 1149 387 1104 379 1125 z m 463 1006 b 517 1016 482 1006 500 1009 b 564 1045 534 1023 550 1033 b 596 1090 578 1058 588 1073 b 607 1149 603 1108 607 1127 b 596 1207 607 1170 603 1189 b 564 1253 588 1225 578 1240 b 517 1282 550 1266 534 1275 b 463 1292 500 1288 482 1292 b 408 1282 443 1292 425 1288 b 362 1253 391 1275 375 1266 b 330 1207 348 1240 338 1225 b 318 1149 322 1189 318 1170 b 329 1090 318 1127 322 1108 b 360 1045 337 1073 347 1058 b 407 1016 374 1033 389 1023 b 463 1006 425 1009 443 1006 z "},"\u212e":{"ha":833,"x_min":0,"x_max":0,"o":"m 779 360 b 678 636 778 473 745 565 b 419 743 612 707 526 743 b 160 634 312 743 225 707 b 61 360 94 561 61 470 b 160 86 61 250 94 159 b 419 -24 227 13 313 -24 b 600 20 492 -24 552 -9 b 736 164 648 49 694 97 l 688 193 b 419 26 622 82 532 26 b 218 108 340 26 273 54 l 218 360 z m 218 410 l 218 611 b 418 694 274 667 340 694 b 622 611 496 694 564 667 l 622 410 z "},"\u2153":{"ha":1158,"x_min":0,"x_max":0,"o":"m -1 882 l -1 801 l 167 801 l 167 379 l 288 379 l 288 979 l 190 979 b 166 935 186 962 178 947 b 123 905 154 923 140 913 b 65 888 106 897 87 891 b -1 882 44 884 22 882 z m 760 1006 l 178 -33 l 288 -33 l 868 1006 z m 861 361 l 861 281 b 922 279 881 281 902 281 b 974 266 941 277 959 273 b 1012 236 990 259 1002 249 b 1026 183 1022 223 1026 206 b 992 111 1026 153 1015 129 b 908 85 969 94 941 85 b 819 119 869 85 840 96 b 792 203 799 143 790 170 l 681 203 b 739 44 682 135 702 82 b 908 -12 776 6 832 -12 b 997 0 940 -12 969 -8 b 1070 37 1025 8 1049 21 b 1119 97 1091 53 1107 73 b 1138 178 1131 120 1138 147 b 1107 275 1138 217 1127 249 b 1024 324 1087 301 1059 317 l 1024 326 b 1090 374 1053 337 1075 353 b 1113 451 1105 396 1113 422 b 1095 526 1113 481 1107 506 b 1049 576 1084 547 1068 563 b 983 604 1029 589 1007 599 b 907 613 958 610 933 613 b 754 559 843 613 792 595 b 693 410 716 523 696 474 l 804 410 b 831 485 802 440 811 466 b 906 515 850 505 875 515 b 939 511 917 515 928 514 b 969 499 950 508 960 504 b 992 477 979 493 986 486 b 1001 446 998 468 1001 458 b 989 404 1001 429 997 415 b 957 378 981 393 970 384 b 913 364 944 371 929 367 b 861 361 896 361 879 360 z "},"\u2154":{"ha":1158,"x_min":0,"x_max":0,"o":"m 454 379 l 454 476 l 158 476 b 182 515 163 490 171 503 b 222 549 193 526 206 538 b 272 581 237 560 253 571 b 326 615 290 592 308 603 b 378 652 344 626 361 639 b 424 696 396 666 411 680 b 456 748 438 712 448 729 b 468 811 464 767 468 788 b 451 893 468 843 462 870 b 403 949 439 916 423 935 b 334 981 384 964 360 974 b 251 992 308 988 280 992 b 85 931 181 992 125 972 b 24 765 44 891 24 836 l 144 765 b 151 813 145 782 148 798 b 168 854 155 828 161 842 b 199 883 175 866 186 876 b 246 894 212 891 227 894 b 317 874 273 894 296 888 b 347 808 337 860 347 838 b 328 749 346 786 340 766 b 282 700 316 731 300 715 b 220 658 263 685 243 671 b 156 617 197 644 176 631 b 55 520 113 590 79 558 b 17 379 30 483 18 436 z m 838 1006 l 256 -33 l 365 -33 l 946 1006 z m 867 361 l 867 281 b 927 279 887 281 907 281 b 980 266 947 277 965 273 b 1017 236 995 259 1008 249 b 1032 183 1027 223 1032 206 b 997 111 1032 153 1020 129 b 914 85 974 94 946 85 b 825 119 875 85 845 96 b 797 203 805 143 795 170 l 686 203 b 744 44 688 135 707 82 b 914 -12 781 6 838 -12 b 1003 0 945 -12 975 -8 b 1076 37 1031 8 1055 21 b 1125 97 1097 53 1113 73 b 1143 178 1137 120 1143 147 b 1113 275 1143 217 1133 249 b 1029 324 1092 301 1064 317 l 1029 326 b 1096 374 1059 337 1081 353 b 1118 451 1111 396 1118 422 b 1101 526 1118 481 1112 506 b 1054 576 1089 547 1074 563 b 988 604 1035 589 1013 599 b 913 613 964 610 938 613 b 760 559 849 613 798 595 b 699 410 722 523 701 474 l 810 410 b 836 485 808 440 817 466 b 911 515 856 505 881 515 b 944 511 922 515 933 514 b 975 499 956 508 966 504 b 998 477 984 493 992 486 b 1007 446 1004 468 1007 458 b 994 404 1007 429 1003 415 b 963 378 986 393 975 384 b 918 364 950 371 935 367 b 867 361 901 361 884 360 z "},"\u215b":{"ha":1158,"x_min":0,"x_max":0,"o":"m 15 882 l 15 801 l 183 801 l 183 379 l 304 379 l 304 979 l 207 979 b 183 935 202 962 194 947 b 140 905 171 923 157 913 b 82 888 122 897 103 891 b 15 882 61 884 38 882 z m 776 1006 l 194 -33 l 304 -33 l 885 1006 z m 826 438 b 854 499 826 464 836 485 b 918 521 873 514 894 521 b 965 512 938 521 953 518 b 992 490 976 506 985 499 b 1005 463 998 482 1003 473 b 1008 438 1007 453 1008 445 b 982 378 1008 412 1000 392 b 918 358 964 365 943 358 b 883 363 906 358 894 360 b 854 378 872 366 863 372 b 834 403 846 385 839 394 b 826 438 829 412 826 424 z m 717 449 b 739 370 717 419 724 393 b 804 325 754 347 775 332 l 804 324 b 722 272 769 314 741 297 b 692 175 702 246 692 214 b 710 92 692 143 698 115 b 762 33 723 69 740 49 b 835 -1 784 18 808 6 b 919 -12 862 -9 890 -12 b 1001 -1 947 -12 975 -9 b 1074 35 1028 7 1052 19 b 1124 94 1095 50 1112 70 b 1143 176 1137 117 1143 145 b 1114 272 1143 214 1133 246 b 1032 324 1094 298 1067 315 l 1032 325 b 1097 372 1060 334 1081 350 b 1119 451 1112 394 1119 421 b 1109 501 1119 465 1116 482 b 1075 553 1102 520 1091 537 b 1013 595 1059 570 1038 584 b 918 613 987 607 955 613 b 846 602 894 613 870 609 b 781 571 822 595 800 585 b 734 519 761 557 746 540 b 717 449 722 499 717 475 z m 813 182 b 844 252 813 213 823 236 b 919 276 865 268 890 276 b 959 269 933 276 947 274 b 992 250 972 265 982 258 b 1014 220 1001 242 1008 232 b 1022 181 1019 209 1022 195 b 1015 140 1022 166 1020 152 b 992 108 1009 127 1002 116 b 959 87 983 99 972 92 b 919 79 947 82 933 79 b 878 87 905 79 891 82 b 844 108 865 92 854 99 b 822 140 835 116 828 127 b 813 182 816 152 813 166 z "},"\u215c":{"ha":1158,"x_min":0,"x_max":0,"o":"m 190 740 l 190 660 b 251 658 211 661 231 660 b 303 645 271 656 288 652 b 341 615 319 638 331 628 b 356 563 351 602 356 585 b 321 490 356 532 344 508 b 238 464 298 473 270 464 b 149 499 199 464 169 475 b 121 582 128 522 119 550 l 10 582 b 68 424 12 514 31 462 b 238 367 105 386 162 367 b 326 379 269 367 299 371 b 399 416 354 388 378 400 b 449 476 420 432 437 452 b 467 557 461 499 467 526 b 436 654 467 596 456 628 b 353 703 416 680 388 696 l 353 706 b 419 753 382 716 405 732 b 442 831 434 775 442 801 b 424 906 442 860 436 885 b 378 956 413 926 397 943 b 312 983 358 969 336 978 b 236 992 287 989 262 992 b 83 938 172 992 121 974 b 22 789 45 903 25 853 l 133 789 b 160 865 131 819 140 845 b 235 894 179 884 204 894 b 268 890 246 894 257 893 b 299 878 279 888 289 883 b 322 856 308 872 316 865 b 331 825 328 847 331 837 b 318 783 331 808 326 794 b 286 757 310 772 299 763 b 242 743 273 750 258 746 b 190 740 225 740 208 739 z m 815 1006 l 233 -33 l 343 -33 l 924 1006 z m 826 438 b 854 499 826 464 836 485 b 918 521 873 514 894 521 b 965 512 938 521 953 518 b 992 490 976 506 985 499 b 1005 463 998 482 1003 473 b 1008 438 1007 453 1008 445 b 982 378 1008 412 1000 392 b 918 358 964 365 943 358 b 883 363 906 358 894 360 b 854 378 872 366 863 372 b 834 403 846 385 839 394 b 826 438 829 412 826 424 z m 717 449 b 739 370 717 419 724 393 b 804 325 754 347 775 332 l 804 324 b 722 272 769 314 741 297 b 692 175 702 246 692 214 b 710 92 692 143 698 115 b 762 33 723 69 740 49 b 835 -1 784 18 808 6 b 919 -12 862 -9 890 -12 b 1001 -1 947 -12 975 -9 b 1074 35 1028 7 1052 19 b 1124 94 1095 50 1112 70 b 1143 176 1137 117 1143 145 b 1114 272 1143 214 1133 246 b 1032 324 1094 298 1067 315 l 1032 325 b 1097 372 1060 334 1081 350 b 1119 451 1112 394 1119 421 b 1109 501 1119 465 1116 482 b 1075 553 1102 520 1091 537 b 1013 595 1059 570 1038 584 b 918 613 987 607 955 613 b 846 602 894 613 870 609 b 781 571 822 595 800 585 b 734 519 761 557 746 540 b 717 449 722 499 717 475 z m 813 182 b 844 252 813 213 823 236 b 919 276 865 268 890 276 b 959 269 933 276 947 274 b 992 250 972 265 982 258 b 1014 220 1001 242 1008 232 b 1022 181 1019 209 1022 195 b 1015 140 1022 166 1020 152 b 992 108 1009 127 1002 116 b 959 87 983 99 972 92 b 919 79 947 82 933 79 b 878 87 905 79 891 82 b 844 108 865 92 854 99 b 822 140 835 116 828 127 b 813 182 816 152 813 166 z "},"\u215d":{"ha":1158,"x_min":0,"x_max":0,"o":"m 428 879 l 428 979 l 92 979 l 33 647 l 143 647 b 181 684 155 664 168 676 b 235 696 195 692 213 696 b 278 687 250 696 265 693 b 310 663 291 681 302 673 b 331 627 319 652 326 641 b 338 583 335 614 338 599 b 331 540 338 569 335 554 b 310 503 326 526 319 514 b 277 477 300 492 290 483 b 235 468 265 471 250 468 b 167 492 208 468 185 476 b 136 557 149 509 139 530 l 14 557 b 33 474 15 525 21 498 b 83 415 45 451 62 431 b 153 379 103 400 127 388 b 238 367 180 371 208 367 b 322 383 267 367 295 372 b 393 428 349 393 373 408 b 442 497 413 447 430 470 b 460 583 454 524 460 553 b 447 663 460 611 456 638 b 411 727 439 688 427 709 b 353 771 395 745 376 760 b 275 788 331 782 305 788 b 210 776 251 788 229 784 b 157 740 191 769 174 757 l 156 743 l 179 879 z m 814 1006 l 232 -33 l 342 -33 l 922 1006 z m 829 438 b 857 499 829 464 838 485 b 921 521 875 514 897 521 b 967 512 940 521 956 518 b 994 490 979 506 988 499 b 1008 463 1001 482 1005 473 b 1011 438 1010 453 1011 445 b 985 378 1011 412 1002 392 b 921 358 967 365 946 358 b 886 363 909 358 897 360 b 857 378 875 366 865 372 b 837 403 849 385 842 394 b 829 438 832 412 829 424 z m 719 449 b 742 370 719 419 727 393 b 807 325 756 347 778 332 l 807 324 b 724 272 772 314 744 297 b 694 175 704 246 694 214 b 713 92 694 143 701 115 b 765 33 726 69 743 49 b 838 -1 786 18 811 6 b 922 -12 864 -9 893 -12 b 1004 -1 950 -12 977 -9 b 1076 35 1031 7 1055 19 b 1127 94 1098 50 1115 70 b 1146 176 1140 117 1146 145 b 1117 272 1146 214 1136 246 b 1035 324 1097 298 1070 315 l 1035 325 b 1099 372 1063 334 1084 350 b 1122 451 1115 394 1122 421 b 1112 501 1122 465 1119 482 b 1078 553 1105 520 1094 537 b 1015 595 1062 570 1041 584 b 921 613 989 607 958 613 b 849 602 897 613 873 609 b 783 571 825 595 803 585 b 737 519 764 557 748 540 b 719 449 725 499 719 475 z m 815 182 b 847 252 815 213 826 236 b 922 276 867 268 893 276 b 962 269 936 276 949 274 b 994 250 974 265 985 258 b 1017 220 1004 242 1011 232 b 1025 181 1022 209 1025 195 b 1017 140 1025 166 1022 152 b 995 108 1012 127 1005 116 b 962 87 985 99 974 92 b 922 79 949 82 936 79 b 881 87 907 79 894 82 b 847 108 868 92 856 99 b 824 140 838 116 830 127 b 815 182 818 152 815 166 z "},"\u215e":{"ha":1158,"x_min":0,"x_max":0,"o":"m 454 875 l 454 979 l 44 979 l 44 865 l 329 865 b 190 638 272 797 225 721 b 128 379 155 554 134 468 l 258 379 b 272 508 258 419 263 462 b 310 646 280 555 293 600 b 371 774 326 691 347 734 b 454 875 395 813 423 847 z m 760 1006 l 178 -33 l 288 -33 l 868 1006 z m 796 438 b 824 499 796 464 805 485 b 888 521 842 514 863 521 b 934 512 907 521 922 518 b 961 490 946 506 955 499 b 974 463 968 482 972 473 b 978 438 977 453 978 445 b 951 378 978 412 969 392 b 888 358 934 365 913 358 b 853 363 875 358 864 360 b 824 378 842 366 832 372 b 803 403 815 385 809 394 b 796 438 798 412 796 424 z m 686 449 b 708 370 686 419 694 393 b 774 325 723 347 745 332 l 774 324 b 691 272 738 314 711 297 b 661 175 671 246 661 214 b 680 92 661 143 667 115 b 731 33 692 69 709 49 b 804 -1 753 18 777 6 b 889 -12 831 -9 859 -12 b 971 -1 917 -12 944 -9 b 1043 35 998 7 1022 19 b 1094 94 1064 50 1081 70 b 1113 176 1106 117 1113 145 b 1083 272 1113 214 1103 246 b 1001 324 1064 298 1037 315 l 1001 325 b 1066 372 1029 334 1051 350 b 1089 451 1081 394 1089 421 b 1078 501 1089 465 1085 482 b 1044 553 1072 520 1060 537 b 982 595 1029 570 1008 584 b 888 613 956 607 925 613 b 815 602 863 613 839 609 b 750 571 791 595 769 585 b 703 519 731 557 715 540 b 686 449 692 499 686 475 z m 782 182 b 813 252 782 213 792 236 b 889 276 834 268 859 276 b 928 269 903 276 916 274 b 961 250 941 265 952 258 b 983 220 970 242 978 232 b 992 181 989 209 992 195 b 984 140 992 166 989 152 b 962 108 979 127 972 116 b 928 87 952 99 941 92 b 889 79 916 82 903 79 b 847 87 874 79 860 82 b 814 108 834 92 823 99 b 791 140 805 116 797 127 b 782 182 785 152 782 166 z "},"\u2160":{"ha":386,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 279 0 l 279 992 z "},"\u2161":{"ha":772,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 279 0 l 279 992 z m 492 992 l 492 0 l 665 0 l 665 992 z "},"\u2162":{"ha":1158,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 279 0 l 279 992 z m 492 992 l 492 0 l 665 0 l 665 992 z m 878 992 l 878 0 l 1051 0 l 1051 992 z "},"\u2163":{"ha":1235,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 279 0 l 279 992 z m 379 992 l 710 0 l 903 0 l 1242 992 l 1065 992 l 811 207 l 808 207 l 560 992 z "},"\u2164":{"ha":849,"x_min":0,"x_max":0,"o":"m -7 992 l 324 0 l 517 0 l 856 992 l 679 992 l 425 207 l 422 207 l 174 992 z "},"\u2165":{"ha":1235,"x_min":0,"x_max":0,"o":"m -7 992 l 324 0 l 517 0 l 856 992 l 679 992 l 425 207 l 422 207 l 174 992 z m 954 992 l 954 0 l 1128 0 l 1128 992 z "},"\u2166":{"ha":1621,"x_min":0,"x_max":0,"o":"m -7 992 l 324 0 l 517 0 l 856 992 l 679 992 l 425 207 l 422 207 l 174 992 z m 954 992 l 954 0 l 1128 0 l 1128 992 z m 1340 992 l 1340 0 l 1514 0 l 1514 992 z "},"\u2167":{"ha":2007,"x_min":0,"x_max":0,"o":"m -7 992 l 324 0 l 517 0 l 856 992 l 679 992 l 425 207 l 422 207 l 174 992 z m 954 992 l 954 0 l 1128 0 l 1128 992 z m 1340 992 l 1340 0 l 1514 0 l 1514 992 z m 1726 992 l 1726 0 l 1900 0 l 1900 992 z "},"\u2168":{"ha":1286,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 279 0 l 279 992 z m 406 992 l 733 514 l 382 0 l 581 0 l 832 379 l 1079 0 l 1290 0 l 939 514 l 1267 992 l 1072 992 l 838 642 l 613 992 z "},"\u2169":{"ha":900,"x_min":0,"x_max":0,"o":"m 19 992 l 347 514 l -4 0 l 194 0 l 446 379 l 693 0 l 904 0 l 553 514 l 881 992 l 686 992 l 451 642 l 226 992 z "},"\u216a":{"ha":1286,"x_min":0,"x_max":0,"o":"m 19 992 l 347 514 l -4 0 l 194 0 l 446 379 l 693 0 l 904 0 l 553 514 l 881 992 l 686 992 l 451 642 l 226 992 z m 1006 992 l 1006 0 l 1179 0 l 1179 992 z "},"\u216b":{"ha":1672,"x_min":0,"x_max":0,"o":"m 19 992 l 347 514 l -4 0 l 194 0 l 446 379 l 693 0 l 904 0 l 553 514 l 881 992 l 686 992 l 451 642 l 226 992 z m 1006 992 l 1006 0 l 1179 0 l 1179 992 z m 1392 992 l 1392 0 l 1565 0 l 1565 992 z "},"\u216c":{"ha":797,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 783 0 l 783 150 l 279 150 l 279 992 z "},"\u216d":{"ha":1003,"x_min":0,"x_max":0,"o":"m 775 676 l 949 676 b 906 819 943 730 929 778 b 815 926 882 861 852 897 b 685 992 777 955 734 977 b 528 1015 636 1008 583 1015 b 328 974 454 1015 387 1001 b 179 861 270 946 220 908 b 85 696 138 814 107 759 b 53 496 64 633 53 566 b 85 294 53 425 64 357 b 179 129 107 231 138 176 b 328 17 220 82 270 45 b 528 -24 387 -10 454 -24 b 693 6 588 -24 643 -14 b 824 88 743 25 787 53 b 912 215 861 124 890 166 b 950 378 934 264 946 319 l 781 378 b 757 276 777 342 769 308 b 707 194 745 245 728 217 b 631 138 686 170 660 152 b 528 118 601 125 567 118 b 391 150 475 118 429 129 b 297 235 353 171 321 200 b 244 357 273 271 255 312 b 226 496 232 402 226 449 b 244 635 226 543 232 589 b 297 756 255 680 273 721 b 391 842 321 792 353 820 b 528 874 429 863 475 874 b 623 859 564 874 596 869 b 694 818 650 849 674 836 b 744 756 715 800 731 780 b 775 676 757 731 768 705 z "},"\u216e":{"ha":1003,"x_min":0,"x_max":0,"o":"m 106 992 l 106 0 l 517 0 b 714 39 593 0 658 13 b 850 145 769 65 815 100 b 928 303 885 190 911 243 b 954 496 946 363 954 427 b 928 689 954 564 946 629 b 850 847 911 749 885 802 b 714 953 815 891 769 927 b 517 992 658 979 593 992 z m 279 142 l 279 850 l 450 850 b 616 823 518 850 573 841 b 717 748 659 805 693 780 b 767 635 742 716 759 678 b 781 496 776 592 781 546 b 767 356 781 446 776 399 b 717 244 759 313 742 276 b 616 169 693 212 659 187 b 450 142 573 151 518 142 z "},"\u216f":{"ha":1235,"x_min":0,"x_max":0,"o":"m 103 992 l 103 0 l 268 0 l 268 765 l 271 765 l 546 0 l 689 0 l 964 765 l 967 765 l 967 0 l 1132 0 l 1132 992 l 890 992 l 624 215 l 621 215 l 347 992 z "},"\u2170":{"ha":335,"x_min":0,"x_max":0,"o":"m 88 992 l 88 842 l 246 842 l 246 992 z m 88 718 l 88 0 l 246 0 l 246 718 z "},"\u2171":{"ha":669,"x_min":0,"x_max":0,"o":"m 88 992 l 88 842 l 246 842 l 246 992 z m 88 718 l 88 0 l 246 0 l 246 718 z m 422 992 l 422 842 l 581 842 l 581 992 z m 422 718 l 422 0 l 581 0 l 581 718 z "},"\u2172":{"ha":1004,"x_min":0,"x_max":0,"o":"m 88 992 l 88 842 l 246 842 l 246 992 z m 88 718 l 88 0 l 246 0 l 246 718 z m 422 992 l 422 842 l 581 842 l 581 992 z m 422 718 l 422 0 l 581 0 l 581 718 z m 757 992 l 757 842 l 915 842 l 915 992 z m 757 718 l 757 0 l 915 0 l 915 718 z "},"\u2173":{"ha":1056,"x_min":0,"x_max":0,"o":"m 88 992 l 88 842 l 246 842 l 246 992 z m 88 718 l 88 0 l 246 0 l 246 718 z m 347 718 l 608 0 l 786 0 l 1043 718 l 879 718 l 704 167 l 701 167 l 519 718 z "},"\u2174":{"ha":721,"x_min":0,"x_max":0,"o":"m 13 718 l 274 0 l 451 0 l 708 718 l 544 718 l 369 167 l 367 167 l 185 718 z "},"\u2175":{"ha":1056,"x_min":0,"x_max":0,"o":"m 13 718 l 274 0 l 451 0 l 708 718 l 544 718 l 369 167 l 367 167 l 185 718 z m 808 992 l 808 842 l 967 842 l 967 992 z m 808 718 l 808 0 l 967 0 l 967 718 z "},"\u2176":{"ha":1390,"x_min":0,"x_max":0,"o":"m 13 718 l 274 0 l 451 0 l 708 718 l 544 718 l 369 167 l 367 167 l 185 718 z m 808 992 l 808 842 l 967 842 l 967 992 z m 808 718 l 808 0 l 967 0 l 967 718 z m 1143 992 l 1143 842 l 1301 842 l 1301 992 z m 1143 718 l 1143 0 l 1301 0 l 1301 718 z "},"\u2177":{"ha":1725,"x_min":0,"x_max":0,"o":"m 13 718 l 274 0 l 451 0 l 708 718 l 544 718 l 369 167 l 367 167 l 185 718 z m 808 992 l 808 842 l 967 842 l 967 992 z m 808 718 l 808 0 l 967 0 l 967 718 z m 1143 992 l 1143 842 l 1301 842 l 1301 992 z m 1143 718 l 1143 0 l 1301 0 l 1301 718 z m 1478 992 l 1478 842 l 1636 842 l 1636 992 z m 1478 718 l 1478 0 l 1636 0 l 1636 718 z "},"\u2178":{"ha":1081,"x_min":0,"x_max":0,"o":"m 88 992 l 88 842 l 246 842 l 246 992 z m 88 718 l 88 0 l 246 0 l 246 718 z m 611 378 l 340 0 l 526 0 l 703 265 l 885 0 l 1075 0 l 800 386 l 1044 718 l 861 718 l 704 497 l 554 718 l 363 718 z "},"\u2179":{"ha":746,"x_min":0,"x_max":0,"o":"m 276 378 l 6 0 l 192 0 l 368 265 l 550 0 l 740 0 l 465 386 l 710 718 l 526 718 l 369 497 l 219 718 l 28 718 z "},"\u217a":{"ha":1081,"x_min":0,"x_max":0,"o":"m 276 378 l 6 0 l 192 0 l 368 265 l 550 0 l 740 0 l 465 386 l 710 718 l 526 718 l 369 497 l 219 718 l 28 718 z m 833 992 l 833 842 l 992 842 l 992 992 z m 833 718 l 833 0 l 992 0 l 992 718 z "},"\u217b":{"ha":1415,"x_min":0,"x_max":0,"o":"m 276 378 l 6 0 l 192 0 l 368 265 l 550 0 l 740 0 l 465 386 l 710 718 l 526 718 l 369 497 l 219 718 l 28 718 z m 833 992 l 833 842 l 992 842 l 992 992 z m 833 718 l 833 0 l 992 0 l 992 718 z m 1168 992 l 1168 842 l 1326 842 l 1326 992 z m 1168 718 l 1168 0 l 1326 0 l 1326 718 z "},"\u217c":{"ha":335,"x_min":0,"x_max":0,"o":"m 88 992 l 88 0 l 246 0 l 246 992 z "},"\u217d":{"ha":772,"x_min":0,"x_max":0,"o":"m 568 478 l 726 478 b 693 593 723 522 712 561 b 622 674 675 625 651 652 b 522 722 592 695 559 711 b 403 738 484 732 444 738 b 248 708 344 738 292 728 b 138 626 204 688 167 660 b 71 503 108 591 86 550 b 49 351 56 456 49 405 b 72 204 49 299 56 250 b 139 87 87 159 109 120 b 248 9 169 54 205 28 b 397 -19 291 -10 341 -19 b 620 55 490 -19 564 5 b 726 269 676 104 712 176 l 568 269 b 512 149 561 218 542 177 b 397 106 482 120 444 106 b 310 127 363 106 334 113 b 251 183 286 141 266 160 b 217 263 235 206 224 233 b 207 351 210 292 207 322 b 226 484 207 406 213 450 b 275 563 239 518 256 544 b 339 602 294 582 316 595 b 404 613 362 609 384 613 b 515 578 449 613 485 601 b 568 478 544 556 562 522 z "},"\u217e":{"ha":849,"x_min":0,"x_max":0,"o":"m 760 0 l 760 992 l 601 992 l 601 625 l 599 625 b 553 676 587 644 572 661 b 494 711 535 690 516 702 b 428 731 473 720 451 727 b 360 738 405 735 382 738 b 245 716 321 738 283 730 b 145 649 208 702 174 679 b 75 532 116 618 93 579 b 49 364 57 485 49 429 b 69 213 49 310 56 260 b 132 92 83 166 104 126 b 237 10 160 57 195 30 b 385 -19 279 -9 328 -19 b 514 8 430 -19 473 -10 b 607 97 555 26 586 56 l 610 97 l 610 0 z m 207 351 b 217 447 207 384 210 416 b 252 530 224 478 236 505 b 315 590 268 554 289 574 b 408 613 340 605 371 613 b 553 546 469 613 518 590 b 607 360 589 501 607 439 b 595 267 607 328 603 297 b 559 186 587 237 575 210 b 497 128 543 162 522 143 b 406 106 471 113 441 106 b 317 126 371 106 342 113 b 255 182 292 140 271 159 b 219 261 239 205 227 231 b 207 351 211 291 207 321 z "},"\u217f":{"ha":1208,"x_min":0,"x_max":0,"o":"m 83 718 l 83 0 l 242 0 l 242 426 b 255 506 242 456 246 482 b 290 564 264 529 275 548 b 340 600 304 580 321 592 b 399 613 359 608 378 613 b 498 574 447 613 480 600 b 525 461 516 549 525 511 l 525 0 l 683 0 l 683 421 b 719 563 683 482 695 529 b 836 613 744 596 782 613 b 908 599 867 613 891 608 b 948 559 926 589 939 576 b 964 498 957 542 962 522 b 967 419 966 474 967 448 l 967 0 l 1125 0 l 1125 496 b 1062 682 1125 583 1104 645 b 885 738 1020 719 961 738 b 753 706 832 738 788 727 b 660 618 718 684 687 655 b 580 708 644 659 617 689 b 458 738 542 728 502 738 b 382 728 430 738 404 734 b 323 704 360 722 340 714 b 276 667 306 694 290 681 b 238 618 263 652 250 636 l 233 618 l 233 718 z "},"\u2202":{"ha":761,"x_min":0,"x_max":0,"o":"m 551 367 b 503 182 554 302 538 240 b 360 94 469 124 421 94 b 239 151 307 94 267 113 b 197 290 211 189 197 236 b 242 433 197 347 212 394 b 371 492 272 472 315 492 b 550 399 438 492 497 461 z m 704 499 b 685 679 704 563 698 623 b 624 839 672 736 652 789 b 508 958 597 889 558 928 b 331 1001 458 987 399 1001 b 207 980 283 1001 242 994 b 93 911 172 966 134 943 l 172 819 b 336 886 230 864 284 886 b 467 832 388 886 431 868 b 538 708 502 796 526 755 b 554 564 551 662 556 614 l 553 522 b 349 603 491 576 423 603 b 135 517 261 603 190 574 b 54 299 81 459 54 387 b 137 73 54 208 82 133 b 354 -17 192 13 264 -17 b 501 15 410 -17 459 -6 b 603 97 544 37 578 64 b 664 217 628 131 648 171 b 696 355 680 264 690 310 b 704 499 701 400 704 448 z "},"\u2206":{"ha":947,"x_min":0,"x_max":0,"o":"m 538 967 l 393 967 l 14 0 l 933 0 z m 204 126 l 464 811 l 736 126 z "},"\u220f":{"ha":1024,"x_min":0,"x_max":0,"o":"m 936 -297 l 936 1092 l 88 1092 l 88 -297 l 236 -297 l 236 956 l 786 956 l 786 -297 z "},"\u2211":{"ha":893,"x_min":0,"x_max":0,"o":"m 858 -297 l 858 -162 l 226 -162 l 639 406 l 251 956 l 840 956 l 840 1092 l 53 1092 l 53 975 l 460 404 l 35 -178 l 35 -297 z "},"\u2212":{"ha":833,"x_min":0,"x_max":0,"o":"m 767 281 l 767 422 l 67 422 l 67 281 z "},"\u2215":{"ha":232,"x_min":0,"x_max":0,"o":"m -229 -33 l -119 -33 l 461 1006 l 353 1006 z "},"\u2219":{"ha":386,"x_min":0,"x_max":0,"o":"m 89 419 b 120 346 89 392 99 367 b 193 314 141 325 165 314 b 266 346 221 314 245 325 b 297 419 287 367 297 392 b 266 491 297 446 287 470 b 193 522 245 512 221 522 b 120 491 165 522 141 512 b 89 419 99 470 89 446 z "},"\u221a":{"ha":833,"x_min":0,"x_max":0,"o":"m 776 1092 l 633 1092 l 393 -85 l 203 317 l 14 229 l 65 118 l 133 150 l 350 -297 l 482 -297 z "},"\u221e":{"ha":1106,"x_min":0,"x_max":0,"o":"m 554 433 b 424 554 507 486 463 526 b 283 596 384 582 337 596 b 124 529 219 596 165 574 b 61 357 82 485 61 427 b 124 185 61 287 82 229 b 288 119 166 141 221 119 b 353 126 312 119 333 122 b 413 153 372 131 392 140 b 458 184 433 167 448 177 b 508 229 467 191 484 206 b 554 272 532 252 548 267 b 682 159 598 224 640 186 b 821 118 724 132 770 118 b 983 185 888 118 941 141 b 1044 360 1024 230 1044 288 b 982 531 1044 430 1024 487 b 821 597 940 575 887 597 b 714 570 785 597 749 588 b 630 514 679 552 651 533 b 554 433 609 494 584 468 z m 626 354 b 819 476 703 436 768 476 b 901 443 853 476 880 465 b 932 356 922 421 932 392 b 901 272 932 321 922 293 b 822 239 881 250 855 239 b 626 354 765 239 700 277 z m 481 354 b 424 301 458 332 439 314 b 362 260 408 287 387 274 b 288 240 336 247 312 240 b 206 272 253 240 226 251 b 175 356 185 292 175 320 b 206 441 175 390 185 418 b 282 475 226 464 251 475 b 481 354 333 475 399 435 z "},"\u222b":{"ha":833,"x_min":0,"x_max":0,"o":"m 658 990 b 612 1066 658 1024 643 1049 b 513 1092 581 1083 548 1092 b 428 1078 480 1092 452 1087 b 372 1035 405 1069 386 1054 b 339 978 358 1015 347 997 b 322 904 331 960 325 936 b 316 829 318 873 316 848 b 315 751 316 811 315 785 l 315 724 l 315 -19 b 317 -87 315 -34 316 -57 b 319 -154 319 -117 319 -139 l 319 -168 b 320 -187 320 -177 321 -184 b 317 -203 320 -191 319 -197 b 309 -218 316 -210 313 -215 b 293 -222 305 -221 300 -222 b 272 -199 285 -222 278 -214 b 247 -152 267 -183 258 -167 b 196 -129 236 -137 219 -129 b 148 -149 176 -129 160 -136 b 129 -197 135 -162 129 -178 b 174 -272 129 -230 144 -254 b 271 -297 203 -289 236 -297 b 331 -289 293 -297 313 -294 b 376 -270 348 -283 363 -277 b 411 -237 389 -263 401 -252 b 435 -199 421 -222 429 -209 b 451 -150 441 -188 447 -172 b 461 -101 456 -128 459 -112 b 465 -46 463 -91 464 -73 b 467 5 466 -19 467 -2 l 467 56 l 465 783 b 464 876 465 804 465 834 b 463 968 463 917 463 948 b 489 1013 463 998 471 1013 b 510 990 498 1013 505 1005 b 535 944 516 974 524 959 b 588 922 547 930 564 922 b 638 942 607 922 624 929 b 658 990 651 955 658 971 z "},"\u2248":{"ha":833,"x_min":0,"x_max":0,"o":"m 788 610 l 697 610 b 607 515 686 547 656 515 b 581 517 599 515 590 516 b 558 520 572 518 565 519 b 531 528 551 522 542 524 l 503 536 b 469 549 496 539 485 543 b 431 561 453 554 440 558 b 243 608 333 593 271 608 b 104 543 183 608 137 587 b 46 381 72 500 52 445 l 136 381 b 167 452 140 410 150 434 b 229 479 184 470 205 479 b 269 473 239 479 253 477 b 313 460 285 469 300 464 b 363 442 325 455 342 449 b 403 428 383 435 396 431 b 589 383 496 398 558 383 b 725 442 645 383 691 403 b 788 610 759 481 780 537 z m 788 333 l 697 333 b 607 239 686 270 656 239 b 581 240 599 239 590 239 b 558 244 572 241 565 242 b 531 251 551 245 542 248 l 504 261 b 469 272 497 263 485 267 b 431 285 453 278 440 282 b 243 332 333 316 271 332 b 104 267 183 332 137 310 b 46 104 72 223 52 169 l 136 104 b 167 176 140 134 150 158 b 229 203 184 194 205 203 b 269 197 239 203 253 201 b 313 183 285 192 300 188 b 363 166 325 179 342 173 b 403 151 383 159 396 154 b 589 107 496 122 558 107 b 725 165 645 107 691 126 b 788 333 759 204 780 260 z "},"\u2260":{"ha":833,"x_min":0,"x_max":0,"o":"m 300 275 l 57 275 l 57 142 l 232 142 l 154 -8 l 271 -68 l 378 142 l 775 142 l 775 275 l 446 275 l 531 440 l 775 440 l 775 572 l 599 572 l 676 724 l 560 783 l 453 572 l 57 572 l 57 440 l 385 440 z "},"\u2264":{"ha":833,"x_min":0,"x_max":0,"o":"m 53 376 l 771 133 l 771 274 l 235 444 l 771 622 l 771 763 l 53 511 z m 53 86 l 53 -47 l 771 -47 l 771 86 z "},"\u2265":{"ha":833,"x_min":0,"x_max":0,"o":"m 781 376 l 781 511 l 63 763 l 63 622 l 599 444 l 63 274 l 63 133 z m 781 86 l 63 86 l 63 -47 l 781 -47 z "},"\u22c5":{"ha":386,"x_min":0,"x_max":0,"o":"m 96 614 l 96 426 l 289 426 l 289 614 z "},"\u2440":{"ha":254,"x_min":0,"x_max":0,"o":"m 24 1090 l 26 1022 b 75 1028 41 1026 57 1028 b 128 1015 100 1028 118 1023 b 144 969 139 1006 144 991 b 127 933 144 957 139 945 b 57 911 116 921 92 914 l 57 851 l 133 851 l 136 882 b 213 922 174 890 200 904 b 232 979 225 941 232 960 b 217 1035 232 1001 227 1020 b 181 1070 208 1050 196 1061 b 134 1089 167 1079 151 1085 b 88 1094 117 1093 101 1094 b 24 1090 70 1094 49 1093 z "},"\u25ca":{"ha":824,"x_min":0,"x_max":0,"o":"m 579 494 l 410 90 l 244 494 l 410 897 z m 722 494 l 476 1038 l 344 1038 l 100 494 l 344 -49 l 476 -49 z "},"\u25cf":{"ha":868,"x_min":0,"x_max":0,"o":"m 142 471 b 165 356 142 430 150 392 b 229 263 181 321 202 289 b 323 199 256 236 287 214 b 438 175 359 183 397 175 b 553 199 479 175 518 183 b 647 263 589 214 620 236 b 710 356 674 289 695 321 b 733 471 726 392 733 430 b 710 587 733 513 726 551 b 647 681 695 622 674 654 b 553 744 620 707 589 728 b 438 767 518 759 479 767 b 323 744 397 767 359 759 b 229 681 287 728 256 707 b 165 587 202 654 181 622 b 142 471 150 551 142 513 z "},"\u266d":{"ha":693,"x_min":0,"x_max":0,"o":"m 175 -11 b 185 -3 176 -11 179 -8 b 224 31 191 3 204 14 b 238 43 225 31 230 36 b 269 70 246 50 256 59 b 310 103 281 81 295 92 b 353 138 326 114 340 125 b 389 169 366 150 378 160 b 411 189 400 178 407 184 b 522 317 463 232 500 275 b 556 438 544 359 556 400 b 543 499 556 458 551 478 b 508 549 535 519 523 536 b 455 581 492 563 475 573 b 386 593 435 589 412 593 b 331 586 367 593 348 591 b 285 567 313 581 298 575 b 249 541 272 558 260 550 b 224 510 239 532 230 522 l 224 1119 l 175 1119 z m 224 64 l 224 344 b 253 381 231 357 241 369 b 288 408 263 391 275 400 b 335 419 302 416 317 419 b 390 397 356 419 374 412 b 413 338 405 381 413 362 b 396 270 413 319 407 297 b 335 185 385 244 364 215 b 271 115 312 158 290 134 b 224 64 251 95 236 78 z "},"\u266f":{"ha":763,"x_min":0,"x_max":0,"o":"m 246 0 l 303 8 l 303 238 l 456 274 l 456 71 l 514 82 l 514 286 l 651 315 l 651 444 l 514 418 l 514 633 l 651 661 l 651 793 l 514 764 l 514 1004 l 456 994 l 456 751 l 303 717 l 303 932 l 246 922 l 246 706 l 108 675 l 108 546 l 246 574 l 246 357 l 108 329 l 108 200 l 246 228 z m 303 371 l 303 585 l 456 622 l 456 406 z "},"\u29f5":{"ha":232,"x_min":0,"x_max":0,"o":"m -121 1006 l 461 -33 l 351 -33 l -229 1006 z "},"\ue000":{"ha":540,"x_min":0,"x_max":0,"o":"m 474 456 l 67 456 l 67 308 l 474 308 z "},"\ue001":{"ha":386,"x_min":0,"x_max":0,"o":""},"\ueb03":{"ha":926,"x_min":0,"x_max":0,"o":"m 826 0 l 938 0 l 556 992 l 371 992 l -10 0 l 169 0 l 263 263 l 658 263 l 751 0 b 661 -64 713 -23 682 -44 b 614 -117 640 -83 624 -101 b 596 -157 604 -132 598 -146 b 593 -185 594 -168 593 -177 b 611 -254 593 -214 599 -237 b 653 -292 623 -271 637 -283 b 701 -307 670 -300 685 -305 b 733 -310 716 -309 727 -310 b 776 -305 747 -310 762 -308 b 819 -288 791 -302 805 -296 b 855 -256 832 -280 844 -270 b 879 -206 866 -243 874 -226 l 822 -193 b 788 -231 810 -212 799 -224 b 750 -240 776 -237 764 -240 b 713 -224 736 -240 724 -235 b 696 -179 701 -212 696 -198 b 701 -141 696 -166 698 -153 b 722 -101 705 -128 712 -115 b 762 -55 731 -86 745 -71 b 826 0 779 -39 800 -20 z m 310 394 l 460 821 l 464 821 l 613 394 z m 524 1290 l 399 1092 l 514 1092 l 711 1290 z "},"\ueb04":{"ha":772,"x_min":0,"x_max":0,"o":"m 685 160 l 685 529 b 660 626 685 567 676 599 b 594 690 643 652 621 674 b 501 726 566 707 536 719 b 397 738 467 734 432 738 b 281 726 357 738 319 734 b 178 688 243 719 209 706 b 104 614 148 669 124 644 b 71 499 85 583 74 545 l 229 499 b 278 585 233 538 249 566 b 388 613 306 603 343 613 b 438 609 403 613 420 611 b 485 595 455 607 471 602 b 522 565 500 588 512 578 b 536 515 531 552 536 536 b 519 463 536 492 530 475 b 472 438 507 452 491 443 b 403 426 452 432 429 428 b 321 414 377 423 350 419 b 222 398 288 410 254 405 b 133 364 189 391 159 380 b 69 299 106 348 85 326 b 44 190 53 271 44 235 b 65 98 44 155 51 124 b 119 33 78 72 96 50 b 197 -6 141 16 168 3 b 290 -19 227 -15 258 -19 b 423 1 333 -19 377 -12 b 539 68 469 15 507 38 b 581 0 545 36 559 13 b 596 -8 585 -3 590 -6 b 519 -64 563 -28 538 -46 b 472 -117 498 -83 482 -101 b 454 -157 462 -132 456 -146 b 451 -185 452 -168 451 -177 b 469 -254 451 -214 457 -237 b 512 -292 481 -271 496 -283 b 559 -307 528 -300 544 -305 b 592 -310 574 -309 585 -310 b 635 -305 606 -310 620 -308 b 677 -288 650 -302 664 -296 b 713 -256 691 -280 703 -270 b 738 -206 724 -243 732 -226 l 681 -193 b 646 -231 669 -212 657 -224 b 608 -240 635 -237 622 -240 b 571 -224 594 -240 582 -235 b 554 -179 560 -212 554 -198 b 560 -141 554 -166 556 -153 b 580 -101 563 -128 570 -115 b 619 -54 590 -86 603 -71 b 660 -19 631 -44 645 -32 l 661 -19 b 685 -18 668 -19 675 -19 b 713 -14 694 -17 703 -16 b 740 -8 722 -12 731 -10 b 761 -1 748 -5 756 -3 l 761 108 b 739 106 753 106 745 106 l 722 106 b 692 118 707 106 697 110 b 685 160 687 126 685 140 z m 526 360 l 526 242 b 508 178 526 217 520 196 b 463 136 496 161 481 147 b 406 113 445 125 426 117 b 349 106 385 108 366 106 b 302 110 335 106 319 107 b 255 124 285 113 269 117 b 218 153 241 131 228 141 b 203 197 208 165 203 180 b 213 249 203 218 206 235 b 242 284 220 264 230 275 b 283 305 254 293 268 300 b 332 317 299 310 315 314 b 438 331 367 323 402 328 b 526 360 473 334 502 344 z m 421 1017 l 296 818 l 411 818 l 608 1017 z "},"\ueb09":{"ha":900,"x_min":0,"x_max":0,"o":"m 19 992 l 347 514 l -4 0 l 194 0 l 446 379 l 693 0 l 904 0 l 553 514 l 881 992 l 686 992 l 451 642 l 226 992 z m 371 -275 l 529 -275 l 529 -125 l 371 -125 z "},"\ueb0a":{"ha":746,"x_min":0,"x_max":0,"o":"m 276 378 l 6 0 l 192 0 l 368 265 l 550 0 l 740 0 l 465 386 l 710 718 l 526 718 l 369 497 l 219 718 l 28 718 z m 293 -275 l 451 -275 l 451 -125 l 293 -125 z "},"\uf004":{"ha":386,"x_min":0,"x_max":0,"o":"m 101 -207 l 185 -207 b 122 -257 180 -235 159 -251 l 122 -310 b 283 -193 230 -305 283 -266 l 283 -69 l 101 -69 z "},"\uf6be":{"ha":335,"x_min":0,"x_max":0,"o":"m 88 -54 b 76 -136 88 -93 84 -120 b 24 -160 68 -152 50 -160 b -31 -154 6 -160 -12 -158 l -31 -279 b 40 -285 -12 -283 12 -285 b 197 -228 113 -285 165 -266 b 246 -61 230 -191 246 -135 l 246 718 l 88 718 z "},"\uf6c0":{"ha":3090,"x_min":0,"x_max":0,"o":"m 364 985 l 364 7 l 1419 493 z m 2231 18 l 2231 974 l 1967 974 l 1967 18 z m 2760 18 l 2760 974 l 2497 974 l 2497 18 z "},"\uf6c4":{"ha":1940,"x_min":0,"x_max":0,"o":"m 1636 4 l 1636 988 l 583 496 z m 319 976 l 319 15 l 583 15 l 583 976 z "},"\uf8ff":{"ha":711,"x_min":0,"x_max":0,"o":"m 308 163 l 308 256 l 386 256 l 386 163 z m 313 325 l 310 349 b 328 461 310 400 316 438 b 392 543 342 487 363 514 b 448 607 420 570 439 591 b 461 658 457 623 461 640 b 430 742 461 692 451 720 b 356 776 409 765 384 776 b 242 644 290 776 252 732 l 172 656 b 232 799 179 719 199 767 b 360 846 265 830 308 846 b 483 796 410 846 451 829 b 532 664 516 763 532 719 b 514 581 532 632 526 605 b 444 497 502 556 479 529 b 385 425 410 467 390 443 b 376 325 379 406 376 373 z m 642 69 l 642 926 l 69 926 l 69 69 z m 711 997 l 711 0 l 0 0 l 0 997 z "},"\ufb00":{"ha":850,"x_min":0,"x_max":0,"o":"m 13 718 l 13 600 l 131 600 l 131 0 l 289 0 l 289 600 l 543 600 l 543 0 l 701 0 l 701 600 l 836 600 l 836 718 l 701 718 l 701 792 b 724 851 701 821 709 841 b 779 867 740 862 758 867 b 820 865 795 867 809 866 b 853 858 832 863 843 861 l 853 982 b 742 992 831 988 794 992 b 667 984 716 992 691 989 b 604 953 644 979 623 969 b 560 888 586 938 571 916 b 543 778 549 860 543 823 l 543 718 l 289 718 l 289 792 b 312 851 289 821 297 841 b 367 867 327 862 345 867 b 408 865 382 867 396 866 b 440 858 419 863 430 861 l 440 982 b 329 992 418 988 381 992 b 255 984 303 992 278 989 b 192 953 231 979 210 969 b 147 888 173 938 158 916 b 131 778 136 860 131 823 l 131 718 z "},"\ufb01":{"ha":772,"x_min":0,"x_max":0,"o":"m 525 842 l 683 842 l 683 992 l 525 992 z m 13 600 l 131 600 l 131 0 l 289 0 l 289 600 l 424 600 l 424 718 l 289 718 l 289 792 b 367 867 289 842 315 867 b 440 858 394 867 419 864 l 440 982 b 329 992 418 988 381 992 b 184 947 268 992 220 977 b 131 778 148 918 131 861 l 131 718 l 13 718 z m 525 0 l 683 0 l 683 718 l 525 718 z "},"\ufb02":{"ha":772,"x_min":0,"x_max":0,"o":"m 525 0 l 683 0 l 683 992 l 525 992 z m 13 600 l 131 600 l 131 0 l 289 0 l 289 600 l 424 600 l 424 718 l 289 718 l 289 792 b 367 867 289 842 315 867 b 440 858 394 867 419 864 l 440 982 b 329 992 418 988 381 992 b 184 947 268 992 220 977 b 131 778 148 918 131 861 l 131 718 l 13 718 z "},"\ufb03":{"ha":1185,"x_min":0,"x_max":0,"o":"m 289 718 l 289 792 b 312 851 289 821 297 841 b 367 867 327 862 345 867 b 408 865 382 867 396 866 b 440 858 419 863 430 861 l 440 982 b 329 992 418 988 381 992 b 255 984 303 992 278 989 b 192 953 231 979 210 969 b 147 888 173 938 158 916 b 131 778 136 860 131 823 l 131 718 l 13 718 l 13 600 l 131 600 l 131 0 l 289 0 l 289 600 l 543 600 l 543 0 l 701 0 l 701 600 l 836 600 l 836 718 l 701 718 l 701 792 b 724 851 701 821 709 841 b 779 867 740 862 758 867 b 820 865 795 867 809 866 b 853 858 832 863 843 861 l 853 982 b 742 992 831 988 794 992 b 667 984 716 992 691 989 b 604 953 644 979 623 969 b 560 888 586 938 571 916 b 543 778 549 860 543 823 l 543 718 z m 938 718 l 938 0 l 1096 0 l 1096 718 z m 938 992 l 938 842 l 1096 842 l 1096 992 z "},"\ufb04":{"ha":1185,"x_min":0,"x_max":0,"o":"m 289 718 l 289 792 b 312 851 289 821 297 841 b 367 867 327 862 345 867 b 408 865 382 867 396 866 b 440 858 419 863 430 861 l 440 982 b 329 992 418 988 381 992 b 255 984 303 992 278 989 b 192 953 231 979 210 969 b 147 888 173 938 158 916 b 131 778 136 860 131 823 l 131 718 l 13 718 l 13 600 l 131 600 l 131 0 l 289 0 l 289 600 l 543 600 l 543 0 l 701 0 l 701 600 l 836 600 l 836 718 l 701 718 l 701 792 b 724 851 701 821 709 841 b 779 867 740 862 758 867 b 820 865 795 867 809 866 b 853 858 832 863 843 861 l 853 982 b 742 992 831 988 794 992 b 667 984 716 992 691 989 b 604 953 644 979 623 969 b 560 888 586 938 571 916 b 543 778 549 860 543 823 l 543 718 z m 938 992 l 938 0 l 1096 0 l 1096 992 z "},"\ufe10":{"ha":386,"x_min":0,"x_max":0,"o":"m 96 438 l 96 250 l 192 250 b 170 166 193 220 185 192 b 101 115 155 140 132 123 l 101 31 b 236 106 157 42 202 67 b 289 250 270 144 288 193 l 289 438 z "},"\ufe13":{"ha":386,"x_min":0,"x_max":0,"o":"m 96 438 l 96 250 l 289 250 l 289 438 z m 96 953 l 96 765 l 289 765 l 289 953 z "},"\ufe14":{"ha":386,"x_min":0,"x_max":0,"o":"m 96 953 l 96 765 l 289 765 l 289 953 z m 96 438 l 96 250 l 192 250 b 170 166 193 220 185 192 b 101 115 155 140 132 123 l 101 31 b 236 106 157 42 202 67 b 289 250 270 144 288 193 l 289 438 z "},"\ufe15":{"ha":386,"x_min":0,"x_max":0,"o":"m 100 424 l 100 250 l 286 250 l 286 424 z m 107 1242 l 107 956 l 153 526 l 235 526 l 281 956 l 281 1242 z "},"\ufe16":{"ha":772,"x_min":0,"x_max":0,"o":"m 289 424 l 289 250 l 475 250 l 475 424 z m 68 926 l 226 926 b 267 1077 226 989 240 1040 b 394 1133 295 1115 337 1133 b 436 1125 406 1133 420 1131 b 481 1099 452 1119 467 1111 b 516 1051 494 1087 506 1071 b 531 979 526 1031 531 1007 b 522 919 531 956 528 936 b 497 874 516 903 507 888 b 460 838 486 861 474 849 b 418 801 447 826 433 814 b 370 753 400 786 384 770 b 336 697 357 737 345 719 b 316 623 327 676 320 651 b 310 519 312 595 310 560 l 460 519 b 469 604 460 553 463 581 b 494 665 475 627 483 647 b 533 711 506 682 519 697 b 582 754 548 725 564 739 b 626 794 597 767 612 780 b 666 840 641 807 654 822 b 694 901 678 857 687 877 b 704 985 701 924 704 952 b 681 1104 704 1029 696 1069 b 616 1192 665 1139 643 1169 b 520 1247 589 1216 557 1234 b 401 1265 484 1259 444 1265 b 263 1241 350 1265 304 1257 b 158 1172 222 1225 187 1202 b 91 1065 128 1143 106 1107 b 68 926 76 1024 68 977 z "},"\ufe19":{"ha":694,"x_min":0,"x_max":0,"o":"m 250 188 l 250 0 l 443 0 l 443 188 z m 250 992 l 250 804 l 443 804 l 443 992 z m 250 600 l 250 413 l 443 413 l 443 600 z "},"\ufe31":{"ha":694,"x_min":0,"x_max":0,"o":"m 422 992 l 272 992 l 272 -397 l 422 -397 z "},"\ufe32":{"ha":694,"x_min":0,"x_max":0,"o":"m 422 853 l 272 853 l 272 -260 l 422 -260 z "},"\ufe33":{"ha":694,"x_min":0,"x_max":0,"o":"m 408 853 l 286 853 l 286 -260 l 408 -260 z "},"\ufe34":{"ha":694,"x_min":0,"x_max":0,"o":"m 465 -94 b 451 -46 465 -77 460 -61 b 419 -3 441 -31 430 -17 b 387 38 407 10 397 24 b 372 83 377 51 372 67 b 387 128 372 100 377 115 b 419 169 397 142 407 155 b 451 210 430 182 441 196 b 465 260 460 225 465 241 b 451 310 465 279 460 296 b 419 352 441 325 430 339 b 387 392 407 366 397 379 b 372 436 377 405 372 419 b 387 482 372 453 377 468 b 419 523 397 496 407 509 b 451 565 430 536 441 550 b 465 614 460 580 465 596 b 451 665 465 633 460 650 b 419 706 441 679 430 693 b 387 747 407 720 397 733 b 372 792 377 760 372 775 b 390 845 372 815 378 833 b 426 881 401 858 413 870 b 459 923 439 893 450 907 b 465 992 468 939 470 962 l 319 992 b 305 928 319 963 315 942 b 272 892 295 915 284 903 b 240 855 260 881 249 868 b 225 792 230 841 225 820 b 240 728 225 765 230 744 b 272 689 249 713 260 700 b 305 656 284 678 295 667 b 319 614 315 646 319 631 b 305 573 319 597 315 584 b 272 540 295 562 284 551 b 240 499 260 528 249 515 b 225 436 230 484 225 463 b 240 373 225 409 230 388 b 272 333 249 358 260 344 b 305 301 284 322 295 311 b 319 260 315 290 319 276 b 305 217 319 242 315 228 b 272 185 295 207 284 196 b 240 145 260 174 249 160 b 225 83 230 130 225 109 b 240 20 225 56 230 35 b 272 -20 249 5 260 -9 b 305 -53 284 -32 295 -43 b 319 -94 315 -64 319 -78 b 305 -137 319 -112 315 -126 b 272 -169 295 -147 284 -158 b 240 -210 260 -181 249 -194 b 225 -272 230 -225 225 -246 b 247 -348 225 -304 232 -329 b 300 -399 261 -367 279 -384 l 464 -399 b 391 -329 428 -372 403 -349 b 372 -272 378 -310 372 -291 b 387 -227 372 -256 377 -241 b 419 -186 397 -214 407 -200 b 451 -144 430 -172 441 -158 b 465 -94 460 -129 465 -113 z "},"\ufe35":{"ha":694,"x_min":0,"x_max":0,"o":"m -293 339 l -293 210 b 14 339 -194 268 -92 311 b 347 381 119 367 231 381 b 680 337 464 381 575 366 b 988 210 785 308 888 265 l 988 339 b 678 487 889 403 786 452 b 347 539 569 522 459 539 b 160 524 281 539 218 534 b -6 481 101 513 46 499 b -156 417 -59 463 -108 442 b -293 339 -203 393 -249 367 z "},"\ufe36":{"ha":694,"x_min":0,"x_max":0,"o":"m 988 410 l 988 539 b 679 410 888 481 785 438 b 346 368 574 382 463 368 b 13 412 229 368 118 383 b -293 539 -92 441 -194 483 l -293 410 b 15 262 -196 346 -93 297 b 346 210 124 227 234 210 b 533 226 413 210 475 215 b 699 269 592 236 647 251 b 849 332 752 287 802 308 b 988 410 897 356 943 382 z "},"\ufe37":{"ha":694,"x_min":0,"x_max":0,"o":"m 410 592 l 285 592 b 280 556 285 582 283 570 b 263 513 277 541 271 526 b 228 476 254 499 243 487 b 172 461 213 466 194 461 l -103 461 b -187 442 -135 461 -163 455 b -247 394 -212 429 -231 413 b -282 336 -263 376 -275 356 b -293 283 -289 316 -293 298 l -293 157 l -168 157 l -168 233 b -159 275 -168 251 -165 265 b -135 299 -153 285 -145 293 b -103 309 -126 304 -115 308 b -71 311 -92 310 -81 311 l 192 311 b 272 328 225 311 252 317 b 317 367 291 339 307 352 b 339 415 328 383 335 398 b 346 456 343 431 345 444 l 349 456 b 358 415 350 444 353 431 b 381 367 363 398 371 383 b 425 328 392 352 406 339 b 494 311 444 317 467 311 l 765 311 b 798 309 775 311 786 310 b 830 299 809 308 820 304 b 853 275 840 293 847 285 b 863 233 859 265 863 251 l 863 157 l 988 157 l 988 283 b 976 336 988 298 984 316 b 942 394 969 356 957 376 b 882 442 926 413 906 429 b 797 461 858 455 830 461 l 511 461 b 461 476 491 461 474 466 b 430 513 448 487 438 499 b 414 556 422 526 417 541 b 410 592 411 570 410 582 z "},"\ufe38":{"ha":694,"x_min":0,"x_max":0,"o":"m 285 157 l 410 157 b 415 194 410 167 411 180 b 432 238 418 209 424 224 b 467 273 440 251 452 263 b 522 288 481 283 500 288 l 797 288 b 882 307 830 288 858 294 b 942 354 906 320 926 336 b 976 413 957 373 969 392 b 988 465 984 433 988 450 l 988 592 l 863 592 l 863 515 b 853 474 863 498 859 484 b 830 450 847 463 840 456 b 798 440 820 444 809 441 b 765 438 786 438 775 438 l 503 438 b 423 421 469 438 443 432 b 377 381 403 410 388 397 b 356 334 366 366 359 350 b 349 293 352 318 350 304 l 346 293 b 336 334 344 304 341 318 b 313 381 331 350 324 366 b 269 421 303 397 288 410 b 200 438 251 432 228 438 l -71 438 b -103 440 -81 438 -92 438 b -135 450 -115 441 -126 444 b -159 474 -145 456 -153 463 b -168 515 -165 484 -168 498 l -168 592 l -293 592 l -293 465 b -282 413 -293 450 -289 433 b -247 354 -275 392 -263 373 b -187 307 -231 336 -212 320 b -103 288 -163 294 -135 288 l 183 288 b 233 273 204 288 220 283 b 264 238 246 263 256 251 b 280 194 271 224 277 209 b 285 157 283 180 285 167 z "},"\ufe47":{"ha":694,"x_min":0,"x_max":0,"o":"m 988 529 l -293 529 l -293 219 l -168 219 l -168 379 l 863 379 l 863 219 l 988 219 z "},"\ufe48":{"ha":694,"x_min":0,"x_max":0,"o":"m -293 219 l 988 219 l 988 529 l 863 529 l 863 369 l -168 369 l -168 529 l -293 529 z "}},"familyName":"Helvetica Neue","ascender":992,"descender":-265,"underlinePosition":-382,"underlineThickness":69,"boundingBox":{"yMin":-399,"xMin":-800,"yMax":1611,"xMax":2760},"resolution":1000,"original_font_information":{"format":0,"copyright":"Copyrighted (c) 1981, 1997 by and the property of Linotype-Hell AG and/or its subsidiaries. All Rights Reserved. All Cyrillic characters designed by DoubleAlex. Helvetica is a registered Trademark of Linotype-Hell AG and/or its subsidiaries.","fontFamily":"Helvetica Neue","fontSubfamily":"Medium","uniqueID":"FontForge 2.0 : Helvetica Neue Medium : 23-8-2021","fullName":"Helvetica Neue Medium","version":"001.000","postScriptName":"HelveticaNeue-Medium","trademark":"Please refer to the Copyright section for the font trademark attribution notices.","manufacturer":"by and the property of Linotype-Hell AG and/or its subsidiaries","preferredFamily":"Helvetica Neue","preferredSubfamily":"Medium"},"cssFontWeight":"normal","cssFontStyle":"normal"}'),ev=()=>(0,Kp.jsxs)("div",{style:{backgroundColor:"black",color:"white"},children:[(0,Kp.jsxs)("div",{style:{height:"100vh",position:"relative",backgroundColor:"black"},className:"home",children:[(0,Kp.jsxs)(Lx,{camera:{position:[0,0,10],fov:60},children:[(0,Kp.jsx)("ambientLight",{intensity:.5}),(0,Kp.jsx)("pointLight",{position:[10,10,10]}),(0,Kp.jsxs)(Wx,{font:Qx,size:1,height:.2,curveSegments:12,bevelEnabled:!0,bevelThickness:.03,bevelSize:.02,position:[-4.5,0,0],children:["Sanghyup Lee",(0,Kp.jsx)("meshNormalMaterial",{})]}),(0,Kp.jsx)(Jx,{enableZoom:!1})]}),(0,Kp.jsx)("div",{style:{position:"absolute",bottom:"100px",right:"40px",color:"white",fontSize:"20px",fontStyle:"italic"},children:"Try dragging me around"})]}),(0,Kp.jsxs)("div",{style:{padding:"100px 20px",textAlign:"center",backgroundColor:"black",color:"white"},className:"about",children:[(0,Kp.jsx)("h1",{style:{color:"white",fontSize:"2rem",marginBottom:"10px"},children:"About Me"}),(0,Kp.jsx)("p",{style:{color:"gray",fontSize:"1rem",marginBottom:"30px"},children:"introduction"}),(0,Kp.jsxs)("p",{style:{color:"white",fontSize:"1.8rem",lineHeight:"2.5rem",margin:"0 auto",maxWidth:"900px",fontWeight:"bold"},children:["Hello, I am Sanghyup Lee, a software developer passionate about building interactive applications, machine learning, and solving complex problems using technology. I am currently majoring in ",(0,Kp.jsx)("span",{style:{color:"#FFDE21"},children:"Computer Science"})," at ",(0,Kp.jsx)("span",{style:{color:"#007bff"},children:" Johns Hopkins University"}),"."]})]})]}),tv=()=>(0,Kp.jsx)("nav",{children:(0,Kp.jsxs)("ul",{children:[(0,Kp.jsx)("li",{children:(0,Kp.jsx)(Te,{to:"/home",children:"Home"})}),(0,Kp.jsx)("li",{children:(0,Kp.jsx)(Te,{to:"/projects",children:"Projects"})}),(0,Kp.jsx)("li",{children:(0,Kp.jsx)(Te,{to:"/experiences",children:"Experiences"})}),(0,Kp.jsx)("li",{children:(0,Kp.jsx)(Te,{to:"/resume",children:"Resume"})})]})}),nv=()=>(0,Kp.jsxs)("div",{style:{height:"100vh",textAlign:"center",backgroundColor:"black",marginBottom:"40px"},children:[(0,Kp.jsx)("h1",{style:{color:"white",paddingTop:"40px"},children:"Resume"})," ",(0,Kp.jsx)("iframe",{src:"/Sanghyup_Lee_Resume.pdf",width:"36%",height:"88%",style:{border:"none",marginTop:"20px"},title:"Resume"})]}),iv=[{title:"RareTrades",description:"A full-stack card trading application built with React, Node.js, Express.js, and PostgreSQL. The app allows users to trade cards with dynamic price visualizations.",image:n.p+"static/media/RareTrades.97f2f757ec0f685eaccb.png"},{title:"Cache Simulation",description:"A C++ cache simulation that supports write-allocate, no-write-allocate, write-back, and write-through techniques, along with adjustable cache parameters."}],rv=()=>(0,Kp.jsxs)("div",{className:"projects-container",children:[(0,Kp.jsx)("h1",{children:"Projects"}),(0,Kp.jsx)("div",{className:"projects-list",children:iv.map(((e,t)=>(0,Kp.jsxs)("div",{className:"project-card",children:[(0,Kp.jsx)("h2",{children:e.title}),(0,Kp.jsx)("p",{children:e.description}),e.image&&(0,Kp.jsx)("img",{src:e.image,alt:e.title,className:"project-image"}),(0,Kp.jsxs)("div",{className:"project-links",children:[e.liveLink&&(0,Kp.jsx)("a",{href:e.liveLink,target:"_blank",rel:"noopener noreferrer",children:"Live Demo"}),e.githubLink&&(0,Kp.jsx)("a",{href:e.githubLink,target:"_blank",rel:"noopener noreferrer",children:"GitHub"})]})]},t)))})]}),av=()=>(0,Kp.jsxs)("div",{style:{textAlign:"center",backgroundColor:"black",color:"white",paddingTop:"40px"},id:"experiences",children:[(0,Kp.jsx)("h1",{className:"page-title",children:"Experiences"}),(0,Kp.jsxs)("div",{className:"experience-item",children:[(0,Kp.jsx)("h3",{children:"Software Engineering Intern - Samsung SDS"}),(0,Kp.jsx)("p",{className:"experience-date",children:"May 2024 - August 2024"}),(0,Kp.jsxs)("p",{className:"experience-description",children:["\u2022 Collaborated closely with the RPA Solutions team to implement advanced prompt engineering techniques.",(0,Kp.jsx)("br",{}),"\u2022 Created and curated 100 sample data sets for use as examples, improving model's applicability and training efficiency.",(0,Kp.jsx)("br",{}),"\u2022 Generated vectors from chunked data and applied cosine similarity search to enhance query augmentation."]})]}),(0,Kp.jsxs)("div",{className:"experience-item",children:[(0,Kp.jsx)("h3",{children:"Software Developer Intern - Mintech"}),(0,Kp.jsx)("p",{className:"experience-date",children:"July 2023 - August 2023"}),(0,Kp.jsxs)("p",{className:"experience-description",children:["\u2022 Created a profile page in a mobile application utilizing the Flutter framework for exercise routine tracking.",(0,Kp.jsx)("br",{}),"\u2022 Collaborated with Yonsei University's departments, assisting in research for post-colorectal cancer patient exercise routines."]})]}),(0,Kp.jsxs)("div",{className:"experience-item",children:[(0,Kp.jsx)("h3",{children:"Research Assistant - Yonsei University, Fluid Track"}),(0,Kp.jsx)("p",{className:"experience-date",children:"July 2021 - August 2021"}),(0,Kp.jsx)("p",{className:"experience-description",children:"\u2022 Worked on a health tracking application using Unity, making health monitoring more interactive for pediatric patients."})]})]}),lv=()=>{};let ov={},sv={},bv=null,cv={mark:lv,measure:lv};try{"undefined"!==typeof window&&(ov=window),"undefined"!==typeof document&&(sv=document),"undefined"!==typeof MutationObserver&&(bv=MutationObserver),"undefined"!==typeof performance&&(cv=performance)}catch(VS){}const{userAgent:uv=""}=ov.navigator||{},hv=ov,dv=sv,mv=bv,fv=cv,pv=(hv.document,!!dv.documentElement&&!!dv.head&&"function"===typeof dv.addEventListener&&"function"===typeof dv.createElement),gv=~uv.indexOf("MSIE")||~uv.indexOf("Trident/");var xv="classic",vv="duotone",_v="sharp",yv="sharp-duotone",Sv=[xv,vv,_v,yv],Mv={fak:"kit","fa-kit":"kit"},wv={fakd:"kit-duotone","fa-kit-duotone":"kit-duotone"},zv={classic:{fa:"solid",fas:"solid","fa-solid":"solid",far:"regular","fa-regular":"regular",fal:"light","fa-light":"light",fat:"thin","fa-thin":"thin",fad:"duotone","fa-duotone":"duotone",fab:"brands","fa-brands":"brands"},sharp:{fa:"solid",fass:"solid","fa-solid":"solid",fasr:"regular","fa-regular":"regular",fasl:"light","fa-light":"light",fast:"thin","fa-thin":"thin"},"sharp-duotone":{fa:"solid",fasds:"solid","fa-solid":"solid"}},Ev=[1,2,3,4,5,6,7,8,9,10],Tv=Ev.concat([11,12,13,14,15,16,17,18,19,20]),Av={GROUP:"duotone-group",SWAP_OPACITY:"swap-opacity",PRIMARY:"primary",SECONDARY:"secondary"},Cv=[...Object.keys({classic:["fas","far","fal","fat"],sharp:["fass","fasr","fasl","fast"],"sharp-duotone":["fasds"]}),"solid","regular","light","thin","duotone","brands","2xs","xs","sm","lg","xl","2xl","beat","border","fade","beat-fade","bounce","flip-both","flip-horizontal","flip-vertical","flip","fw","inverse","layers-counter","layers-text","layers","li","pull-left","pull-right","pulse","rotate-180","rotate-270","rotate-90","rotate-by","shake","spin-pulse","spin-reverse","spin","stack-1x","stack-2x","stack","ul",Av.GROUP,Av.SWAP_OPACITY,Av.PRIMARY,Av.SECONDARY].concat(Ev.map((e=>"".concat(e,"x")))).concat(Tv.map((e=>"w-".concat(e)))),Rv={kit:"fak"},Pv={"kit-duotone":"fakd"};const Lv="___FONT_AWESOME___",Iv=16,Nv="fa",kv="svg-inline--fa",Dv="data-fa-i2svg",Uv="data-fa-pseudo-element",Ov="data-fa-pseudo-element-pending",Fv="data-prefix",Bv="data-icon",Hv="fontawesome-i2svg",Vv="async",Gv=["HTML","HEAD","STYLE","SCRIPT"],Wv=(()=>{try{return!0}catch(e){return!1}})(),jv=[xv,_v,yv];function Xv(e){return new Proxy(e,{get:(e,t)=>t in e?e[t]:e[xv]})}const qv={...zv};qv[xv]={...zv[xv],...Mv,...wv};const Yv=Xv(qv),Zv={classic:{solid:"fas",regular:"far",light:"fal",thin:"fat",duotone:"fad",brands:"fab"},sharp:{solid:"fass",regular:"fasr",light:"fasl",thin:"fast"},"sharp-duotone":{solid:"fasds"}};Zv[xv]={...Zv[xv],...Rv,...Pv};const Kv=Xv(Zv),$v={classic:{fab:"fa-brands",fad:"fa-duotone",fal:"fa-light",far:"fa-regular",fas:"fa-solid",fat:"fa-thin"},sharp:{fass:"fa-solid",fasr:"fa-regular",fasl:"fa-light",fast:"fa-thin"},"sharp-duotone":{fasds:"fa-solid"}};$v[xv]={...$v[xv],fak:"fa-kit"};const Jv=Xv($v),Qv={classic:{"fa-brands":"fab","fa-duotone":"fad","fa-light":"fal","fa-regular":"far","fa-solid":"fas","fa-thin":"fat"},sharp:{"fa-solid":"fass","fa-regular":"fasr","fa-light":"fasl","fa-thin":"fast"},"sharp-duotone":{"fa-solid":"fasds"}};Qv[xv]={...Qv[xv],"fa-kit":"fak"};const e_=Xv(Qv),t_=/fa(s|r|l|t|d|b|k|kd|ss|sr|sl|st|sds)?[\-\ ]/,n_="fa-layers-text",i_=/Font ?Awesome ?([56 ]*)(Solid|Regular|Light|Thin|Duotone|Brands|Free|Pro|Sharp Duotone|Sharp|Kit)?.*/i,r_=(Xv({classic:{900:"fas",400:"far",normal:"far",300:"fal",100:"fat"},sharp:{900:"fass",400:"fasr",300:"fasl",100:"fast"},"sharp-duotone":{900:"fasds"}}),["class","data-prefix","data-icon","data-fa-transform","data-fa-mask"]),a_=Av,l_=new Set;Object.keys(Kv[xv]).map(l_.add.bind(l_)),Object.keys(Kv[_v]).map(l_.add.bind(l_)),Object.keys(Kv[yv]).map(l_.add.bind(l_));const o_=["kit",...Cv],s_=hv.FontAwesomeConfig||{};if(dv&&"function"===typeof dv.querySelector){[["data-family-prefix","familyPrefix"],["data-css-prefix","cssPrefix"],["data-family-default","familyDefault"],["data-style-default","styleDefault"],["data-replacement-class","replacementClass"],["data-auto-replace-svg","autoReplaceSvg"],["data-auto-add-css","autoAddCss"],["data-auto-a11y","autoA11y"],["data-search-pseudo-elements","searchPseudoElements"],["data-observe-mutations","observeMutations"],["data-mutate-approach","mutateApproach"],["data-keep-original-source","keepOriginalSource"],["data-measure-performance","measurePerformance"],["data-show-missing-icons","showMissingIcons"]].forEach((e=>{let[t,n]=e;const i=function(e){return""===e||"false"!==e&&("true"===e||e)}(function(e){var t=dv.querySelector("script["+e+"]");if(t)return t.getAttribute(e)}(t));void 0!==i&&null!==i&&(s_[n]=i)}))}const b_={styleDefault:"solid",familyDefault:"classic",cssPrefix:Nv,replacementClass:kv,autoReplaceSvg:!0,autoAddCss:!0,autoA11y:!0,searchPseudoElements:!1,observeMutations:!0,mutateApproach:"async",keepOriginalSource:!0,measurePerformance:!1,showMissingIcons:!0};s_.familyPrefix&&(s_.cssPrefix=s_.familyPrefix);const c_={...b_,...s_};c_.autoReplaceSvg||(c_.observeMutations=!1);const u_={};Object.keys(b_).forEach((e=>{Object.defineProperty(u_,e,{enumerable:!0,set:function(t){c_[e]=t,h_.forEach((e=>e(u_)))},get:function(){return c_[e]}})})),Object.defineProperty(u_,"familyPrefix",{enumerable:!0,set:function(e){c_.cssPrefix=e,h_.forEach((e=>e(u_)))},get:function(){return c_.cssPrefix}}),hv.FontAwesomeConfig=u_;const h_=[];const d_=Iv,m_={size:16,x:0,y:0,rotate:0,flipX:!1,flipY:!1};const f_="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";function p_(){let e=12,t="";for(;e-- >0;)t+=f_[62*Math.random()|0];return t}function g_(e){const t=[];for(let n=(e||[]).length>>>0;n--;)t[n]=e[n];return t}function x_(e){return e.classList?g_(e.classList):(e.getAttribute("class")||"").split(" ").filter((e=>e))}function v_(e){return"".concat(e).replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/'/g,"&#39;").replace(/</g,"&lt;").replace(/>/g,"&gt;")}function __(e){return Object.keys(e||{}).reduce(((t,n)=>t+"".concat(n,": ").concat(e[n].trim(),";")),"")}function y_(e){return e.size!==m_.size||e.x!==m_.x||e.y!==m_.y||e.rotate!==m_.rotate||e.flipX||e.flipY}var S_=':root, :host {\n  --fa-font-solid: normal 900 1em/1 "Font Awesome 6 Free";\n  --fa-font-regular: normal 400 1em/1 "Font Awesome 6 Free";\n  --fa-font-light: normal 300 1em/1 "Font Awesome 6 Pro";\n  --fa-font-thin: normal 100 1em/1 "Font Awesome 6 Pro";\n  --fa-font-duotone: normal 900 1em/1 "Font Awesome 6 Duotone";\n  --fa-font-brands: normal 400 1em/1 "Font Awesome 6 Brands";\n  --fa-font-sharp-solid: normal 900 1em/1 "Font Awesome 6 Sharp";\n  --fa-font-sharp-regular: normal 400 1em/1 "Font Awesome 6 Sharp";\n  --fa-font-sharp-light: normal 300 1em/1 "Font Awesome 6 Sharp";\n  --fa-font-sharp-thin: normal 100 1em/1 "Font Awesome 6 Sharp";\n  --fa-font-sharp-duotone-solid: normal 900 1em/1 "Font Awesome 6 Sharp Duotone";\n}\n\nsvg:not(:root).svg-inline--fa, svg:not(:host).svg-inline--fa {\n  overflow: visible;\n  box-sizing: content-box;\n}\n\n.svg-inline--fa {\n  display: var(--fa-display, inline-block);\n  height: 1em;\n  overflow: visible;\n  vertical-align: -0.125em;\n}\n.svg-inline--fa.fa-2xs {\n  vertical-align: 0.1em;\n}\n.svg-inline--fa.fa-xs {\n  vertical-align: 0em;\n}\n.svg-inline--fa.fa-sm {\n  vertical-align: -0.0714285705em;\n}\n.svg-inline--fa.fa-lg {\n  vertical-align: -0.2em;\n}\n.svg-inline--fa.fa-xl {\n  vertical-align: -0.25em;\n}\n.svg-inline--fa.fa-2xl {\n  vertical-align: -0.3125em;\n}\n.svg-inline--fa.fa-pull-left {\n  margin-right: var(--fa-pull-margin, 0.3em);\n  width: auto;\n}\n.svg-inline--fa.fa-pull-right {\n  margin-left: var(--fa-pull-margin, 0.3em);\n  width: auto;\n}\n.svg-inline--fa.fa-li {\n  width: var(--fa-li-width, 2em);\n  top: 0.25em;\n}\n.svg-inline--fa.fa-fw {\n  width: var(--fa-fw-width, 1.25em);\n}\n\n.fa-layers svg.svg-inline--fa {\n  bottom: 0;\n  left: 0;\n  margin: auto;\n  position: absolute;\n  right: 0;\n  top: 0;\n}\n\n.fa-layers-counter, .fa-layers-text {\n  display: inline-block;\n  position: absolute;\n  text-align: center;\n}\n\n.fa-layers {\n  display: inline-block;\n  height: 1em;\n  position: relative;\n  text-align: center;\n  vertical-align: -0.125em;\n  width: 1em;\n}\n.fa-layers svg.svg-inline--fa {\n  transform-origin: center center;\n}\n\n.fa-layers-text {\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  transform-origin: center center;\n}\n\n.fa-layers-counter {\n  background-color: var(--fa-counter-background-color, #ff253a);\n  border-radius: var(--fa-counter-border-radius, 1em);\n  box-sizing: border-box;\n  color: var(--fa-inverse, #fff);\n  line-height: var(--fa-counter-line-height, 1);\n  max-width: var(--fa-counter-max-width, 5em);\n  min-width: var(--fa-counter-min-width, 1.5em);\n  overflow: hidden;\n  padding: var(--fa-counter-padding, 0.25em 0.5em);\n  right: var(--fa-right, 0);\n  text-overflow: ellipsis;\n  top: var(--fa-top, 0);\n  transform: scale(var(--fa-counter-scale, 0.25));\n  transform-origin: top right;\n}\n\n.fa-layers-bottom-right {\n  bottom: var(--fa-bottom, 0);\n  right: var(--fa-right, 0);\n  top: auto;\n  transform: scale(var(--fa-layers-scale, 0.25));\n  transform-origin: bottom right;\n}\n\n.fa-layers-bottom-left {\n  bottom: var(--fa-bottom, 0);\n  left: var(--fa-left, 0);\n  right: auto;\n  top: auto;\n  transform: scale(var(--fa-layers-scale, 0.25));\n  transform-origin: bottom left;\n}\n\n.fa-layers-top-right {\n  top: var(--fa-top, 0);\n  right: var(--fa-right, 0);\n  transform: scale(var(--fa-layers-scale, 0.25));\n  transform-origin: top right;\n}\n\n.fa-layers-top-left {\n  left: var(--fa-left, 0);\n  right: auto;\n  top: var(--fa-top, 0);\n  transform: scale(var(--fa-layers-scale, 0.25));\n  transform-origin: top left;\n}\n\n.fa-1x {\n  font-size: 1em;\n}\n\n.fa-2x {\n  font-size: 2em;\n}\n\n.fa-3x {\n  font-size: 3em;\n}\n\n.fa-4x {\n  font-size: 4em;\n}\n\n.fa-5x {\n  font-size: 5em;\n}\n\n.fa-6x {\n  font-size: 6em;\n}\n\n.fa-7x {\n  font-size: 7em;\n}\n\n.fa-8x {\n  font-size: 8em;\n}\n\n.fa-9x {\n  font-size: 9em;\n}\n\n.fa-10x {\n  font-size: 10em;\n}\n\n.fa-2xs {\n  font-size: 0.625em;\n  line-height: 0.1em;\n  vertical-align: 0.225em;\n}\n\n.fa-xs {\n  font-size: 0.75em;\n  line-height: 0.0833333337em;\n  vertical-align: 0.125em;\n}\n\n.fa-sm {\n  font-size: 0.875em;\n  line-height: 0.0714285718em;\n  vertical-align: 0.0535714295em;\n}\n\n.fa-lg {\n  font-size: 1.25em;\n  line-height: 0.05em;\n  vertical-align: -0.075em;\n}\n\n.fa-xl {\n  font-size: 1.5em;\n  line-height: 0.0416666682em;\n  vertical-align: -0.125em;\n}\n\n.fa-2xl {\n  font-size: 2em;\n  line-height: 0.03125em;\n  vertical-align: -0.1875em;\n}\n\n.fa-fw {\n  text-align: center;\n  width: 1.25em;\n}\n\n.fa-ul {\n  list-style-type: none;\n  margin-left: var(--fa-li-margin, 2.5em);\n  padding-left: 0;\n}\n.fa-ul > li {\n  position: relative;\n}\n\n.fa-li {\n  left: calc(-1 * var(--fa-li-width, 2em));\n  position: absolute;\n  text-align: center;\n  width: var(--fa-li-width, 2em);\n  line-height: inherit;\n}\n\n.fa-border {\n  border-color: var(--fa-border-color, #eee);\n  border-radius: var(--fa-border-radius, 0.1em);\n  border-style: var(--fa-border-style, solid);\n  border-width: var(--fa-border-width, 0.08em);\n  padding: var(--fa-border-padding, 0.2em 0.25em 0.15em);\n}\n\n.fa-pull-left {\n  float: left;\n  margin-right: var(--fa-pull-margin, 0.3em);\n}\n\n.fa-pull-right {\n  float: right;\n  margin-left: var(--fa-pull-margin, 0.3em);\n}\n\n.fa-beat {\n  animation-name: fa-beat;\n  animation-delay: var(--fa-animation-delay, 0s);\n  animation-direction: var(--fa-animation-direction, normal);\n  animation-duration: var(--fa-animation-duration, 1s);\n  animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  animation-timing-function: var(--fa-animation-timing, ease-in-out);\n}\n\n.fa-bounce {\n  animation-name: fa-bounce;\n  animation-delay: var(--fa-animation-delay, 0s);\n  animation-direction: var(--fa-animation-direction, normal);\n  animation-duration: var(--fa-animation-duration, 1s);\n  animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.28, 0.84, 0.42, 1));\n}\n\n.fa-fade {\n  animation-name: fa-fade;\n  animation-delay: var(--fa-animation-delay, 0s);\n  animation-direction: var(--fa-animation-direction, normal);\n  animation-duration: var(--fa-animation-duration, 1s);\n  animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));\n}\n\n.fa-beat-fade {\n  animation-name: fa-beat-fade;\n  animation-delay: var(--fa-animation-delay, 0s);\n  animation-direction: var(--fa-animation-direction, normal);\n  animation-duration: var(--fa-animation-duration, 1s);\n  animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));\n}\n\n.fa-flip {\n  animation-name: fa-flip;\n  animation-delay: var(--fa-animation-delay, 0s);\n  animation-direction: var(--fa-animation-direction, normal);\n  animation-duration: var(--fa-animation-duration, 1s);\n  animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  animation-timing-function: var(--fa-animation-timing, ease-in-out);\n}\n\n.fa-shake {\n  animation-name: fa-shake;\n  animation-delay: var(--fa-animation-delay, 0s);\n  animation-direction: var(--fa-animation-direction, normal);\n  animation-duration: var(--fa-animation-duration, 1s);\n  animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  animation-timing-function: var(--fa-animation-timing, linear);\n}\n\n.fa-spin {\n  animation-name: fa-spin;\n  animation-delay: var(--fa-animation-delay, 0s);\n  animation-direction: var(--fa-animation-direction, normal);\n  animation-duration: var(--fa-animation-duration, 2s);\n  animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  animation-timing-function: var(--fa-animation-timing, linear);\n}\n\n.fa-spin-reverse {\n  --fa-animation-direction: reverse;\n}\n\n.fa-pulse,\n.fa-spin-pulse {\n  animation-name: fa-spin;\n  animation-direction: var(--fa-animation-direction, normal);\n  animation-duration: var(--fa-animation-duration, 1s);\n  animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  animation-timing-function: var(--fa-animation-timing, steps(8));\n}\n\n@media (prefers-reduced-motion: reduce) {\n  .fa-beat,\n.fa-bounce,\n.fa-fade,\n.fa-beat-fade,\n.fa-flip,\n.fa-pulse,\n.fa-shake,\n.fa-spin,\n.fa-spin-pulse {\n    animation-delay: -1ms;\n    animation-duration: 1ms;\n    animation-iteration-count: 1;\n    transition-delay: 0s;\n    transition-duration: 0s;\n  }\n}\n@keyframes fa-beat {\n  0%, 90% {\n    transform: scale(1);\n  }\n  45% {\n    transform: scale(var(--fa-beat-scale, 1.25));\n  }\n}\n@keyframes fa-bounce {\n  0% {\n    transform: scale(1, 1) translateY(0);\n  }\n  10% {\n    transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);\n  }\n  30% {\n    transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));\n  }\n  50% {\n    transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);\n  }\n  57% {\n    transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));\n  }\n  64% {\n    transform: scale(1, 1) translateY(0);\n  }\n  100% {\n    transform: scale(1, 1) translateY(0);\n  }\n}\n@keyframes fa-fade {\n  50% {\n    opacity: var(--fa-fade-opacity, 0.4);\n  }\n}\n@keyframes fa-beat-fade {\n  0%, 100% {\n    opacity: var(--fa-beat-fade-opacity, 0.4);\n    transform: scale(1);\n  }\n  50% {\n    opacity: 1;\n    transform: scale(var(--fa-beat-fade-scale, 1.125));\n  }\n}\n@keyframes fa-flip {\n  50% {\n    transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));\n  }\n}\n@keyframes fa-shake {\n  0% {\n    transform: rotate(-15deg);\n  }\n  4% {\n    transform: rotate(15deg);\n  }\n  8%, 24% {\n    transform: rotate(-18deg);\n  }\n  12%, 28% {\n    transform: rotate(18deg);\n  }\n  16% {\n    transform: rotate(-22deg);\n  }\n  20% {\n    transform: rotate(22deg);\n  }\n  32% {\n    transform: rotate(-12deg);\n  }\n  36% {\n    transform: rotate(12deg);\n  }\n  40%, 100% {\n    transform: rotate(0deg);\n  }\n}\n@keyframes fa-spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n.fa-rotate-90 {\n  transform: rotate(90deg);\n}\n\n.fa-rotate-180 {\n  transform: rotate(180deg);\n}\n\n.fa-rotate-270 {\n  transform: rotate(270deg);\n}\n\n.fa-flip-horizontal {\n  transform: scale(-1, 1);\n}\n\n.fa-flip-vertical {\n  transform: scale(1, -1);\n}\n\n.fa-flip-both,\n.fa-flip-horizontal.fa-flip-vertical {\n  transform: scale(-1, -1);\n}\n\n.fa-rotate-by {\n  transform: rotate(var(--fa-rotate-angle, 0));\n}\n\n.fa-stack {\n  display: inline-block;\n  vertical-align: middle;\n  height: 2em;\n  position: relative;\n  width: 2.5em;\n}\n\n.fa-stack-1x,\n.fa-stack-2x {\n  bottom: 0;\n  left: 0;\n  margin: auto;\n  position: absolute;\n  right: 0;\n  top: 0;\n  z-index: var(--fa-stack-z-index, auto);\n}\n\n.svg-inline--fa.fa-stack-1x {\n  height: 1em;\n  width: 1.25em;\n}\n.svg-inline--fa.fa-stack-2x {\n  height: 2em;\n  width: 2.5em;\n}\n\n.fa-inverse {\n  color: var(--fa-inverse, #fff);\n}\n\n.sr-only,\n.fa-sr-only {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  border-width: 0;\n}\n\n.sr-only-focusable:not(:focus),\n.fa-sr-only-focusable:not(:focus) {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  border-width: 0;\n}\n\n.svg-inline--fa .fa-primary {\n  fill: var(--fa-primary-color, currentColor);\n  opacity: var(--fa-primary-opacity, 1);\n}\n\n.svg-inline--fa .fa-secondary {\n  fill: var(--fa-secondary-color, currentColor);\n  opacity: var(--fa-secondary-opacity, 0.4);\n}\n\n.svg-inline--fa.fa-swap-opacity .fa-primary {\n  opacity: var(--fa-secondary-opacity, 0.4);\n}\n\n.svg-inline--fa.fa-swap-opacity .fa-secondary {\n  opacity: var(--fa-primary-opacity, 1);\n}\n\n.svg-inline--fa mask .fa-primary,\n.svg-inline--fa mask .fa-secondary {\n  fill: black;\n}\n\n.fad.fa-inverse,\n.fa-duotone.fa-inverse {\n  color: var(--fa-inverse, #fff);\n}';function M_(){const e=Nv,t=kv,n=u_.cssPrefix,i=u_.replacementClass;let r=S_;if(n!==e||i!==t){const a=new RegExp("\\.".concat(e,"\\-"),"g"),l=new RegExp("\\--".concat(e,"\\-"),"g"),o=new RegExp("\\.".concat(t),"g");r=r.replace(a,".".concat(n,"-")).replace(l,"--".concat(n,"-")).replace(o,".".concat(i))}return r}let w_=!1;function z_(){u_.autoAddCss&&!w_&&(!function(e){if(!e||!pv)return;const t=dv.createElement("style");t.setAttribute("type","text/css"),t.innerHTML=e;const n=dv.head.childNodes;let i=null;for(let r=n.length-1;r>-1;r--){const e=n[r],t=(e.tagName||"").toUpperCase();["STYLE","LINK"].indexOf(t)>-1&&(i=e)}dv.head.insertBefore(t,i)}(M_()),w_=!0)}var E_={mixout:()=>({dom:{css:M_,insertCss:z_}}),hooks:()=>({beforeDOMElementCreation(){z_()},beforeI2svg(){z_()}})};const T_=hv||{};T_[Lv]||(T_[Lv]={}),T_[Lv].styles||(T_[Lv].styles={}),T_[Lv].hooks||(T_[Lv].hooks={}),T_[Lv].shims||(T_[Lv].shims=[]);var A_=T_[Lv];const C_=[],R_=function(){dv.removeEventListener("DOMContentLoaded",R_),P_=1,C_.map((e=>e()))};let P_=!1;function L_(e){const{tag:t,attributes:n={},children:i=[]}=e;return"string"===typeof e?v_(e):"<".concat(t," ").concat(function(e){return Object.keys(e||{}).reduce(((t,n)=>t+"".concat(n,'="').concat(v_(e[n]),'" ')),"").trim()}(n),">").concat(i.map(L_).join(""),"</").concat(t,">")}function I_(e,t,n){if(e&&e[t]&&e[t][n])return{prefix:t,iconName:n,icon:e[t][n]}}pv&&(P_=(dv.documentElement.doScroll?/^loaded|^c/:/^loaded|^i|^c/).test(dv.readyState),P_||dv.addEventListener("DOMContentLoaded",R_));var N_=function(e,t,n,i){var r,a,l,o=Object.keys(e),s=o.length,b=void 0!==i?function(e,t){return function(n,i,r,a){return e.call(t,n,i,r,a)}}(t,i):t;for(void 0===n?(r=1,l=e[o[0]]):(r=0,l=n);r<s;r++)l=b(l,e[a=o[r]],a,e);return l};function k_(e){const t=function(e){const t=[];let n=0;const i=e.length;for(;n<i;){const r=e.charCodeAt(n++);if(r>=55296&&r<=56319&&n<i){const i=e.charCodeAt(n++);56320==(64512&i)?t.push(((1023&r)<<10)+(1023&i)+65536):(t.push(r),n--)}else t.push(r)}return t}(e);return 1===t.length?t[0].toString(16):null}function D_(e){return Object.keys(e).reduce(((t,n)=>{const i=e[n];return!!i.icon?t[i.iconName]=i.icon:t[n]=i,t}),{})}function U_(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const{skipHooks:i=!1}=n,r=D_(t);"function"!==typeof A_.hooks.addPack||i?A_.styles[e]={...A_.styles[e]||{},...r}:A_.hooks.addPack(e,D_(t)),"fas"===e&&U_("fa",t)}const{styles:O_,shims:F_}=A_,B_={[xv]:Object.values(Jv[xv]),[_v]:Object.values(Jv[_v]),[yv]:Object.values(Jv[yv])};let H_=null,V_={},G_={},W_={},j_={},X_={};const q_={[xv]:Object.keys(Yv[xv]),[_v]:Object.keys(Yv[_v]),[yv]:Object.keys(Yv[yv])};function Y_(e,t){const n=t.split("-"),i=n[0],r=n.slice(1).join("-");return i!==e||""===r||(a=r,~o_.indexOf(a))?null:r;var a}const Z_=()=>{const e=e=>N_(O_,((t,n,i)=>(t[i]=N_(n,e,{}),t)),{});V_=e(((e,t,n)=>{if(t[3]&&(e[t[3]]=n),t[2]){t[2].filter((e=>"number"===typeof e)).forEach((t=>{e[t.toString(16)]=n}))}return e})),G_=e(((e,t,n)=>{if(e[n]=n,t[2]){t[2].filter((e=>"string"===typeof e)).forEach((t=>{e[t]=n}))}return e})),X_=e(((e,t,n)=>{const i=t[2];return e[n]=n,i.forEach((t=>{e[t]=n})),e}));const t="far"in O_||u_.autoFetchSvg,n=N_(F_,((e,n)=>{const i=n[0];let r=n[1];const a=n[2];return"far"!==r||t||(r="fas"),"string"===typeof i&&(e.names[i]={prefix:r,iconName:a}),"number"===typeof i&&(e.unicodes[i.toString(16)]={prefix:r,iconName:a}),e}),{names:{},unicodes:{}});W_=n.names,j_=n.unicodes,H_=ny(u_.styleDefault,{family:u_.familyDefault})};var K_;function $_(e,t){return(V_[e]||{})[t]}function J_(e,t){return(X_[e]||{})[t]}function Q_(e){return W_[e]||{prefix:null,iconName:null}}function ey(){return H_}K_=e=>{H_=ny(e.styleDefault,{family:u_.familyDefault})},h_.push(K_),Z_();const ty=()=>({prefix:null,iconName:null,rest:[]});function ny(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{family:n=xv}=t,i=Yv[n][e],r=Kv[n][e]||Kv[n][i],a=e in A_.styles?e:null;return r||a||null}const iy={[xv]:Object.keys(Jv[xv]),[_v]:Object.keys(Jv[_v]),[yv]:Object.keys(Jv[yv])};function ry(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{skipLookups:n=!1}=t,i={[xv]:"".concat(u_.cssPrefix,"-").concat(xv),[_v]:"".concat(u_.cssPrefix,"-").concat(_v),[yv]:"".concat(u_.cssPrefix,"-").concat(yv)};let r=null,a=xv;const l=Sv.filter((e=>e!==vv));l.forEach((t=>{(e.includes(i[t])||e.some((e=>iy[t].includes(e))))&&(a=t)}));const o=e.reduce(((e,t)=>{const o=Y_(u_.cssPrefix,t);if(O_[t]?(t=B_[a].includes(t)?e_[a][t]:t,r=t,e.prefix=t):q_[a].indexOf(t)>-1?(r=t,e.prefix=ny(t,{family:a})):o?e.iconName=o:t===u_.replacementClass||l.some((e=>t===i[e]))||e.rest.push(t),!n&&e.prefix&&e.iconName){const t="fa"===r?Q_(e.iconName):{},n=J_(e.prefix,e.iconName);t.prefix&&(r=null),e.iconName=t.iconName||n||e.iconName,e.prefix=t.prefix||e.prefix,"far"!==e.prefix||O_.far||!O_.fas||u_.autoFetchSvg||(e.prefix="fas")}return e}),ty());return(e.includes("fa-brands")||e.includes("fab"))&&(o.prefix="fab"),(e.includes("fa-duotone")||e.includes("fad"))&&(o.prefix="fad"),o.prefix||a!==_v||!O_.fass&&!u_.autoFetchSvg||(o.prefix="fass",o.iconName=J_(o.prefix,o.iconName)||o.iconName),o.prefix||a!==yv||!O_.fasds&&!u_.autoFetchSvg||(o.prefix="fasds",o.iconName=J_(o.prefix,o.iconName)||o.iconName),"fa"!==o.prefix&&"fa"!==r||(o.prefix=ey()||"fas"),o}let ay=[],ly={};const oy={},sy=Object.keys(oy);function by(e,t){for(var n=arguments.length,i=new Array(n>2?n-2:0),r=2;r<n;r++)i[r-2]=arguments[r];return(ly[e]||[]).forEach((e=>{t=e.apply(null,[t,...i])})),t}function cy(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];(ly[e]||[]).forEach((e=>{e.apply(null,n)}))}function uy(){const e=arguments[0],t=Array.prototype.slice.call(arguments,1);return oy[e]?oy[e].apply(null,t):void 0}function hy(e){"fa"===e.prefix&&(e.prefix="fas");let{iconName:t}=e;const n=e.prefix||ey();if(t)return t=J_(n,t)||t,I_(dy.definitions,n,t)||I_(A_.styles,n,t)}const dy=new class{constructor(){this.definitions={}}add(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];const i=t.reduce(this._pullDefinitions,{});Object.keys(i).forEach((e=>{this.definitions[e]={...this.definitions[e]||{},...i[e]},U_(e,i[e]);const t=Jv[xv][e];t&&U_(t,i[e]),Z_()}))}reset(){this.definitions={}}_pullDefinitions(e,t){const n=t.prefix&&t.iconName&&t.icon?{0:t}:t;return Object.keys(n).map((t=>{const{prefix:i,iconName:r,icon:a}=n[t],l=a[2];e[i]||(e[i]={}),l.length>0&&l.forEach((t=>{"string"===typeof t&&(e[i][t]=a)})),e[i][r]=a})),e}},my={i2svg:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return pv?(cy("beforeI2svg",e),uy("pseudoElements2svg",e),uy("i2svg",e)):Promise.reject(new Error("Operation requires a DOM of some kind."))},watch:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{autoReplaceSvgRoot:t}=e;var n;!1===u_.autoReplaceSvg&&(u_.autoReplaceSvg=!0),u_.observeMutations=!0,n=()=>{gy({autoReplaceSvgRoot:t}),cy("watch",e)},pv&&(P_?setTimeout(n,0):C_.push(n))}},fy={icon:e=>{if(null===e)return null;if("object"===typeof e&&e.prefix&&e.iconName)return{prefix:e.prefix,iconName:J_(e.prefix,e.iconName)||e.iconName};if(Array.isArray(e)&&2===e.length){const t=0===e[1].indexOf("fa-")?e[1].slice(3):e[1],n=ny(e[0]);return{prefix:n,iconName:J_(n,t)||t}}if("string"===typeof e&&(e.indexOf("".concat(u_.cssPrefix,"-"))>-1||e.match(t_))){const t=ry(e.split(" "),{skipLookups:!0});return{prefix:t.prefix||ey(),iconName:J_(t.prefix,t.iconName)||t.iconName}}if("string"===typeof e){const t=ey();return{prefix:t,iconName:J_(t,e)||e}}}},py={noAuto:()=>{u_.autoReplaceSvg=!1,u_.observeMutations=!1,cy("noAuto")},config:u_,dom:my,parse:fy,library:dy,findIconDefinition:hy,toHtml:L_},gy=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{autoReplaceSvgRoot:t=dv}=e;(Object.keys(A_.styles).length>0||u_.autoFetchSvg)&&pv&&u_.autoReplaceSvg&&py.dom.i2svg({node:t})};function xy(e,t){return Object.defineProperty(e,"abstract",{get:t}),Object.defineProperty(e,"html",{get:function(){return e.abstract.map((e=>L_(e)))}}),Object.defineProperty(e,"node",{get:function(){if(!pv)return;const t=dv.createElement("div");return t.innerHTML=e.html,t.children}}),e}function vy(e){const{icons:{main:t,mask:n},prefix:i,iconName:r,transform:a,symbol:l,title:o,maskId:s,titleId:b,extra:c,watchable:u=!1}=e,{width:h,height:d}=n.found?n:t,m="fak"===i,f=[u_.replacementClass,r?"".concat(u_.cssPrefix,"-").concat(r):""].filter((e=>-1===c.classes.indexOf(e))).filter((e=>""!==e||!!e)).concat(c.classes).join(" ");let p={children:[],attributes:{...c.attributes,"data-prefix":i,"data-icon":r,class:f,role:c.attributes.role||"img",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 ".concat(h," ").concat(d)}};const g=m&&!~c.classes.indexOf("fa-fw")?{width:"".concat(h/d*16*.0625,"em")}:{};u&&(p.attributes[Dv]=""),o&&(p.children.push({tag:"title",attributes:{id:p.attributes["aria-labelledby"]||"title-".concat(b||p_())},children:[o]}),delete p.attributes.title);const x={...p,prefix:i,iconName:r,main:t,mask:n,maskId:s,transform:a,symbol:l,styles:{...g,...c.styles}},{children:v,attributes:_}=n.found&&t.found?uy("generateAbstractMask",x)||{children:[],attributes:{}}:uy("generateAbstractIcon",x)||{children:[],attributes:{}};return x.children=v,x.attributes=_,l?function(e){let{prefix:t,iconName:n,children:i,attributes:r,symbol:a}=e;return[{tag:"svg",attributes:{style:"display: none;"},children:[{tag:"symbol",attributes:{...r,id:!0===a?"".concat(t,"-").concat(u_.cssPrefix,"-").concat(n):a},children:i}]}]}(x):function(e){let{children:t,main:n,mask:i,attributes:r,styles:a,transform:l}=e;if(y_(l)&&n.found&&!i.found){const{width:e,height:t}=n,i={x:e/t/2,y:.5};r.style=__({...a,"transform-origin":"".concat(i.x+l.x/16,"em ").concat(i.y+l.y/16,"em")})}return[{tag:"svg",attributes:r,children:t}]}(x)}function _y(e){const{content:t,width:n,height:i,transform:r,title:a,extra:l,watchable:o=!1}=e,s={...l.attributes,...a?{title:a}:{},class:l.classes.join(" ")};o&&(s[Dv]="");const b={...l.styles};y_(r)&&(b.transform=function(e){let{transform:t,width:n=Iv,height:i=Iv,startCentered:r=!1}=e,a="";return a+=r&&gv?"translate(".concat(t.x/d_-n/2,"em, ").concat(t.y/d_-i/2,"em) "):r?"translate(calc(-50% + ".concat(t.x/d_,"em), calc(-50% + ").concat(t.y/d_,"em)) "):"translate(".concat(t.x/d_,"em, ").concat(t.y/d_,"em) "),a+="scale(".concat(t.size/d_*(t.flipX?-1:1),", ").concat(t.size/d_*(t.flipY?-1:1),") "),a+="rotate(".concat(t.rotate,"deg) "),a}({transform:r,startCentered:!0,width:n,height:i}),b["-webkit-transform"]=b.transform);const c=__(b);c.length>0&&(s.style=c);const u=[];return u.push({tag:"span",attributes:s,children:[t]}),a&&u.push({tag:"span",attributes:{class:"sr-only"},children:[a]}),u}const{styles:yy}=A_;function Sy(e){const t=e[0],n=e[1],[i]=e.slice(4);let r=null;return r=Array.isArray(i)?{tag:"g",attributes:{class:"".concat(u_.cssPrefix,"-").concat(a_.GROUP)},children:[{tag:"path",attributes:{class:"".concat(u_.cssPrefix,"-").concat(a_.SECONDARY),fill:"currentColor",d:i[0]}},{tag:"path",attributes:{class:"".concat(u_.cssPrefix,"-").concat(a_.PRIMARY),fill:"currentColor",d:i[1]}}]}:{tag:"path",attributes:{fill:"currentColor",d:i}},{found:!0,width:t,height:n,icon:r}}const My={found:!1,width:512,height:512};function wy(e,t){let n=t;return"fa"===t&&null!==u_.styleDefault&&(t=ey()),new Promise(((i,r)=>{if("fa"===n){const n=Q_(e)||{};e=n.iconName||e,t=n.prefix||t}if(e&&t&&yy[t]&&yy[t][e]){return i(Sy(yy[t][e]))}!function(e,t){Wv||u_.showMissingIcons||!e||console.error('Icon with name "'.concat(e,'" and prefix "').concat(t,'" is missing.'))}(e,t),i({...My,icon:u_.showMissingIcons&&e&&uy("missingIconAbstract")||{}})}))}const zy=()=>{},Ey=u_.measurePerformance&&fv&&fv.mark&&fv.measure?fv:{mark:zy,measure:zy},Ty='FA "6.6.0"',Ay=e=>{Ey.mark("".concat(Ty," ").concat(e," ends")),Ey.measure("".concat(Ty," ").concat(e),"".concat(Ty," ").concat(e," begins"),"".concat(Ty," ").concat(e," ends"))};var Cy={begin:e=>(Ey.mark("".concat(Ty," ").concat(e," begins")),()=>Ay(e)),end:Ay};const Ry=()=>{};function Py(e){return"string"===typeof(e.getAttribute?e.getAttribute(Dv):null)}function Ly(e){return dv.createElementNS("http://www.w3.org/2000/svg",e)}function Iy(e){return dv.createElement(e)}function Ny(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{ceFn:n=("svg"===e.tag?Ly:Iy)}=t;if("string"===typeof e)return dv.createTextNode(e);const i=n(e.tag);Object.keys(e.attributes||[]).forEach((function(t){i.setAttribute(t,e.attributes[t])}));return(e.children||[]).forEach((function(e){i.appendChild(Ny(e,{ceFn:n}))})),i}const ky={replace:function(e){const t=e[0];if(t.parentNode)if(e[1].forEach((e=>{t.parentNode.insertBefore(Ny(e),t)})),null===t.getAttribute(Dv)&&u_.keepOriginalSource){let e=dv.createComment(function(e){let t=" ".concat(e.outerHTML," ");return t="".concat(t,"Font Awesome fontawesome.com "),t}(t));t.parentNode.replaceChild(e,t)}else t.remove()},nest:function(e){const t=e[0],n=e[1];if(~x_(t).indexOf(u_.replacementClass))return ky.replace(e);const i=new RegExp("".concat(u_.cssPrefix,"-.*"));if(delete n[0].attributes.id,n[0].attributes.class){const e=n[0].attributes.class.split(" ").reduce(((e,t)=>(t===u_.replacementClass||t.match(i)?e.toSvg.push(t):e.toNode.push(t),e)),{toNode:[],toSvg:[]});n[0].attributes.class=e.toSvg.join(" "),0===e.toNode.length?t.removeAttribute("class"):t.setAttribute("class",e.toNode.join(" "))}const r=n.map((e=>L_(e))).join("\n");t.setAttribute(Dv,""),t.innerHTML=r}};function Dy(e){e()}function Uy(e,t){const n="function"===typeof t?t:Ry;if(0===e.length)n();else{let t=Dy;u_.mutateApproach===Vv&&(t=hv.requestAnimationFrame||Dy),t((()=>{const t=!0===u_.autoReplaceSvg?ky.replace:ky[u_.autoReplaceSvg]||ky.replace,i=Cy.begin("mutate");e.map(t),i(),n()}))}}let Oy=!1;function Fy(){Oy=!0}function By(){Oy=!1}let Hy=null;function Vy(e){if(!mv)return;if(!u_.observeMutations)return;const{treeCallback:t=Ry,nodeCallback:n=Ry,pseudoElementsCallback:i=Ry,observeMutationsRoot:r=dv}=e;Hy=new mv((e=>{if(Oy)return;const r=ey();g_(e).forEach((e=>{if("childList"===e.type&&e.addedNodes.length>0&&!Py(e.addedNodes[0])&&(u_.searchPseudoElements&&i(e.target),t(e.target)),"attributes"===e.type&&e.target.parentNode&&u_.searchPseudoElements&&i(e.target.parentNode),"attributes"===e.type&&Py(e.target)&&~r_.indexOf(e.attributeName))if("class"===e.attributeName&&function(e){const t=e.getAttribute?e.getAttribute(Fv):null,n=e.getAttribute?e.getAttribute(Bv):null;return t&&n}(e.target)){const{prefix:t,iconName:n}=ry(x_(e.target));e.target.setAttribute(Fv,t||r),n&&e.target.setAttribute(Bv,n)}else(a=e.target)&&a.classList&&a.classList.contains&&a.classList.contains(u_.replacementClass)&&n(e.target);var a}))})),pv&&Hy.observe(r,{childList:!0,attributes:!0,characterData:!0,subtree:!0})}function Gy(e){const t=e.getAttribute("data-prefix"),n=e.getAttribute("data-icon"),i=void 0!==e.innerText?e.innerText.trim():"";let r=ry(x_(e));return r.prefix||(r.prefix=ey()),t&&n&&(r.prefix=t,r.iconName=n),r.iconName&&r.prefix||(r.prefix&&i.length>0&&(r.iconName=function(e,t){return(G_[e]||{})[t]}(r.prefix,e.innerText)||$_(r.prefix,k_(e.innerText))),!r.iconName&&u_.autoFetchSvg&&e.firstChild&&e.firstChild.nodeType===Node.TEXT_NODE&&(r.iconName=e.firstChild.data)),r}function Wy(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{styleParser:!0};const{iconName:n,prefix:i,rest:r}=Gy(e),a=function(e){const t=g_(e.attributes).reduce(((e,t)=>("class"!==e.name&&"style"!==e.name&&(e[t.name]=t.value),e)),{}),n=e.getAttribute("title"),i=e.getAttribute("data-fa-title-id");return u_.autoA11y&&(n?t["aria-labelledby"]="".concat(u_.replacementClass,"-title-").concat(i||p_()):(t["aria-hidden"]="true",t.focusable="false")),t}(e),l=by("parseNodeAttributes",{},e);let o=t.styleParser?function(e){const t=e.getAttribute("style");let n=[];return t&&(n=t.split(";").reduce(((e,t)=>{const n=t.split(":"),i=n[0],r=n.slice(1);return i&&r.length>0&&(e[i]=r.join(":").trim()),e}),{})),n}(e):[];return{iconName:n,title:e.getAttribute("title"),titleId:e.getAttribute("data-fa-title-id"),prefix:i,transform:m_,mask:{iconName:null,prefix:null,rest:[]},maskId:null,symbol:!1,extra:{classes:r,styles:o,attributes:a},...l}}const{styles:jy}=A_;function Xy(e){const t="nest"===u_.autoReplaceSvg?Wy(e,{styleParser:!1}):Wy(e);return~t.extra.classes.indexOf(n_)?uy("generateLayersText",e,t):uy("generateSvgReplacementMutation",e,t)}let qy=new Set;function Yy(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(!pv)return Promise.resolve();const n=dv.documentElement.classList,i=e=>n.add("".concat(Hv,"-").concat(e)),r=e=>n.remove("".concat(Hv,"-").concat(e)),a=u_.autoFetchSvg?qy:jv.map((e=>"fa-".concat(e))).concat(Object.keys(jy));a.includes("fa")||a.push("fa");const l=[".".concat(n_,":not([").concat(Dv,"])")].concat(a.map((e=>".".concat(e,":not([").concat(Dv,"])")))).join(", ");if(0===l.length)return Promise.resolve();let o=[];try{o=g_(e.querySelectorAll(l))}catch(c){}if(!(o.length>0))return Promise.resolve();i("pending"),r("complete");const s=Cy.begin("onTree"),b=o.reduce(((e,t)=>{try{const n=Xy(t);n&&e.push(n)}catch(c){Wv||"MissingIcon"===c.name&&console.error(c)}return e}),[]);return new Promise(((e,n)=>{Promise.all(b).then((n=>{Uy(n,(()=>{i("active"),i("complete"),r("pending"),"function"===typeof t&&t(),s(),e()}))})).catch((e=>{s(),n(e)}))}))}function Zy(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;Xy(e).then((e=>{e&&Uy([e],t)}))}jv.map((e=>{qy.add("fa-".concat(e))})),Object.keys(Yv[xv]).map(qy.add.bind(qy)),Object.keys(Yv[_v]).map(qy.add.bind(qy)),Object.keys(Yv[yv]).map(qy.add.bind(qy)),qy=[...qy];const Ky=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{transform:n=m_,symbol:i=!1,mask:r=null,maskId:a=null,title:l=null,titleId:o=null,classes:s=[],attributes:b={},styles:c={}}=t;if(!e)return;const{prefix:u,iconName:h,icon:d}=e;return xy({type:"icon",...e},(()=>(cy("beforeDOMElementCreation",{iconDefinition:e,params:t}),u_.autoA11y&&(l?b["aria-labelledby"]="".concat(u_.replacementClass,"-title-").concat(o||p_()):(b["aria-hidden"]="true",b.focusable="false")),vy({icons:{main:Sy(d),mask:r?Sy(r.icon):{found:!1,width:null,height:null,icon:{}}},prefix:u,iconName:h,transform:{...m_,...n},symbol:i,title:l,maskId:a,titleId:o,extra:{attributes:b,styles:c,classes:s}}))))};var $y={mixout(){return{icon:(e=Ky,function(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const i=(t||{}).icon?t:hy(t||{});let{mask:r}=n;return r&&(r=(r||{}).icon?r:hy(r||{})),e(i,{...n,mask:r})})};var e},hooks:()=>({mutationObserverCallbacks:e=>(e.treeCallback=Yy,e.nodeCallback=Zy,e)}),provides(e){e.i2svg=function(e){const{node:t=dv,callback:n=()=>{}}=e;return Yy(t,n)},e.generateSvgReplacementMutation=function(e,t){const{iconName:n,title:i,titleId:r,prefix:a,transform:l,symbol:o,mask:s,maskId:b,extra:c}=t;return new Promise(((t,u)=>{Promise.all([wy(n,a),s.iconName?wy(s.iconName,s.prefix):Promise.resolve({found:!1,width:512,height:512,icon:{}})]).then((s=>{let[u,h]=s;t([e,vy({icons:{main:u,mask:h},prefix:a,iconName:n,transform:l,symbol:o,maskId:b,title:i,titleId:r,extra:c,watchable:!0})])})).catch(u)}))},e.generateAbstractIcon=function(e){let{children:t,attributes:n,main:i,transform:r,styles:a}=e;const l=__(a);let o;return l.length>0&&(n.style=l),y_(r)&&(o=uy("generateAbstractTransformGrouping",{main:i,transform:r,containerWidth:i.width,iconWidth:i.width})),t.push(o||i.icon),{children:t,attributes:n}}}},Jy={mixout:()=>({layer(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{classes:n=[]}=t;return xy({type:"layer"},(()=>{cy("beforeDOMElementCreation",{assembler:e,params:t});let i=[];return e((e=>{Array.isArray(e)?e.map((e=>{i=i.concat(e.abstract)})):i=i.concat(e.abstract)})),[{tag:"span",attributes:{class:["".concat(u_.cssPrefix,"-layers"),...n].join(" ")},children:i}]}))}})},Qy={mixout:()=>({counter(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{title:n=null,classes:i=[],attributes:r={},styles:a={}}=t;return xy({type:"counter",content:e},(()=>(cy("beforeDOMElementCreation",{content:e,params:t}),function(e){const{content:t,title:n,extra:i}=e,r={...i.attributes,...n?{title:n}:{},class:i.classes.join(" ")},a=__(i.styles);a.length>0&&(r.style=a);const l=[];return l.push({tag:"span",attributes:r,children:[t]}),n&&l.push({tag:"span",attributes:{class:"sr-only"},children:[n]}),l}({content:e.toString(),title:n,extra:{attributes:r,styles:a,classes:["".concat(u_.cssPrefix,"-layers-counter"),...i]}}))))}})},eS={mixout:()=>({text(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{transform:n=m_,title:i=null,classes:r=[],attributes:a={},styles:l={}}=t;return xy({type:"text",content:e},(()=>(cy("beforeDOMElementCreation",{content:e,params:t}),_y({content:e,transform:{...m_,...n},title:i,extra:{attributes:a,styles:l,classes:["".concat(u_.cssPrefix,"-layers-text"),...r]}}))))}}),provides(e){e.generateLayersText=function(e,t){const{title:n,transform:i,extra:r}=t;let a=null,l=null;if(gv){const t=parseInt(getComputedStyle(e).fontSize,10),n=e.getBoundingClientRect();a=n.width/t,l=n.height/t}return u_.autoA11y&&!n&&(r.attributes["aria-hidden"]="true"),Promise.resolve([e,_y({content:e.innerHTML,width:a,height:l,transform:i,title:n,extra:r,watchable:!0})])}}};const tS=new RegExp('"',"ug"),nS=[1105920,1112319],iS={FontAwesome:{normal:"fas",400:"fas"},"Font Awesome 6 Free":{900:"fas",400:"far"},"Font Awesome 6 Pro":{900:"fas",400:"far",normal:"far",300:"fal",100:"fat"},"Font Awesome 6 Brands":{400:"fab",normal:"fab"},"Font Awesome 6 Duotone":{900:"fad"},"Font Awesome 6 Sharp":{900:"fass",400:"fasr",normal:"fasr",300:"fasl",100:"fast"},"Font Awesome 6 Sharp Duotone":{900:"fasds"},"Font Awesome 5 Free":{900:"fas",400:"far"},"Font Awesome 5 Pro":{900:"fas",400:"far",normal:"far",300:"fal"},"Font Awesome 5 Brands":{400:"fab",normal:"fab"},"Font Awesome 5 Duotone":{900:"fad"},"Font Awesome Kit":{400:"fak",normal:"fak"},"Font Awesome Kit Duotone":{400:"fakd",normal:"fakd"}},rS=Object.keys(iS).reduce(((e,t)=>(e[t.toLowerCase()]=iS[t],e)),{}),aS=Object.keys(rS).reduce(((e,t)=>{const n=rS[t];return e[t]=n[900]||[...Object.entries(n)][0][1],e}),{});function lS(e,t){const n="".concat(Ov).concat(t.replace(":","-"));return new Promise(((i,r)=>{if(null!==e.getAttribute(n))return i();const a=g_(e.children).filter((e=>e.getAttribute(Uv)===t))[0],l=hv.getComputedStyle(e,t),o=l.getPropertyValue("font-family"),s=o.match(i_),b=l.getPropertyValue("font-weight"),c=l.getPropertyValue("content");if(a&&!s)return e.removeChild(a),i();if(s&&"none"!==c&&""!==c){const c=l.getPropertyValue("content");let u=function(e,t){const n=e.replace(/^['"]|['"]$/g,"").toLowerCase(),i=parseInt(t),r=isNaN(i)?"normal":i;return(rS[n]||{})[r]||aS[n]}(o,b);const{value:h,isSecondary:d}=function(e){const t=e.replace(tS,""),n=function(e,t){const n=e.length;let i,r=e.charCodeAt(t);return r>=55296&&r<=56319&&n>t+1&&(i=e.charCodeAt(t+1),i>=56320&&i<=57343)?1024*(r-55296)+i-56320+65536:r}(t,0),i=n>=nS[0]&&n<=nS[1],r=2===t.length&&t[0]===t[1];return{value:k_(r?t[0]:t),isSecondary:i||r}}(c),m=s[0].startsWith("FontAwesome");let f=$_(u,h),p=f;if(m){const e=function(e){const t=j_[e],n=$_("fas",e);return t||(n?{prefix:"fas",iconName:n}:null)||{prefix:null,iconName:null}}(h);e.iconName&&e.prefix&&(f=e.iconName,u=e.prefix)}if(!f||d||a&&a.getAttribute(Fv)===u&&a.getAttribute(Bv)===p)i();else{e.setAttribute(n,p),a&&e.removeChild(a);const l={iconName:null,title:null,titleId:null,prefix:null,transform:m_,symbol:!1,mask:{iconName:null,prefix:null,rest:[]},maskId:null,extra:{classes:[],styles:{},attributes:{}}},{extra:o}=l;o.attributes[Uv]=t,wy(f,u).then((r=>{const a=vy({...l,icons:{main:r,mask:ty()},prefix:u,iconName:p,extra:o,watchable:!0}),s=dv.createElementNS("http://www.w3.org/2000/svg","svg");"::before"===t?e.insertBefore(s,e.firstChild):e.appendChild(s),s.outerHTML=a.map((e=>L_(e))).join("\n"),e.removeAttribute(n),i()})).catch(r)}}else i()}))}function oS(e){return Promise.all([lS(e,"::before"),lS(e,"::after")])}function sS(e){return e.parentNode!==document.head&&!~Gv.indexOf(e.tagName.toUpperCase())&&!e.getAttribute(Uv)&&(!e.parentNode||"svg"!==e.parentNode.tagName)}function bS(e){if(pv)return new Promise(((t,n)=>{const i=g_(e.querySelectorAll("*")).filter(sS).map(oS),r=Cy.begin("searchPseudoElements");Fy(),Promise.all(i).then((()=>{r(),By(),t()})).catch((()=>{r(),By(),n()}))}))}var cS={hooks:()=>({mutationObserverCallbacks:e=>(e.pseudoElementsCallback=bS,e)}),provides(e){e.pseudoElements2svg=function(e){const{node:t=dv}=e;u_.searchPseudoElements&&bS(t)}}};let uS=!1;var hS={mixout:()=>({dom:{unwatch(){Fy(),uS=!0}}}),hooks:()=>({bootstrap(){Vy(by("mutationObserverCallbacks",{}))},noAuto(){Hy&&Hy.disconnect()},watch(e){const{observeMutationsRoot:t}=e;uS?By():Vy(by("mutationObserverCallbacks",{observeMutationsRoot:t}))}})};const dS=e=>e.toLowerCase().split(" ").reduce(((e,t)=>{const n=t.toLowerCase().split("-"),i=n[0];let r=n.slice(1).join("-");if(i&&"h"===r)return e.flipX=!0,e;if(i&&"v"===r)return e.flipY=!0,e;if(r=parseFloat(r),isNaN(r))return e;switch(i){case"grow":e.size=e.size+r;break;case"shrink":e.size=e.size-r;break;case"left":e.x=e.x-r;break;case"right":e.x=e.x+r;break;case"up":e.y=e.y-r;break;case"down":e.y=e.y+r;break;case"rotate":e.rotate=e.rotate+r}return e}),{size:16,x:0,y:0,flipX:!1,flipY:!1,rotate:0});var mS={mixout:()=>({parse:{transform:e=>dS(e)}}),hooks:()=>({parseNodeAttributes(e,t){const n=t.getAttribute("data-fa-transform");return n&&(e.transform=dS(n)),e}}),provides(e){e.generateAbstractTransformGrouping=function(e){let{main:t,transform:n,containerWidth:i,iconWidth:r}=e;const a={transform:"translate(".concat(i/2," 256)")},l="translate(".concat(32*n.x,", ").concat(32*n.y,") "),o="scale(".concat(n.size/16*(n.flipX?-1:1),", ").concat(n.size/16*(n.flipY?-1:1),") "),s="rotate(".concat(n.rotate," 0 0)"),b={transform:"".concat(l," ").concat(o," ").concat(s)},c={transform:"translate(".concat(r/2*-1," -256)")};return{tag:"g",attributes:{...a},children:[{tag:"g",attributes:{...b},children:[{tag:t.icon.tag,children:t.icon.children,attributes:{...t.icon.attributes,...c}}]}]}}}};const fS={x:0,y:0,width:"100%",height:"100%"};function pS(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];return e.attributes&&(e.attributes.fill||t)&&(e.attributes.fill="black"),e}var gS={hooks:()=>({parseNodeAttributes(e,t){const n=t.getAttribute("data-fa-mask"),i=n?ry(n.split(" ").map((e=>e.trim()))):ty();return i.prefix||(i.prefix=ey()),e.mask=i,e.maskId=t.getAttribute("data-fa-mask-id"),e}}),provides(e){e.generateAbstractMask=function(e){let{children:t,attributes:n,main:i,mask:r,maskId:a,transform:l}=e;const{width:o,icon:s}=i,{width:b,icon:c}=r,u=function(e){let{transform:t,containerWidth:n,iconWidth:i}=e;const r={transform:"translate(".concat(n/2," 256)")},a="translate(".concat(32*t.x,", ").concat(32*t.y,") "),l="scale(".concat(t.size/16*(t.flipX?-1:1),", ").concat(t.size/16*(t.flipY?-1:1),") "),o="rotate(".concat(t.rotate," 0 0)");return{outer:r,inner:{transform:"".concat(a," ").concat(l," ").concat(o)},path:{transform:"translate(".concat(i/2*-1," -256)")}}}({transform:l,containerWidth:b,iconWidth:o}),h={tag:"rect",attributes:{...fS,fill:"white"}},d=s.children?{children:s.children.map(pS)}:{},m={tag:"g",attributes:{...u.inner},children:[pS({tag:s.tag,attributes:{...s.attributes,...u.path},...d})]},f={tag:"g",attributes:{...u.outer},children:[m]},p="mask-".concat(a||p_()),g="clip-".concat(a||p_()),x={tag:"mask",attributes:{...fS,id:p,maskUnits:"userSpaceOnUse",maskContentUnits:"userSpaceOnUse"},children:[h,f]},v={tag:"defs",children:[{tag:"clipPath",attributes:{id:g},children:(_=c,"g"===_.tag?_.children:[_])},x]};var _;return t.push(v,{tag:"rect",attributes:{fill:"currentColor","clip-path":"url(#".concat(g,")"),mask:"url(#".concat(p,")"),...fS}}),{children:t,attributes:n}}}},xS={provides(e){let t=!1;hv.matchMedia&&(t=hv.matchMedia("(prefers-reduced-motion: reduce)").matches),e.missingIconAbstract=function(){const e=[],n={fill:"currentColor"},i={attributeType:"XML",repeatCount:"indefinite",dur:"2s"};e.push({tag:"path",attributes:{...n,d:"M156.5,447.7l-12.6,29.5c-18.7-9.5-35.9-21.2-51.5-34.9l22.7-22.7C127.6,430.5,141.5,440,156.5,447.7z M40.6,272H8.5 c1.4,21.2,5.4,41.7,11.7,61.1L50,321.2C45.1,305.5,41.8,289,40.6,272z M40.6,240c1.4-18.8,5.2-37,11.1-54.1l-29.5-12.6 C14.7,194.3,10,216.7,8.5,240H40.6z M64.3,156.5c7.8-14.9,17.2-28.8,28.1-41.5L69.7,92.3c-13.7,15.6-25.5,32.8-34.9,51.5 L64.3,156.5z M397,419.6c-13.9,12-29.4,22.3-46.1,30.4l11.9,29.8c20.7-9.9,39.8-22.6,56.9-37.6L397,419.6z M115,92.4 c13.9-12,29.4-22.3,46.1-30.4l-11.9-29.8c-20.7,9.9-39.8,22.6-56.8,37.6L115,92.4z M447.7,355.5c-7.8,14.9-17.2,28.8-28.1,41.5 l22.7,22.7c13.7-15.6,25.5-32.9,34.9-51.5L447.7,355.5z M471.4,272c-1.4,18.8-5.2,37-11.1,54.1l29.5,12.6 c7.5-21.1,12.2-43.5,13.6-66.8H471.4z M321.2,462c-15.7,5-32.2,8.2-49.2,9.4v32.1c21.2-1.4,41.7-5.4,61.1-11.7L321.2,462z M240,471.4c-18.8-1.4-37-5.2-54.1-11.1l-12.6,29.5c21.1,7.5,43.5,12.2,66.8,13.6V471.4z M462,190.8c5,15.7,8.2,32.2,9.4,49.2h32.1 c-1.4-21.2-5.4-41.7-11.7-61.1L462,190.8z M92.4,397c-12-13.9-22.3-29.4-30.4-46.1l-29.8,11.9c9.9,20.7,22.6,39.8,37.6,56.9 L92.4,397z M272,40.6c18.8,1.4,36.9,5.2,54.1,11.1l12.6-29.5C317.7,14.7,295.3,10,272,8.5V40.6z M190.8,50 c15.7-5,32.2-8.2,49.2-9.4V8.5c-21.2,1.4-41.7,5.4-61.1,11.7L190.8,50z M442.3,92.3L419.6,115c12,13.9,22.3,29.4,30.5,46.1 l29.8-11.9C470,128.5,457.3,109.4,442.3,92.3z M397,92.4l22.7-22.7c-15.6-13.7-32.8-25.5-51.5-34.9l-12.6,29.5 C370.4,72.1,384.4,81.5,397,92.4z"}});const r={...i,attributeName:"opacity"},a={tag:"circle",attributes:{...n,cx:"256",cy:"364",r:"28"},children:[]};return t||a.children.push({tag:"animate",attributes:{...i,attributeName:"r",values:"28;14;28;28;14;28;"}},{tag:"animate",attributes:{...r,values:"1;0;1;1;0;1;"}}),e.push(a),e.push({tag:"path",attributes:{...n,opacity:"1",d:"M263.7,312h-16c-6.6,0-12-5.4-12-12c0-71,77.4-63.9,77.4-107.8c0-20-17.8-40.2-57.4-40.2c-29.1,0-44.3,9.6-59.2,28.7 c-3.9,5-11.1,6-16.2,2.4l-13.1-9.2c-5.6-3.9-6.9-11.8-2.6-17.2c21.2-27.2,46.4-44.7,91.2-44.7c52.3,0,97.4,29.8,97.4,80.2 c0,67.6-77.4,63.5-77.4,107.8C275.7,306.6,270.3,312,263.7,312z"},children:t?[]:[{tag:"animate",attributes:{...r,values:"1;0;0;0;0;1;"}}]}),t||e.push({tag:"path",attributes:{...n,opacity:"0",d:"M232.5,134.5l7,168c0.3,6.4,5.6,11.5,12,11.5h9c6.4,0,11.7-5.1,12-11.5l7-168c0.3-6.8-5.2-12.5-12-12.5h-23 C237.7,122,232.2,127.7,232.5,134.5z"},children:[{tag:"animate",attributes:{...r,values:"0;0;1;1;0;0;"}}]}),{tag:"g",attributes:{class:"missing"},children:e}}}};!function(e,t){let{mixoutsTo:n}=t;ay=e,ly={},Object.keys(oy).forEach((e=>{-1===sy.indexOf(e)&&delete oy[e]})),ay.forEach((e=>{const t=e.mixout?e.mixout():{};if(Object.keys(t).forEach((e=>{"function"===typeof t[e]&&(n[e]=t[e]),"object"===typeof t[e]&&Object.keys(t[e]).forEach((i=>{n[e]||(n[e]={}),n[e][i]=t[e][i]}))})),e.hooks){const t=e.hooks();Object.keys(t).forEach((e=>{ly[e]||(ly[e]=[]),ly[e].push(t[e])}))}e.provides&&e.provides(oy)}))}([E_,$y,Jy,Qy,eS,cS,hS,mS,gS,xS,{hooks:()=>({parseNodeAttributes(e,t){const n=t.getAttribute("data-fa-symbol"),i=null!==n&&(""===n||n);return e.symbol=i,e}})}],{mixoutsTo:py});const vS=py.parse,_S=py.icon;var yS=n(942),SS=n.n(yS);function MS(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function wS(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?MS(Object(n),!0).forEach((function(t){ES(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):MS(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function zS(e){return zS="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},zS(e)}function ES(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function TS(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}function AS(e){return function(e){if(Array.isArray(e))return CS(e)}(e)||function(e){if("undefined"!==typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(!e)return;if("string"===typeof e)return CS(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return CS(e,t)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function CS(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,i=new Array(t);n<t;n++)i[n]=e[n];return i}function RS(e){return t=e,(t-=0)===t?e:(e=e.replace(/[\-_\s]+(.)?/g,(function(e,t){return t?t.toUpperCase():""}))).substr(0,1).toLowerCase()+e.substr(1);var t}var PS=["style"];var LS=!1;try{LS=!0}catch(VS){}function IS(e){return e&&"object"===zS(e)&&e.prefix&&e.iconName&&e.icon?e:vS.icon?vS.icon(e):null===e?null:e&&"object"===zS(e)&&e.prefix&&e.iconName?e:Array.isArray(e)&&2===e.length?{prefix:e[0],iconName:e[1]}:"string"===typeof e?{prefix:"fas",iconName:e}:void 0}function NS(e,t){return Array.isArray(t)&&t.length>0||!Array.isArray(t)&&t?ES({},e,t):{}}var kS={border:!1,className:"",mask:null,maskId:null,fixedWidth:!1,inverse:!1,flip:!1,icon:null,listItem:!1,pull:null,pulse:!1,rotation:null,size:null,spin:!1,spinPulse:!1,spinReverse:!1,beat:!1,fade:!1,beatFade:!1,bounce:!1,shake:!1,symbol:!1,title:"",titleId:null,transform:null,swapOpacity:!1},DS=i.forwardRef((function(e,t){var n=wS(wS({},kS),e),i=n.icon,r=n.mask,a=n.symbol,l=n.className,o=n.title,s=n.titleId,b=n.maskId,c=IS(i),u=NS("classes",[].concat(AS(function(e){var t,n=e.beat,i=e.fade,r=e.beatFade,a=e.bounce,l=e.shake,o=e.flash,s=e.spin,b=e.spinPulse,c=e.spinReverse,u=e.pulse,h=e.fixedWidth,d=e.inverse,m=e.border,f=e.listItem,p=e.flip,g=e.size,x=e.rotation,v=e.pull,_=(ES(t={"fa-beat":n,"fa-fade":i,"fa-beat-fade":r,"fa-bounce":a,"fa-shake":l,"fa-flash":o,"fa-spin":s,"fa-spin-reverse":c,"fa-spin-pulse":b,"fa-pulse":u,"fa-fw":h,"fa-inverse":d,"fa-border":m,"fa-li":f,"fa-flip":!0===p,"fa-flip-horizontal":"horizontal"===p||"both"===p,"fa-flip-vertical":"vertical"===p||"both"===p},"fa-".concat(g),"undefined"!==typeof g&&null!==g),ES(t,"fa-rotate-".concat(x),"undefined"!==typeof x&&null!==x&&0!==x),ES(t,"fa-pull-".concat(v),"undefined"!==typeof v&&null!==v),ES(t,"fa-swap-opacity",e.swapOpacity),t);return Object.keys(_).map((function(e){return _[e]?e:null})).filter((function(e){return e}))}(n)),AS((l||"").split(" ")))),h=NS("transform","string"===typeof n.transform?vS.transform(n.transform):n.transform),d=NS("mask",IS(r)),m=_S(c,wS(wS(wS(wS({},u),h),d),{},{symbol:a,title:o,titleId:s,maskId:b}));if(!m)return function(){var e;!LS&&console&&"function"===typeof console.error&&(e=console).error.apply(e,arguments)}("Could not find icon",c),null;var f=m.abstract,p={ref:t};return Object.keys(n).forEach((function(e){kS.hasOwnProperty(e)||(p[e]=n[e])})),US(f[0],p)}));DS.displayName="FontAwesomeIcon",DS.propTypes={beat:SS().bool,border:SS().bool,beatFade:SS().bool,bounce:SS().bool,className:SS().string,fade:SS().bool,flash:SS().bool,mask:SS().oneOfType([SS().object,SS().array,SS().string]),maskId:SS().string,fixedWidth:SS().bool,inverse:SS().bool,flip:SS().oneOf([!0,!1,"horizontal","vertical","both"]),icon:SS().oneOfType([SS().object,SS().array,SS().string]),listItem:SS().bool,pull:SS().oneOf(["right","left"]),pulse:SS().bool,rotation:SS().oneOf([0,90,180,270]),shake:SS().bool,size:SS().oneOf(["2xs","xs","sm","lg","xl","2xl","1x","2x","3x","4x","5x","6x","7x","8x","9x","10x"]),spin:SS().bool,spinPulse:SS().bool,spinReverse:SS().bool,symbol:SS().oneOfType([SS().bool,SS().string]),title:SS().string,titleId:SS().string,transform:SS().oneOfType([SS().string,SS().object]),swapOpacity:SS().bool};var US=function e(t,n){var i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if("string"===typeof n)return n;var r=(n.children||[]).map((function(n){return e(t,n)})),a=Object.keys(n.attributes||{}).reduce((function(e,t){var i=n.attributes[t];switch(t){case"class":e.attrs.className=i,delete n.attributes.class;break;case"style":e.attrs.style=i.split(";").map((function(e){return e.trim()})).filter((function(e){return e})).reduce((function(e,t){var n,i=t.indexOf(":"),r=RS(t.slice(0,i)),a=t.slice(i+1).trim();return r.startsWith("webkit")?e[(n=r,n.charAt(0).toUpperCase()+n.slice(1))]=a:e[r]=a,e}),{});break;default:0===t.indexOf("aria-")||0===t.indexOf("data-")?e.attrs[t.toLowerCase()]=i:e.attrs[RS(t)]=i}return e}),{attrs:{}}),l=i.style,o=void 0===l?{}:l,s=TS(i,PS);return a.attrs.style=wS(wS({},a.attrs.style),o),t.apply(void 0,[n.tag,wS(wS({},a.attrs),s)].concat(AS(r)))}.bind(null,i.createElement);const OS={prefix:"fab",iconName:"linkedin",icon:[448,512,[],"f08c","M416 32H31.9C14.3 32 0 46.5 0 64.3v383.4C0 465.5 14.3 480 31.9 480H416c17.6 0 32-14.5 32-32.3V64.3c0-17.8-14.4-32.3-32-32.3zM135.4 416H69V202.2h66.5V416zm-33.2-243c-21.3 0-38.5-17.3-38.5-38.5S80.9 96 102.2 96c21.2 0 38.5 17.3 38.5 38.5 0 21.3-17.2 38.5-38.5 38.5zm282.1 243h-66.4V312c0-24.8-.5-56.7-34.5-56.7-34.6 0-39.9 27-39.9 54.9V416h-66.4V202.2h63.7v29.2h.9c8.9-16.8 30.6-34.5 62.9-34.5 67.2 0 79.7 44.3 79.7 101.9V416z"]},FS={prefix:"fab",iconName:"github",icon:[496,512,[],"f09b","M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z"]};const BS=()=>(0,Kp.jsx)("footer",{className:"footer",children:(0,Kp.jsxs)("div",{className:"footer-icons",children:[(0,Kp.jsx)("a",{href:"https://github.com/sanghyuplee20",target:"_blank",rel:"noopener noreferrer",children:(0,Kp.jsx)(DS,{icon:FS,className:"icon"})}),(0,Kp.jsx)("a",{href:"https://www.linkedin.com/in/sanghyup-lee-39059020a/",target:"_blank",rel:"noopener noreferrer",children:(0,Kp.jsx)(DS,{icon:OS,className:"icon"})})]})});const HS=function(){return(0,Kp.jsx)("div",{className:"App",children:(0,Kp.jsxs)(we,{children:[(0,Kp.jsx)(tv,{}),(0,Kp.jsx)("div",{className:"content",children:(0,Kp.jsxs)(xe,{children:[(0,Kp.jsx)(pe,{path:"/",element:(0,Kp.jsx)(fe,{to:"/home"})}),(0,Kp.jsx)(pe,{path:"/home",element:(0,Kp.jsx)(ev,{})}),(0,Kp.jsx)(pe,{path:"/resume",element:(0,Kp.jsx)(nv,{})}),(0,Kp.jsx)(pe,{path:"/projects",element:(0,Kp.jsx)(rv,{})}),(0,Kp.jsx)(pe,{path:"/experiences",element:(0,Kp.jsx)(av,{})})]})}),(0,Kp.jsx)(BS,{})]})})};a.createRoot(document.getElementById("root")).render((0,Kp.jsx)(i.StrictMode,{children:(0,Kp.jsx)(HS,{})}))})()})();